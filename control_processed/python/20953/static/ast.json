{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 24,
    "column": 20
  },
  "text": "def reduce_to_2d(arr):\n  \"\"\"Given a np.npdarray with nDims > 2, reduce it to 2d.\n\n  It does this by selecting the zeroth coordinate for every dimension greater\n  than two.\n\n  Args:\n    arr: a numpy ndarray of dimension at least 2.\n\n  Returns:\n    A two-dimensional subarray from the input array.\n\n  Raises:\n    ValueError: If the argument is not a numpy ndarray, or the dimensionality\n      is too low.\n  \"\"\"\n  if not isinstance(arr, np.ndarray):\n    raise ValueError('reduce_to_2d requires a numpy.ndarray')\n\n  ndims = len(arr.shape)\n  if ndims < 2:\n    raise ValueError('reduce_to_2d requires an array of dimensionality >=2')\n  # slice(None) is equivalent to `:`, so we take arr[0,0,...0,:,:]\n  slices = ([0] * (ndims - 2)) + [slice(None), slice(None)]\n  return arr[slices]",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 24,
        "column": 20
      },
      "text": "def reduce_to_2d(arr):\n  \"\"\"Given a np.npdarray with nDims > 2, reduce it to 2d.\n\n  It does this by selecting the zeroth coordinate for every dimension greater\n  than two.\n\n  Args:\n    arr: a numpy ndarray of dimension at least 2.\n\n  Returns:\n    A two-dimensional subarray from the input array.\n\n  Raises:\n    ValueError: If the argument is not a numpy ndarray, or the dimensionality\n      is too low.\n  \"\"\"\n  if not isinstance(arr, np.ndarray):\n    raise ValueError('reduce_to_2d requires a numpy.ndarray')\n\n  ndims = len(arr.shape)\n  if ndims < 2:\n    raise ValueError('reduce_to_2d requires an array of dimensionality >=2')\n  # slice(None) is equivalent to `:`, so we take arr[0,0,...0,:,:]\n  slices = ([0] * (ndims - 2)) + [slice(None), slice(None)]\n  return arr[slices]",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 16
          },
          "text": "reduce_to_2d"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 16
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "(arr)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "arr"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 2
          },
          "end": {
            "row": 24,
            "column": 20
          },
          "text": "\"\"\"Given a np.npdarray with nDims > 2, reduce it to 2d.\n\n  It does this by selecting the zeroth coordinate for every dimension greater\n  than two.\n\n  Args:\n    arr: a numpy ndarray of dimension at least 2.\n\n  Returns:\n    A two-dimensional subarray from the input array.\n\n  Raises:\n    ValueError: If the argument is not a numpy ndarray, or the dimensionality\n      is too low.\n  \"\"\"\n  if not isinstance(arr, np.ndarray):\n    raise ValueError('reduce_to_2d requires a numpy.ndarray')\n\n  ndims = len(arr.shape)\n  if ndims < 2:\n    raise ValueError('reduce_to_2d requires an array of dimensionality >=2')\n  # slice(None) is equivalent to `:`, so we take arr[0,0,...0,:,:]\n  slices = ([0] * (ndims - 2)) + [slice(None), slice(None)]\n  return arr[slices]",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 15,
                "column": 5
              },
              "text": "\"\"\"Given a np.npdarray with nDims > 2, reduce it to 2d.\n\n  It does this by selecting the zeroth coordinate for every dimension greater\n  than two.\n\n  Args:\n    arr: a numpy ndarray of dimension at least 2.\n\n  Returns:\n    A two-dimensional subarray from the input array.\n\n  Raises:\n    ValueError: If the argument is not a numpy ndarray, or the dimensionality\n      is too low.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 15,
                    "column": 5
                  },
                  "text": "\"\"\"Given a np.npdarray with nDims > 2, reduce it to 2d.\n\n  It does this by selecting the zeroth coordinate for every dimension greater\n  than two.\n\n  Args:\n    arr: a numpy ndarray of dimension at least 2.\n\n  Returns:\n    A two-dimensional subarray from the input array.\n\n  Raises:\n    ValueError: If the argument is not a numpy ndarray, or the dimensionality\n      is too low.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 5
                      },
                      "end": {
                        "row": 15,
                        "column": 2
                      },
                      "text": "Given a np.npdarray with nDims > 2, reduce it to 2d.\n\n  It does this by selecting the zeroth coordinate for every dimension greater\n  than two.\n\n  Args:\n    arr: a numpy ndarray of dimension at least 2.\n\n  Returns:\n    A two-dimensional subarray from the input array.\n\n  Raises:\n    ValueError: If the argument is not a numpy ndarray, or the dimensionality\n      is too low.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 15,
                        "column": 2
                      },
                      "end": {
                        "row": 15,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 16,
                "column": 2
              },
              "end": {
                "row": 17,
                "column": 61
              },
              "text": "if not isinstance(arr, np.ndarray):\n    raise ValueError('reduce_to_2d requires a numpy.ndarray')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 16,
                    "column": 2
                  },
                  "end": {
                    "row": 16,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 16,
                    "column": 5
                  },
                  "end": {
                    "row": 16,
                    "column": 36
                  },
                  "text": "not isinstance(arr, np.ndarray)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 16,
                        "column": 5
                      },
                      "end": {
                        "row": 16,
                        "column": 8
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 16,
                        "column": 9
                      },
                      "end": {
                        "row": 16,
                        "column": 36
                      },
                      "text": "isinstance(arr, np.ndarray)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 9
                          },
                          "end": {
                            "row": 16,
                            "column": 19
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 16,
                            "column": 19
                          },
                          "end": {
                            "row": 16,
                            "column": 36
                          },
                          "text": "(arr, np.ndarray)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 16,
                                "column": 19
                              },
                              "end": {
                                "row": 16,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 20
                              },
                              "end": {
                                "row": 16,
                                "column": 23
                              },
                              "text": "arr"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 16,
                                "column": 23
                              },
                              "end": {
                                "row": 16,
                                "column": 24
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 16,
                                "column": 25
                              },
                              "end": {
                                "row": 16,
                                "column": 35
                              },
                              "text": "np.ndarray",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 27
                                  },
                                  "text": "np"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 16,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 28
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 35
                                  },
                                  "text": "ndarray"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 35
                              },
                              "end": {
                                "row": 16,
                                "column": 36
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 16,
                    "column": 36
                  },
                  "end": {
                    "row": 16,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 61
                  },
                  "text": "raise ValueError('reduce_to_2d requires a numpy.ndarray')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 17,
                        "column": 4
                      },
                      "end": {
                        "row": 17,
                        "column": 61
                      },
                      "text": "raise ValueError('reduce_to_2d requires a numpy.ndarray')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 17,
                            "column": 4
                          },
                          "end": {
                            "row": 17,
                            "column": 9
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 17,
                            "column": 10
                          },
                          "end": {
                            "row": 17,
                            "column": 61
                          },
                          "text": "ValueError('reduce_to_2d requires a numpy.ndarray')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 10
                              },
                              "end": {
                                "row": 17,
                                "column": 20
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 17,
                                "column": 20
                              },
                              "end": {
                                "row": 17,
                                "column": 61
                              },
                              "text": "('reduce_to_2d requires a numpy.ndarray')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 17,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 17,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 60
                                  },
                                  "text": "'reduce_to_2d requires a numpy.ndarray'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 17,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 22
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 17,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 59
                                      },
                                      "text": "reduce_to_2d requires a numpy.ndarray"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 17,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 60
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 17,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 61
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 19,
                "column": 2
              },
              "end": {
                "row": 19,
                "column": 24
              },
              "text": "ndims = len(arr.shape)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 19,
                    "column": 2
                  },
                  "end": {
                    "row": 19,
                    "column": 24
                  },
                  "text": "ndims = len(arr.shape)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 19,
                        "column": 2
                      },
                      "end": {
                        "row": 19,
                        "column": 7
                      },
                      "text": "ndims"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 19,
                        "column": 8
                      },
                      "end": {
                        "row": 19,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 19,
                        "column": 10
                      },
                      "end": {
                        "row": 19,
                        "column": 24
                      },
                      "text": "len(arr.shape)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 10
                          },
                          "end": {
                            "row": 19,
                            "column": 13
                          },
                          "text": "len"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 19,
                            "column": 13
                          },
                          "end": {
                            "row": 19,
                            "column": 24
                          },
                          "text": "(arr.shape)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 19,
                                "column": 13
                              },
                              "end": {
                                "row": 19,
                                "column": 14
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 19,
                                "column": 14
                              },
                              "end": {
                                "row": 19,
                                "column": 23
                              },
                              "text": "arr.shape",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 19,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 17
                                  },
                                  "text": "arr"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 19,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 18
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 19,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 23
                                  },
                                  "text": "shape"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 19,
                                "column": 23
                              },
                              "end": {
                                "row": 19,
                                "column": 24
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 20,
                "column": 2
              },
              "end": {
                "row": 21,
                "column": 76
              },
              "text": "if ndims < 2:\n    raise ValueError('reduce_to_2d requires an array of dimensionality >=2')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 20,
                    "column": 2
                  },
                  "end": {
                    "row": 20,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 20,
                    "column": 5
                  },
                  "end": {
                    "row": 20,
                    "column": 14
                  },
                  "text": "ndims < 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 5
                      },
                      "end": {
                        "row": 20,
                        "column": 10
                      },
                      "text": "ndims"
                    },
                    {
                      "type": "<",
                      "start": {
                        "row": 20,
                        "column": 11
                      },
                      "end": {
                        "row": 20,
                        "column": 12
                      },
                      "text": "<"
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 20,
                        "column": 13
                      },
                      "end": {
                        "row": 20,
                        "column": 14
                      },
                      "text": "2"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 20,
                    "column": 14
                  },
                  "end": {
                    "row": 20,
                    "column": 15
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 21,
                    "column": 4
                  },
                  "end": {
                    "row": 21,
                    "column": 76
                  },
                  "text": "raise ValueError('reduce_to_2d requires an array of dimensionality >=2')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 21,
                        "column": 4
                      },
                      "end": {
                        "row": 21,
                        "column": 76
                      },
                      "text": "raise ValueError('reduce_to_2d requires an array of dimensionality >=2')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 21,
                            "column": 4
                          },
                          "end": {
                            "row": 21,
                            "column": 9
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 21,
                            "column": 10
                          },
                          "end": {
                            "row": 21,
                            "column": 76
                          },
                          "text": "ValueError('reduce_to_2d requires an array of dimensionality >=2')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 10
                              },
                              "end": {
                                "row": 21,
                                "column": 20
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 21,
                                "column": 20
                              },
                              "end": {
                                "row": 21,
                                "column": 76
                              },
                              "text": "('reduce_to_2d requires an array of dimensionality >=2')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 21,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 21,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 75
                                  },
                                  "text": "'reduce_to_2d requires an array of dimensionality >=2'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 21,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 22
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 21,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 74
                                      },
                                      "text": "reduce_to_2d requires an array of dimensionality >=2"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 21,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 75
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 21,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 76
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 22,
                "column": 2
              },
              "end": {
                "row": 22,
                "column": 66
              },
              "text": "# slice(None) is equivalent to `:`, so we take arr[0,0,...0,:,:]"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 23,
                "column": 2
              },
              "end": {
                "row": 23,
                "column": 59
              },
              "text": "slices = ([0] * (ndims - 2)) + [slice(None), slice(None)]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 23,
                    "column": 2
                  },
                  "end": {
                    "row": 23,
                    "column": 59
                  },
                  "text": "slices = ([0] * (ndims - 2)) + [slice(None), slice(None)]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 2
                      },
                      "end": {
                        "row": 23,
                        "column": 8
                      },
                      "text": "slices"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 23,
                        "column": 9
                      },
                      "end": {
                        "row": 23,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 23,
                        "column": 11
                      },
                      "end": {
                        "row": 23,
                        "column": 59
                      },
                      "text": "([0] * (ndims - 2)) + [slice(None), slice(None)]",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 23,
                            "column": 11
                          },
                          "end": {
                            "row": 23,
                            "column": 30
                          },
                          "text": "([0] * (ndims - 2))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 23,
                                "column": 11
                              },
                              "end": {
                                "row": 23,
                                "column": 12
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 29
                              },
                              "text": "[0] * (ndims - 2)",
                              "children": [
                                {
                                  "type": "list",
                                  "start": {
                                    "row": 23,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 15
                                  },
                                  "text": "[0]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 23,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 13
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 23,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 14
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 23,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 15
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 23,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 17
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start": {
                                    "row": 23,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 29
                                  },
                                  "text": "(ndims - 2)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 23,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 19
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 23,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 28
                                      },
                                      "text": "ndims - 2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 23,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 24
                                          },
                                          "text": "ndims"
                                        },
                                        {
                                          "type": "-",
                                          "start": {
                                            "row": 23,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 26
                                          },
                                          "text": "-"
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 23,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 28
                                          },
                                          "text": "2"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 23,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 29
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 23,
                                "column": 29
                              },
                              "end": {
                                "row": 23,
                                "column": 30
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start": {
                            "row": 23,
                            "column": 31
                          },
                          "end": {
                            "row": 23,
                            "column": 32
                          },
                          "text": "+"
                        },
                        {
                          "type": "list",
                          "start": {
                            "row": 23,
                            "column": 33
                          },
                          "end": {
                            "row": 23,
                            "column": 59
                          },
                          "text": "[slice(None), slice(None)]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 23,
                                "column": 33
                              },
                              "end": {
                                "row": 23,
                                "column": 34
                              },
                              "text": "["
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 23,
                                "column": 34
                              },
                              "end": {
                                "row": 23,
                                "column": 45
                              },
                              "text": "slice(None)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 39
                                  },
                                  "text": "slice"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 23,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 45
                                  },
                                  "text": "(None)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 23,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 40
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "none",
                                      "start": {
                                        "row": 23,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 44
                                      },
                                      "text": "None"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 23,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 45
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 23,
                                "column": 45
                              },
                              "end": {
                                "row": 23,
                                "column": 46
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 23,
                                "column": 47
                              },
                              "end": {
                                "row": 23,
                                "column": 58
                              },
                              "text": "slice(None)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 52
                                  },
                                  "text": "slice"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 23,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 58
                                  },
                                  "text": "(None)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 23,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 53
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "none",
                                      "start": {
                                        "row": 23,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 57
                                      },
                                      "text": "None"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 23,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 58
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 23,
                                "column": 58
                              },
                              "end": {
                                "row": 23,
                                "column": 59
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 24,
                "column": 2
              },
              "end": {
                "row": 24,
                "column": 20
              },
              "text": "return arr[slices]",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 24,
                    "column": 2
                  },
                  "end": {
                    "row": 24,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "subscript",
                  "start": {
                    "row": 24,
                    "column": 9
                  },
                  "end": {
                    "row": 24,
                    "column": 20
                  },
                  "text": "arr[slices]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 9
                      },
                      "end": {
                        "row": 24,
                        "column": 12
                      },
                      "text": "arr"
                    },
                    {
                      "type": "[",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 13
                      },
                      "text": "["
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 13
                      },
                      "end": {
                        "row": 24,
                        "column": 19
                      },
                      "text": "slices"
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 24,
                        "column": 19
                      },
                      "end": {
                        "row": 24,
                        "column": 20
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}