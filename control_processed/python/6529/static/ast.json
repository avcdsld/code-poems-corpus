{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 32,
    "column": 63
  },
  "text": "def to_statement(self, parameter_values):\n        \"\"\"\n        With the given values for each parameter, this method will return a policy statement that can be used\n        directly with IAM.\n\n        :param dict parameter_values: Dict containing values for each parameter defined in the template\n        :return dict: Dictionary containing policy statement\n        :raises InvalidParameterValues: If parameter values is not a valid dictionary or does not contain values\n            for all parameters\n        :raises InsufficientParameterValues: If the parameter values don't have values for all required parameters\n        \"\"\"\n\n        missing = self.missing_parameter_values(parameter_values)\n        if len(missing) > 0:\n            # str() of elements of list to prevent any `u` prefix from being displayed in user-facing error message\n            raise InsufficientParameterValues(\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format(self.name, [str(m) for m in missing]))\n\n        # Select only necessary parameter_values. this is to prevent malicious or accidental\n        # injection of values for parameters not intended in the template. This is important because \"Ref\" resolution\n        # will substitute any references for which a value is provided.\n        necessary_parameter_values = {name: value for name, value in parameter_values.items()\n                                      if name in self.parameters}\n\n        # Only \"Ref\" is supported\n        supported_intrinsics = {\n            RefAction.intrinsic_name: RefAction()\n        }\n\n        resolver = IntrinsicsResolver(necessary_parameter_values, supported_intrinsics)\n        definition_copy = copy.deepcopy(self.definition)\n\n        return resolver.resolve_parameter_refs(definition_copy)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 32,
        "column": 63
      },
      "text": "def to_statement(self, parameter_values):\n        \"\"\"\n        With the given values for each parameter, this method will return a policy statement that can be used\n        directly with IAM.\n\n        :param dict parameter_values: Dict containing values for each parameter defined in the template\n        :return dict: Dictionary containing policy statement\n        :raises InvalidParameterValues: If parameter values is not a valid dictionary or does not contain values\n            for all parameters\n        :raises InsufficientParameterValues: If the parameter values don't have values for all required parameters\n        \"\"\"\n\n        missing = self.missing_parameter_values(parameter_values)\n        if len(missing) > 0:\n            # str() of elements of list to prevent any `u` prefix from being displayed in user-facing error message\n            raise InsufficientParameterValues(\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format(self.name, [str(m) for m in missing]))\n\n        # Select only necessary parameter_values. this is to prevent malicious or accidental\n        # injection of values for parameters not intended in the template. This is important because \"Ref\" resolution\n        # will substitute any references for which a value is provided.\n        necessary_parameter_values = {name: value for name, value in parameter_values.items()\n                                      if name in self.parameters}\n\n        # Only \"Ref\" is supported\n        supported_intrinsics = {\n            RefAction.intrinsic_name: RefAction()\n        }\n\n        resolver = IntrinsicsResolver(necessary_parameter_values, supported_intrinsics)\n        definition_copy = copy.deepcopy(self.definition)\n\n        return resolver.resolve_parameter_refs(definition_copy)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 16
          },
          "text": "to_statement"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 16
          },
          "end": {
            "row": 0,
            "column": 40
          },
          "text": "(self, parameter_values)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": "parameter_values"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 40
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 32,
            "column": 63
          },
          "text": "\"\"\"\n        With the given values for each parameter, this method will return a policy statement that can be used\n        directly with IAM.\n\n        :param dict parameter_values: Dict containing values for each parameter defined in the template\n        :return dict: Dictionary containing policy statement\n        :raises InvalidParameterValues: If parameter values is not a valid dictionary or does not contain values\n            for all parameters\n        :raises InsufficientParameterValues: If the parameter values don't have values for all required parameters\n        \"\"\"\n\n        missing = self.missing_parameter_values(parameter_values)\n        if len(missing) > 0:\n            # str() of elements of list to prevent any `u` prefix from being displayed in user-facing error message\n            raise InsufficientParameterValues(\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format(self.name, [str(m) for m in missing]))\n\n        # Select only necessary parameter_values. this is to prevent malicious or accidental\n        # injection of values for parameters not intended in the template. This is important because \"Ref\" resolution\n        # will substitute any references for which a value is provided.\n        necessary_parameter_values = {name: value for name, value in parameter_values.items()\n                                      if name in self.parameters}\n\n        # Only \"Ref\" is supported\n        supported_intrinsics = {\n            RefAction.intrinsic_name: RefAction()\n        }\n\n        resolver = IntrinsicsResolver(necessary_parameter_values, supported_intrinsics)\n        definition_copy = copy.deepcopy(self.definition)\n\n        return resolver.resolve_parameter_refs(definition_copy)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 10,
                "column": 11
              },
              "text": "\"\"\"\n        With the given values for each parameter, this method will return a policy statement that can be used\n        directly with IAM.\n\n        :param dict parameter_values: Dict containing values for each parameter defined in the template\n        :return dict: Dictionary containing policy statement\n        :raises InvalidParameterValues: If parameter values is not a valid dictionary or does not contain values\n            for all parameters\n        :raises InsufficientParameterValues: If the parameter values don't have values for all required parameters\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 10,
                    "column": 11
                  },
                  "text": "\"\"\"\n        With the given values for each parameter, this method will return a policy statement that can be used\n        directly with IAM.\n\n        :param dict parameter_values: Dict containing values for each parameter defined in the template\n        :return dict: Dictionary containing policy statement\n        :raises InvalidParameterValues: If parameter values is not a valid dictionary or does not contain values\n            for all parameters\n        :raises InsufficientParameterValues: If the parameter values don't have values for all required parameters\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 10,
                        "column": 8
                      },
                      "text": "\n        With the given values for each parameter, this method will return a policy statement that can be used\n        directly with IAM.\n\n        :param dict parameter_values: Dict containing values for each parameter defined in the template\n        :return dict: Dictionary containing policy statement\n        :raises InvalidParameterValues: If parameter values is not a valid dictionary or does not contain values\n            for all parameters\n        :raises InsufficientParameterValues: If the parameter values don't have values for all required parameters\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 65
              },
              "text": "missing = self.missing_parameter_values(parameter_values)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 12,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 65
                  },
                  "text": "missing = self.missing_parameter_values(parameter_values)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 15
                      },
                      "text": "missing"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 16
                      },
                      "end": {
                        "row": 12,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 12,
                        "column": 18
                      },
                      "end": {
                        "row": 12,
                        "column": 65
                      },
                      "text": "self.missing_parameter_values(parameter_values)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 12,
                            "column": 18
                          },
                          "end": {
                            "row": 12,
                            "column": 47
                          },
                          "text": "self.missing_parameter_values",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 18
                              },
                              "end": {
                                "row": 12,
                                "column": 22
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 12,
                                "column": 22
                              },
                              "end": {
                                "row": 12,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 23
                              },
                              "end": {
                                "row": 12,
                                "column": 47
                              },
                              "text": "missing_parameter_values"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 47
                          },
                          "end": {
                            "row": 12,
                            "column": 65
                          },
                          "text": "(parameter_values)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 47
                              },
                              "end": {
                                "row": 12,
                                "column": 48
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 48
                              },
                              "end": {
                                "row": 12,
                                "column": 64
                              },
                              "text": "parameter_values"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 64
                              },
                              "end": {
                                "row": 12,
                                "column": 65
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 92
              },
              "text": "if len(missing) > 0:\n            # str() of elements of list to prevent any `u` prefix from being displayed in user-facing error message\n            raise InsufficientParameterValues(\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format(self.name, [str(m) for m in missing]))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 13,
                    "column": 11
                  },
                  "end": {
                    "row": 13,
                    "column": 27
                  },
                  "text": "len(missing) > 0",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 13,
                        "column": 11
                      },
                      "end": {
                        "row": 13,
                        "column": 23
                      },
                      "text": "len(missing)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 11
                          },
                          "end": {
                            "row": 13,
                            "column": 14
                          },
                          "text": "len"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 14
                          },
                          "end": {
                            "row": 13,
                            "column": 23
                          },
                          "text": "(missing)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 14
                              },
                              "end": {
                                "row": 13,
                                "column": 15
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 15
                              },
                              "end": {
                                "row": 13,
                                "column": 22
                              },
                              "text": "missing"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 22
                              },
                              "end": {
                                "row": 13,
                                "column": 23
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ">",
                      "start": {
                        "row": 13,
                        "column": 24
                      },
                      "end": {
                        "row": 13,
                        "column": 25
                      },
                      "text": ">"
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 13,
                        "column": 26
                      },
                      "end": {
                        "row": 13,
                        "column": 27
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 13,
                    "column": 27
                  },
                  "end": {
                    "row": 13,
                    "column": 28
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 14,
                    "column": 12
                  },
                  "end": {
                    "row": 14,
                    "column": 115
                  },
                  "text": "# str() of elements of list to prevent any `u` prefix from being displayed in user-facing error message"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 15,
                    "column": 12
                  },
                  "end": {
                    "row": 16,
                    "column": 92
                  },
                  "text": "raise InsufficientParameterValues(\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format(self.name, [str(m) for m in missing]))",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 15,
                        "column": 12
                      },
                      "end": {
                        "row": 16,
                        "column": 92
                      },
                      "text": "raise InsufficientParameterValues(\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format(self.name, [str(m) for m in missing]))",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 15,
                            "column": 12
                          },
                          "end": {
                            "row": 15,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 15,
                            "column": 18
                          },
                          "end": {
                            "row": 16,
                            "column": 92
                          },
                          "text": "InsufficientParameterValues(\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format(self.name, [str(m) for m in missing]))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 18
                              },
                              "end": {
                                "row": 15,
                                "column": 45
                              },
                              "text": "InsufficientParameterValues"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 15,
                                "column": 45
                              },
                              "end": {
                                "row": 16,
                                "column": 92
                              },
                              "text": "(\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format(self.name, [str(m) for m in missing]))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 15,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 46
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 15,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 91
                                  },
                                  "text": "\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format(self.name, [str(m) for m in missing])",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 15,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 53
                                      },
                                      "text": "\"Following required parameters of template '{}' don't have values: {}\"\n                                              .format",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 15,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 116
                                          },
                                          "text": "\"Following required parameters of template '{}' don't have values: {}\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 15,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 47
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 15,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 115
                                              },
                                              "text": "Following required parameters of template '{}' don't have values: {}"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 15,
                                                "column": 115
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 116
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 16,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 47
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 53
                                          },
                                          "text": "format"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 16,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 91
                                      },
                                      "text": "(self.name, [str(m) for m in missing])",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 16,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 54
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 16,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 63
                                          },
                                          "text": "self.name",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 58
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 16,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 59
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 63
                                              },
                                              "text": "name"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 16,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 64
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "list_comprehension",
                                          "start": {
                                            "row": 16,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 90
                                          },
                                          "text": "[str(m) for m in missing]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 16,
                                                "column": 65
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 66
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 16,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 72
                                              },
                                              "text": "str(m)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 66
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 69
                                                  },
                                                  "text": "str"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 69
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 72
                                                  },
                                                  "text": "(m)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 69
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 70
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 70
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 71
                                                      },
                                                      "text": "m"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 16,
                                                        "column": 71
                                                      },
                                                      "end": {
                                                        "row": 16,
                                                        "column": 72
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "for_in_clause",
                                              "start": {
                                                "row": 16,
                                                "column": 73
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 89
                                              },
                                              "text": "for m in missing",
                                              "children": [
                                                {
                                                  "type": "for",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 73
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 76
                                                  },
                                                  "text": "for"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 77
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 78
                                                  },
                                                  "text": "m"
                                                },
                                                {
                                                  "type": "in",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 79
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 81
                                                  },
                                                  "text": "in"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 82
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 89
                                                  },
                                                  "text": "missing"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 16,
                                                "column": 89
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 90
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 16,
                                            "column": 90
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 91
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 91
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 92
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 92
              },
              "text": "# Select only necessary parameter_values. this is to prevent malicious or accidental"
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 117
              },
              "text": "# injection of values for parameters not intended in the template. This is important because \"Ref\" resolution"
            },
            {
              "type": "comment",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 71
              },
              "text": "# will substitute any references for which a value is provided."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 22,
                "column": 65
              },
              "text": "necessary_parameter_values = {name: value for name, value in parameter_values.items()\n                                      if name in self.parameters}",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 65
                  },
                  "text": "necessary_parameter_values = {name: value for name, value in parameter_values.items()\n                                      if name in self.parameters}",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 34
                      },
                      "text": "necessary_parameter_values"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 21,
                        "column": 35
                      },
                      "end": {
                        "row": 21,
                        "column": 36
                      },
                      "text": "="
                    },
                    {
                      "type": "dictionary_comprehension",
                      "start": {
                        "row": 21,
                        "column": 37
                      },
                      "end": {
                        "row": 22,
                        "column": 65
                      },
                      "text": "{name: value for name, value in parameter_values.items()\n                                      if name in self.parameters}",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 21,
                            "column": 37
                          },
                          "end": {
                            "row": 21,
                            "column": 38
                          },
                          "text": "{"
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 21,
                            "column": 38
                          },
                          "end": {
                            "row": 21,
                            "column": 49
                          },
                          "text": "name: value",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 38
                              },
                              "end": {
                                "row": 21,
                                "column": 42
                              },
                              "text": "name"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 21,
                                "column": 42
                              },
                              "end": {
                                "row": 21,
                                "column": 43
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 44
                              },
                              "end": {
                                "row": 21,
                                "column": 49
                              },
                              "text": "value"
                            }
                          ]
                        },
                        {
                          "type": "for_in_clause",
                          "start": {
                            "row": 21,
                            "column": 50
                          },
                          "end": {
                            "row": 21,
                            "column": 93
                          },
                          "text": "for name, value in parameter_values.items()",
                          "children": [
                            {
                              "type": "for",
                              "start": {
                                "row": 21,
                                "column": 50
                              },
                              "end": {
                                "row": 21,
                                "column": 53
                              },
                              "text": "for"
                            },
                            {
                              "type": "pattern_list",
                              "start": {
                                "row": 21,
                                "column": 54
                              },
                              "end": {
                                "row": 21,
                                "column": 65
                              },
                              "text": "name, value",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 58
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 21,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 59
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 65
                                  },
                                  "text": "value"
                                }
                              ]
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 21,
                                "column": 66
                              },
                              "end": {
                                "row": 21,
                                "column": 68
                              },
                              "text": "in"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 21,
                                "column": 69
                              },
                              "end": {
                                "row": 21,
                                "column": 93
                              },
                              "text": "parameter_values.items()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 21,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 91
                                  },
                                  "text": "parameter_values.items",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 69
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 85
                                      },
                                      "text": "parameter_values"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 21,
                                        "column": 85
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 86
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 21,
                                        "column": 86
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 91
                                      },
                                      "text": "items"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 21,
                                    "column": 91
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 93
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 21,
                                        "column": 91
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 92
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 21,
                                        "column": 92
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 93
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "if_clause",
                          "start": {
                            "row": 22,
                            "column": 38
                          },
                          "end": {
                            "row": 22,
                            "column": 64
                          },
                          "text": "if name in self.parameters",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 22,
                                "column": 38
                              },
                              "end": {
                                "row": 22,
                                "column": 40
                              },
                              "text": "if"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 22,
                                "column": 41
                              },
                              "end": {
                                "row": 22,
                                "column": 64
                              },
                              "text": "name in self.parameters",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 45
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": "in",
                                  "start": {
                                    "row": 22,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 48
                                  },
                                  "text": "in"
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 22,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 64
                                  },
                                  "text": "self.parameters",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 53
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 22,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 54
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 64
                                      },
                                      "text": "parameters"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 22,
                            "column": 64
                          },
                          "end": {
                            "row": 22,
                            "column": 65
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 24,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 33
              },
              "text": "# Only \"Ref\" is supported"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 9
              },
              "text": "supported_intrinsics = {\n            RefAction.intrinsic_name: RefAction()\n        }",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 9
                  },
                  "text": "supported_intrinsics = {\n            RefAction.intrinsic_name: RefAction()\n        }",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 28
                      },
                      "text": "supported_intrinsics"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 25,
                        "column": 29
                      },
                      "end": {
                        "row": 25,
                        "column": 30
                      },
                      "text": "="
                    },
                    {
                      "type": "dictionary",
                      "start": {
                        "row": 25,
                        "column": 31
                      },
                      "end": {
                        "row": 27,
                        "column": 9
                      },
                      "text": "{\n            RefAction.intrinsic_name: RefAction()\n        }",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 25,
                            "column": 31
                          },
                          "end": {
                            "row": 25,
                            "column": 32
                          },
                          "text": "{"
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 26,
                            "column": 12
                          },
                          "end": {
                            "row": 26,
                            "column": 49
                          },
                          "text": "RefAction.intrinsic_name: RefAction()",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 26,
                                "column": 12
                              },
                              "end": {
                                "row": 26,
                                "column": 36
                              },
                              "text": "RefAction.intrinsic_name",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 21
                                  },
                                  "text": "RefAction"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 26,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 22
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 36
                                  },
                                  "text": "intrinsic_name"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 26,
                                "column": 36
                              },
                              "end": {
                                "row": 26,
                                "column": 37
                              },
                              "text": ":"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 26,
                                "column": 38
                              },
                              "end": {
                                "row": 26,
                                "column": 49
                              },
                              "text": "RefAction()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 47
                                  },
                                  "text": "RefAction"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 26,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 49
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 26,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 48
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 26,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 49
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 27,
                            "column": 8
                          },
                          "end": {
                            "row": 27,
                            "column": 9
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 29,
                "column": 8
              },
              "end": {
                "row": 29,
                "column": 87
              },
              "text": "resolver = IntrinsicsResolver(necessary_parameter_values, supported_intrinsics)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 29,
                    "column": 8
                  },
                  "end": {
                    "row": 29,
                    "column": 87
                  },
                  "text": "resolver = IntrinsicsResolver(necessary_parameter_values, supported_intrinsics)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 29,
                        "column": 8
                      },
                      "end": {
                        "row": 29,
                        "column": 16
                      },
                      "text": "resolver"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 29,
                        "column": 17
                      },
                      "end": {
                        "row": 29,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 29,
                        "column": 19
                      },
                      "end": {
                        "row": 29,
                        "column": 87
                      },
                      "text": "IntrinsicsResolver(necessary_parameter_values, supported_intrinsics)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 29,
                            "column": 19
                          },
                          "end": {
                            "row": 29,
                            "column": 37
                          },
                          "text": "IntrinsicsResolver"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 29,
                            "column": 37
                          },
                          "end": {
                            "row": 29,
                            "column": 87
                          },
                          "text": "(necessary_parameter_values, supported_intrinsics)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 29,
                                "column": 37
                              },
                              "end": {
                                "row": 29,
                                "column": 38
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 29,
                                "column": 38
                              },
                              "end": {
                                "row": 29,
                                "column": 64
                              },
                              "text": "necessary_parameter_values"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 29,
                                "column": 64
                              },
                              "end": {
                                "row": 29,
                                "column": 65
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 29,
                                "column": 66
                              },
                              "end": {
                                "row": 29,
                                "column": 86
                              },
                              "text": "supported_intrinsics"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 29,
                                "column": 86
                              },
                              "end": {
                                "row": 29,
                                "column": 87
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 30,
                "column": 8
              },
              "end": {
                "row": 30,
                "column": 56
              },
              "text": "definition_copy = copy.deepcopy(self.definition)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 30,
                    "column": 56
                  },
                  "text": "definition_copy = copy.deepcopy(self.definition)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 8
                      },
                      "end": {
                        "row": 30,
                        "column": 23
                      },
                      "text": "definition_copy"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 30,
                        "column": 24
                      },
                      "end": {
                        "row": 30,
                        "column": 25
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 30,
                        "column": 26
                      },
                      "end": {
                        "row": 30,
                        "column": 56
                      },
                      "text": "copy.deepcopy(self.definition)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 30,
                            "column": 26
                          },
                          "end": {
                            "row": 30,
                            "column": 39
                          },
                          "text": "copy.deepcopy",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 26
                              },
                              "end": {
                                "row": 30,
                                "column": 30
                              },
                              "text": "copy"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 30,
                                "column": 30
                              },
                              "end": {
                                "row": 30,
                                "column": 31
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 31
                              },
                              "end": {
                                "row": 30,
                                "column": 39
                              },
                              "text": "deepcopy"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 30,
                            "column": 39
                          },
                          "end": {
                            "row": 30,
                            "column": 56
                          },
                          "text": "(self.definition)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 30,
                                "column": 39
                              },
                              "end": {
                                "row": 30,
                                "column": 40
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 30,
                                "column": 40
                              },
                              "end": {
                                "row": 30,
                                "column": 55
                              },
                              "text": "self.definition",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 30,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 44
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 30,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 45
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 30,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 55
                                  },
                                  "text": "definition"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 30,
                                "column": 55
                              },
                              "end": {
                                "row": 30,
                                "column": 56
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 32,
                "column": 8
              },
              "end": {
                "row": 32,
                "column": 63
              },
              "text": "return resolver.resolve_parameter_refs(definition_copy)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 32,
                    "column": 8
                  },
                  "end": {
                    "row": 32,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 32,
                    "column": 15
                  },
                  "end": {
                    "row": 32,
                    "column": 63
                  },
                  "text": "resolver.resolve_parameter_refs(definition_copy)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 32,
                        "column": 15
                      },
                      "end": {
                        "row": 32,
                        "column": 46
                      },
                      "text": "resolver.resolve_parameter_refs",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 32,
                            "column": 15
                          },
                          "end": {
                            "row": 32,
                            "column": 23
                          },
                          "text": "resolver"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 32,
                            "column": 23
                          },
                          "end": {
                            "row": 32,
                            "column": 24
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 32,
                            "column": 24
                          },
                          "end": {
                            "row": 32,
                            "column": 46
                          },
                          "text": "resolve_parameter_refs"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 32,
                        "column": 46
                      },
                      "end": {
                        "row": 32,
                        "column": 63
                      },
                      "text": "(definition_copy)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 32,
                            "column": 46
                          },
                          "end": {
                            "row": 32,
                            "column": 47
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 32,
                            "column": 47
                          },
                          "end": {
                            "row": 32,
                            "column": 62
                          },
                          "text": "definition_copy"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 32,
                            "column": 62
                          },
                          "end": {
                            "row": 32,
                            "column": 63
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}