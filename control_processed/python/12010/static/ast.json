{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 10,
    "column": 29
  },
  "text": "async def on_error(self, event_method, *args, **kwargs):\n        \"\"\"|coro|\n\n        The default error handler provided by the client.\n\n        By default this prints to :data:`sys.stderr` however it could be\n        overridden to have a different implementation.\n        Check :func:`discord.on_error` for more details.\n        \"\"\"\n        print('Ignoring exception in {}'.format(event_method), file=sys.stderr)\n        traceback.print_exc()",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 10,
        "column": 29
      },
      "text": "async def on_error(self, event_method, *args, **kwargs):\n        \"\"\"|coro|\n\n        The default error handler provided by the client.\n\n        By default this prints to :data:`sys.stderr` however it could be\n        overridden to have a different implementation.\n        Check :func:`discord.on_error` for more details.\n        \"\"\"\n        print('Ignoring exception in {}'.format(event_method), file=sys.stderr)\n        traceback.print_exc()",
      "children": [
        {
          "type": "async",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 5
          },
          "text": "async"
        },
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 6
          },
          "end": {
            "row": 0,
            "column": 9
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "on_error"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 55
          },
          "text": "(self, event_method, *args, **kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "event_method"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": ","
            },
            {
              "type": "list_splat_pattern",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": "*args",
              "children": [
                {
                  "type": "*",
                  "start": {
                    "row": 0,
                    "column": 39
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "*"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 40
                  },
                  "end": {
                    "row": 0,
                    "column": 44
                  },
                  "text": "args"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": "**kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 0,
                    "column": 46
                  },
                  "end": {
                    "row": 0,
                    "column": 48
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 48
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 54
              },
              "end": {
                "row": 0,
                "column": 55
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 55
          },
          "end": {
            "row": 0,
            "column": 56
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 10,
            "column": 29
          },
          "text": "\"\"\"|coro|\n\n        The default error handler provided by the client.\n\n        By default this prints to :data:`sys.stderr` however it could be\n        overridden to have a different implementation.\n        Check :func:`discord.on_error` for more details.\n        \"\"\"\n        print('Ignoring exception in {}'.format(event_method), file=sys.stderr)\n        traceback.print_exc()",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 8,
                "column": 11
              },
              "text": "\"\"\"|coro|\n\n        The default error handler provided by the client.\n\n        By default this prints to :data:`sys.stderr` however it could be\n        overridden to have a different implementation.\n        Check :func:`discord.on_error` for more details.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 8,
                    "column": 11
                  },
                  "text": "\"\"\"|coro|\n\n        The default error handler provided by the client.\n\n        By default this prints to :data:`sys.stderr` however it could be\n        overridden to have a different implementation.\n        Check :func:`discord.on_error` for more details.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 8,
                        "column": 8
                      },
                      "text": "|coro|\n\n        The default error handler provided by the client.\n\n        By default this prints to :data:`sys.stderr` however it could be\n        overridden to have a different implementation.\n        Check :func:`discord.on_error` for more details.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 9,
                "column": 79
              },
              "text": "print('Ignoring exception in {}'.format(event_method), file=sys.stderr)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 79
                  },
                  "text": "print('Ignoring exception in {}'.format(event_method), file=sys.stderr)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 8
                      },
                      "end": {
                        "row": 9,
                        "column": 13
                      },
                      "text": "print"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 9,
                        "column": 13
                      },
                      "end": {
                        "row": 9,
                        "column": 79
                      },
                      "text": "('Ignoring exception in {}'.format(event_method), file=sys.stderr)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 9,
                            "column": 13
                          },
                          "end": {
                            "row": 9,
                            "column": 14
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 9,
                            "column": 14
                          },
                          "end": {
                            "row": 9,
                            "column": 61
                          },
                          "text": "'Ignoring exception in {}'.format(event_method)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 9,
                                "column": 14
                              },
                              "end": {
                                "row": 9,
                                "column": 47
                              },
                              "text": "'Ignoring exception in {}'.format",
                              "children": [
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 9,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 40
                                  },
                                  "text": "'Ignoring exception in {}'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 9,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 15
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 9,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 39
                                      },
                                      "text": "Ignoring exception in {}"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 9,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 40
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 9,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 41
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 47
                                  },
                                  "text": "format"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 9,
                                "column": 47
                              },
                              "end": {
                                "row": 9,
                                "column": 61
                              },
                              "text": "(event_method)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 9,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 48
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 60
                                  },
                                  "text": "event_method"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 9,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 61
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 9,
                            "column": 61
                          },
                          "end": {
                            "row": 9,
                            "column": 62
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 9,
                            "column": 63
                          },
                          "end": {
                            "row": 9,
                            "column": 78
                          },
                          "text": "file=sys.stderr",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 63
                              },
                              "end": {
                                "row": 9,
                                "column": 67
                              },
                              "text": "file"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 9,
                                "column": 67
                              },
                              "end": {
                                "row": 9,
                                "column": 68
                              },
                              "text": "="
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 9,
                                "column": 68
                              },
                              "end": {
                                "row": 9,
                                "column": 78
                              },
                              "text": "sys.stderr",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 71
                                  },
                                  "text": "sys"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 9,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 72
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 72
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 78
                                  },
                                  "text": "stderr"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 9,
                            "column": 78
                          },
                          "end": {
                            "row": 9,
                            "column": 79
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 10,
                "column": 8
              },
              "end": {
                "row": 10,
                "column": 29
              },
              "text": "traceback.print_exc()",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 10,
                    "column": 8
                  },
                  "end": {
                    "row": 10,
                    "column": 29
                  },
                  "text": "traceback.print_exc()",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 27
                      },
                      "text": "traceback.print_exc",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 8
                          },
                          "end": {
                            "row": 10,
                            "column": 17
                          },
                          "text": "traceback"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 10,
                            "column": 17
                          },
                          "end": {
                            "row": 10,
                            "column": 18
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 18
                          },
                          "end": {
                            "row": 10,
                            "column": 27
                          },
                          "text": "print_exc"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 10,
                        "column": 27
                      },
                      "end": {
                        "row": 10,
                        "column": 29
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 10,
                            "column": 27
                          },
                          "end": {
                            "row": 10,
                            "column": 28
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 10,
                            "column": 28
                          },
                          "end": {
                            "row": 10,
                            "column": 29
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}