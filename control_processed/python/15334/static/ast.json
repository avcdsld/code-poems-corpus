{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 14,
    "column": 80
  },
  "text": "def pick_probability(x, temp, cos_distance):\n    \"\"\"Row normalized exponentiated pairwise distance between all the elements\n    of x. Conceptualized as the probability of sampling a neighbor point for\n    every element of x, proportional to the distance between the points.\n    :param x: a matrix\n    :param temp: Temperature\n    :cos_distance: Boolean for using cosine or euclidean distance\n\n    :returns: A tensor for the row normalized exponentiated pairwise distance\n              between all the elements of x.\n    \"\"\"\n    f = SNNLCrossEntropy.fits(\n        x, x, temp, cos_distance) - tf.eye(tf.shape(x)[0])\n    return f / (\n        SNNLCrossEntropy.STABILITY_EPS + tf.expand_dims(tf.reduce_sum(f, 1), 1))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 14,
        "column": 80
      },
      "text": "def pick_probability(x, temp, cos_distance):\n    \"\"\"Row normalized exponentiated pairwise distance between all the elements\n    of x. Conceptualized as the probability of sampling a neighbor point for\n    every element of x, proportional to the distance between the points.\n    :param x: a matrix\n    :param temp: Temperature\n    :cos_distance: Boolean for using cosine or euclidean distance\n\n    :returns: A tensor for the row normalized exponentiated pairwise distance\n              between all the elements of x.\n    \"\"\"\n    f = SNNLCrossEntropy.fits(\n        x, x, temp, cos_distance) - tf.eye(tf.shape(x)[0])\n    return f / (\n        SNNLCrossEntropy.STABILITY_EPS + tf.expand_dims(tf.reduce_sum(f, 1), 1))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "pick_probability"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 0,
            "column": 43
          },
          "text": "(x, temp, cos_distance)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "x"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "temp"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": "cos_distance"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 43
          },
          "end": {
            "row": 0,
            "column": 44
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 14,
            "column": 80
          },
          "text": "\"\"\"Row normalized exponentiated pairwise distance between all the elements\n    of x. Conceptualized as the probability of sampling a neighbor point for\n    every element of x, proportional to the distance between the points.\n    :param x: a matrix\n    :param temp: Temperature\n    :cos_distance: Boolean for using cosine or euclidean distance\n\n    :returns: A tensor for the row normalized exponentiated pairwise distance\n              between all the elements of x.\n    \"\"\"\n    f = SNNLCrossEntropy.fits(\n        x, x, temp, cos_distance) - tf.eye(tf.shape(x)[0])\n    return f / (\n        SNNLCrossEntropy.STABILITY_EPS + tf.expand_dims(tf.reduce_sum(f, 1), 1))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 10,
                "column": 7
              },
              "text": "\"\"\"Row normalized exponentiated pairwise distance between all the elements\n    of x. Conceptualized as the probability of sampling a neighbor point for\n    every element of x, proportional to the distance between the points.\n    :param x: a matrix\n    :param temp: Temperature\n    :cos_distance: Boolean for using cosine or euclidean distance\n\n    :returns: A tensor for the row normalized exponentiated pairwise distance\n              between all the elements of x.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 7
                  },
                  "text": "\"\"\"Row normalized exponentiated pairwise distance between all the elements\n    of x. Conceptualized as the probability of sampling a neighbor point for\n    every element of x, proportional to the distance between the points.\n    :param x: a matrix\n    :param temp: Temperature\n    :cos_distance: Boolean for using cosine or euclidean distance\n\n    :returns: A tensor for the row normalized exponentiated pairwise distance\n              between all the elements of x.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 10,
                        "column": 4
                      },
                      "text": "Row normalized exponentiated pairwise distance between all the elements\n    of x. Conceptualized as the probability of sampling a neighbor point for\n    every element of x, proportional to the distance between the points.\n    :param x: a matrix\n    :param temp: Temperature\n    :cos_distance: Boolean for using cosine or euclidean distance\n\n    :returns: A tensor for the row normalized exponentiated pairwise distance\n              between all the elements of x.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 10,
                        "column": 4
                      },
                      "end": {
                        "row": 10,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 11,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 58
              },
              "text": "f = SNNLCrossEntropy.fits(\n        x, x, temp, cos_distance) - tf.eye(tf.shape(x)[0])",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 11,
                    "column": 4
                  },
                  "end": {
                    "row": 12,
                    "column": 58
                  },
                  "text": "f = SNNLCrossEntropy.fits(\n        x, x, temp, cos_distance) - tf.eye(tf.shape(x)[0])",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 11,
                        "column": 4
                      },
                      "end": {
                        "row": 11,
                        "column": 5
                      },
                      "text": "f"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 7
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 58
                      },
                      "text": "SNNLCrossEntropy.fits(\n        x, x, temp, cos_distance) - tf.eye(tf.shape(x)[0])",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 11,
                            "column": 8
                          },
                          "end": {
                            "row": 12,
                            "column": 33
                          },
                          "text": "SNNLCrossEntropy.fits(\n        x, x, temp, cos_distance)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 11,
                                "column": 8
                              },
                              "end": {
                                "row": 11,
                                "column": 29
                              },
                              "text": "SNNLCrossEntropy.fits",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 24
                                  },
                                  "text": "SNNLCrossEntropy"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 29
                                  },
                                  "text": "fits"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 11,
                                "column": 29
                              },
                              "end": {
                                "row": 12,
                                "column": 33
                              },
                              "text": "(\n        x, x, temp, cos_distance)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 30
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 9
                                  },
                                  "text": "x"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 12,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 10
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 12
                                  },
                                  "text": "x"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 12,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 13
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 18
                                  },
                                  "text": "temp"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 12,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 19
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 32
                                  },
                                  "text": "cos_distance"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 12,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 33
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "-",
                          "start": {
                            "row": 12,
                            "column": 34
                          },
                          "end": {
                            "row": 12,
                            "column": 35
                          },
                          "text": "-"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 12,
                            "column": 36
                          },
                          "end": {
                            "row": 12,
                            "column": 58
                          },
                          "text": "tf.eye(tf.shape(x)[0])",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 12,
                                "column": 36
                              },
                              "end": {
                                "row": 12,
                                "column": 42
                              },
                              "text": "tf.eye",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 38
                                  },
                                  "text": "tf"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 12,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 39
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 12,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 42
                                  },
                                  "text": "eye"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 12,
                                "column": 42
                              },
                              "end": {
                                "row": 12,
                                "column": 58
                              },
                              "text": "(tf.shape(x)[0])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 12,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 43
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "subscript",
                                  "start": {
                                    "row": 12,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 57
                                  },
                                  "text": "tf.shape(x)[0]",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 12,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 54
                                      },
                                      "text": "tf.shape(x)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 12,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 51
                                          },
                                          "text": "tf.shape",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 45
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 12,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 46
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 51
                                              },
                                              "text": "shape"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 12,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 54
                                          },
                                          "text": "(x)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 12,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 52
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 53
                                              },
                                              "text": "x"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 12,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 54
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 12,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 55
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 12,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 56
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 12,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 57
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 12,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 58
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 80
              },
              "text": "return f / (\n        SNNLCrossEntropy.STABILITY_EPS + tf.expand_dims(tf.reduce_sum(f, 1), 1))",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 13,
                    "column": 4
                  },
                  "end": {
                    "row": 13,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "binary_operator",
                  "start": {
                    "row": 13,
                    "column": 11
                  },
                  "end": {
                    "row": 14,
                    "column": 80
                  },
                  "text": "f / (\n        SNNLCrossEntropy.STABILITY_EPS + tf.expand_dims(tf.reduce_sum(f, 1), 1))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 11
                      },
                      "end": {
                        "row": 13,
                        "column": 12
                      },
                      "text": "f"
                    },
                    {
                      "type": "/",
                      "start": {
                        "row": 13,
                        "column": 13
                      },
                      "end": {
                        "row": 13,
                        "column": 14
                      },
                      "text": "/"
                    },
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 13,
                        "column": 15
                      },
                      "end": {
                        "row": 14,
                        "column": 80
                      },
                      "text": "(\n        SNNLCrossEntropy.STABILITY_EPS + tf.expand_dims(tf.reduce_sum(f, 1), 1))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 13,
                            "column": 15
                          },
                          "end": {
                            "row": 13,
                            "column": 16
                          },
                          "text": "("
                        },
                        {
                          "type": "binary_operator",
                          "start": {
                            "row": 14,
                            "column": 8
                          },
                          "end": {
                            "row": 14,
                            "column": 79
                          },
                          "text": "SNNLCrossEntropy.STABILITY_EPS + tf.expand_dims(tf.reduce_sum(f, 1), 1)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 14,
                                "column": 8
                              },
                              "end": {
                                "row": 14,
                                "column": 38
                              },
                              "text": "SNNLCrossEntropy.STABILITY_EPS",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 24
                                  },
                                  "text": "SNNLCrossEntropy"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 14,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 38
                                  },
                                  "text": "STABILITY_EPS"
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 14,
                                "column": 39
                              },
                              "end": {
                                "row": 14,
                                "column": 40
                              },
                              "text": "+"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 14,
                                "column": 41
                              },
                              "end": {
                                "row": 14,
                                "column": 79
                              },
                              "text": "tf.expand_dims(tf.reduce_sum(f, 1), 1)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 14,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 55
                                  },
                                  "text": "tf.expand_dims",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 43
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 14,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 44
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 55
                                      },
                                      "text": "expand_dims"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 14,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 79
                                  },
                                  "text": "(tf.reduce_sum(f, 1), 1)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 14,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 56
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 14,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 75
                                      },
                                      "text": "tf.reduce_sum(f, 1)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 14,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 69
                                          },
                                          "text": "tf.reduce_sum",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 58
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 14,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 59
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 69
                                              },
                                              "text": "reduce_sum"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 14,
                                            "column": 69
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 75
                                          },
                                          "text": "(f, 1)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 14,
                                                "column": 69
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 70
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 70
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 71
                                              },
                                              "text": "f"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 14,
                                                "column": 71
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 72
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 14,
                                                "column": 73
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 74
                                              },
                                              "text": "1"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 14,
                                                "column": 74
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 75
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 14,
                                        "column": 75
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 76
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 14,
                                        "column": 77
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 78
                                      },
                                      "text": "1"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 14,
                                        "column": 78
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 79
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 14,
                            "column": 79
                          },
                          "end": {
                            "row": 14,
                            "column": 80
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}