{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 19,
    "column": 19
  },
  "text": "def calculate_mean_edit_distance_and_loss(iterator, dropout, reuse):\n    r'''\n    This routine beam search decodes a mini-batch and calculates the loss and mean edit distance.\n    Next to total and average loss it returns the mean edit distance,\n    the decoded result and the batch's original Y.\n    '''\n    # Obtain the next batch of data\n    (batch_x, batch_seq_len), batch_y = iterator.get_next()\n\n    # Calculate the logits of the batch\n    logits, _ = create_model(batch_x, batch_seq_len, dropout, reuse=reuse)\n\n    # Compute the CTC loss using TensorFlow's `ctc_loss`\n    total_loss = tf.nn.ctc_loss(labels=batch_y, inputs=logits, sequence_length=batch_seq_len)\n\n    # Calculate the average loss across the batch\n    avg_loss = tf.reduce_mean(total_loss)\n\n    # Finally we return the average loss\n    return avg_loss",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 19,
        "column": 19
      },
      "text": "def calculate_mean_edit_distance_and_loss(iterator, dropout, reuse):\n    r'''\n    This routine beam search decodes a mini-batch and calculates the loss and mean edit distance.\n    Next to total and average loss it returns the mean edit distance,\n    the decoded result and the batch's original Y.\n    '''\n    # Obtain the next batch of data\n    (batch_x, batch_seq_len), batch_y = iterator.get_next()\n\n    # Calculate the logits of the batch\n    logits, _ = create_model(batch_x, batch_seq_len, dropout, reuse=reuse)\n\n    # Compute the CTC loss using TensorFlow's `ctc_loss`\n    total_loss = tf.nn.ctc_loss(labels=batch_y, inputs=logits, sequence_length=batch_seq_len)\n\n    # Calculate the average loss across the batch\n    avg_loss = tf.reduce_mean(total_loss)\n\n    # Finally we return the average loss\n    return avg_loss",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": "calculate_mean_edit_distance_and_loss"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 41
          },
          "end": {
            "row": 0,
            "column": 67
          },
          "text": "(iterator, dropout, reuse)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 50
              },
              "text": "iterator"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 50
              },
              "end": {
                "row": 0,
                "column": 51
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 52
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": "dropout"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 59
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 61
              },
              "end": {
                "row": 0,
                "column": 66
              },
              "text": "reuse"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 66
              },
              "end": {
                "row": 0,
                "column": 67
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 67
          },
          "end": {
            "row": 0,
            "column": 68
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 19,
            "column": 19
          },
          "text": "r'''\n    This routine beam search decodes a mini-batch and calculates the loss and mean edit distance.\n    Next to total and average loss it returns the mean edit distance,\n    the decoded result and the batch's original Y.\n    '''\n    # Obtain the next batch of data\n    (batch_x, batch_seq_len), batch_y = iterator.get_next()\n\n    # Calculate the logits of the batch\n    logits, _ = create_model(batch_x, batch_seq_len, dropout, reuse=reuse)\n\n    # Compute the CTC loss using TensorFlow's `ctc_loss`\n    total_loss = tf.nn.ctc_loss(labels=batch_y, inputs=logits, sequence_length=batch_seq_len)\n\n    # Calculate the average loss across the batch\n    avg_loss = tf.reduce_mean(total_loss)\n\n    # Finally we return the average loss\n    return avg_loss",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 7
              },
              "text": "r'''\n    This routine beam search decodes a mini-batch and calculates the loss and mean edit distance.\n    Next to total and average loss it returns the mean edit distance,\n    the decoded result and the batch's original Y.\n    '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 7
                  },
                  "text": "r'''\n    This routine beam search decodes a mini-batch and calculates the loss and mean edit distance.\n    Next to total and average loss it returns the mean edit distance,\n    the decoded result and the batch's original Y.\n    '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 8
                      },
                      "text": "r'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 5,
                        "column": 4
                      },
                      "text": "\n    This routine beam search decodes a mini-batch and calculates the loss and mean edit distance.\n    Next to total and average loss it returns the mean edit distance,\n    the decoded result and the batch's original Y.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 7
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 6,
                "column": 35
              },
              "text": "# Obtain the next batch of data"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 7,
                "column": 4
              },
              "end": {
                "row": 7,
                "column": 59
              },
              "text": "(batch_x, batch_seq_len), batch_y = iterator.get_next()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 7,
                    "column": 4
                  },
                  "end": {
                    "row": 7,
                    "column": 59
                  },
                  "text": "(batch_x, batch_seq_len), batch_y = iterator.get_next()",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 7,
                        "column": 4
                      },
                      "end": {
                        "row": 7,
                        "column": 37
                      },
                      "text": "(batch_x, batch_seq_len), batch_y",
                      "children": [
                        {
                          "type": "tuple_pattern",
                          "start": {
                            "row": 7,
                            "column": 4
                          },
                          "end": {
                            "row": 7,
                            "column": 28
                          },
                          "text": "(batch_x, batch_seq_len)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 7,
                                "column": 4
                              },
                              "end": {
                                "row": 7,
                                "column": 5
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 5
                              },
                              "end": {
                                "row": 7,
                                "column": 12
                              },
                              "text": "batch_x"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 7,
                                "column": 12
                              },
                              "end": {
                                "row": 7,
                                "column": 13
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 14
                              },
                              "end": {
                                "row": 7,
                                "column": 27
                              },
                              "text": "batch_seq_len"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 27
                              },
                              "end": {
                                "row": 7,
                                "column": 28
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 7,
                            "column": 28
                          },
                          "end": {
                            "row": 7,
                            "column": 29
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 30
                          },
                          "end": {
                            "row": 7,
                            "column": 37
                          },
                          "text": "batch_y"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 7,
                        "column": 38
                      },
                      "end": {
                        "row": 7,
                        "column": 39
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 7,
                        "column": 40
                      },
                      "end": {
                        "row": 7,
                        "column": 59
                      },
                      "text": "iterator.get_next()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 7,
                            "column": 40
                          },
                          "end": {
                            "row": 7,
                            "column": 57
                          },
                          "text": "iterator.get_next",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 40
                              },
                              "end": {
                                "row": 7,
                                "column": 48
                              },
                              "text": "iterator"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 7,
                                "column": 48
                              },
                              "end": {
                                "row": 7,
                                "column": 49
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 49
                              },
                              "end": {
                                "row": 7,
                                "column": 57
                              },
                              "text": "get_next"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 7,
                            "column": 57
                          },
                          "end": {
                            "row": 7,
                            "column": 59
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 7,
                                "column": 57
                              },
                              "end": {
                                "row": 7,
                                "column": 58
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 58
                              },
                              "end": {
                                "row": 7,
                                "column": 59
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 9,
                "column": 4
              },
              "end": {
                "row": 9,
                "column": 39
              },
              "text": "# Calculate the logits of the batch"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 10,
                "column": 4
              },
              "end": {
                "row": 10,
                "column": 74
              },
              "text": "logits, _ = create_model(batch_x, batch_seq_len, dropout, reuse=reuse)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 10,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 74
                  },
                  "text": "logits, _ = create_model(batch_x, batch_seq_len, dropout, reuse=reuse)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 10,
                        "column": 4
                      },
                      "end": {
                        "row": 10,
                        "column": 13
                      },
                      "text": "logits, _",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 4
                          },
                          "end": {
                            "row": 10,
                            "column": 10
                          },
                          "text": "logits"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 10,
                            "column": 10
                          },
                          "end": {
                            "row": 10,
                            "column": 11
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 12
                          },
                          "end": {
                            "row": 10,
                            "column": 13
                          },
                          "text": "_"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 10,
                        "column": 14
                      },
                      "end": {
                        "row": 10,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 10,
                        "column": 16
                      },
                      "end": {
                        "row": 10,
                        "column": 74
                      },
                      "text": "create_model(batch_x, batch_seq_len, dropout, reuse=reuse)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 16
                          },
                          "end": {
                            "row": 10,
                            "column": 28
                          },
                          "text": "create_model"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 10,
                            "column": 28
                          },
                          "end": {
                            "row": 10,
                            "column": 74
                          },
                          "text": "(batch_x, batch_seq_len, dropout, reuse=reuse)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 10,
                                "column": 28
                              },
                              "end": {
                                "row": 10,
                                "column": 29
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 29
                              },
                              "end": {
                                "row": 10,
                                "column": 36
                              },
                              "text": "batch_x"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 10,
                                "column": 36
                              },
                              "end": {
                                "row": 10,
                                "column": 37
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 38
                              },
                              "end": {
                                "row": 10,
                                "column": 51
                              },
                              "text": "batch_seq_len"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 10,
                                "column": 51
                              },
                              "end": {
                                "row": 10,
                                "column": 52
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 53
                              },
                              "end": {
                                "row": 10,
                                "column": 60
                              },
                              "text": "dropout"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 10,
                                "column": 60
                              },
                              "end": {
                                "row": 10,
                                "column": 61
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 10,
                                "column": 62
                              },
                              "end": {
                                "row": 10,
                                "column": 73
                              },
                              "text": "reuse=reuse",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 67
                                  },
                                  "text": "reuse"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 10,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 68
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 73
                                  },
                                  "text": "reuse"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 10,
                                "column": 73
                              },
                              "end": {
                                "row": 10,
                                "column": 74
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 56
              },
              "text": "# Compute the CTC loss using TensorFlow's `ctc_loss`"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 13,
                "column": 93
              },
              "text": "total_loss = tf.nn.ctc_loss(labels=batch_y, inputs=logits, sequence_length=batch_seq_len)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 13,
                    "column": 4
                  },
                  "end": {
                    "row": 13,
                    "column": 93
                  },
                  "text": "total_loss = tf.nn.ctc_loss(labels=batch_y, inputs=logits, sequence_length=batch_seq_len)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 4
                      },
                      "end": {
                        "row": 13,
                        "column": 14
                      },
                      "text": "total_loss"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 15
                      },
                      "end": {
                        "row": 13,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 13,
                        "column": 17
                      },
                      "end": {
                        "row": 13,
                        "column": 93
                      },
                      "text": "tf.nn.ctc_loss(labels=batch_y, inputs=logits, sequence_length=batch_seq_len)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 13,
                            "column": 17
                          },
                          "end": {
                            "row": 13,
                            "column": 31
                          },
                          "text": "tf.nn.ctc_loss",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 13,
                                "column": 17
                              },
                              "end": {
                                "row": 13,
                                "column": 22
                              },
                              "text": "tf.nn",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 19
                                  },
                                  "text": "tf"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 20
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 22
                                  },
                                  "text": "nn"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 13,
                                "column": 22
                              },
                              "end": {
                                "row": 13,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 23
                              },
                              "end": {
                                "row": 13,
                                "column": 31
                              },
                              "text": "ctc_loss"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 31
                          },
                          "end": {
                            "row": 13,
                            "column": 93
                          },
                          "text": "(labels=batch_y, inputs=logits, sequence_length=batch_seq_len)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 31
                              },
                              "end": {
                                "row": 13,
                                "column": 32
                              },
                              "text": "("
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 13,
                                "column": 32
                              },
                              "end": {
                                "row": 13,
                                "column": 46
                              },
                              "text": "labels=batch_y",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 38
                                  },
                                  "text": "labels"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 13,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 39
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 46
                                  },
                                  "text": "batch_y"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 13,
                                "column": 46
                              },
                              "end": {
                                "row": 13,
                                "column": 47
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 13,
                                "column": 48
                              },
                              "end": {
                                "row": 13,
                                "column": 61
                              },
                              "text": "inputs=logits",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 54
                                  },
                                  "text": "inputs"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 13,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 55
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 61
                                  },
                                  "text": "logits"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 13,
                                "column": 61
                              },
                              "end": {
                                "row": 13,
                                "column": 62
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 13,
                                "column": 63
                              },
                              "end": {
                                "row": 13,
                                "column": 92
                              },
                              "text": "sequence_length=batch_seq_len",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 78
                                  },
                                  "text": "sequence_length"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 13,
                                    "column": 78
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 79
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 79
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 92
                                  },
                                  "text": "batch_seq_len"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 92
                              },
                              "end": {
                                "row": 13,
                                "column": 93
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 49
              },
              "text": "# Calculate the average loss across the batch"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 41
              },
              "text": "avg_loss = tf.reduce_mean(total_loss)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 16,
                    "column": 4
                  },
                  "end": {
                    "row": 16,
                    "column": 41
                  },
                  "text": "avg_loss = tf.reduce_mean(total_loss)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 4
                      },
                      "end": {
                        "row": 16,
                        "column": 12
                      },
                      "text": "avg_loss"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 16,
                        "column": 13
                      },
                      "end": {
                        "row": 16,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 16,
                        "column": 15
                      },
                      "end": {
                        "row": 16,
                        "column": 41
                      },
                      "text": "tf.reduce_mean(total_loss)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 15
                          },
                          "end": {
                            "row": 16,
                            "column": 29
                          },
                          "text": "tf.reduce_mean",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 15
                              },
                              "end": {
                                "row": 16,
                                "column": 17
                              },
                              "text": "tf"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 17
                              },
                              "end": {
                                "row": 16,
                                "column": 18
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 18
                              },
                              "end": {
                                "row": 16,
                                "column": 29
                              },
                              "text": "reduce_mean"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 16,
                            "column": 29
                          },
                          "end": {
                            "row": 16,
                            "column": 41
                          },
                          "text": "(total_loss)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 16,
                                "column": 29
                              },
                              "end": {
                                "row": 16,
                                "column": 30
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 30
                              },
                              "end": {
                                "row": 16,
                                "column": 40
                              },
                              "text": "total_loss"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 40
                              },
                              "end": {
                                "row": 16,
                                "column": 41
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 40
              },
              "text": "# Finally we return the average loss"
            },
            {
              "type": "return_statement",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 19
              },
              "text": "return avg_loss",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 19,
                    "column": 4
                  },
                  "end": {
                    "row": 19,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 19,
                    "column": 11
                  },
                  "end": {
                    "row": 19,
                    "column": 19
                  },
                  "text": "avg_loss"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}