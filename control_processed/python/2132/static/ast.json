{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 195,
    "column": 49
  },
  "text": "def eval(expr, parser='pandas', engine=None, truediv=True,\n         local_dict=None, global_dict=None, resolvers=(), level=0,\n         target=None, inplace=False):\n    \"\"\"Evaluate a Python expression as a string using various backends.\n\n    The following arithmetic operations are supported: ``+``, ``-``, ``*``,\n    ``/``, ``**``, ``%``, ``//`` (python engine only) along with the following\n    boolean operations: ``|`` (or), ``&`` (and), and ``~`` (not).\n    Additionally, the ``'pandas'`` parser allows the use of :keyword:`and`,\n    :keyword:`or`, and :keyword:`not` with the same semantics as the\n    corresponding bitwise operators.  :class:`~pandas.Series` and\n    :class:`~pandas.DataFrame` objects are supported and behave as they would\n    with plain ol' Python evaluation.\n\n    Parameters\n    ----------\n    expr : str or unicode\n        The expression to evaluate. This string cannot contain any Python\n        `statements\n        <https://docs.python.org/3/reference/simple_stmts.html#simple-statements>`__,\n        only Python `expressions\n        <https://docs.python.org/3/reference/simple_stmts.html#expression-statements>`__.\n    parser : string, default 'pandas', {'pandas', 'python'}\n        The parser to use to construct the syntax tree from the expression. The\n        default of ``'pandas'`` parses code slightly different than standard\n        Python. Alternatively, you can parse an expression using the\n        ``'python'`` parser to retain strict Python semantics.  See the\n        :ref:`enhancing performance <enhancingperf.eval>` documentation for\n        more details.\n    engine : string or None, default 'numexpr', {'python', 'numexpr'}\n\n        The engine used to evaluate the expression. Supported engines are\n\n        - None         : tries to use ``numexpr``, falls back to ``python``\n        - ``'numexpr'``: This default engine evaluates pandas objects using\n                         numexpr for large speed ups in complex expressions\n                         with large frames.\n        - ``'python'``: Performs operations as if you had ``eval``'d in top\n                        level python. This engine is generally not that useful.\n\n        More backends may be available in the future.\n\n    truediv : bool, optional\n        Whether to use true division, like in Python >= 3\n    local_dict : dict or None, optional\n        A dictionary of local variables, taken from locals() by default.\n    global_dict : dict or None, optional\n        A dictionary of global variables, taken from globals() by default.\n    resolvers : list of dict-like or None, optional\n        A list of objects implementing the ``__getitem__`` special method that\n        you can use to inject an additional collection of namespaces to use for\n        variable lookup. For example, this is used in the\n        :meth:`~DataFrame.query` method to inject the\n        ``DataFrame.index`` and ``DataFrame.columns``\n        variables that refer to their respective :class:`~pandas.DataFrame`\n        instance attributes.\n    level : int, optional\n        The number of prior stack frames to traverse and add to the current\n        scope. Most users will **not** need to change this parameter.\n    target : object, optional, default None\n        This is the target object for assignment. It is used when there is\n        variable assignment in the expression. If so, then `target` must\n        support item assignment with string keys, and if a copy is being\n        returned, it must also support `.copy()`.\n    inplace : bool, default False\n        If `target` is provided, and the expression mutates `target`, whether\n        to modify `target` inplace. Otherwise, return a copy of `target` with\n        the mutation.\n\n    Returns\n    -------\n    ndarray, numeric scalar, DataFrame, Series\n\n    Raises\n    ------\n    ValueError\n        There are many instances where such an error can be raised:\n\n        - `target=None`, but the expression is multiline.\n        - The expression is multiline, but not all them have item assignment.\n          An example of such an arrangement is this:\n\n          a = b + 1\n          a + 2\n\n          Here, there are expressions on different lines, making it multiline,\n          but the last line has no variable assigned to the output of `a + 2`.\n        - `inplace=True`, but the expression is missing item assignment.\n        - Item assignment is provided, but the `target` does not support\n          string item assignment.\n        - Item assignment is provided and `inplace=False`, but the `target`\n          does not support the `.copy()` method\n\n    See Also\n    --------\n    DataFrame.query\n    DataFrame.eval\n\n    Notes\n    -----\n    The ``dtype`` of any objects involved in an arithmetic ``%`` operation are\n    recursively cast to ``float64``.\n\n    See the :ref:`enhancing performance <enhancingperf.eval>` documentation for\n    more details.\n    \"\"\"\n    from pandas.core.computation.expr import Expr\n\n    inplace = validate_bool_kwarg(inplace, \"inplace\")\n\n    if isinstance(expr, str):\n        _check_expression(expr)\n        exprs = [e.strip() for e in expr.splitlines() if e.strip() != '']\n    else:\n        exprs = [expr]\n    multi_line = len(exprs) > 1\n\n    if multi_line and target is None:\n        raise ValueError(\"multi-line expressions are only valid in the \"\n                         \"context of data, use DataFrame.eval\")\n\n    ret = None\n    first_expr = True\n    target_modified = False\n\n    for expr in exprs:\n        expr = _convert_expression(expr)\n        engine = _check_engine(engine)\n        _check_parser(parser)\n        _check_resolvers(resolvers)\n        _check_for_locals(expr, level, parser)\n\n        # get our (possibly passed-in) scope\n        env = _ensure_scope(level + 1, global_dict=global_dict,\n                            local_dict=local_dict, resolvers=resolvers,\n                            target=target)\n\n        parsed_expr = Expr(expr, engine=engine, parser=parser, env=env,\n                           truediv=truediv)\n\n        # construct the engine and evaluate the parsed expression\n        eng = _engines[engine]\n        eng_inst = eng(parsed_expr)\n        ret = eng_inst.evaluate()\n\n        if parsed_expr.assigner is None:\n            if multi_line:\n                raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")\n            elif inplace:\n                raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")\n\n        # assign if needed\n        assigner = parsed_expr.assigner\n        if env.target is not None and assigner is not None:\n            target_modified = True\n\n            # if returning a copy, copy only on the first assignment\n            if not inplace and first_expr:\n                try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")\n            else:\n                target = env.target\n\n            # TypeError is most commonly raised (e.g. int, list), but you\n            # get IndexError if you try to do this assignment on np.ndarray.\n            # we will ignore numpy warnings here; e.g. if trying\n            # to use a non-numeric indexer\n            try:\n                with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret\n            except (TypeError, IndexError):\n                raise ValueError(\"Cannot assign expression output to target\")\n\n            if not resolvers:\n                resolvers = ({assigner: ret},)\n            else:\n                # existing resolver needs updated to handle\n                # case of mutating existing column in copy\n                for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)\n\n            ret = None\n            first_expr = False\n\n    # We want to exclude `inplace=None` as being False.\n    if inplace is False:\n        return target if target_modified else ret",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 195,
        "column": 49
      },
      "text": "def eval(expr, parser='pandas', engine=None, truediv=True,\n         local_dict=None, global_dict=None, resolvers=(), level=0,\n         target=None, inplace=False):\n    \"\"\"Evaluate a Python expression as a string using various backends.\n\n    The following arithmetic operations are supported: ``+``, ``-``, ``*``,\n    ``/``, ``**``, ``%``, ``//`` (python engine only) along with the following\n    boolean operations: ``|`` (or), ``&`` (and), and ``~`` (not).\n    Additionally, the ``'pandas'`` parser allows the use of :keyword:`and`,\n    :keyword:`or`, and :keyword:`not` with the same semantics as the\n    corresponding bitwise operators.  :class:`~pandas.Series` and\n    :class:`~pandas.DataFrame` objects are supported and behave as they would\n    with plain ol' Python evaluation.\n\n    Parameters\n    ----------\n    expr : str or unicode\n        The expression to evaluate. This string cannot contain any Python\n        `statements\n        <https://docs.python.org/3/reference/simple_stmts.html#simple-statements>`__,\n        only Python `expressions\n        <https://docs.python.org/3/reference/simple_stmts.html#expression-statements>`__.\n    parser : string, default 'pandas', {'pandas', 'python'}\n        The parser to use to construct the syntax tree from the expression. The\n        default of ``'pandas'`` parses code slightly different than standard\n        Python. Alternatively, you can parse an expression using the\n        ``'python'`` parser to retain strict Python semantics.  See the\n        :ref:`enhancing performance <enhancingperf.eval>` documentation for\n        more details.\n    engine : string or None, default 'numexpr', {'python', 'numexpr'}\n\n        The engine used to evaluate the expression. Supported engines are\n\n        - None         : tries to use ``numexpr``, falls back to ``python``\n        - ``'numexpr'``: This default engine evaluates pandas objects using\n                         numexpr for large speed ups in complex expressions\n                         with large frames.\n        - ``'python'``: Performs operations as if you had ``eval``'d in top\n                        level python. This engine is generally not that useful.\n\n        More backends may be available in the future.\n\n    truediv : bool, optional\n        Whether to use true division, like in Python >= 3\n    local_dict : dict or None, optional\n        A dictionary of local variables, taken from locals() by default.\n    global_dict : dict or None, optional\n        A dictionary of global variables, taken from globals() by default.\n    resolvers : list of dict-like or None, optional\n        A list of objects implementing the ``__getitem__`` special method that\n        you can use to inject an additional collection of namespaces to use for\n        variable lookup. For example, this is used in the\n        :meth:`~DataFrame.query` method to inject the\n        ``DataFrame.index`` and ``DataFrame.columns``\n        variables that refer to their respective :class:`~pandas.DataFrame`\n        instance attributes.\n    level : int, optional\n        The number of prior stack frames to traverse and add to the current\n        scope. Most users will **not** need to change this parameter.\n    target : object, optional, default None\n        This is the target object for assignment. It is used when there is\n        variable assignment in the expression. If so, then `target` must\n        support item assignment with string keys, and if a copy is being\n        returned, it must also support `.copy()`.\n    inplace : bool, default False\n        If `target` is provided, and the expression mutates `target`, whether\n        to modify `target` inplace. Otherwise, return a copy of `target` with\n        the mutation.\n\n    Returns\n    -------\n    ndarray, numeric scalar, DataFrame, Series\n\n    Raises\n    ------\n    ValueError\n        There are many instances where such an error can be raised:\n\n        - `target=None`, but the expression is multiline.\n        - The expression is multiline, but not all them have item assignment.\n          An example of such an arrangement is this:\n\n          a = b + 1\n          a + 2\n\n          Here, there are expressions on different lines, making it multiline,\n          but the last line has no variable assigned to the output of `a + 2`.\n        - `inplace=True`, but the expression is missing item assignment.\n        - Item assignment is provided, but the `target` does not support\n          string item assignment.\n        - Item assignment is provided and `inplace=False`, but the `target`\n          does not support the `.copy()` method\n\n    See Also\n    --------\n    DataFrame.query\n    DataFrame.eval\n\n    Notes\n    -----\n    The ``dtype`` of any objects involved in an arithmetic ``%`` operation are\n    recursively cast to ``float64``.\n\n    See the :ref:`enhancing performance <enhancingperf.eval>` documentation for\n    more details.\n    \"\"\"\n    from pandas.core.computation.expr import Expr\n\n    inplace = validate_bool_kwarg(inplace, \"inplace\")\n\n    if isinstance(expr, str):\n        _check_expression(expr)\n        exprs = [e.strip() for e in expr.splitlines() if e.strip() != '']\n    else:\n        exprs = [expr]\n    multi_line = len(exprs) > 1\n\n    if multi_line and target is None:\n        raise ValueError(\"multi-line expressions are only valid in the \"\n                         \"context of data, use DataFrame.eval\")\n\n    ret = None\n    first_expr = True\n    target_modified = False\n\n    for expr in exprs:\n        expr = _convert_expression(expr)\n        engine = _check_engine(engine)\n        _check_parser(parser)\n        _check_resolvers(resolvers)\n        _check_for_locals(expr, level, parser)\n\n        # get our (possibly passed-in) scope\n        env = _ensure_scope(level + 1, global_dict=global_dict,\n                            local_dict=local_dict, resolvers=resolvers,\n                            target=target)\n\n        parsed_expr = Expr(expr, engine=engine, parser=parser, env=env,\n                           truediv=truediv)\n\n        # construct the engine and evaluate the parsed expression\n        eng = _engines[engine]\n        eng_inst = eng(parsed_expr)\n        ret = eng_inst.evaluate()\n\n        if parsed_expr.assigner is None:\n            if multi_line:\n                raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")\n            elif inplace:\n                raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")\n\n        # assign if needed\n        assigner = parsed_expr.assigner\n        if env.target is not None and assigner is not None:\n            target_modified = True\n\n            # if returning a copy, copy only on the first assignment\n            if not inplace and first_expr:\n                try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")\n            else:\n                target = env.target\n\n            # TypeError is most commonly raised (e.g. int, list), but you\n            # get IndexError if you try to do this assignment on np.ndarray.\n            # we will ignore numpy warnings here; e.g. if trying\n            # to use a non-numeric indexer\n            try:\n                with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret\n            except (TypeError, IndexError):\n                raise ValueError(\"Cannot assign expression output to target\")\n\n            if not resolvers:\n                resolvers = ({assigner: ret},)\n            else:\n                # existing resolver needs updated to handle\n                # case of mutating existing column in copy\n                for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)\n\n            ret = None\n            first_expr = False\n\n    # We want to exclude `inplace=None` as being False.\n    if inplace is False:\n        return target if target_modified else ret",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "eval"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 2,
            "column": 36
          },
          "text": "(expr, parser='pandas', engine=None, truediv=True,\n         local_dict=None, global_dict=None, resolvers=(), level=0,\n         target=None, inplace=False)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "expr"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "parser='pandas'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 15
                  },
                  "end": {
                    "row": 0,
                    "column": 21
                  },
                  "text": "parser"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 21
                  },
                  "end": {
                    "row": 0,
                    "column": 22
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 0,
                    "column": 22
                  },
                  "end": {
                    "row": 0,
                    "column": 30
                  },
                  "text": "'pandas'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 0,
                        "column": 22
                      },
                      "end": {
                        "row": 0,
                        "column": 23
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 0,
                        "column": 23
                      },
                      "end": {
                        "row": 0,
                        "column": 29
                      },
                      "text": "pandas"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 0,
                        "column": 29
                      },
                      "end": {
                        "row": 0,
                        "column": 30
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": "engine=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 38
                  },
                  "text": "engine"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 38
                  },
                  "end": {
                    "row": 0,
                    "column": 39
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 39
                  },
                  "end": {
                    "row": 0,
                    "column": 43
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 43
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 57
              },
              "text": "truediv=True",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 45
                  },
                  "end": {
                    "row": 0,
                    "column": 52
                  },
                  "text": "truediv"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 52
                  },
                  "end": {
                    "row": 0,
                    "column": 53
                  },
                  "text": "="
                },
                {
                  "type": "true",
                  "start": {
                    "row": 0,
                    "column": 53
                  },
                  "end": {
                    "row": 0,
                    "column": 57
                  },
                  "text": "True"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 57
              },
              "end": {
                "row": 0,
                "column": 58
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 9
              },
              "end": {
                "row": 1,
                "column": 24
              },
              "text": "local_dict=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 9
                  },
                  "end": {
                    "row": 1,
                    "column": 19
                  },
                  "text": "local_dict"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 19
                  },
                  "end": {
                    "row": 1,
                    "column": 20
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 1,
                    "column": 20
                  },
                  "end": {
                    "row": 1,
                    "column": 24
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 24
              },
              "end": {
                "row": 1,
                "column": 25
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 26
              },
              "end": {
                "row": 1,
                "column": 42
              },
              "text": "global_dict=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 26
                  },
                  "end": {
                    "row": 1,
                    "column": 37
                  },
                  "text": "global_dict"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 37
                  },
                  "end": {
                    "row": 1,
                    "column": 38
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 1,
                    "column": 38
                  },
                  "end": {
                    "row": 1,
                    "column": 42
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 42
              },
              "end": {
                "row": 1,
                "column": 43
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 44
              },
              "end": {
                "row": 1,
                "column": 56
              },
              "text": "resolvers=()",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 44
                  },
                  "end": {
                    "row": 1,
                    "column": 53
                  },
                  "text": "resolvers"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 53
                  },
                  "end": {
                    "row": 1,
                    "column": 54
                  },
                  "text": "="
                },
                {
                  "type": "tuple",
                  "start": {
                    "row": 1,
                    "column": 54
                  },
                  "end": {
                    "row": 1,
                    "column": 56
                  },
                  "text": "()",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 1,
                        "column": 54
                      },
                      "end": {
                        "row": 1,
                        "column": 55
                      },
                      "text": "("
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 1,
                        "column": 55
                      },
                      "end": {
                        "row": 1,
                        "column": 56
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 56
              },
              "end": {
                "row": 1,
                "column": 57
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 58
              },
              "end": {
                "row": 1,
                "column": 65
              },
              "text": "level=0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 58
                  },
                  "end": {
                    "row": 1,
                    "column": 63
                  },
                  "text": "level"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 63
                  },
                  "end": {
                    "row": 1,
                    "column": 64
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 1,
                    "column": 64
                  },
                  "end": {
                    "row": 1,
                    "column": 65
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 65
              },
              "end": {
                "row": 1,
                "column": 66
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 9
              },
              "end": {
                "row": 2,
                "column": 20
              },
              "text": "target=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 9
                  },
                  "end": {
                    "row": 2,
                    "column": 15
                  },
                  "text": "target"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 15
                  },
                  "end": {
                    "row": 2,
                    "column": 16
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 2,
                    "column": 16
                  },
                  "end": {
                    "row": 2,
                    "column": 20
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 20
              },
              "end": {
                "row": 2,
                "column": 21
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 22
              },
              "end": {
                "row": 2,
                "column": 35
              },
              "text": "inplace=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 22
                  },
                  "end": {
                    "row": 2,
                    "column": 29
                  },
                  "text": "inplace"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 29
                  },
                  "end": {
                    "row": 2,
                    "column": 30
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 2,
                    "column": 30
                  },
                  "end": {
                    "row": 2,
                    "column": 35
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 2,
                "column": 35
              },
              "end": {
                "row": 2,
                "column": 36
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 2,
            "column": 36
          },
          "end": {
            "row": 2,
            "column": 37
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 3,
            "column": 4
          },
          "end": {
            "row": 195,
            "column": 49
          },
          "text": "\"\"\"Evaluate a Python expression as a string using various backends.\n\n    The following arithmetic operations are supported: ``+``, ``-``, ``*``,\n    ``/``, ``**``, ``%``, ``//`` (python engine only) along with the following\n    boolean operations: ``|`` (or), ``&`` (and), and ``~`` (not).\n    Additionally, the ``'pandas'`` parser allows the use of :keyword:`and`,\n    :keyword:`or`, and :keyword:`not` with the same semantics as the\n    corresponding bitwise operators.  :class:`~pandas.Series` and\n    :class:`~pandas.DataFrame` objects are supported and behave as they would\n    with plain ol' Python evaluation.\n\n    Parameters\n    ----------\n    expr : str or unicode\n        The expression to evaluate. This string cannot contain any Python\n        `statements\n        <https://docs.python.org/3/reference/simple_stmts.html#simple-statements>`__,\n        only Python `expressions\n        <https://docs.python.org/3/reference/simple_stmts.html#expression-statements>`__.\n    parser : string, default 'pandas', {'pandas', 'python'}\n        The parser to use to construct the syntax tree from the expression. The\n        default of ``'pandas'`` parses code slightly different than standard\n        Python. Alternatively, you can parse an expression using the\n        ``'python'`` parser to retain strict Python semantics.  See the\n        :ref:`enhancing performance <enhancingperf.eval>` documentation for\n        more details.\n    engine : string or None, default 'numexpr', {'python', 'numexpr'}\n\n        The engine used to evaluate the expression. Supported engines are\n\n        - None         : tries to use ``numexpr``, falls back to ``python``\n        - ``'numexpr'``: This default engine evaluates pandas objects using\n                         numexpr for large speed ups in complex expressions\n                         with large frames.\n        - ``'python'``: Performs operations as if you had ``eval``'d in top\n                        level python. This engine is generally not that useful.\n\n        More backends may be available in the future.\n\n    truediv : bool, optional\n        Whether to use true division, like in Python >= 3\n    local_dict : dict or None, optional\n        A dictionary of local variables, taken from locals() by default.\n    global_dict : dict or None, optional\n        A dictionary of global variables, taken from globals() by default.\n    resolvers : list of dict-like or None, optional\n        A list of objects implementing the ``__getitem__`` special method that\n        you can use to inject an additional collection of namespaces to use for\n        variable lookup. For example, this is used in the\n        :meth:`~DataFrame.query` method to inject the\n        ``DataFrame.index`` and ``DataFrame.columns``\n        variables that refer to their respective :class:`~pandas.DataFrame`\n        instance attributes.\n    level : int, optional\n        The number of prior stack frames to traverse and add to the current\n        scope. Most users will **not** need to change this parameter.\n    target : object, optional, default None\n        This is the target object for assignment. It is used when there is\n        variable assignment in the expression. If so, then `target` must\n        support item assignment with string keys, and if a copy is being\n        returned, it must also support `.copy()`.\n    inplace : bool, default False\n        If `target` is provided, and the expression mutates `target`, whether\n        to modify `target` inplace. Otherwise, return a copy of `target` with\n        the mutation.\n\n    Returns\n    -------\n    ndarray, numeric scalar, DataFrame, Series\n\n    Raises\n    ------\n    ValueError\n        There are many instances where such an error can be raised:\n\n        - `target=None`, but the expression is multiline.\n        - The expression is multiline, but not all them have item assignment.\n          An example of such an arrangement is this:\n\n          a = b + 1\n          a + 2\n\n          Here, there are expressions on different lines, making it multiline,\n          but the last line has no variable assigned to the output of `a + 2`.\n        - `inplace=True`, but the expression is missing item assignment.\n        - Item assignment is provided, but the `target` does not support\n          string item assignment.\n        - Item assignment is provided and `inplace=False`, but the `target`\n          does not support the `.copy()` method\n\n    See Also\n    --------\n    DataFrame.query\n    DataFrame.eval\n\n    Notes\n    -----\n    The ``dtype`` of any objects involved in an arithmetic ``%`` operation are\n    recursively cast to ``float64``.\n\n    See the :ref:`enhancing performance <enhancingperf.eval>` documentation for\n    more details.\n    \"\"\"\n    from pandas.core.computation.expr import Expr\n\n    inplace = validate_bool_kwarg(inplace, \"inplace\")\n\n    if isinstance(expr, str):\n        _check_expression(expr)\n        exprs = [e.strip() for e in expr.splitlines() if e.strip() != '']\n    else:\n        exprs = [expr]\n    multi_line = len(exprs) > 1\n\n    if multi_line and target is None:\n        raise ValueError(\"multi-line expressions are only valid in the \"\n                         \"context of data, use DataFrame.eval\")\n\n    ret = None\n    first_expr = True\n    target_modified = False\n\n    for expr in exprs:\n        expr = _convert_expression(expr)\n        engine = _check_engine(engine)\n        _check_parser(parser)\n        _check_resolvers(resolvers)\n        _check_for_locals(expr, level, parser)\n\n        # get our (possibly passed-in) scope\n        env = _ensure_scope(level + 1, global_dict=global_dict,\n                            local_dict=local_dict, resolvers=resolvers,\n                            target=target)\n\n        parsed_expr = Expr(expr, engine=engine, parser=parser, env=env,\n                           truediv=truediv)\n\n        # construct the engine and evaluate the parsed expression\n        eng = _engines[engine]\n        eng_inst = eng(parsed_expr)\n        ret = eng_inst.evaluate()\n\n        if parsed_expr.assigner is None:\n            if multi_line:\n                raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")\n            elif inplace:\n                raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")\n\n        # assign if needed\n        assigner = parsed_expr.assigner\n        if env.target is not None and assigner is not None:\n            target_modified = True\n\n            # if returning a copy, copy only on the first assignment\n            if not inplace and first_expr:\n                try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")\n            else:\n                target = env.target\n\n            # TypeError is most commonly raised (e.g. int, list), but you\n            # get IndexError if you try to do this assignment on np.ndarray.\n            # we will ignore numpy warnings here; e.g. if trying\n            # to use a non-numeric indexer\n            try:\n                with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret\n            except (TypeError, IndexError):\n                raise ValueError(\"Cannot assign expression output to target\")\n\n            if not resolvers:\n                resolvers = ({assigner: ret},)\n            else:\n                # existing resolver needs updated to handle\n                # case of mutating existing column in copy\n                for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)\n\n            ret = None\n            first_expr = False\n\n    # We want to exclude `inplace=None` as being False.\n    if inplace is False:\n        return target if target_modified else ret",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 105,
                "column": 7
              },
              "text": "\"\"\"Evaluate a Python expression as a string using various backends.\n\n    The following arithmetic operations are supported: ``+``, ``-``, ``*``,\n    ``/``, ``**``, ``%``, ``//`` (python engine only) along with the following\n    boolean operations: ``|`` (or), ``&`` (and), and ``~`` (not).\n    Additionally, the ``'pandas'`` parser allows the use of :keyword:`and`,\n    :keyword:`or`, and :keyword:`not` with the same semantics as the\n    corresponding bitwise operators.  :class:`~pandas.Series` and\n    :class:`~pandas.DataFrame` objects are supported and behave as they would\n    with plain ol' Python evaluation.\n\n    Parameters\n    ----------\n    expr : str or unicode\n        The expression to evaluate. This string cannot contain any Python\n        `statements\n        <https://docs.python.org/3/reference/simple_stmts.html#simple-statements>`__,\n        only Python `expressions\n        <https://docs.python.org/3/reference/simple_stmts.html#expression-statements>`__.\n    parser : string, default 'pandas', {'pandas', 'python'}\n        The parser to use to construct the syntax tree from the expression. The\n        default of ``'pandas'`` parses code slightly different than standard\n        Python. Alternatively, you can parse an expression using the\n        ``'python'`` parser to retain strict Python semantics.  See the\n        :ref:`enhancing performance <enhancingperf.eval>` documentation for\n        more details.\n    engine : string or None, default 'numexpr', {'python', 'numexpr'}\n\n        The engine used to evaluate the expression. Supported engines are\n\n        - None         : tries to use ``numexpr``, falls back to ``python``\n        - ``'numexpr'``: This default engine evaluates pandas objects using\n                         numexpr for large speed ups in complex expressions\n                         with large frames.\n        - ``'python'``: Performs operations as if you had ``eval``'d in top\n                        level python. This engine is generally not that useful.\n\n        More backends may be available in the future.\n\n    truediv : bool, optional\n        Whether to use true division, like in Python >= 3\n    local_dict : dict or None, optional\n        A dictionary of local variables, taken from locals() by default.\n    global_dict : dict or None, optional\n        A dictionary of global variables, taken from globals() by default.\n    resolvers : list of dict-like or None, optional\n        A list of objects implementing the ``__getitem__`` special method that\n        you can use to inject an additional collection of namespaces to use for\n        variable lookup. For example, this is used in the\n        :meth:`~DataFrame.query` method to inject the\n        ``DataFrame.index`` and ``DataFrame.columns``\n        variables that refer to their respective :class:`~pandas.DataFrame`\n        instance attributes.\n    level : int, optional\n        The number of prior stack frames to traverse and add to the current\n        scope. Most users will **not** need to change this parameter.\n    target : object, optional, default None\n        This is the target object for assignment. It is used when there is\n        variable assignment in the expression. If so, then `target` must\n        support item assignment with string keys, and if a copy is being\n        returned, it must also support `.copy()`.\n    inplace : bool, default False\n        If `target` is provided, and the expression mutates `target`, whether\n        to modify `target` inplace. Otherwise, return a copy of `target` with\n        the mutation.\n\n    Returns\n    -------\n    ndarray, numeric scalar, DataFrame, Series\n\n    Raises\n    ------\n    ValueError\n        There are many instances where such an error can be raised:\n\n        - `target=None`, but the expression is multiline.\n        - The expression is multiline, but not all them have item assignment.\n          An example of such an arrangement is this:\n\n          a = b + 1\n          a + 2\n\n          Here, there are expressions on different lines, making it multiline,\n          but the last line has no variable assigned to the output of `a + 2`.\n        - `inplace=True`, but the expression is missing item assignment.\n        - Item assignment is provided, but the `target` does not support\n          string item assignment.\n        - Item assignment is provided and `inplace=False`, but the `target`\n          does not support the `.copy()` method\n\n    See Also\n    --------\n    DataFrame.query\n    DataFrame.eval\n\n    Notes\n    -----\n    The ``dtype`` of any objects involved in an arithmetic ``%`` operation are\n    recursively cast to ``float64``.\n\n    See the :ref:`enhancing performance <enhancingperf.eval>` documentation for\n    more details.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 3,
                    "column": 4
                  },
                  "end": {
                    "row": 105,
                    "column": 7
                  },
                  "text": "\"\"\"Evaluate a Python expression as a string using various backends.\n\n    The following arithmetic operations are supported: ``+``, ``-``, ``*``,\n    ``/``, ``**``, ``%``, ``//`` (python engine only) along with the following\n    boolean operations: ``|`` (or), ``&`` (and), and ``~`` (not).\n    Additionally, the ``'pandas'`` parser allows the use of :keyword:`and`,\n    :keyword:`or`, and :keyword:`not` with the same semantics as the\n    corresponding bitwise operators.  :class:`~pandas.Series` and\n    :class:`~pandas.DataFrame` objects are supported and behave as they would\n    with plain ol' Python evaluation.\n\n    Parameters\n    ----------\n    expr : str or unicode\n        The expression to evaluate. This string cannot contain any Python\n        `statements\n        <https://docs.python.org/3/reference/simple_stmts.html#simple-statements>`__,\n        only Python `expressions\n        <https://docs.python.org/3/reference/simple_stmts.html#expression-statements>`__.\n    parser : string, default 'pandas', {'pandas', 'python'}\n        The parser to use to construct the syntax tree from the expression. The\n        default of ``'pandas'`` parses code slightly different than standard\n        Python. Alternatively, you can parse an expression using the\n        ``'python'`` parser to retain strict Python semantics.  See the\n        :ref:`enhancing performance <enhancingperf.eval>` documentation for\n        more details.\n    engine : string or None, default 'numexpr', {'python', 'numexpr'}\n\n        The engine used to evaluate the expression. Supported engines are\n\n        - None         : tries to use ``numexpr``, falls back to ``python``\n        - ``'numexpr'``: This default engine evaluates pandas objects using\n                         numexpr for large speed ups in complex expressions\n                         with large frames.\n        - ``'python'``: Performs operations as if you had ``eval``'d in top\n                        level python. This engine is generally not that useful.\n\n        More backends may be available in the future.\n\n    truediv : bool, optional\n        Whether to use true division, like in Python >= 3\n    local_dict : dict or None, optional\n        A dictionary of local variables, taken from locals() by default.\n    global_dict : dict or None, optional\n        A dictionary of global variables, taken from globals() by default.\n    resolvers : list of dict-like or None, optional\n        A list of objects implementing the ``__getitem__`` special method that\n        you can use to inject an additional collection of namespaces to use for\n        variable lookup. For example, this is used in the\n        :meth:`~DataFrame.query` method to inject the\n        ``DataFrame.index`` and ``DataFrame.columns``\n        variables that refer to their respective :class:`~pandas.DataFrame`\n        instance attributes.\n    level : int, optional\n        The number of prior stack frames to traverse and add to the current\n        scope. Most users will **not** need to change this parameter.\n    target : object, optional, default None\n        This is the target object for assignment. It is used when there is\n        variable assignment in the expression. If so, then `target` must\n        support item assignment with string keys, and if a copy is being\n        returned, it must also support `.copy()`.\n    inplace : bool, default False\n        If `target` is provided, and the expression mutates `target`, whether\n        to modify `target` inplace. Otherwise, return a copy of `target` with\n        the mutation.\n\n    Returns\n    -------\n    ndarray, numeric scalar, DataFrame, Series\n\n    Raises\n    ------\n    ValueError\n        There are many instances where such an error can be raised:\n\n        - `target=None`, but the expression is multiline.\n        - The expression is multiline, but not all them have item assignment.\n          An example of such an arrangement is this:\n\n          a = b + 1\n          a + 2\n\n          Here, there are expressions on different lines, making it multiline,\n          but the last line has no variable assigned to the output of `a + 2`.\n        - `inplace=True`, but the expression is missing item assignment.\n        - Item assignment is provided, but the `target` does not support\n          string item assignment.\n        - Item assignment is provided and `inplace=False`, but the `target`\n          does not support the `.copy()` method\n\n    See Also\n    --------\n    DataFrame.query\n    DataFrame.eval\n\n    Notes\n    -----\n    The ``dtype`` of any objects involved in an arithmetic ``%`` operation are\n    recursively cast to ``float64``.\n\n    See the :ref:`enhancing performance <enhancingperf.eval>` documentation for\n    more details.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 3,
                        "column": 4
                      },
                      "end": {
                        "row": 3,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 3,
                        "column": 7
                      },
                      "end": {
                        "row": 105,
                        "column": 4
                      },
                      "text": "Evaluate a Python expression as a string using various backends.\n\n    The following arithmetic operations are supported: ``+``, ``-``, ``*``,\n    ``/``, ``**``, ``%``, ``//`` (python engine only) along with the following\n    boolean operations: ``|`` (or), ``&`` (and), and ``~`` (not).\n    Additionally, the ``'pandas'`` parser allows the use of :keyword:`and`,\n    :keyword:`or`, and :keyword:`not` with the same semantics as the\n    corresponding bitwise operators.  :class:`~pandas.Series` and\n    :class:`~pandas.DataFrame` objects are supported and behave as they would\n    with plain ol' Python evaluation.\n\n    Parameters\n    ----------\n    expr : str or unicode\n        The expression to evaluate. This string cannot contain any Python\n        `statements\n        <https://docs.python.org/3/reference/simple_stmts.html#simple-statements>`__,\n        only Python `expressions\n        <https://docs.python.org/3/reference/simple_stmts.html#expression-statements>`__.\n    parser : string, default 'pandas', {'pandas', 'python'}\n        The parser to use to construct the syntax tree from the expression. The\n        default of ``'pandas'`` parses code slightly different than standard\n        Python. Alternatively, you can parse an expression using the\n        ``'python'`` parser to retain strict Python semantics.  See the\n        :ref:`enhancing performance <enhancingperf.eval>` documentation for\n        more details.\n    engine : string or None, default 'numexpr', {'python', 'numexpr'}\n\n        The engine used to evaluate the expression. Supported engines are\n\n        - None         : tries to use ``numexpr``, falls back to ``python``\n        - ``'numexpr'``: This default engine evaluates pandas objects using\n                         numexpr for large speed ups in complex expressions\n                         with large frames.\n        - ``'python'``: Performs operations as if you had ``eval``'d in top\n                        level python. This engine is generally not that useful.\n\n        More backends may be available in the future.\n\n    truediv : bool, optional\n        Whether to use true division, like in Python >= 3\n    local_dict : dict or None, optional\n        A dictionary of local variables, taken from locals() by default.\n    global_dict : dict or None, optional\n        A dictionary of global variables, taken from globals() by default.\n    resolvers : list of dict-like or None, optional\n        A list of objects implementing the ``__getitem__`` special method that\n        you can use to inject an additional collection of namespaces to use for\n        variable lookup. For example, this is used in the\n        :meth:`~DataFrame.query` method to inject the\n        ``DataFrame.index`` and ``DataFrame.columns``\n        variables that refer to their respective :class:`~pandas.DataFrame`\n        instance attributes.\n    level : int, optional\n        The number of prior stack frames to traverse and add to the current\n        scope. Most users will **not** need to change this parameter.\n    target : object, optional, default None\n        This is the target object for assignment. It is used when there is\n        variable assignment in the expression. If so, then `target` must\n        support item assignment with string keys, and if a copy is being\n        returned, it must also support `.copy()`.\n    inplace : bool, default False\n        If `target` is provided, and the expression mutates `target`, whether\n        to modify `target` inplace. Otherwise, return a copy of `target` with\n        the mutation.\n\n    Returns\n    -------\n    ndarray, numeric scalar, DataFrame, Series\n\n    Raises\n    ------\n    ValueError\n        There are many instances where such an error can be raised:\n\n        - `target=None`, but the expression is multiline.\n        - The expression is multiline, but not all them have item assignment.\n          An example of such an arrangement is this:\n\n          a = b + 1\n          a + 2\n\n          Here, there are expressions on different lines, making it multiline,\n          but the last line has no variable assigned to the output of `a + 2`.\n        - `inplace=True`, but the expression is missing item assignment.\n        - Item assignment is provided, but the `target` does not support\n          string item assignment.\n        - Item assignment is provided and `inplace=False`, but the `target`\n          does not support the `.copy()` method\n\n    See Also\n    --------\n    DataFrame.query\n    DataFrame.eval\n\n    Notes\n    -----\n    The ``dtype`` of any objects involved in an arithmetic ``%`` operation are\n    recursively cast to ``float64``.\n\n    See the :ref:`enhancing performance <enhancingperf.eval>` documentation for\n    more details.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 105,
                        "column": 4
                      },
                      "end": {
                        "row": 105,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "import_from_statement",
              "start": {
                "row": 106,
                "column": 4
              },
              "end": {
                "row": 106,
                "column": 49
              },
              "text": "from pandas.core.computation.expr import Expr",
              "children": [
                {
                  "type": "from",
                  "start": {
                    "row": 106,
                    "column": 4
                  },
                  "end": {
                    "row": 106,
                    "column": 8
                  },
                  "text": "from"
                },
                {
                  "type": "dotted_name",
                  "start": {
                    "row": 106,
                    "column": 9
                  },
                  "end": {
                    "row": 106,
                    "column": 37
                  },
                  "text": "pandas.core.computation.expr",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 106,
                        "column": 9
                      },
                      "end": {
                        "row": 106,
                        "column": 15
                      },
                      "text": "pandas"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 106,
                        "column": 15
                      },
                      "end": {
                        "row": 106,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 106,
                        "column": 16
                      },
                      "end": {
                        "row": 106,
                        "column": 20
                      },
                      "text": "core"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 106,
                        "column": 20
                      },
                      "end": {
                        "row": 106,
                        "column": 21
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 106,
                        "column": 21
                      },
                      "end": {
                        "row": 106,
                        "column": 32
                      },
                      "text": "computation"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 106,
                        "column": 32
                      },
                      "end": {
                        "row": 106,
                        "column": 33
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 106,
                        "column": 33
                      },
                      "end": {
                        "row": 106,
                        "column": 37
                      },
                      "text": "expr"
                    }
                  ]
                },
                {
                  "type": "import",
                  "start": {
                    "row": 106,
                    "column": 38
                  },
                  "end": {
                    "row": 106,
                    "column": 44
                  },
                  "text": "import"
                },
                {
                  "type": "dotted_name",
                  "start": {
                    "row": 106,
                    "column": 45
                  },
                  "end": {
                    "row": 106,
                    "column": 49
                  },
                  "text": "Expr",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 106,
                        "column": 45
                      },
                      "end": {
                        "row": 106,
                        "column": 49
                      },
                      "text": "Expr"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 108,
                "column": 4
              },
              "end": {
                "row": 108,
                "column": 53
              },
              "text": "inplace = validate_bool_kwarg(inplace, \"inplace\")",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 108,
                    "column": 4
                  },
                  "end": {
                    "row": 108,
                    "column": 53
                  },
                  "text": "inplace = validate_bool_kwarg(inplace, \"inplace\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 108,
                        "column": 4
                      },
                      "end": {
                        "row": 108,
                        "column": 11
                      },
                      "text": "inplace"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 108,
                        "column": 12
                      },
                      "end": {
                        "row": 108,
                        "column": 13
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 108,
                        "column": 14
                      },
                      "end": {
                        "row": 108,
                        "column": 53
                      },
                      "text": "validate_bool_kwarg(inplace, \"inplace\")",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 108,
                            "column": 14
                          },
                          "end": {
                            "row": 108,
                            "column": 33
                          },
                          "text": "validate_bool_kwarg"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 108,
                            "column": 33
                          },
                          "end": {
                            "row": 108,
                            "column": 53
                          },
                          "text": "(inplace, \"inplace\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 108,
                                "column": 33
                              },
                              "end": {
                                "row": 108,
                                "column": 34
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 108,
                                "column": 34
                              },
                              "end": {
                                "row": 108,
                                "column": 41
                              },
                              "text": "inplace"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 108,
                                "column": 41
                              },
                              "end": {
                                "row": 108,
                                "column": 42
                              },
                              "text": ","
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 108,
                                "column": 43
                              },
                              "end": {
                                "row": 108,
                                "column": 52
                              },
                              "text": "\"inplace\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 108,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 108,
                                    "column": 44
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 108,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 108,
                                    "column": 51
                                  },
                                  "text": "inplace"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 108,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 108,
                                    "column": 52
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 108,
                                "column": 52
                              },
                              "end": {
                                "row": 108,
                                "column": 53
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 110,
                "column": 4
              },
              "end": {
                "row": 114,
                "column": 22
              },
              "text": "if isinstance(expr, str):\n        _check_expression(expr)\n        exprs = [e.strip() for e in expr.splitlines() if e.strip() != '']\n    else:\n        exprs = [expr]",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 110,
                    "column": 4
                  },
                  "end": {
                    "row": 110,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 110,
                    "column": 7
                  },
                  "end": {
                    "row": 110,
                    "column": 28
                  },
                  "text": "isinstance(expr, str)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 110,
                        "column": 7
                      },
                      "end": {
                        "row": 110,
                        "column": 17
                      },
                      "text": "isinstance"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 110,
                        "column": 17
                      },
                      "end": {
                        "row": 110,
                        "column": 28
                      },
                      "text": "(expr, str)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 110,
                            "column": 17
                          },
                          "end": {
                            "row": 110,
                            "column": 18
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 110,
                            "column": 18
                          },
                          "end": {
                            "row": 110,
                            "column": 22
                          },
                          "text": "expr"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 110,
                            "column": 22
                          },
                          "end": {
                            "row": 110,
                            "column": 23
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 110,
                            "column": 24
                          },
                          "end": {
                            "row": 110,
                            "column": 27
                          },
                          "text": "str"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 110,
                            "column": 27
                          },
                          "end": {
                            "row": 110,
                            "column": 28
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 110,
                    "column": 28
                  },
                  "end": {
                    "row": 110,
                    "column": 29
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 111,
                    "column": 8
                  },
                  "end": {
                    "row": 112,
                    "column": 73
                  },
                  "text": "_check_expression(expr)\n        exprs = [e.strip() for e in expr.splitlines() if e.strip() != '']",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 111,
                        "column": 8
                      },
                      "end": {
                        "row": 111,
                        "column": 31
                      },
                      "text": "_check_expression(expr)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 111,
                            "column": 8
                          },
                          "end": {
                            "row": 111,
                            "column": 31
                          },
                          "text": "_check_expression(expr)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 111,
                                "column": 8
                              },
                              "end": {
                                "row": 111,
                                "column": 25
                              },
                              "text": "_check_expression"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 111,
                                "column": 25
                              },
                              "end": {
                                "row": 111,
                                "column": 31
                              },
                              "text": "(expr)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 111,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 111,
                                    "column": 26
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 111,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 111,
                                    "column": 30
                                  },
                                  "text": "expr"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 111,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 111,
                                    "column": 31
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 112,
                        "column": 8
                      },
                      "end": {
                        "row": 112,
                        "column": 73
                      },
                      "text": "exprs = [e.strip() for e in expr.splitlines() if e.strip() != '']",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 112,
                            "column": 8
                          },
                          "end": {
                            "row": 112,
                            "column": 73
                          },
                          "text": "exprs = [e.strip() for e in expr.splitlines() if e.strip() != '']",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 112,
                                "column": 8
                              },
                              "end": {
                                "row": 112,
                                "column": 13
                              },
                              "text": "exprs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 112,
                                "column": 14
                              },
                              "end": {
                                "row": 112,
                                "column": 15
                              },
                              "text": "="
                            },
                            {
                              "type": "list_comprehension",
                              "start": {
                                "row": 112,
                                "column": 16
                              },
                              "end": {
                                "row": 112,
                                "column": 73
                              },
                              "text": "[e.strip() for e in expr.splitlines() if e.strip() != '']",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 112,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 112,
                                    "column": 17
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 112,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 112,
                                    "column": 26
                                  },
                                  "text": "e.strip()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 112,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 112,
                                        "column": 24
                                      },
                                      "text": "e.strip",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 112,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 18
                                          },
                                          "text": "e"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 112,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 19
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 112,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 24
                                          },
                                          "text": "strip"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 112,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 112,
                                        "column": 26
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 112,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 25
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 112,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 26
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "for_in_clause",
                                  "start": {
                                    "row": 112,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 112,
                                    "column": 53
                                  },
                                  "text": "for e in expr.splitlines()",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start": {
                                        "row": 112,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 112,
                                        "column": 30
                                      },
                                      "text": "for"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 112,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 112,
                                        "column": 32
                                      },
                                      "text": "e"
                                    },
                                    {
                                      "type": "in",
                                      "start": {
                                        "row": 112,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 112,
                                        "column": 35
                                      },
                                      "text": "in"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 112,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 112,
                                        "column": 53
                                      },
                                      "text": "expr.splitlines()",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 112,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 51
                                          },
                                          "text": "expr.splitlines",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 112,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 40
                                              },
                                              "text": "expr"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 112,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 41
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 112,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 51
                                              },
                                              "text": "splitlines"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 112,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 53
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 112,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 52
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 112,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 53
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "if_clause",
                                  "start": {
                                    "row": 112,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 112,
                                    "column": 72
                                  },
                                  "text": "if e.strip() != ''",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 112,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 112,
                                        "column": 56
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 112,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 112,
                                        "column": 72
                                      },
                                      "text": "e.strip() != ''",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 112,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 66
                                          },
                                          "text": "e.strip()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 112,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 64
                                              },
                                              "text": "e.strip",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 112,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 112,
                                                    "column": 58
                                                  },
                                                  "text": "e"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 112,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 112,
                                                    "column": 59
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 112,
                                                    "column": 59
                                                  },
                                                  "end": {
                                                    "row": 112,
                                                    "column": 64
                                                  },
                                                  "text": "strip"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 112,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 66
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 112,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 112,
                                                    "column": 65
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 112,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 112,
                                                    "column": 66
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "!=",
                                          "start": {
                                            "row": 112,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 69
                                          },
                                          "text": "!="
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 112,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 112,
                                            "column": 72
                                          },
                                          "text": "''",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 112,
                                                "column": 70
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 71
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 112,
                                                "column": 71
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 72
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 112,
                                    "column": 72
                                  },
                                  "end": {
                                    "row": 112,
                                    "column": 73
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 113,
                    "column": 4
                  },
                  "end": {
                    "row": 114,
                    "column": 22
                  },
                  "text": "else:\n        exprs = [expr]",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 113,
                        "column": 4
                      },
                      "end": {
                        "row": 113,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 113,
                        "column": 8
                      },
                      "end": {
                        "row": 113,
                        "column": 9
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 114,
                        "column": 8
                      },
                      "end": {
                        "row": 114,
                        "column": 22
                      },
                      "text": "exprs = [expr]",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 114,
                            "column": 8
                          },
                          "end": {
                            "row": 114,
                            "column": 22
                          },
                          "text": "exprs = [expr]",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 114,
                                "column": 8
                              },
                              "end": {
                                "row": 114,
                                "column": 22
                              },
                              "text": "exprs = [expr]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 114,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 114,
                                    "column": 13
                                  },
                                  "text": "exprs"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 114,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 114,
                                    "column": 15
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "list",
                                  "start": {
                                    "row": 114,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 114,
                                    "column": 22
                                  },
                                  "text": "[expr]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 114,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 114,
                                        "column": 17
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 114,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 114,
                                        "column": 21
                                      },
                                      "text": "expr"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 114,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 114,
                                        "column": 22
                                      },
                                      "text": "]"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 115,
                "column": 4
              },
              "end": {
                "row": 115,
                "column": 31
              },
              "text": "multi_line = len(exprs) > 1",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 115,
                    "column": 4
                  },
                  "end": {
                    "row": 115,
                    "column": 31
                  },
                  "text": "multi_line = len(exprs) > 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 115,
                        "column": 4
                      },
                      "end": {
                        "row": 115,
                        "column": 14
                      },
                      "text": "multi_line"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 115,
                        "column": 15
                      },
                      "end": {
                        "row": 115,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 115,
                        "column": 17
                      },
                      "end": {
                        "row": 115,
                        "column": 31
                      },
                      "text": "len(exprs) > 1",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 115,
                            "column": 17
                          },
                          "end": {
                            "row": 115,
                            "column": 27
                          },
                          "text": "len(exprs)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 115,
                                "column": 17
                              },
                              "end": {
                                "row": 115,
                                "column": 20
                              },
                              "text": "len"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 115,
                                "column": 20
                              },
                              "end": {
                                "row": 115,
                                "column": 27
                              },
                              "text": "(exprs)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 115,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 115,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 115,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 115,
                                    "column": 26
                                  },
                                  "text": "exprs"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 115,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 115,
                                    "column": 27
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ">",
                          "start": {
                            "row": 115,
                            "column": 28
                          },
                          "end": {
                            "row": 115,
                            "column": 29
                          },
                          "text": ">"
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 115,
                            "column": 30
                          },
                          "end": {
                            "row": 115,
                            "column": 31
                          },
                          "text": "1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 117,
                "column": 4
              },
              "end": {
                "row": 119,
                "column": 63
              },
              "text": "if multi_line and target is None:\n        raise ValueError(\"multi-line expressions are only valid in the \"\n                         \"context of data, use DataFrame.eval\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 117,
                    "column": 4
                  },
                  "end": {
                    "row": 117,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 117,
                    "column": 7
                  },
                  "end": {
                    "row": 117,
                    "column": 36
                  },
                  "text": "multi_line and target is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 117,
                        "column": 7
                      },
                      "end": {
                        "row": 117,
                        "column": 17
                      },
                      "text": "multi_line"
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 117,
                        "column": 18
                      },
                      "end": {
                        "row": 117,
                        "column": 21
                      },
                      "text": "and"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 117,
                        "column": 22
                      },
                      "end": {
                        "row": 117,
                        "column": 36
                      },
                      "text": "target is None",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 117,
                            "column": 22
                          },
                          "end": {
                            "row": 117,
                            "column": 28
                          },
                          "text": "target"
                        },
                        {
                          "type": "is",
                          "start": {
                            "row": 117,
                            "column": 29
                          },
                          "end": {
                            "row": 117,
                            "column": 31
                          },
                          "text": "is"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 117,
                            "column": 32
                          },
                          "end": {
                            "row": 117,
                            "column": 36
                          },
                          "text": "None"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 117,
                    "column": 36
                  },
                  "end": {
                    "row": 117,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 118,
                    "column": 8
                  },
                  "end": {
                    "row": 119,
                    "column": 63
                  },
                  "text": "raise ValueError(\"multi-line expressions are only valid in the \"\n                         \"context of data, use DataFrame.eval\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 118,
                        "column": 8
                      },
                      "end": {
                        "row": 119,
                        "column": 63
                      },
                      "text": "raise ValueError(\"multi-line expressions are only valid in the \"\n                         \"context of data, use DataFrame.eval\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 118,
                            "column": 8
                          },
                          "end": {
                            "row": 118,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 118,
                            "column": 14
                          },
                          "end": {
                            "row": 119,
                            "column": 63
                          },
                          "text": "ValueError(\"multi-line expressions are only valid in the \"\n                         \"context of data, use DataFrame.eval\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 118,
                                "column": 14
                              },
                              "end": {
                                "row": 118,
                                "column": 24
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 118,
                                "column": 24
                              },
                              "end": {
                                "row": 119,
                                "column": 63
                              },
                              "text": "(\"multi-line expressions are only valid in the \"\n                         \"context of data, use DataFrame.eval\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 118,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 118,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "concatenated_string",
                                  "start": {
                                    "row": 118,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 119,
                                    "column": 62
                                  },
                                  "text": "\"multi-line expressions are only valid in the \"\n                         \"context of data, use DataFrame.eval\"",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 118,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 118,
                                        "column": 72
                                      },
                                      "text": "\"multi-line expressions are only valid in the \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 118,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 118,
                                            "column": 26
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 118,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 118,
                                            "column": 71
                                          },
                                          "text": "multi-line expressions are only valid in the "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 118,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 118,
                                            "column": 72
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 119,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 119,
                                        "column": 62
                                      },
                                      "text": "\"context of data, use DataFrame.eval\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 119,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 119,
                                            "column": 26
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 119,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 119,
                                            "column": 61
                                          },
                                          "text": "context of data, use DataFrame.eval"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 119,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 119,
                                            "column": 62
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 119,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 119,
                                    "column": 63
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 121,
                "column": 4
              },
              "end": {
                "row": 121,
                "column": 14
              },
              "text": "ret = None",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 121,
                    "column": 4
                  },
                  "end": {
                    "row": 121,
                    "column": 14
                  },
                  "text": "ret = None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 121,
                        "column": 4
                      },
                      "end": {
                        "row": 121,
                        "column": 7
                      },
                      "text": "ret"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 121,
                        "column": 8
                      },
                      "end": {
                        "row": 121,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 121,
                        "column": 10
                      },
                      "end": {
                        "row": 121,
                        "column": 14
                      },
                      "text": "None"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 122,
                "column": 4
              },
              "end": {
                "row": 122,
                "column": 21
              },
              "text": "first_expr = True",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 122,
                    "column": 4
                  },
                  "end": {
                    "row": 122,
                    "column": 21
                  },
                  "text": "first_expr = True",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 122,
                        "column": 4
                      },
                      "end": {
                        "row": 122,
                        "column": 14
                      },
                      "text": "first_expr"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 122,
                        "column": 15
                      },
                      "end": {
                        "row": 122,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "true",
                      "start": {
                        "row": 122,
                        "column": 17
                      },
                      "end": {
                        "row": 122,
                        "column": 21
                      },
                      "text": "True"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 123,
                "column": 4
              },
              "end": {
                "row": 123,
                "column": 27
              },
              "text": "target_modified = False",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 123,
                    "column": 4
                  },
                  "end": {
                    "row": 123,
                    "column": 27
                  },
                  "text": "target_modified = False",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 123,
                        "column": 4
                      },
                      "end": {
                        "row": 123,
                        "column": 19
                      },
                      "text": "target_modified"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 123,
                        "column": 20
                      },
                      "end": {
                        "row": 123,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "false",
                      "start": {
                        "row": 123,
                        "column": 22
                      },
                      "end": {
                        "row": 123,
                        "column": 27
                      },
                      "text": "False"
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 125,
                "column": 4
              },
              "end": {
                "row": 191,
                "column": 30
              },
              "text": "for expr in exprs:\n        expr = _convert_expression(expr)\n        engine = _check_engine(engine)\n        _check_parser(parser)\n        _check_resolvers(resolvers)\n        _check_for_locals(expr, level, parser)\n\n        # get our (possibly passed-in) scope\n        env = _ensure_scope(level + 1, global_dict=global_dict,\n                            local_dict=local_dict, resolvers=resolvers,\n                            target=target)\n\n        parsed_expr = Expr(expr, engine=engine, parser=parser, env=env,\n                           truediv=truediv)\n\n        # construct the engine and evaluate the parsed expression\n        eng = _engines[engine]\n        eng_inst = eng(parsed_expr)\n        ret = eng_inst.evaluate()\n\n        if parsed_expr.assigner is None:\n            if multi_line:\n                raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")\n            elif inplace:\n                raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")\n\n        # assign if needed\n        assigner = parsed_expr.assigner\n        if env.target is not None and assigner is not None:\n            target_modified = True\n\n            # if returning a copy, copy only on the first assignment\n            if not inplace and first_expr:\n                try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")\n            else:\n                target = env.target\n\n            # TypeError is most commonly raised (e.g. int, list), but you\n            # get IndexError if you try to do this assignment on np.ndarray.\n            # we will ignore numpy warnings here; e.g. if trying\n            # to use a non-numeric indexer\n            try:\n                with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret\n            except (TypeError, IndexError):\n                raise ValueError(\"Cannot assign expression output to target\")\n\n            if not resolvers:\n                resolvers = ({assigner: ret},)\n            else:\n                # existing resolver needs updated to handle\n                # case of mutating existing column in copy\n                for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)\n\n            ret = None\n            first_expr = False",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 125,
                    "column": 4
                  },
                  "end": {
                    "row": 125,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 125,
                    "column": 8
                  },
                  "end": {
                    "row": 125,
                    "column": 12
                  },
                  "text": "expr"
                },
                {
                  "type": "in",
                  "start": {
                    "row": 125,
                    "column": 13
                  },
                  "end": {
                    "row": 125,
                    "column": 15
                  },
                  "text": "in"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 125,
                    "column": 16
                  },
                  "end": {
                    "row": 125,
                    "column": 21
                  },
                  "text": "exprs"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 125,
                    "column": 21
                  },
                  "end": {
                    "row": 125,
                    "column": 22
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 126,
                    "column": 8
                  },
                  "end": {
                    "row": 191,
                    "column": 30
                  },
                  "text": "expr = _convert_expression(expr)\n        engine = _check_engine(engine)\n        _check_parser(parser)\n        _check_resolvers(resolvers)\n        _check_for_locals(expr, level, parser)\n\n        # get our (possibly passed-in) scope\n        env = _ensure_scope(level + 1, global_dict=global_dict,\n                            local_dict=local_dict, resolvers=resolvers,\n                            target=target)\n\n        parsed_expr = Expr(expr, engine=engine, parser=parser, env=env,\n                           truediv=truediv)\n\n        # construct the engine and evaluate the parsed expression\n        eng = _engines[engine]\n        eng_inst = eng(parsed_expr)\n        ret = eng_inst.evaluate()\n\n        if parsed_expr.assigner is None:\n            if multi_line:\n                raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")\n            elif inplace:\n                raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")\n\n        # assign if needed\n        assigner = parsed_expr.assigner\n        if env.target is not None and assigner is not None:\n            target_modified = True\n\n            # if returning a copy, copy only on the first assignment\n            if not inplace and first_expr:\n                try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")\n            else:\n                target = env.target\n\n            # TypeError is most commonly raised (e.g. int, list), but you\n            # get IndexError if you try to do this assignment on np.ndarray.\n            # we will ignore numpy warnings here; e.g. if trying\n            # to use a non-numeric indexer\n            try:\n                with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret\n            except (TypeError, IndexError):\n                raise ValueError(\"Cannot assign expression output to target\")\n\n            if not resolvers:\n                resolvers = ({assigner: ret},)\n            else:\n                # existing resolver needs updated to handle\n                # case of mutating existing column in copy\n                for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)\n\n            ret = None\n            first_expr = False",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 126,
                        "column": 8
                      },
                      "end": {
                        "row": 126,
                        "column": 40
                      },
                      "text": "expr = _convert_expression(expr)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 126,
                            "column": 8
                          },
                          "end": {
                            "row": 126,
                            "column": 40
                          },
                          "text": "expr = _convert_expression(expr)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 126,
                                "column": 8
                              },
                              "end": {
                                "row": 126,
                                "column": 12
                              },
                              "text": "expr"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 126,
                                "column": 13
                              },
                              "end": {
                                "row": 126,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 126,
                                "column": 15
                              },
                              "end": {
                                "row": 126,
                                "column": 40
                              },
                              "text": "_convert_expression(expr)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 126,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 126,
                                    "column": 34
                                  },
                                  "text": "_convert_expression"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 126,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 126,
                                    "column": 40
                                  },
                                  "text": "(expr)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 126,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 35
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 126,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 39
                                      },
                                      "text": "expr"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 126,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 40
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 127,
                        "column": 8
                      },
                      "end": {
                        "row": 127,
                        "column": 38
                      },
                      "text": "engine = _check_engine(engine)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 127,
                            "column": 8
                          },
                          "end": {
                            "row": 127,
                            "column": 38
                          },
                          "text": "engine = _check_engine(engine)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 127,
                                "column": 8
                              },
                              "end": {
                                "row": 127,
                                "column": 14
                              },
                              "text": "engine"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 127,
                                "column": 15
                              },
                              "end": {
                                "row": 127,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 127,
                                "column": 17
                              },
                              "end": {
                                "row": 127,
                                "column": 38
                              },
                              "text": "_check_engine(engine)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 127,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 127,
                                    "column": 30
                                  },
                                  "text": "_check_engine"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 127,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 127,
                                    "column": 38
                                  },
                                  "text": "(engine)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 127,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 127,
                                        "column": 31
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 127,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 127,
                                        "column": 37
                                      },
                                      "text": "engine"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 127,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 127,
                                        "column": 38
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 128,
                        "column": 8
                      },
                      "end": {
                        "row": 128,
                        "column": 29
                      },
                      "text": "_check_parser(parser)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 128,
                            "column": 8
                          },
                          "end": {
                            "row": 128,
                            "column": 29
                          },
                          "text": "_check_parser(parser)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 128,
                                "column": 8
                              },
                              "end": {
                                "row": 128,
                                "column": 21
                              },
                              "text": "_check_parser"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 128,
                                "column": 21
                              },
                              "end": {
                                "row": 128,
                                "column": 29
                              },
                              "text": "(parser)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 128,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 128,
                                    "column": 22
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 128,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 128,
                                    "column": 28
                                  },
                                  "text": "parser"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 128,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 128,
                                    "column": 29
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 129,
                        "column": 8
                      },
                      "end": {
                        "row": 129,
                        "column": 35
                      },
                      "text": "_check_resolvers(resolvers)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 129,
                            "column": 8
                          },
                          "end": {
                            "row": 129,
                            "column": 35
                          },
                          "text": "_check_resolvers(resolvers)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 129,
                                "column": 8
                              },
                              "end": {
                                "row": 129,
                                "column": 24
                              },
                              "text": "_check_resolvers"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 129,
                                "column": 24
                              },
                              "end": {
                                "row": 129,
                                "column": 35
                              },
                              "text": "(resolvers)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 129,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 129,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 129,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 129,
                                    "column": 34
                                  },
                                  "text": "resolvers"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 129,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 129,
                                    "column": 35
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 130,
                        "column": 8
                      },
                      "end": {
                        "row": 130,
                        "column": 46
                      },
                      "text": "_check_for_locals(expr, level, parser)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 130,
                            "column": 8
                          },
                          "end": {
                            "row": 130,
                            "column": 46
                          },
                          "text": "_check_for_locals(expr, level, parser)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 130,
                                "column": 8
                              },
                              "end": {
                                "row": 130,
                                "column": 25
                              },
                              "text": "_check_for_locals"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 130,
                                "column": 25
                              },
                              "end": {
                                "row": 130,
                                "column": 46
                              },
                              "text": "(expr, level, parser)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 130,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 26
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 130,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 30
                                  },
                                  "text": "expr"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 130,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 31
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 130,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 37
                                  },
                                  "text": "level"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 130,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 38
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 130,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 45
                                  },
                                  "text": "parser"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 130,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 46
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 132,
                        "column": 8
                      },
                      "end": {
                        "row": 132,
                        "column": 44
                      },
                      "text": "# get our (possibly passed-in) scope"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 133,
                        "column": 8
                      },
                      "end": {
                        "row": 135,
                        "column": 42
                      },
                      "text": "env = _ensure_scope(level + 1, global_dict=global_dict,\n                            local_dict=local_dict, resolvers=resolvers,\n                            target=target)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 133,
                            "column": 8
                          },
                          "end": {
                            "row": 135,
                            "column": 42
                          },
                          "text": "env = _ensure_scope(level + 1, global_dict=global_dict,\n                            local_dict=local_dict, resolvers=resolvers,\n                            target=target)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 133,
                                "column": 8
                              },
                              "end": {
                                "row": 133,
                                "column": 11
                              },
                              "text": "env"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 133,
                                "column": 12
                              },
                              "end": {
                                "row": 133,
                                "column": 13
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 133,
                                "column": 14
                              },
                              "end": {
                                "row": 135,
                                "column": 42
                              },
                              "text": "_ensure_scope(level + 1, global_dict=global_dict,\n                            local_dict=local_dict, resolvers=resolvers,\n                            target=target)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 133,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 133,
                                    "column": 27
                                  },
                                  "text": "_ensure_scope"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 133,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 135,
                                    "column": 42
                                  },
                                  "text": "(level + 1, global_dict=global_dict,\n                            local_dict=local_dict, resolvers=resolvers,\n                            target=target)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 133,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 133,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 133,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 133,
                                        "column": 37
                                      },
                                      "text": "level + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 133,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 133,
                                            "column": 33
                                          },
                                          "text": "level"
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 133,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 133,
                                            "column": 35
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 133,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 133,
                                            "column": 37
                                          },
                                          "text": "1"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 133,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 133,
                                        "column": 38
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 133,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 133,
                                        "column": 62
                                      },
                                      "text": "global_dict=global_dict",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 133,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 133,
                                            "column": 50
                                          },
                                          "text": "global_dict"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 133,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 133,
                                            "column": 51
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 133,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 133,
                                            "column": 62
                                          },
                                          "text": "global_dict"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 133,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 133,
                                        "column": 63
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 134,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 49
                                      },
                                      "text": "local_dict=local_dict",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 134,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 38
                                          },
                                          "text": "local_dict"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 134,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 39
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 134,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 49
                                          },
                                          "text": "local_dict"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 134,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 50
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 134,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 70
                                      },
                                      "text": "resolvers=resolvers",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 134,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 60
                                          },
                                          "text": "resolvers"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 134,
                                            "column": 60
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 61
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 134,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 70
                                          },
                                          "text": "resolvers"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 134,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 71
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 135,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 135,
                                        "column": 41
                                      },
                                      "text": "target=target",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 135,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 135,
                                            "column": 34
                                          },
                                          "text": "target"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 135,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 135,
                                            "column": 35
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 135,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 135,
                                            "column": 41
                                          },
                                          "text": "target"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 135,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 135,
                                        "column": 42
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 137,
                        "column": 8
                      },
                      "end": {
                        "row": 138,
                        "column": 43
                      },
                      "text": "parsed_expr = Expr(expr, engine=engine, parser=parser, env=env,\n                           truediv=truediv)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 137,
                            "column": 8
                          },
                          "end": {
                            "row": 138,
                            "column": 43
                          },
                          "text": "parsed_expr = Expr(expr, engine=engine, parser=parser, env=env,\n                           truediv=truediv)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 137,
                                "column": 8
                              },
                              "end": {
                                "row": 137,
                                "column": 19
                              },
                              "text": "parsed_expr"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 137,
                                "column": 20
                              },
                              "end": {
                                "row": 137,
                                "column": 21
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 137,
                                "column": 22
                              },
                              "end": {
                                "row": 138,
                                "column": 43
                              },
                              "text": "Expr(expr, engine=engine, parser=parser, env=env,\n                           truediv=truediv)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 137,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 137,
                                    "column": 26
                                  },
                                  "text": "Expr"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 137,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 138,
                                    "column": 43
                                  },
                                  "text": "(expr, engine=engine, parser=parser, env=env,\n                           truediv=truediv)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 137,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 137,
                                        "column": 27
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 137,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 137,
                                        "column": 31
                                      },
                                      "text": "expr"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 137,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 137,
                                        "column": 32
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 137,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 137,
                                        "column": 46
                                      },
                                      "text": "engine=engine",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 137,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 137,
                                            "column": 39
                                          },
                                          "text": "engine"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 137,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 137,
                                            "column": 40
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 137,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 137,
                                            "column": 46
                                          },
                                          "text": "engine"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 137,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 137,
                                        "column": 47
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 137,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 137,
                                        "column": 61
                                      },
                                      "text": "parser=parser",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 137,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 137,
                                            "column": 54
                                          },
                                          "text": "parser"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 137,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 137,
                                            "column": 55
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 137,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 137,
                                            "column": 61
                                          },
                                          "text": "parser"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 137,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 137,
                                        "column": 62
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 137,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 137,
                                        "column": 70
                                      },
                                      "text": "env=env",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 137,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 137,
                                            "column": 66
                                          },
                                          "text": "env"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 137,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 137,
                                            "column": 67
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 137,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 137,
                                            "column": 70
                                          },
                                          "text": "env"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 137,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 137,
                                        "column": 71
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 138,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 138,
                                        "column": 42
                                      },
                                      "text": "truediv=truediv",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 138,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 138,
                                            "column": 34
                                          },
                                          "text": "truediv"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 138,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 138,
                                            "column": 35
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 138,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 138,
                                            "column": 42
                                          },
                                          "text": "truediv"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 138,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 138,
                                        "column": 43
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 140,
                        "column": 8
                      },
                      "end": {
                        "row": 140,
                        "column": 65
                      },
                      "text": "# construct the engine and evaluate the parsed expression"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 141,
                        "column": 8
                      },
                      "end": {
                        "row": 141,
                        "column": 30
                      },
                      "text": "eng = _engines[engine]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 141,
                            "column": 8
                          },
                          "end": {
                            "row": 141,
                            "column": 30
                          },
                          "text": "eng = _engines[engine]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 141,
                                "column": 8
                              },
                              "end": {
                                "row": 141,
                                "column": 11
                              },
                              "text": "eng"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 141,
                                "column": 12
                              },
                              "end": {
                                "row": 141,
                                "column": 13
                              },
                              "text": "="
                            },
                            {
                              "type": "subscript",
                              "start": {
                                "row": 141,
                                "column": 14
                              },
                              "end": {
                                "row": 141,
                                "column": 30
                              },
                              "text": "_engines[engine]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 141,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 141,
                                    "column": 22
                                  },
                                  "text": "_engines"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 141,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 141,
                                    "column": 23
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 141,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 141,
                                    "column": 29
                                  },
                                  "text": "engine"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 141,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 141,
                                    "column": 30
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 142,
                        "column": 8
                      },
                      "end": {
                        "row": 142,
                        "column": 35
                      },
                      "text": "eng_inst = eng(parsed_expr)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 142,
                            "column": 8
                          },
                          "end": {
                            "row": 142,
                            "column": 35
                          },
                          "text": "eng_inst = eng(parsed_expr)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 142,
                                "column": 8
                              },
                              "end": {
                                "row": 142,
                                "column": 16
                              },
                              "text": "eng_inst"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 142,
                                "column": 17
                              },
                              "end": {
                                "row": 142,
                                "column": 18
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 142,
                                "column": 19
                              },
                              "end": {
                                "row": 142,
                                "column": 35
                              },
                              "text": "eng(parsed_expr)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 142,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 142,
                                    "column": 22
                                  },
                                  "text": "eng"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 142,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 142,
                                    "column": 35
                                  },
                                  "text": "(parsed_expr)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 142,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 142,
                                        "column": 23
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 142,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 142,
                                        "column": 34
                                      },
                                      "text": "parsed_expr"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 142,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 142,
                                        "column": 35
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 143,
                        "column": 8
                      },
                      "end": {
                        "row": 143,
                        "column": 33
                      },
                      "text": "ret = eng_inst.evaluate()",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 143,
                            "column": 8
                          },
                          "end": {
                            "row": 143,
                            "column": 33
                          },
                          "text": "ret = eng_inst.evaluate()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 143,
                                "column": 8
                              },
                              "end": {
                                "row": 143,
                                "column": 11
                              },
                              "text": "ret"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 143,
                                "column": 12
                              },
                              "end": {
                                "row": 143,
                                "column": 13
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 143,
                                "column": 14
                              },
                              "end": {
                                "row": 143,
                                "column": 33
                              },
                              "text": "eng_inst.evaluate()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 143,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 143,
                                    "column": 31
                                  },
                                  "text": "eng_inst.evaluate",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 143,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 143,
                                        "column": 22
                                      },
                                      "text": "eng_inst"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 143,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 143,
                                        "column": 23
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 143,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 143,
                                        "column": 31
                                      },
                                      "text": "evaluate"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 143,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 143,
                                    "column": 33
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 143,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 143,
                                        "column": 32
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 143,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 143,
                                        "column": 33
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 145,
                        "column": 8
                      },
                      "end": {
                        "row": 151,
                        "column": 61
                      },
                      "text": "if parsed_expr.assigner is None:\n            if multi_line:\n                raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")\n            elif inplace:\n                raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 145,
                            "column": 8
                          },
                          "end": {
                            "row": 145,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 145,
                            "column": 11
                          },
                          "end": {
                            "row": 145,
                            "column": 39
                          },
                          "text": "parsed_expr.assigner is None",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 145,
                                "column": 11
                              },
                              "end": {
                                "row": 145,
                                "column": 31
                              },
                              "text": "parsed_expr.assigner",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 145,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 145,
                                    "column": 22
                                  },
                                  "text": "parsed_expr"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 145,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 145,
                                    "column": 23
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 145,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 145,
                                    "column": 31
                                  },
                                  "text": "assigner"
                                }
                              ]
                            },
                            {
                              "type": "is",
                              "start": {
                                "row": 145,
                                "column": 32
                              },
                              "end": {
                                "row": 145,
                                "column": 34
                              },
                              "text": "is"
                            },
                            {
                              "type": "none",
                              "start": {
                                "row": 145,
                                "column": 35
                              },
                              "end": {
                                "row": 145,
                                "column": 39
                              },
                              "text": "None"
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 145,
                            "column": 39
                          },
                          "end": {
                            "row": 145,
                            "column": 40
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 146,
                            "column": 12
                          },
                          "end": {
                            "row": 151,
                            "column": 61
                          },
                          "text": "if multi_line:\n                raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")\n            elif inplace:\n                raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")",
                          "children": [
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 146,
                                "column": 12
                              },
                              "end": {
                                "row": 151,
                                "column": 61
                              },
                              "text": "if multi_line:\n                raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")\n            elif inplace:\n                raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 146,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 146,
                                    "column": 14
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 146,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 146,
                                    "column": 25
                                  },
                                  "text": "multi_line"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 146,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 146,
                                    "column": 26
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 147,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 148,
                                    "column": 77
                                  },
                                  "text": "raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")",
                                  "children": [
                                    {
                                      "type": "raise_statement",
                                      "start": {
                                        "row": 147,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 148,
                                        "column": 77
                                      },
                                      "text": "raise ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")",
                                      "children": [
                                        {
                                          "type": "raise",
                                          "start": {
                                            "row": 147,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 147,
                                            "column": 21
                                          },
                                          "text": "raise"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 147,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 148,
                                            "column": 77
                                          },
                                          "text": "ValueError(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 147,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 147,
                                                "column": 32
                                              },
                                              "text": "ValueError"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 147,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 148,
                                                "column": 77
                                              },
                                              "text": "(\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\")",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 147,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 147,
                                                    "column": 33
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "concatenated_string",
                                                  "start": {
                                                    "row": 147,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 148,
                                                    "column": 76
                                                  },
                                                  "text": "\"Multi-line expressions are only valid\"\n                                 \" if all expressions contain an assignment\"",
                                                  "children": [
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 147,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 147,
                                                        "column": 72
                                                      },
                                                      "text": "\"Multi-line expressions are only valid\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 147,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 147,
                                                            "column": 34
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 147,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 147,
                                                            "column": 71
                                                          },
                                                          "text": "Multi-line expressions are only valid"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 147,
                                                            "column": 71
                                                          },
                                                          "end": {
                                                            "row": 147,
                                                            "column": 72
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 148,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 148,
                                                        "column": 76
                                                      },
                                                      "text": "\" if all expressions contain an assignment\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 148,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 148,
                                                            "column": 34
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 148,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 148,
                                                            "column": 75
                                                          },
                                                          "text": " if all expressions contain an assignment"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 148,
                                                            "column": 75
                                                          },
                                                          "end": {
                                                            "row": 148,
                                                            "column": 76
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 148,
                                                    "column": 76
                                                  },
                                                  "end": {
                                                    "row": 148,
                                                    "column": 77
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "elif_clause",
                                  "start": {
                                    "row": 149,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 151,
                                    "column": 61
                                  },
                                  "text": "elif inplace:\n                raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")",
                                  "children": [
                                    {
                                      "type": "elif",
                                      "start": {
                                        "row": 149,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 149,
                                        "column": 16
                                      },
                                      "text": "elif"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 149,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 149,
                                        "column": 24
                                      },
                                      "text": "inplace"
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 149,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 149,
                                        "column": 25
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 150,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 151,
                                        "column": 61
                                      },
                                      "text": "raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")",
                                      "children": [
                                        {
                                          "type": "raise_statement",
                                          "start": {
                                            "row": 150,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 151,
                                            "column": 61
                                          },
                                          "text": "raise ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")",
                                          "children": [
                                            {
                                              "type": "raise",
                                              "start": {
                                                "row": 150,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 150,
                                                "column": 21
                                              },
                                              "text": "raise"
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 150,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 151,
                                                "column": 61
                                              },
                                              "text": "ValueError(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 150,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 150,
                                                    "column": 32
                                                  },
                                                  "text": "ValueError"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 150,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 151,
                                                    "column": 61
                                                  },
                                                  "text": "(\"Cannot operate inplace \"\n                                 \"if there is no assignment\")",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 150,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 150,
                                                        "column": 33
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "concatenated_string",
                                                      "start": {
                                                        "row": 150,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 151,
                                                        "column": 60
                                                      },
                                                      "text": "\"Cannot operate inplace \"\n                                 \"if there is no assignment\"",
                                                      "children": [
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 150,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 150,
                                                            "column": 58
                                                          },
                                                          "text": "\"Cannot operate inplace \"",
                                                          "children": [
                                                            {
                                                              "type": "string_start",
                                                              "start": {
                                                                "row": 150,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 150,
                                                                "column": 34
                                                              },
                                                              "text": "\""
                                                            },
                                                            {
                                                              "type": "string_content",
                                                              "start": {
                                                                "row": 150,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 150,
                                                                "column": 57
                                                              },
                                                              "text": "Cannot operate inplace "
                                                            },
                                                            {
                                                              "type": "string_end",
                                                              "start": {
                                                                "row": 150,
                                                                "column": 57
                                                              },
                                                              "end": {
                                                                "row": 150,
                                                                "column": 58
                                                              },
                                                              "text": "\""
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 151,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 151,
                                                            "column": 60
                                                          },
                                                          "text": "\"if there is no assignment\"",
                                                          "children": [
                                                            {
                                                              "type": "string_start",
                                                              "start": {
                                                                "row": 151,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 151,
                                                                "column": 34
                                                              },
                                                              "text": "\""
                                                            },
                                                            {
                                                              "type": "string_content",
                                                              "start": {
                                                                "row": 151,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 151,
                                                                "column": 59
                                                              },
                                                              "text": "if there is no assignment"
                                                            },
                                                            {
                                                              "type": "string_end",
                                                              "start": {
                                                                "row": 151,
                                                                "column": 59
                                                              },
                                                              "end": {
                                                                "row": 151,
                                                                "column": 60
                                                              },
                                                              "text": "\""
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 151,
                                                        "column": 60
                                                      },
                                                      "end": {
                                                        "row": 151,
                                                        "column": 61
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 153,
                        "column": 8
                      },
                      "end": {
                        "row": 153,
                        "column": 26
                      },
                      "text": "# assign if needed"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 154,
                        "column": 8
                      },
                      "end": {
                        "row": 154,
                        "column": 39
                      },
                      "text": "assigner = parsed_expr.assigner",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 154,
                            "column": 8
                          },
                          "end": {
                            "row": 154,
                            "column": 39
                          },
                          "text": "assigner = parsed_expr.assigner",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 154,
                                "column": 8
                              },
                              "end": {
                                "row": 154,
                                "column": 16
                              },
                              "text": "assigner"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 154,
                                "column": 17
                              },
                              "end": {
                                "row": 154,
                                "column": 18
                              },
                              "text": "="
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 154,
                                "column": 19
                              },
                              "end": {
                                "row": 154,
                                "column": 39
                              },
                              "text": "parsed_expr.assigner",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 154,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 154,
                                    "column": 30
                                  },
                                  "text": "parsed_expr"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 154,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 154,
                                    "column": 31
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 154,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 154,
                                    "column": 39
                                  },
                                  "text": "assigner"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 155,
                        "column": 8
                      },
                      "end": {
                        "row": 191,
                        "column": 30
                      },
                      "text": "if env.target is not None and assigner is not None:\n            target_modified = True\n\n            # if returning a copy, copy only on the first assignment\n            if not inplace and first_expr:\n                try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")\n            else:\n                target = env.target\n\n            # TypeError is most commonly raised (e.g. int, list), but you\n            # get IndexError if you try to do this assignment on np.ndarray.\n            # we will ignore numpy warnings here; e.g. if trying\n            # to use a non-numeric indexer\n            try:\n                with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret\n            except (TypeError, IndexError):\n                raise ValueError(\"Cannot assign expression output to target\")\n\n            if not resolvers:\n                resolvers = ({assigner: ret},)\n            else:\n                # existing resolver needs updated to handle\n                # case of mutating existing column in copy\n                for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)\n\n            ret = None\n            first_expr = False",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 155,
                            "column": 8
                          },
                          "end": {
                            "row": 155,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "boolean_operator",
                          "start": {
                            "row": 155,
                            "column": 11
                          },
                          "end": {
                            "row": 155,
                            "column": 58
                          },
                          "text": "env.target is not None and assigner is not None",
                          "children": [
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 155,
                                "column": 11
                              },
                              "end": {
                                "row": 155,
                                "column": 33
                              },
                              "text": "env.target is not None",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 155,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 155,
                                    "column": 21
                                  },
                                  "text": "env.target",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 155,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 155,
                                        "column": 14
                                      },
                                      "text": "env"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 155,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 155,
                                        "column": 15
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 155,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 155,
                                        "column": 21
                                      },
                                      "text": "target"
                                    }
                                  ]
                                },
                                {
                                  "type": "is not",
                                  "start": {
                                    "row": 155,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 155,
                                    "column": 24
                                  },
                                  "text": "is"
                                },
                                {
                                  "type": "is not",
                                  "start": {
                                    "row": 155,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 155,
                                    "column": 28
                                  },
                                  "text": "not"
                                },
                                {
                                  "type": "none",
                                  "start": {
                                    "row": 155,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 155,
                                    "column": 33
                                  },
                                  "text": "None"
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "start": {
                                "row": 155,
                                "column": 34
                              },
                              "end": {
                                "row": 155,
                                "column": 37
                              },
                              "text": "and"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 155,
                                "column": 38
                              },
                              "end": {
                                "row": 155,
                                "column": 58
                              },
                              "text": "assigner is not None",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 155,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 155,
                                    "column": 46
                                  },
                                  "text": "assigner"
                                },
                                {
                                  "type": "is not",
                                  "start": {
                                    "row": 155,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 155,
                                    "column": 49
                                  },
                                  "text": "is"
                                },
                                {
                                  "type": "is not",
                                  "start": {
                                    "row": 155,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 155,
                                    "column": 53
                                  },
                                  "text": "not"
                                },
                                {
                                  "type": "none",
                                  "start": {
                                    "row": 155,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 155,
                                    "column": 58
                                  },
                                  "text": "None"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 155,
                            "column": 58
                          },
                          "end": {
                            "row": 155,
                            "column": 59
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 156,
                            "column": 12
                          },
                          "end": {
                            "row": 191,
                            "column": 30
                          },
                          "text": "target_modified = True\n\n            # if returning a copy, copy only on the first assignment\n            if not inplace and first_expr:\n                try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")\n            else:\n                target = env.target\n\n            # TypeError is most commonly raised (e.g. int, list), but you\n            # get IndexError if you try to do this assignment on np.ndarray.\n            # we will ignore numpy warnings here; e.g. if trying\n            # to use a non-numeric indexer\n            try:\n                with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret\n            except (TypeError, IndexError):\n                raise ValueError(\"Cannot assign expression output to target\")\n\n            if not resolvers:\n                resolvers = ({assigner: ret},)\n            else:\n                # existing resolver needs updated to handle\n                # case of mutating existing column in copy\n                for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)\n\n            ret = None\n            first_expr = False",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 156,
                                "column": 12
                              },
                              "end": {
                                "row": 156,
                                "column": 34
                              },
                              "text": "target_modified = True",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 156,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 156,
                                    "column": 34
                                  },
                                  "text": "target_modified = True",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 156,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 156,
                                        "column": 27
                                      },
                                      "text": "target_modified"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 156,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 156,
                                        "column": 29
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "true",
                                      "start": {
                                        "row": 156,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 156,
                                        "column": 34
                                      },
                                      "text": "True"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 158,
                                "column": 12
                              },
                              "end": {
                                "row": 158,
                                "column": 68
                              },
                              "text": "# if returning a copy, copy only on the first assignment"
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 159,
                                "column": 12
                              },
                              "end": {
                                "row": 165,
                                "column": 35
                              },
                              "text": "if not inplace and first_expr:\n                try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")\n            else:\n                target = env.target",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 159,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 159,
                                    "column": 14
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "boolean_operator",
                                  "start": {
                                    "row": 159,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 159,
                                    "column": 41
                                  },
                                  "text": "not inplace and first_expr",
                                  "children": [
                                    {
                                      "type": "not_operator",
                                      "start": {
                                        "row": 159,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 159,
                                        "column": 26
                                      },
                                      "text": "not inplace",
                                      "children": [
                                        {
                                          "type": "not",
                                          "start": {
                                            "row": 159,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 159,
                                            "column": 18
                                          },
                                          "text": "not"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 159,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 159,
                                            "column": 26
                                          },
                                          "text": "inplace"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "and",
                                      "start": {
                                        "row": 159,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 159,
                                        "column": 30
                                      },
                                      "text": "and"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 159,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 159,
                                        "column": 41
                                      },
                                      "text": "first_expr"
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 159,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 159,
                                    "column": 42
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 160,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 163,
                                    "column": 74
                                  },
                                  "text": "try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")",
                                  "children": [
                                    {
                                      "type": "try_statement",
                                      "start": {
                                        "row": 160,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 163,
                                        "column": 74
                                      },
                                      "text": "try:\n                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")",
                                      "children": [
                                        {
                                          "type": "try",
                                          "start": {
                                            "row": 160,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 160,
                                            "column": 19
                                          },
                                          "text": "try"
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 160,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 160,
                                            "column": 20
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "block",
                                          "start": {
                                            "row": 161,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 161,
                                            "column": 46
                                          },
                                          "text": "target = env.target.copy()",
                                          "children": [
                                            {
                                              "type": "expression_statement",
                                              "start": {
                                                "row": 161,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 161,
                                                "column": 46
                                              },
                                              "text": "target = env.target.copy()",
                                              "children": [
                                                {
                                                  "type": "assignment",
                                                  "start": {
                                                    "row": 161,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 161,
                                                    "column": 46
                                                  },
                                                  "text": "target = env.target.copy()",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 161,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 161,
                                                        "column": 26
                                                      },
                                                      "text": "target"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 161,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 161,
                                                        "column": 28
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 161,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 161,
                                                        "column": 46
                                                      },
                                                      "text": "env.target.copy()",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 161,
                                                            "column": 29
                                                          },
                                                          "end": {
                                                            "row": 161,
                                                            "column": 44
                                                          },
                                                          "text": "env.target.copy",
                                                          "children": [
                                                            {
                                                              "type": "attribute",
                                                              "start": {
                                                                "row": 161,
                                                                "column": 29
                                                              },
                                                              "end": {
                                                                "row": 161,
                                                                "column": 39
                                                              },
                                                              "text": "env.target",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 161,
                                                                    "column": 29
                                                                  },
                                                                  "end": {
                                                                    "row": 161,
                                                                    "column": 32
                                                                  },
                                                                  "text": "env"
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 161,
                                                                    "column": 32
                                                                  },
                                                                  "end": {
                                                                    "row": 161,
                                                                    "column": 33
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 161,
                                                                    "column": 33
                                                                  },
                                                                  "end": {
                                                                    "row": 161,
                                                                    "column": 39
                                                                  },
                                                                  "text": "target"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 161,
                                                                "column": 39
                                                              },
                                                              "end": {
                                                                "row": 161,
                                                                "column": 40
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 161,
                                                                "column": 40
                                                              },
                                                              "end": {
                                                                "row": 161,
                                                                "column": 44
                                                              },
                                                              "text": "copy"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 161,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 161,
                                                            "column": 46
                                                          },
                                                          "text": "()",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 161,
                                                                "column": 44
                                                              },
                                                              "end": {
                                                                "row": 161,
                                                                "column": 45
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 161,
                                                                "column": 45
                                                              },
                                                              "end": {
                                                                "row": 161,
                                                                "column": 46
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "except_clause",
                                          "start": {
                                            "row": 162,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 163,
                                            "column": 74
                                          },
                                          "text": "except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")",
                                          "children": [
                                            {
                                              "type": "except",
                                              "start": {
                                                "row": 162,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 162,
                                                "column": 22
                                              },
                                              "text": "except"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 162,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 162,
                                                "column": 37
                                              },
                                              "text": "AttributeError"
                                            },
                                            {
                                              "type": ":",
                                              "start": {
                                                "row": 162,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 162,
                                                "column": 38
                                              },
                                              "text": ":"
                                            },
                                            {
                                              "type": "block",
                                              "start": {
                                                "row": 163,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 163,
                                                "column": 74
                                              },
                                              "text": "raise ValueError(\"Cannot return a copy of the target\")",
                                              "children": [
                                                {
                                                  "type": "raise_statement",
                                                  "start": {
                                                    "row": 163,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 163,
                                                    "column": 74
                                                  },
                                                  "text": "raise ValueError(\"Cannot return a copy of the target\")",
                                                  "children": [
                                                    {
                                                      "type": "raise",
                                                      "start": {
                                                        "row": 163,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 163,
                                                        "column": 25
                                                      },
                                                      "text": "raise"
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 163,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 163,
                                                        "column": 74
                                                      },
                                                      "text": "ValueError(\"Cannot return a copy of the target\")",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 163,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 163,
                                                            "column": 36
                                                          },
                                                          "text": "ValueError"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 163,
                                                            "column": 36
                                                          },
                                                          "end": {
                                                            "row": 163,
                                                            "column": 74
                                                          },
                                                          "text": "(\"Cannot return a copy of the target\")",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 163,
                                                                "column": 36
                                                              },
                                                              "end": {
                                                                "row": 163,
                                                                "column": 37
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "string",
                                                              "start": {
                                                                "row": 163,
                                                                "column": 37
                                                              },
                                                              "end": {
                                                                "row": 163,
                                                                "column": 73
                                                              },
                                                              "text": "\"Cannot return a copy of the target\"",
                                                              "children": [
                                                                {
                                                                  "type": "string_start",
                                                                  "start": {
                                                                    "row": 163,
                                                                    "column": 37
                                                                  },
                                                                  "end": {
                                                                    "row": 163,
                                                                    "column": 38
                                                                  },
                                                                  "text": "\""
                                                                },
                                                                {
                                                                  "type": "string_content",
                                                                  "start": {
                                                                    "row": 163,
                                                                    "column": 38
                                                                  },
                                                                  "end": {
                                                                    "row": 163,
                                                                    "column": 72
                                                                  },
                                                                  "text": "Cannot return a copy of the target"
                                                                },
                                                                {
                                                                  "type": "string_end",
                                                                  "start": {
                                                                    "row": 163,
                                                                    "column": 72
                                                                  },
                                                                  "end": {
                                                                    "row": 163,
                                                                    "column": 73
                                                                  },
                                                                  "text": "\""
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 163,
                                                                "column": 73
                                                              },
                                                              "end": {
                                                                "row": 163,
                                                                "column": 74
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start": {
                                    "row": 164,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 165,
                                    "column": 35
                                  },
                                  "text": "else:\n                target = env.target",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 164,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 164,
                                        "column": 16
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 164,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 164,
                                        "column": 17
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 165,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 165,
                                        "column": 35
                                      },
                                      "text": "target = env.target",
                                      "children": [
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 165,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 165,
                                            "column": 35
                                          },
                                          "text": "target = env.target",
                                          "children": [
                                            {
                                              "type": "assignment",
                                              "start": {
                                                "row": 165,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 165,
                                                "column": 35
                                              },
                                              "text": "target = env.target",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 165,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 165,
                                                    "column": 22
                                                  },
                                                  "text": "target"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 165,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 165,
                                                    "column": 24
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 165,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 165,
                                                    "column": 35
                                                  },
                                                  "text": "env.target",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 165,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 165,
                                                        "column": 28
                                                      },
                                                      "text": "env"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 165,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 165,
                                                        "column": 29
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 165,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 165,
                                                        "column": 35
                                                      },
                                                      "text": "target"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 167,
                                "column": 12
                              },
                              "end": {
                                "row": 167,
                                "column": 73
                              },
                              "text": "# TypeError is most commonly raised (e.g. int, list), but you"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 168,
                                "column": 12
                              },
                              "end": {
                                "row": 168,
                                "column": 76
                              },
                              "text": "# get IndexError if you try to do this assignment on np.ndarray."
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 169,
                                "column": 12
                              },
                              "end": {
                                "row": 169,
                                "column": 64
                              },
                              "text": "# we will ignore numpy warnings here; e.g. if trying"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 170,
                                "column": 12
                              },
                              "end": {
                                "row": 170,
                                "column": 42
                              },
                              "text": "# to use a non-numeric indexer"
                            },
                            {
                              "type": "try_statement",
                              "start": {
                                "row": 171,
                                "column": 12
                              },
                              "end": {
                                "row": 176,
                                "column": 77
                              },
                              "text": "try:\n                with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret\n            except (TypeError, IndexError):\n                raise ValueError(\"Cannot assign expression output to target\")",
                              "children": [
                                {
                                  "type": "try",
                                  "start": {
                                    "row": 171,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 171,
                                    "column": 15
                                  },
                                  "text": "try"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 171,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 171,
                                    "column": 16
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 172,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 174,
                                    "column": 42
                                  },
                                  "text": "with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret",
                                  "children": [
                                    {
                                      "type": "with_statement",
                                      "start": {
                                        "row": 172,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 174,
                                        "column": 42
                                      },
                                      "text": "with warnings.catch_warnings(record=True):\n                    # TODO: Filter the warnings we actually care about here.\n                    target[assigner] = ret",
                                      "children": [
                                        {
                                          "type": "with",
                                          "start": {
                                            "row": 172,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 172,
                                            "column": 20
                                          },
                                          "text": "with"
                                        },
                                        {
                                          "type": "with_clause",
                                          "start": {
                                            "row": 172,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 172,
                                            "column": 57
                                          },
                                          "text": "warnings.catch_warnings(record=True)",
                                          "children": [
                                            {
                                              "type": "with_item",
                                              "start": {
                                                "row": 172,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 172,
                                                "column": 57
                                              },
                                              "text": "warnings.catch_warnings(record=True)",
                                              "children": [
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 172,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 172,
                                                    "column": 57
                                                  },
                                                  "text": "warnings.catch_warnings(record=True)",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 172,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 172,
                                                        "column": 44
                                                      },
                                                      "text": "warnings.catch_warnings",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 172,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 172,
                                                            "column": 29
                                                          },
                                                          "text": "warnings"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 172,
                                                            "column": 29
                                                          },
                                                          "end": {
                                                            "row": 172,
                                                            "column": 30
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 172,
                                                            "column": 30
                                                          },
                                                          "end": {
                                                            "row": 172,
                                                            "column": 44
                                                          },
                                                          "text": "catch_warnings"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 172,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 172,
                                                        "column": 57
                                                      },
                                                      "text": "(record=True)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 172,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 172,
                                                            "column": 45
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "keyword_argument",
                                                          "start": {
                                                            "row": 172,
                                                            "column": 45
                                                          },
                                                          "end": {
                                                            "row": 172,
                                                            "column": 56
                                                          },
                                                          "text": "record=True",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 172,
                                                                "column": 45
                                                              },
                                                              "end": {
                                                                "row": 172,
                                                                "column": 51
                                                              },
                                                              "text": "record"
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start": {
                                                                "row": 172,
                                                                "column": 51
                                                              },
                                                              "end": {
                                                                "row": 172,
                                                                "column": 52
                                                              },
                                                              "text": "="
                                                            },
                                                            {
                                                              "type": "true",
                                                              "start": {
                                                                "row": 172,
                                                                "column": 52
                                                              },
                                                              "end": {
                                                                "row": 172,
                                                                "column": 56
                                                              },
                                                              "text": "True"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 172,
                                                            "column": 56
                                                          },
                                                          "end": {
                                                            "row": 172,
                                                            "column": 57
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 172,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 172,
                                            "column": 58
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "comment",
                                          "start": {
                                            "row": 173,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 173,
                                            "column": 76
                                          },
                                          "text": "# TODO: Filter the warnings we actually care about here."
                                        },
                                        {
                                          "type": "block",
                                          "start": {
                                            "row": 174,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 174,
                                            "column": 42
                                          },
                                          "text": "target[assigner] = ret",
                                          "children": [
                                            {
                                              "type": "expression_statement",
                                              "start": {
                                                "row": 174,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 174,
                                                "column": 42
                                              },
                                              "text": "target[assigner] = ret",
                                              "children": [
                                                {
                                                  "type": "assignment",
                                                  "start": {
                                                    "row": 174,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 174,
                                                    "column": 42
                                                  },
                                                  "text": "target[assigner] = ret",
                                                  "children": [
                                                    {
                                                      "type": "subscript",
                                                      "start": {
                                                        "row": 174,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 174,
                                                        "column": 36
                                                      },
                                                      "text": "target[assigner]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 174,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 174,
                                                            "column": 26
                                                          },
                                                          "text": "target"
                                                        },
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 174,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 174,
                                                            "column": 27
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 174,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 174,
                                                            "column": 35
                                                          },
                                                          "text": "assigner"
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 174,
                                                            "column": 35
                                                          },
                                                          "end": {
                                                            "row": 174,
                                                            "column": 36
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 174,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 174,
                                                        "column": 38
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 174,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 174,
                                                        "column": 42
                                                      },
                                                      "text": "ret"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "except_clause",
                                  "start": {
                                    "row": 175,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 176,
                                    "column": 77
                                  },
                                  "text": "except (TypeError, IndexError):\n                raise ValueError(\"Cannot assign expression output to target\")",
                                  "children": [
                                    {
                                      "type": "except",
                                      "start": {
                                        "row": 175,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 175,
                                        "column": 18
                                      },
                                      "text": "except"
                                    },
                                    {
                                      "type": "tuple",
                                      "start": {
                                        "row": 175,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 175,
                                        "column": 42
                                      },
                                      "text": "(TypeError, IndexError)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 175,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 175,
                                            "column": 20
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 175,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 175,
                                            "column": 29
                                          },
                                          "text": "TypeError"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 175,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 175,
                                            "column": 30
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 175,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 175,
                                            "column": 41
                                          },
                                          "text": "IndexError"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 175,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 175,
                                            "column": 42
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 175,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 175,
                                        "column": 43
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 176,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 176,
                                        "column": 77
                                      },
                                      "text": "raise ValueError(\"Cannot assign expression output to target\")",
                                      "children": [
                                        {
                                          "type": "raise_statement",
                                          "start": {
                                            "row": 176,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 176,
                                            "column": 77
                                          },
                                          "text": "raise ValueError(\"Cannot assign expression output to target\")",
                                          "children": [
                                            {
                                              "type": "raise",
                                              "start": {
                                                "row": 176,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 176,
                                                "column": 21
                                              },
                                              "text": "raise"
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 176,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 176,
                                                "column": 77
                                              },
                                              "text": "ValueError(\"Cannot assign expression output to target\")",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 176,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 176,
                                                    "column": 32
                                                  },
                                                  "text": "ValueError"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 176,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 176,
                                                    "column": 77
                                                  },
                                                  "text": "(\"Cannot assign expression output to target\")",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 176,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 176,
                                                        "column": 33
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 176,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 176,
                                                        "column": 76
                                                      },
                                                      "text": "\"Cannot assign expression output to target\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 176,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 176,
                                                            "column": 34
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 176,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 176,
                                                            "column": 75
                                                          },
                                                          "text": "Cannot assign expression output to target"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 176,
                                                            "column": 75
                                                          },
                                                          "end": {
                                                            "row": 176,
                                                            "column": 76
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 176,
                                                        "column": 76
                                                      },
                                                      "end": {
                                                        "row": 176,
                                                        "column": 77
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 178,
                                "column": 12
                              },
                              "end": {
                                "row": 188,
                                "column": 51
                              },
                              "text": "if not resolvers:\n                resolvers = ({assigner: ret},)\n            else:\n                # existing resolver needs updated to handle\n                # case of mutating existing column in copy\n                for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 178,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 178,
                                    "column": 14
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "not_operator",
                                  "start": {
                                    "row": 178,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 178,
                                    "column": 28
                                  },
                                  "text": "not resolvers",
                                  "children": [
                                    {
                                      "type": "not",
                                      "start": {
                                        "row": 178,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 178,
                                        "column": 18
                                      },
                                      "text": "not"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 178,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 178,
                                        "column": 28
                                      },
                                      "text": "resolvers"
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 178,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 178,
                                    "column": 29
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 179,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 179,
                                    "column": 46
                                  },
                                  "text": "resolvers = ({assigner: ret},)",
                                  "children": [
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 179,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 179,
                                        "column": 46
                                      },
                                      "text": "resolvers = ({assigner: ret},)",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 179,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 179,
                                            "column": 46
                                          },
                                          "text": "resolvers = ({assigner: ret},)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 179,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 179,
                                                "column": 25
                                              },
                                              "text": "resolvers"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 179,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 179,
                                                "column": 27
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "tuple",
                                              "start": {
                                                "row": 179,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 179,
                                                "column": 46
                                              },
                                              "text": "({assigner: ret},)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 179,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 179,
                                                    "column": 29
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "dictionary",
                                                  "start": {
                                                    "row": 179,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 179,
                                                    "column": 44
                                                  },
                                                  "text": "{assigner: ret}",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start": {
                                                        "row": 179,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 179,
                                                        "column": 30
                                                      },
                                                      "text": "{"
                                                    },
                                                    {
                                                      "type": "pair",
                                                      "start": {
                                                        "row": 179,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 179,
                                                        "column": 43
                                                      },
                                                      "text": "assigner: ret",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 179,
                                                            "column": 30
                                                          },
                                                          "end": {
                                                            "row": 179,
                                                            "column": 38
                                                          },
                                                          "text": "assigner"
                                                        },
                                                        {
                                                          "type": ":",
                                                          "start": {
                                                            "row": 179,
                                                            "column": 38
                                                          },
                                                          "end": {
                                                            "row": 179,
                                                            "column": 39
                                                          },
                                                          "text": ":"
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 179,
                                                            "column": 40
                                                          },
                                                          "end": {
                                                            "row": 179,
                                                            "column": 43
                                                          },
                                                          "text": "ret"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start": {
                                                        "row": 179,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 179,
                                                        "column": 44
                                                      },
                                                      "text": "}"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 179,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 179,
                                                    "column": 45
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 179,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 179,
                                                    "column": 46
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start": {
                                    "row": 180,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 188,
                                    "column": 51
                                  },
                                  "text": "else:\n                # existing resolver needs updated to handle\n                # case of mutating existing column in copy\n                for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 180,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 180,
                                        "column": 16
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 180,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 180,
                                        "column": 17
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 181,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 181,
                                        "column": 59
                                      },
                                      "text": "# existing resolver needs updated to handle"
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 182,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 182,
                                        "column": 58
                                      },
                                      "text": "# case of mutating existing column in copy"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 183,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 188,
                                        "column": 51
                                      },
                                      "text": "for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)",
                                      "children": [
                                        {
                                          "type": "for_statement",
                                          "start": {
                                            "row": 183,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 188,
                                            "column": 51
                                          },
                                          "text": "for resolver in resolvers:\n                    if assigner in resolver:\n                        resolver[assigner] = ret\n                        break\n                else:\n                    resolvers += ({assigner: ret},)",
                                          "children": [
                                            {
                                              "type": "for",
                                              "start": {
                                                "row": 183,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 183,
                                                "column": 19
                                              },
                                              "text": "for"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 183,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 183,
                                                "column": 28
                                              },
                                              "text": "resolver"
                                            },
                                            {
                                              "type": "in",
                                              "start": {
                                                "row": 183,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 183,
                                                "column": 31
                                              },
                                              "text": "in"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 183,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 183,
                                                "column": 41
                                              },
                                              "text": "resolvers"
                                            },
                                            {
                                              "type": ":",
                                              "start": {
                                                "row": 183,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 183,
                                                "column": 42
                                              },
                                              "text": ":"
                                            },
                                            {
                                              "type": "block",
                                              "start": {
                                                "row": 184,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 186,
                                                "column": 29
                                              },
                                              "text": "if assigner in resolver:\n                        resolver[assigner] = ret\n                        break",
                                              "children": [
                                                {
                                                  "type": "if_statement",
                                                  "start": {
                                                    "row": 184,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 186,
                                                    "column": 29
                                                  },
                                                  "text": "if assigner in resolver:\n                        resolver[assigner] = ret\n                        break",
                                                  "children": [
                                                    {
                                                      "type": "if",
                                                      "start": {
                                                        "row": 184,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 184,
                                                        "column": 22
                                                      },
                                                      "text": "if"
                                                    },
                                                    {
                                                      "type": "comparison_operator",
                                                      "start": {
                                                        "row": 184,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 184,
                                                        "column": 43
                                                      },
                                                      "text": "assigner in resolver",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 184,
                                                            "column": 23
                                                          },
                                                          "end": {
                                                            "row": 184,
                                                            "column": 31
                                                          },
                                                          "text": "assigner"
                                                        },
                                                        {
                                                          "type": "in",
                                                          "start": {
                                                            "row": 184,
                                                            "column": 32
                                                          },
                                                          "end": {
                                                            "row": 184,
                                                            "column": 34
                                                          },
                                                          "text": "in"
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 184,
                                                            "column": 35
                                                          },
                                                          "end": {
                                                            "row": 184,
                                                            "column": 43
                                                          },
                                                          "text": "resolver"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ":",
                                                      "start": {
                                                        "row": 184,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 184,
                                                        "column": 44
                                                      },
                                                      "text": ":"
                                                    },
                                                    {
                                                      "type": "block",
                                                      "start": {
                                                        "row": 185,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 186,
                                                        "column": 29
                                                      },
                                                      "text": "resolver[assigner] = ret\n                        break",
                                                      "children": [
                                                        {
                                                          "type": "expression_statement",
                                                          "start": {
                                                            "row": 185,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 185,
                                                            "column": 48
                                                          },
                                                          "text": "resolver[assigner] = ret",
                                                          "children": [
                                                            {
                                                              "type": "assignment",
                                                              "start": {
                                                                "row": 185,
                                                                "column": 24
                                                              },
                                                              "end": {
                                                                "row": 185,
                                                                "column": 48
                                                              },
                                                              "text": "resolver[assigner] = ret",
                                                              "children": [
                                                                {
                                                                  "type": "subscript",
                                                                  "start": {
                                                                    "row": 185,
                                                                    "column": 24
                                                                  },
                                                                  "end": {
                                                                    "row": 185,
                                                                    "column": 42
                                                                  },
                                                                  "text": "resolver[assigner]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 185,
                                                                        "column": 24
                                                                      },
                                                                      "end": {
                                                                        "row": 185,
                                                                        "column": 32
                                                                      },
                                                                      "text": "resolver"
                                                                    },
                                                                    {
                                                                      "type": "[",
                                                                      "start": {
                                                                        "row": 185,
                                                                        "column": 32
                                                                      },
                                                                      "end": {
                                                                        "row": 185,
                                                                        "column": 33
                                                                      },
                                                                      "text": "["
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start": {
                                                                        "row": 185,
                                                                        "column": 33
                                                                      },
                                                                      "end": {
                                                                        "row": 185,
                                                                        "column": 41
                                                                      },
                                                                      "text": "assigner"
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start": {
                                                                        "row": 185,
                                                                        "column": 41
                                                                      },
                                                                      "end": {
                                                                        "row": 185,
                                                                        "column": 42
                                                                      },
                                                                      "text": "]"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start": {
                                                                    "row": 185,
                                                                    "column": 43
                                                                  },
                                                                  "end": {
                                                                    "row": 185,
                                                                    "column": 44
                                                                  },
                                                                  "text": "="
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 185,
                                                                    "column": 45
                                                                  },
                                                                  "end": {
                                                                    "row": 185,
                                                                    "column": 48
                                                                  },
                                                                  "text": "ret"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "break_statement",
                                                          "start": {
                                                            "row": 186,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 186,
                                                            "column": 29
                                                          },
                                                          "text": "break",
                                                          "children": [
                                                            {
                                                              "type": "break",
                                                              "start": {
                                                                "row": 186,
                                                                "column": 24
                                                              },
                                                              "end": {
                                                                "row": 186,
                                                                "column": 29
                                                              },
                                                              "text": "break"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "else_clause",
                                              "start": {
                                                "row": 187,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 188,
                                                "column": 51
                                              },
                                              "text": "else:\n                    resolvers += ({assigner: ret},)",
                                              "children": [
                                                {
                                                  "type": "else",
                                                  "start": {
                                                    "row": 187,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 187,
                                                    "column": 20
                                                  },
                                                  "text": "else"
                                                },
                                                {
                                                  "type": ":",
                                                  "start": {
                                                    "row": 187,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 187,
                                                    "column": 21
                                                  },
                                                  "text": ":"
                                                },
                                                {
                                                  "type": "block",
                                                  "start": {
                                                    "row": 188,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 188,
                                                    "column": 51
                                                  },
                                                  "text": "resolvers += ({assigner: ret},)",
                                                  "children": [
                                                    {
                                                      "type": "expression_statement",
                                                      "start": {
                                                        "row": 188,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 188,
                                                        "column": 51
                                                      },
                                                      "text": "resolvers += ({assigner: ret},)",
                                                      "children": [
                                                        {
                                                          "type": "augmented_assignment",
                                                          "start": {
                                                            "row": 188,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 188,
                                                            "column": 51
                                                          },
                                                          "text": "resolvers += ({assigner: ret},)",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 188,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 188,
                                                                "column": 29
                                                              },
                                                              "text": "resolvers"
                                                            },
                                                            {
                                                              "type": "+=",
                                                              "start": {
                                                                "row": 188,
                                                                "column": 30
                                                              },
                                                              "end": {
                                                                "row": 188,
                                                                "column": 32
                                                              },
                                                              "text": "+="
                                                            },
                                                            {
                                                              "type": "tuple",
                                                              "start": {
                                                                "row": 188,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 188,
                                                                "column": 51
                                                              },
                                                              "text": "({assigner: ret},)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 188,
                                                                    "column": 33
                                                                  },
                                                                  "end": {
                                                                    "row": 188,
                                                                    "column": 34
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "dictionary",
                                                                  "start": {
                                                                    "row": 188,
                                                                    "column": 34
                                                                  },
                                                                  "end": {
                                                                    "row": 188,
                                                                    "column": 49
                                                                  },
                                                                  "text": "{assigner: ret}",
                                                                  "children": [
                                                                    {
                                                                      "type": "{",
                                                                      "start": {
                                                                        "row": 188,
                                                                        "column": 34
                                                                      },
                                                                      "end": {
                                                                        "row": 188,
                                                                        "column": 35
                                                                      },
                                                                      "text": "{"
                                                                    },
                                                                    {
                                                                      "type": "pair",
                                                                      "start": {
                                                                        "row": 188,
                                                                        "column": 35
                                                                      },
                                                                      "end": {
                                                                        "row": 188,
                                                                        "column": 48
                                                                      },
                                                                      "text": "assigner: ret",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 188,
                                                                            "column": 35
                                                                          },
                                                                          "end": {
                                                                            "row": 188,
                                                                            "column": 43
                                                                          },
                                                                          "text": "assigner"
                                                                        },
                                                                        {
                                                                          "type": ":",
                                                                          "start": {
                                                                            "row": 188,
                                                                            "column": 43
                                                                          },
                                                                          "end": {
                                                                            "row": 188,
                                                                            "column": 44
                                                                          },
                                                                          "text": ":"
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start": {
                                                                            "row": 188,
                                                                            "column": 45
                                                                          },
                                                                          "end": {
                                                                            "row": 188,
                                                                            "column": 48
                                                                          },
                                                                          "text": "ret"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "}",
                                                                      "start": {
                                                                        "row": 188,
                                                                        "column": 48
                                                                      },
                                                                      "end": {
                                                                        "row": 188,
                                                                        "column": 49
                                                                      },
                                                                      "text": "}"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start": {
                                                                    "row": 188,
                                                                    "column": 49
                                                                  },
                                                                  "end": {
                                                                    "row": 188,
                                                                    "column": 50
                                                                  },
                                                                  "text": ","
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 188,
                                                                    "column": 50
                                                                  },
                                                                  "end": {
                                                                    "row": 188,
                                                                    "column": 51
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 190,
                                "column": 12
                              },
                              "end": {
                                "row": 190,
                                "column": 22
                              },
                              "text": "ret = None",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 190,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 190,
                                    "column": 22
                                  },
                                  "text": "ret = None",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 190,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 190,
                                        "column": 15
                                      },
                                      "text": "ret"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 190,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 190,
                                        "column": 17
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "none",
                                      "start": {
                                        "row": 190,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 190,
                                        "column": 22
                                      },
                                      "text": "None"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 191,
                                "column": 12
                              },
                              "end": {
                                "row": 191,
                                "column": 30
                              },
                              "text": "first_expr = False",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 191,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 191,
                                    "column": 30
                                  },
                                  "text": "first_expr = False",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 191,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 191,
                                        "column": 22
                                      },
                                      "text": "first_expr"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 191,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 191,
                                        "column": 24
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "false",
                                      "start": {
                                        "row": 191,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 191,
                                        "column": 30
                                      },
                                      "text": "False"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 193,
                "column": 4
              },
              "end": {
                "row": 193,
                "column": 55
              },
              "text": "# We want to exclude `inplace=None` as being False."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 194,
                "column": 4
              },
              "end": {
                "row": 195,
                "column": 49
              },
              "text": "if inplace is False:\n        return target if target_modified else ret",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 194,
                    "column": 4
                  },
                  "end": {
                    "row": 194,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 194,
                    "column": 7
                  },
                  "end": {
                    "row": 194,
                    "column": 23
                  },
                  "text": "inplace is False",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 194,
                        "column": 7
                      },
                      "end": {
                        "row": 194,
                        "column": 14
                      },
                      "text": "inplace"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 194,
                        "column": 15
                      },
                      "end": {
                        "row": 194,
                        "column": 17
                      },
                      "text": "is"
                    },
                    {
                      "type": "false",
                      "start": {
                        "row": 194,
                        "column": 18
                      },
                      "end": {
                        "row": 194,
                        "column": 23
                      },
                      "text": "False"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 194,
                    "column": 23
                  },
                  "end": {
                    "row": 194,
                    "column": 24
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 195,
                    "column": 8
                  },
                  "end": {
                    "row": 195,
                    "column": 49
                  },
                  "text": "return target if target_modified else ret",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 195,
                        "column": 8
                      },
                      "end": {
                        "row": 195,
                        "column": 49
                      },
                      "text": "return target if target_modified else ret",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 195,
                            "column": 8
                          },
                          "end": {
                            "row": 195,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "conditional_expression",
                          "start": {
                            "row": 195,
                            "column": 15
                          },
                          "end": {
                            "row": 195,
                            "column": 49
                          },
                          "text": "target if target_modified else ret",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 195,
                                "column": 15
                              },
                              "end": {
                                "row": 195,
                                "column": 21
                              },
                              "text": "target"
                            },
                            {
                              "type": "if",
                              "start": {
                                "row": 195,
                                "column": 22
                              },
                              "end": {
                                "row": 195,
                                "column": 24
                              },
                              "text": "if"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 195,
                                "column": 25
                              },
                              "end": {
                                "row": 195,
                                "column": 40
                              },
                              "text": "target_modified"
                            },
                            {
                              "type": "else",
                              "start": {
                                "row": 195,
                                "column": 41
                              },
                              "end": {
                                "row": 195,
                                "column": 45
                              },
                              "text": "else"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 195,
                                "column": 46
                              },
                              "end": {
                                "row": 195,
                                "column": 49
                              },
                              "text": "ret"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}