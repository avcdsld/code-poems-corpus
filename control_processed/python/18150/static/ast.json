{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 23,
    "column": 23
  },
  "text": "def create_namespaced_endpoints(self, namespace, body, **kwargs):\n        \"\"\"\n        create Endpoints\n        This method makes a synchronous HTTP request by default. To make an\n        asynchronous HTTP request, please pass async_req=True\n        >>> thread = api.create_namespaced_endpoints(namespace, body, async_req=True)\n        >>> result = thread.get()\n\n        :param async_req bool\n        :param str namespace: object name and auth scope, such as for teams and projects (required)\n        :param V1Endpoints body: (required)\n        :param str pretty: If 'true', then the output is pretty printed.\n        :param str dry_run: When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n        :param str field_manager: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n        :return: V1Endpoints\n                 If the method is called asynchronously,\n                 returns the request thread.\n        \"\"\"\n        kwargs['_return_http_data_only'] = True\n        if kwargs.get('async_req'):\n            return self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n        else:\n            (data) = self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n            return data",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 23,
        "column": 23
      },
      "text": "def create_namespaced_endpoints(self, namespace, body, **kwargs):\n        \"\"\"\n        create Endpoints\n        This method makes a synchronous HTTP request by default. To make an\n        asynchronous HTTP request, please pass async_req=True\n        >>> thread = api.create_namespaced_endpoints(namespace, body, async_req=True)\n        >>> result = thread.get()\n\n        :param async_req bool\n        :param str namespace: object name and auth scope, such as for teams and projects (required)\n        :param V1Endpoints body: (required)\n        :param str pretty: If 'true', then the output is pretty printed.\n        :param str dry_run: When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n        :param str field_manager: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n        :return: V1Endpoints\n                 If the method is called asynchronously,\n                 returns the request thread.\n        \"\"\"\n        kwargs['_return_http_data_only'] = True\n        if kwargs.get('async_req'):\n            return self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n        else:\n            (data) = self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n            return data",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 31
          },
          "text": "create_namespaced_endpoints"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 31
          },
          "end": {
            "row": 0,
            "column": 64
          },
          "text": "(self, namespace, body, **kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": "namespace"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 49
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": "body"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 53
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 0,
                "column": 55
              },
              "end": {
                "row": 0,
                "column": 63
              },
              "text": "**kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 0,
                    "column": 55
                  },
                  "end": {
                    "row": 0,
                    "column": 57
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 57
                  },
                  "end": {
                    "row": 0,
                    "column": 63
                  },
                  "text": "kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 63
              },
              "end": {
                "row": 0,
                "column": 64
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 64
          },
          "end": {
            "row": 0,
            "column": 65
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 23,
            "column": 23
          },
          "text": "\"\"\"\n        create Endpoints\n        This method makes a synchronous HTTP request by default. To make an\n        asynchronous HTTP request, please pass async_req=True\n        >>> thread = api.create_namespaced_endpoints(namespace, body, async_req=True)\n        >>> result = thread.get()\n\n        :param async_req bool\n        :param str namespace: object name and auth scope, such as for teams and projects (required)\n        :param V1Endpoints body: (required)\n        :param str pretty: If 'true', then the output is pretty printed.\n        :param str dry_run: When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n        :param str field_manager: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n        :return: V1Endpoints\n                 If the method is called asynchronously,\n                 returns the request thread.\n        \"\"\"\n        kwargs['_return_http_data_only'] = True\n        if kwargs.get('async_req'):\n            return self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n        else:\n            (data) = self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n            return data",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 11
              },
              "text": "\"\"\"\n        create Endpoints\n        This method makes a synchronous HTTP request by default. To make an\n        asynchronous HTTP request, please pass async_req=True\n        >>> thread = api.create_namespaced_endpoints(namespace, body, async_req=True)\n        >>> result = thread.get()\n\n        :param async_req bool\n        :param str namespace: object name and auth scope, such as for teams and projects (required)\n        :param V1Endpoints body: (required)\n        :param str pretty: If 'true', then the output is pretty printed.\n        :param str dry_run: When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n        :param str field_manager: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n        :return: V1Endpoints\n                 If the method is called asynchronously,\n                 returns the request thread.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 11
                  },
                  "text": "\"\"\"\n        create Endpoints\n        This method makes a synchronous HTTP request by default. To make an\n        asynchronous HTTP request, please pass async_req=True\n        >>> thread = api.create_namespaced_endpoints(namespace, body, async_req=True)\n        >>> result = thread.get()\n\n        :param async_req bool\n        :param str namespace: object name and auth scope, such as for teams and projects (required)\n        :param V1Endpoints body: (required)\n        :param str pretty: If 'true', then the output is pretty printed.\n        :param str dry_run: When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n        :param str field_manager: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n        :return: V1Endpoints\n                 If the method is called asynchronously,\n                 returns the request thread.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 17,
                        "column": 8
                      },
                      "text": "\n        create Endpoints\n        This method makes a synchronous HTTP request by default. To make an\n        asynchronous HTTP request, please pass async_req=True\n        >>> thread = api.create_namespaced_endpoints(namespace, body, async_req=True)\n        >>> result = thread.get()\n\n        :param async_req bool\n        :param str namespace: object name and auth scope, such as for teams and projects (required)\n        :param V1Endpoints body: (required)\n        :param str pretty: If 'true', then the output is pretty printed.\n        :param str dry_run: When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\n        :param str field_manager: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\n        :return: V1Endpoints\n                 If the method is called asynchronously,\n                 returns the request thread.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 47
              },
              "text": "kwargs['_return_http_data_only'] = True",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 47
                  },
                  "text": "kwargs['_return_http_data_only'] = True",
                  "children": [
                    {
                      "type": "subscript",
                      "start": {
                        "row": 18,
                        "column": 8
                      },
                      "end": {
                        "row": 18,
                        "column": 40
                      },
                      "text": "kwargs['_return_http_data_only']",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 8
                          },
                          "end": {
                            "row": 18,
                            "column": 14
                          },
                          "text": "kwargs"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 18,
                            "column": 14
                          },
                          "end": {
                            "row": 18,
                            "column": 15
                          },
                          "text": "["
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 18,
                            "column": 15
                          },
                          "end": {
                            "row": 18,
                            "column": 39
                          },
                          "text": "'_return_http_data_only'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 18,
                                "column": 15
                              },
                              "end": {
                                "row": 18,
                                "column": 16
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 18,
                                "column": 16
                              },
                              "end": {
                                "row": 18,
                                "column": 38
                              },
                              "text": "_return_http_data_only"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 18,
                                "column": 38
                              },
                              "end": {
                                "row": 18,
                                "column": 39
                              },
                              "text": "'"
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 18,
                            "column": 39
                          },
                          "end": {
                            "row": 18,
                            "column": 40
                          },
                          "text": "]"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 18,
                        "column": 41
                      },
                      "end": {
                        "row": 18,
                        "column": 42
                      },
                      "text": "="
                    },
                    {
                      "type": "true",
                      "start": {
                        "row": 18,
                        "column": 43
                      },
                      "end": {
                        "row": 18,
                        "column": 47
                      },
                      "text": "True"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 23
              },
              "text": "if kwargs.get('async_req'):\n            return self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n        else:\n            (data) = self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n            return data",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 19,
                    "column": 11
                  },
                  "end": {
                    "row": 19,
                    "column": 34
                  },
                  "text": "kwargs.get('async_req')",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 19,
                        "column": 11
                      },
                      "end": {
                        "row": 19,
                        "column": 21
                      },
                      "text": "kwargs.get",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 11
                          },
                          "end": {
                            "row": 19,
                            "column": 17
                          },
                          "text": "kwargs"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 19,
                            "column": 17
                          },
                          "end": {
                            "row": 19,
                            "column": 18
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 18
                          },
                          "end": {
                            "row": 19,
                            "column": 21
                          },
                          "text": "get"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 19,
                        "column": 21
                      },
                      "end": {
                        "row": 19,
                        "column": 34
                      },
                      "text": "('async_req')",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 19,
                            "column": 21
                          },
                          "end": {
                            "row": 19,
                            "column": 22
                          },
                          "text": "("
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 19,
                            "column": 22
                          },
                          "end": {
                            "row": 19,
                            "column": 33
                          },
                          "text": "'async_req'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 19,
                                "column": 22
                              },
                              "end": {
                                "row": 19,
                                "column": 23
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 19,
                                "column": 23
                              },
                              "end": {
                                "row": 19,
                                "column": 32
                              },
                              "text": "async_req"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 19,
                                "column": 32
                              },
                              "end": {
                                "row": 19,
                                "column": 33
                              },
                              "text": "'"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 19,
                            "column": 33
                          },
                          "end": {
                            "row": 19,
                            "column": 34
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 19,
                    "column": 34
                  },
                  "end": {
                    "row": 19,
                    "column": 35
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 20,
                    "column": 12
                  },
                  "end": {
                    "row": 20,
                    "column": 93
                  },
                  "text": "return self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 20,
                        "column": 12
                      },
                      "end": {
                        "row": 20,
                        "column": 93
                      },
                      "text": "return self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 20,
                            "column": 12
                          },
                          "end": {
                            "row": 20,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 20,
                            "column": 19
                          },
                          "end": {
                            "row": 20,
                            "column": 93
                          },
                          "text": "self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 20,
                                "column": 19
                              },
                              "end": {
                                "row": 20,
                                "column": 66
                              },
                              "text": "self.create_namespaced_endpoints_with_http_info",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 23
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 24
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 66
                                  },
                                  "text": "create_namespaced_endpoints_with_http_info"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 20,
                                "column": 66
                              },
                              "end": {
                                "row": 20,
                                "column": 93
                              },
                              "text": "(namespace, body, **kwargs)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 20,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 67
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 76
                                  },
                                  "text": "namespace"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 20,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 77
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 78
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 82
                                  },
                                  "text": "body"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 20,
                                    "column": 82
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 83
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "dictionary_splat",
                                  "start": {
                                    "row": 20,
                                    "column": 84
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 92
                                  },
                                  "text": "**kwargs",
                                  "children": [
                                    {
                                      "type": "**",
                                      "start": {
                                        "row": 20,
                                        "column": 84
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 86
                                      },
                                      "text": "**"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 20,
                                        "column": 86
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 92
                                      },
                                      "text": "kwargs"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 20,
                                    "column": 92
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 93
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 23
                  },
                  "text": "else:\n            (data) = self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n            return data",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 21,
                        "column": 12
                      },
                      "end": {
                        "row": 21,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 22,
                        "column": 12
                      },
                      "end": {
                        "row": 23,
                        "column": 23
                      },
                      "text": "(data) = self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)\n            return data",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 22,
                            "column": 12
                          },
                          "end": {
                            "row": 22,
                            "column": 95
                          },
                          "text": "(data) = self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 22,
                                "column": 12
                              },
                              "end": {
                                "row": 22,
                                "column": 95
                              },
                              "text": "(data) = self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)",
                              "children": [
                                {
                                  "type": "tuple_pattern",
                                  "start": {
                                    "row": 22,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 18
                                  },
                                  "text": "(data)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 22,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 13
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 17
                                      },
                                      "text": "data"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 22,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 18
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 22,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 20
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 22,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 95
                                  },
                                  "text": "self.create_namespaced_endpoints_with_http_info(namespace, body, **kwargs)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 22,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 68
                                      },
                                      "text": "self.create_namespaced_endpoints_with_http_info",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 25
                                          },
                                          "text": "self"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 22,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 26
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 68
                                          },
                                          "text": "create_namespaced_endpoints_with_http_info"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 22,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 95
                                      },
                                      "text": "(namespace, body, **kwargs)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 22,
                                            "column": 68
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 69
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 69
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 78
                                          },
                                          "text": "namespace"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 22,
                                            "column": 78
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 79
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 80
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 84
                                          },
                                          "text": "body"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 22,
                                            "column": 84
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 85
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "dictionary_splat",
                                          "start": {
                                            "row": 22,
                                            "column": 86
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 94
                                          },
                                          "text": "**kwargs",
                                          "children": [
                                            {
                                              "type": "**",
                                              "start": {
                                                "row": 22,
                                                "column": 86
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 88
                                              },
                                              "text": "**"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 88
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 94
                                              },
                                              "text": "kwargs"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 22,
                                            "column": 94
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 95
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 23,
                            "column": 12
                          },
                          "end": {
                            "row": 23,
                            "column": 23
                          },
                          "text": "return data",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 18
                              },
                              "text": "return"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 19
                              },
                              "end": {
                                "row": 23,
                                "column": 23
                              },
                              "text": "data"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}