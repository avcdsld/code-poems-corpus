{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 86,
    "column": 31
  },
  "text": "def create(graph, reset_probability=0.15,\n           threshold=1e-2,\n           max_iterations=20,\n           _single_precision=False,\n           _distributed='auto',\n           verbose=True):\n    \"\"\"\n    Compute the PageRank for each vertex in the graph. Return a model object\n    with total PageRank as well as the PageRank value for each vertex in the\n    graph.\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the pagerank value.\n\n    reset_probability : float, optional\n        Probability that a random surfer jumps to an arbitrary page.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the L1 norm\n        (the sum of absolute value) of the delta of each vertex's\n        pagerank value.\n\n    max_iterations : int, optional\n        The maximum number of iterations to run.\n\n    _single_precision : bool, optional\n        If true, running pagerank in single precision. The resulting\n        pagerank values may not be accurate for large graph, but\n        should run faster and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n\n    Returns\n    -------\n    out : PagerankModel\n\n    References\n    ----------\n    - `Wikipedia - PageRank <http://en.wikipedia.org/wiki/PageRank>`_\n    - Page, L., et al. (1998) `The PageRank Citation Ranking: Bringing Order to\n      the Web <http://ilpubs.stanford.edu:8090/422/1/1999-66.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.pagerank.PageRankModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz', format='snap')\n    >>> pr = turicreate.pagerank.create(g)\n\n    We can obtain the page rank corresponding to each vertex in the graph ``g``\n    using:\n\n    >>> pr_out = pr['pagerank']     # SFrame\n\n    We can add the new pagerank field to the original graph g using:\n\n    >>> g.vertices['pagerank'] = pr['graph'].vertices['pagerank']\n\n    Note that the task above does not require a join because the vertex\n    ordering is preserved through ``create()``.\n\n    See Also\n    --------\n    PagerankModel\n    \"\"\"\n    from turicreate._cython.cy_server import QuietProgress\n\n    if not isinstance(graph, _SGraph):\n        raise TypeError('graph input must be a SGraph object.')\n\n    opts = {'threshold': threshold, 'reset_probability': reset_probability,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}\n\n    with QuietProgress(verbose):\n        params = _tc.extensions._toolkits.graph.pagerank.create(opts)\n    model = params['model']\n\n    return PagerankModel(model)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 86,
        "column": 31
      },
      "text": "def create(graph, reset_probability=0.15,\n           threshold=1e-2,\n           max_iterations=20,\n           _single_precision=False,\n           _distributed='auto',\n           verbose=True):\n    \"\"\"\n    Compute the PageRank for each vertex in the graph. Return a model object\n    with total PageRank as well as the PageRank value for each vertex in the\n    graph.\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the pagerank value.\n\n    reset_probability : float, optional\n        Probability that a random surfer jumps to an arbitrary page.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the L1 norm\n        (the sum of absolute value) of the delta of each vertex's\n        pagerank value.\n\n    max_iterations : int, optional\n        The maximum number of iterations to run.\n\n    _single_precision : bool, optional\n        If true, running pagerank in single precision. The resulting\n        pagerank values may not be accurate for large graph, but\n        should run faster and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n\n    Returns\n    -------\n    out : PagerankModel\n\n    References\n    ----------\n    - `Wikipedia - PageRank <http://en.wikipedia.org/wiki/PageRank>`_\n    - Page, L., et al. (1998) `The PageRank Citation Ranking: Bringing Order to\n      the Web <http://ilpubs.stanford.edu:8090/422/1/1999-66.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.pagerank.PageRankModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz', format='snap')\n    >>> pr = turicreate.pagerank.create(g)\n\n    We can obtain the page rank corresponding to each vertex in the graph ``g``\n    using:\n\n    >>> pr_out = pr['pagerank']     # SFrame\n\n    We can add the new pagerank field to the original graph g using:\n\n    >>> g.vertices['pagerank'] = pr['graph'].vertices['pagerank']\n\n    Note that the task above does not require a join because the vertex\n    ordering is preserved through ``create()``.\n\n    See Also\n    --------\n    PagerankModel\n    \"\"\"\n    from turicreate._cython.cy_server import QuietProgress\n\n    if not isinstance(graph, _SGraph):\n        raise TypeError('graph input must be a SGraph object.')\n\n    opts = {'threshold': threshold, 'reset_probability': reset_probability,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}\n\n    with QuietProgress(verbose):\n        params = _tc.extensions._toolkits.graph.pagerank.create(opts)\n    model = params['model']\n\n    return PagerankModel(model)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "create"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 5,
            "column": 24
          },
          "text": "(graph, reset_probability=0.15,\n           threshold=1e-2,\n           max_iterations=20,\n           _single_precision=False,\n           _distributed='auto',\n           verbose=True)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "graph"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "reset_probability=0.15",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 18
                  },
                  "end": {
                    "row": 0,
                    "column": 35
                  },
                  "text": "reset_probability"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 35
                  },
                  "end": {
                    "row": 0,
                    "column": 36
                  },
                  "text": "="
                },
                {
                  "type": "float",
                  "start": {
                    "row": 0,
                    "column": 36
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "0.15"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 11
              },
              "end": {
                "row": 1,
                "column": 25
              },
              "text": "threshold=1e-2",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 11
                  },
                  "end": {
                    "row": 1,
                    "column": 20
                  },
                  "text": "threshold"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 20
                  },
                  "end": {
                    "row": 1,
                    "column": 21
                  },
                  "text": "="
                },
                {
                  "type": "float",
                  "start": {
                    "row": 1,
                    "column": 21
                  },
                  "end": {
                    "row": 1,
                    "column": 25
                  },
                  "text": "1e-2"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 25
              },
              "end": {
                "row": 1,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 11
              },
              "end": {
                "row": 2,
                "column": 28
              },
              "text": "max_iterations=20",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 11
                  },
                  "end": {
                    "row": 2,
                    "column": 25
                  },
                  "text": "max_iterations"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 25
                  },
                  "end": {
                    "row": 2,
                    "column": 26
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 2,
                    "column": 26
                  },
                  "end": {
                    "row": 2,
                    "column": 28
                  },
                  "text": "20"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 28
              },
              "end": {
                "row": 2,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 11
              },
              "end": {
                "row": 3,
                "column": 34
              },
              "text": "_single_precision=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 11
                  },
                  "end": {
                    "row": 3,
                    "column": 28
                  },
                  "text": "_single_precision"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 28
                  },
                  "end": {
                    "row": 3,
                    "column": 29
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 3,
                    "column": 29
                  },
                  "end": {
                    "row": 3,
                    "column": 34
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 34
              },
              "end": {
                "row": 3,
                "column": 35
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 4,
                "column": 11
              },
              "end": {
                "row": 4,
                "column": 30
              },
              "text": "_distributed='auto'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 11
                  },
                  "end": {
                    "row": 4,
                    "column": 23
                  },
                  "text": "_distributed"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 23
                  },
                  "end": {
                    "row": 4,
                    "column": 24
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 4,
                    "column": 24
                  },
                  "end": {
                    "row": 4,
                    "column": 30
                  },
                  "text": "'auto'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 4,
                        "column": 24
                      },
                      "end": {
                        "row": 4,
                        "column": 25
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 4,
                        "column": 25
                      },
                      "end": {
                        "row": 4,
                        "column": 29
                      },
                      "text": "auto"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 4,
                        "column": 29
                      },
                      "end": {
                        "row": 4,
                        "column": 30
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 30
              },
              "end": {
                "row": 4,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 5,
                "column": 11
              },
              "end": {
                "row": 5,
                "column": 23
              },
              "text": "verbose=True",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 11
                  },
                  "end": {
                    "row": 5,
                    "column": 18
                  },
                  "text": "verbose"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 18
                  },
                  "end": {
                    "row": 5,
                    "column": 19
                  },
                  "text": "="
                },
                {
                  "type": "true",
                  "start": {
                    "row": 5,
                    "column": 19
                  },
                  "end": {
                    "row": 5,
                    "column": 23
                  },
                  "text": "True"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 5,
                "column": 23
              },
              "end": {
                "row": 5,
                "column": 24
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 5,
            "column": 24
          },
          "end": {
            "row": 5,
            "column": 25
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 6,
            "column": 4
          },
          "end": {
            "row": 86,
            "column": 31
          },
          "text": "\"\"\"\n    Compute the PageRank for each vertex in the graph. Return a model object\n    with total PageRank as well as the PageRank value for each vertex in the\n    graph.\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the pagerank value.\n\n    reset_probability : float, optional\n        Probability that a random surfer jumps to an arbitrary page.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the L1 norm\n        (the sum of absolute value) of the delta of each vertex's\n        pagerank value.\n\n    max_iterations : int, optional\n        The maximum number of iterations to run.\n\n    _single_precision : bool, optional\n        If true, running pagerank in single precision. The resulting\n        pagerank values may not be accurate for large graph, but\n        should run faster and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n\n    Returns\n    -------\n    out : PagerankModel\n\n    References\n    ----------\n    - `Wikipedia - PageRank <http://en.wikipedia.org/wiki/PageRank>`_\n    - Page, L., et al. (1998) `The PageRank Citation Ranking: Bringing Order to\n      the Web <http://ilpubs.stanford.edu:8090/422/1/1999-66.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.pagerank.PageRankModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz', format='snap')\n    >>> pr = turicreate.pagerank.create(g)\n\n    We can obtain the page rank corresponding to each vertex in the graph ``g``\n    using:\n\n    >>> pr_out = pr['pagerank']     # SFrame\n\n    We can add the new pagerank field to the original graph g using:\n\n    >>> g.vertices['pagerank'] = pr['graph'].vertices['pagerank']\n\n    Note that the task above does not require a join because the vertex\n    ordering is preserved through ``create()``.\n\n    See Also\n    --------\n    PagerankModel\n    \"\"\"\n    from turicreate._cython.cy_server import QuietProgress\n\n    if not isinstance(graph, _SGraph):\n        raise TypeError('graph input must be a SGraph object.')\n\n    opts = {'threshold': threshold, 'reset_probability': reset_probability,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}\n\n    with QuietProgress(verbose):\n        params = _tc.extensions._toolkits.graph.pagerank.create(opts)\n    model = params['model']\n\n    return PagerankModel(model)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 71,
                "column": 7
              },
              "text": "\"\"\"\n    Compute the PageRank for each vertex in the graph. Return a model object\n    with total PageRank as well as the PageRank value for each vertex in the\n    graph.\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the pagerank value.\n\n    reset_probability : float, optional\n        Probability that a random surfer jumps to an arbitrary page.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the L1 norm\n        (the sum of absolute value) of the delta of each vertex's\n        pagerank value.\n\n    max_iterations : int, optional\n        The maximum number of iterations to run.\n\n    _single_precision : bool, optional\n        If true, running pagerank in single precision. The resulting\n        pagerank values may not be accurate for large graph, but\n        should run faster and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n\n    Returns\n    -------\n    out : PagerankModel\n\n    References\n    ----------\n    - `Wikipedia - PageRank <http://en.wikipedia.org/wiki/PageRank>`_\n    - Page, L., et al. (1998) `The PageRank Citation Ranking: Bringing Order to\n      the Web <http://ilpubs.stanford.edu:8090/422/1/1999-66.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.pagerank.PageRankModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz', format='snap')\n    >>> pr = turicreate.pagerank.create(g)\n\n    We can obtain the page rank corresponding to each vertex in the graph ``g``\n    using:\n\n    >>> pr_out = pr['pagerank']     # SFrame\n\n    We can add the new pagerank field to the original graph g using:\n\n    >>> g.vertices['pagerank'] = pr['graph'].vertices['pagerank']\n\n    Note that the task above does not require a join because the vertex\n    ordering is preserved through ``create()``.\n\n    See Also\n    --------\n    PagerankModel\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 71,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Compute the PageRank for each vertex in the graph. Return a model object\n    with total PageRank as well as the PageRank value for each vertex in the\n    graph.\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the pagerank value.\n\n    reset_probability : float, optional\n        Probability that a random surfer jumps to an arbitrary page.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the L1 norm\n        (the sum of absolute value) of the delta of each vertex's\n        pagerank value.\n\n    max_iterations : int, optional\n        The maximum number of iterations to run.\n\n    _single_precision : bool, optional\n        If true, running pagerank in single precision. The resulting\n        pagerank values may not be accurate for large graph, but\n        should run faster and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n\n    Returns\n    -------\n    out : PagerankModel\n\n    References\n    ----------\n    - `Wikipedia - PageRank <http://en.wikipedia.org/wiki/PageRank>`_\n    - Page, L., et al. (1998) `The PageRank Citation Ranking: Bringing Order to\n      the Web <http://ilpubs.stanford.edu:8090/422/1/1999-66.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.pagerank.PageRankModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz', format='snap')\n    >>> pr = turicreate.pagerank.create(g)\n\n    We can obtain the page rank corresponding to each vertex in the graph ``g``\n    using:\n\n    >>> pr_out = pr['pagerank']     # SFrame\n\n    We can add the new pagerank field to the original graph g using:\n\n    >>> g.vertices['pagerank'] = pr['graph'].vertices['pagerank']\n\n    Note that the task above does not require a join because the vertex\n    ordering is preserved through ``create()``.\n\n    See Also\n    --------\n    PagerankModel\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 6,
                        "column": 4
                      },
                      "end": {
                        "row": 6,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 6,
                        "column": 7
                      },
                      "end": {
                        "row": 71,
                        "column": 4
                      },
                      "text": "\n    Compute the PageRank for each vertex in the graph. Return a model object\n    with total PageRank as well as the PageRank value for each vertex in the\n    graph.\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the pagerank value.\n\n    reset_probability : float, optional\n        Probability that a random surfer jumps to an arbitrary page.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the L1 norm\n        (the sum of absolute value) of the delta of each vertex's\n        pagerank value.\n\n    max_iterations : int, optional\n        The maximum number of iterations to run.\n\n    _single_precision : bool, optional\n        If true, running pagerank in single precision. The resulting\n        pagerank values may not be accurate for large graph, but\n        should run faster and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n\n    Returns\n    -------\n    out : PagerankModel\n\n    References\n    ----------\n    - `Wikipedia - PageRank <http://en.wikipedia.org/wiki/PageRank>`_\n    - Page, L., et al. (1998) `The PageRank Citation Ranking: Bringing Order to\n      the Web <http://ilpubs.stanford.edu:8090/422/1/1999-66.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.pagerank.PageRankModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz', format='snap')\n    >>> pr = turicreate.pagerank.create(g)\n\n    We can obtain the page rank corresponding to each vertex in the graph ``g``\n    using:\n\n    >>> pr_out = pr['pagerank']     # SFrame\n\n    We can add the new pagerank field to the original graph g using:\n\n    >>> g.vertices['pagerank'] = pr['graph'].vertices['pagerank']\n\n    Note that the task above does not require a join because the vertex\n    ordering is preserved through ``create()``.\n\n    See Also\n    --------\n    PagerankModel\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 71,
                        "column": 4
                      },
                      "end": {
                        "row": 71,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "import_from_statement",
              "start": {
                "row": 72,
                "column": 4
              },
              "end": {
                "row": 72,
                "column": 58
              },
              "text": "from turicreate._cython.cy_server import QuietProgress",
              "children": [
                {
                  "type": "from",
                  "start": {
                    "row": 72,
                    "column": 4
                  },
                  "end": {
                    "row": 72,
                    "column": 8
                  },
                  "text": "from"
                },
                {
                  "type": "dotted_name",
                  "start": {
                    "row": 72,
                    "column": 9
                  },
                  "end": {
                    "row": 72,
                    "column": 37
                  },
                  "text": "turicreate._cython.cy_server",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 72,
                        "column": 9
                      },
                      "end": {
                        "row": 72,
                        "column": 19
                      },
                      "text": "turicreate"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 72,
                        "column": 19
                      },
                      "end": {
                        "row": 72,
                        "column": 20
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 72,
                        "column": 20
                      },
                      "end": {
                        "row": 72,
                        "column": 27
                      },
                      "text": "_cython"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 72,
                        "column": 27
                      },
                      "end": {
                        "row": 72,
                        "column": 28
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 72,
                        "column": 28
                      },
                      "end": {
                        "row": 72,
                        "column": 37
                      },
                      "text": "cy_server"
                    }
                  ]
                },
                {
                  "type": "import",
                  "start": {
                    "row": 72,
                    "column": 38
                  },
                  "end": {
                    "row": 72,
                    "column": 44
                  },
                  "text": "import"
                },
                {
                  "type": "dotted_name",
                  "start": {
                    "row": 72,
                    "column": 45
                  },
                  "end": {
                    "row": 72,
                    "column": 58
                  },
                  "text": "QuietProgress",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 72,
                        "column": 45
                      },
                      "end": {
                        "row": 72,
                        "column": 58
                      },
                      "text": "QuietProgress"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 74,
                "column": 4
              },
              "end": {
                "row": 75,
                "column": 63
              },
              "text": "if not isinstance(graph, _SGraph):\n        raise TypeError('graph input must be a SGraph object.')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 74,
                    "column": 4
                  },
                  "end": {
                    "row": 74,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 74,
                    "column": 7
                  },
                  "end": {
                    "row": 74,
                    "column": 37
                  },
                  "text": "not isinstance(graph, _SGraph)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 74,
                        "column": 7
                      },
                      "end": {
                        "row": 74,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 74,
                        "column": 11
                      },
                      "end": {
                        "row": 74,
                        "column": 37
                      },
                      "text": "isinstance(graph, _SGraph)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 74,
                            "column": 11
                          },
                          "end": {
                            "row": 74,
                            "column": 21
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 74,
                            "column": 21
                          },
                          "end": {
                            "row": 74,
                            "column": 37
                          },
                          "text": "(graph, _SGraph)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 74,
                                "column": 21
                              },
                              "end": {
                                "row": 74,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 74,
                                "column": 22
                              },
                              "end": {
                                "row": 74,
                                "column": 27
                              },
                              "text": "graph"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 74,
                                "column": 27
                              },
                              "end": {
                                "row": 74,
                                "column": 28
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 74,
                                "column": 29
                              },
                              "end": {
                                "row": 74,
                                "column": 36
                              },
                              "text": "_SGraph"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 74,
                                "column": 36
                              },
                              "end": {
                                "row": 74,
                                "column": 37
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 74,
                    "column": 37
                  },
                  "end": {
                    "row": 74,
                    "column": 38
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 75,
                    "column": 8
                  },
                  "end": {
                    "row": 75,
                    "column": 63
                  },
                  "text": "raise TypeError('graph input must be a SGraph object.')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 75,
                        "column": 8
                      },
                      "end": {
                        "row": 75,
                        "column": 63
                      },
                      "text": "raise TypeError('graph input must be a SGraph object.')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 75,
                            "column": 8
                          },
                          "end": {
                            "row": 75,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 75,
                            "column": 14
                          },
                          "end": {
                            "row": 75,
                            "column": 63
                          },
                          "text": "TypeError('graph input must be a SGraph object.')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 75,
                                "column": 14
                              },
                              "end": {
                                "row": 75,
                                "column": 23
                              },
                              "text": "TypeError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 75,
                                "column": 23
                              },
                              "end": {
                                "row": 75,
                                "column": 63
                              },
                              "text": "('graph input must be a SGraph object.')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 75,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 24
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 75,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 62
                                  },
                                  "text": "'graph input must be a SGraph object.'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 75,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 25
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 75,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 61
                                      },
                                      "text": "graph input must be a SGraph object."
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 75,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 62
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 75,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 63
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 77,
                "column": 4
              },
              "end": {
                "row": 80,
                "column": 37
              },
              "text": "opts = {'threshold': threshold, 'reset_probability': reset_probability,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 77,
                    "column": 4
                  },
                  "end": {
                    "row": 80,
                    "column": 37
                  },
                  "text": "opts = {'threshold': threshold, 'reset_probability': reset_probability,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 77,
                        "column": 4
                      },
                      "end": {
                        "row": 77,
                        "column": 8
                      },
                      "text": "opts"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 77,
                        "column": 9
                      },
                      "end": {
                        "row": 77,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "dictionary",
                      "start": {
                        "row": 77,
                        "column": 11
                      },
                      "end": {
                        "row": 80,
                        "column": 37
                      },
                      "text": "{'threshold': threshold, 'reset_probability': reset_probability,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 77,
                            "column": 11
                          },
                          "end": {
                            "row": 77,
                            "column": 12
                          },
                          "text": "{"
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 77,
                            "column": 12
                          },
                          "end": {
                            "row": 77,
                            "column": 34
                          },
                          "text": "'threshold': threshold",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 77,
                                "column": 12
                              },
                              "end": {
                                "row": 77,
                                "column": 23
                              },
                              "text": "'threshold'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 77,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 77,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 22
                                  },
                                  "text": "threshold"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 77,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 23
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 77,
                                "column": 23
                              },
                              "end": {
                                "row": 77,
                                "column": 24
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 77,
                                "column": 25
                              },
                              "end": {
                                "row": 77,
                                "column": 34
                              },
                              "text": "threshold"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 77,
                            "column": 34
                          },
                          "end": {
                            "row": 77,
                            "column": 35
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 77,
                            "column": 36
                          },
                          "end": {
                            "row": 77,
                            "column": 74
                          },
                          "text": "'reset_probability': reset_probability",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 77,
                                "column": 36
                              },
                              "end": {
                                "row": 77,
                                "column": 55
                              },
                              "text": "'reset_probability'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 77,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 37
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 77,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 54
                                  },
                                  "text": "reset_probability"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 77,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 55
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 77,
                                "column": 55
                              },
                              "end": {
                                "row": 77,
                                "column": 56
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 77,
                                "column": 57
                              },
                              "end": {
                                "row": 77,
                                "column": 74
                              },
                              "text": "reset_probability"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 77,
                            "column": 74
                          },
                          "end": {
                            "row": 77,
                            "column": 75
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 78,
                            "column": 12
                          },
                          "end": {
                            "row": 78,
                            "column": 44
                          },
                          "text": "'max_iterations': max_iterations",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 78,
                                "column": 12
                              },
                              "end": {
                                "row": 78,
                                "column": 28
                              },
                              "text": "'max_iterations'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 78,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 78,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 27
                                  },
                                  "text": "max_iterations"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 78,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 28
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 78,
                                "column": 28
                              },
                              "end": {
                                "row": 78,
                                "column": 29
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 78,
                                "column": 30
                              },
                              "end": {
                                "row": 78,
                                "column": 44
                              },
                              "text": "max_iterations"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 78,
                            "column": 44
                          },
                          "end": {
                            "row": 78,
                            "column": 45
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 79,
                            "column": 12
                          },
                          "end": {
                            "row": 79,
                            "column": 49
                          },
                          "text": "'single_precision': _single_precision",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 79,
                                "column": 12
                              },
                              "end": {
                                "row": 79,
                                "column": 30
                              },
                              "text": "'single_precision'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 79,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 79,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 79,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 79,
                                    "column": 29
                                  },
                                  "text": "single_precision"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 79,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 79,
                                    "column": 30
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 79,
                                "column": 30
                              },
                              "end": {
                                "row": 79,
                                "column": 31
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 79,
                                "column": 32
                              },
                              "end": {
                                "row": 79,
                                "column": 49
                              },
                              "text": "_single_precision"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 79,
                            "column": 49
                          },
                          "end": {
                            "row": 79,
                            "column": 50
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 80,
                            "column": 12
                          },
                          "end": {
                            "row": 80,
                            "column": 36
                          },
                          "text": "'graph': graph.__proxy__",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 80,
                                "column": 12
                              },
                              "end": {
                                "row": 80,
                                "column": 19
                              },
                              "text": "'graph'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 80,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 80,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 80,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 80,
                                    "column": 18
                                  },
                                  "text": "graph"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 80,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 80,
                                    "column": 19
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 80,
                                "column": 19
                              },
                              "end": {
                                "row": 80,
                                "column": 20
                              },
                              "text": ":"
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 80,
                                "column": 21
                              },
                              "end": {
                                "row": 80,
                                "column": 36
                              },
                              "text": "graph.__proxy__",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 80,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 80,
                                    "column": 26
                                  },
                                  "text": "graph"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 80,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 80,
                                    "column": 27
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 80,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 80,
                                    "column": 36
                                  },
                                  "text": "__proxy__"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 80,
                            "column": 36
                          },
                          "end": {
                            "row": 80,
                            "column": 37
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "with_statement",
              "start": {
                "row": 82,
                "column": 4
              },
              "end": {
                "row": 83,
                "column": 69
              },
              "text": "with QuietProgress(verbose):\n        params = _tc.extensions._toolkits.graph.pagerank.create(opts)",
              "children": [
                {
                  "type": "with",
                  "start": {
                    "row": 82,
                    "column": 4
                  },
                  "end": {
                    "row": 82,
                    "column": 8
                  },
                  "text": "with"
                },
                {
                  "type": "with_clause",
                  "start": {
                    "row": 82,
                    "column": 9
                  },
                  "end": {
                    "row": 82,
                    "column": 31
                  },
                  "text": "QuietProgress(verbose)",
                  "children": [
                    {
                      "type": "with_item",
                      "start": {
                        "row": 82,
                        "column": 9
                      },
                      "end": {
                        "row": 82,
                        "column": 31
                      },
                      "text": "QuietProgress(verbose)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 82,
                            "column": 9
                          },
                          "end": {
                            "row": 82,
                            "column": 31
                          },
                          "text": "QuietProgress(verbose)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 82,
                                "column": 9
                              },
                              "end": {
                                "row": 82,
                                "column": 22
                              },
                              "text": "QuietProgress"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 82,
                                "column": 22
                              },
                              "end": {
                                "row": 82,
                                "column": 31
                              },
                              "text": "(verbose)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 82,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 82,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 82,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 82,
                                    "column": 30
                                  },
                                  "text": "verbose"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 82,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 82,
                                    "column": 31
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 82,
                    "column": 31
                  },
                  "end": {
                    "row": 82,
                    "column": 32
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 83,
                    "column": 8
                  },
                  "end": {
                    "row": 83,
                    "column": 69
                  },
                  "text": "params = _tc.extensions._toolkits.graph.pagerank.create(opts)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 83,
                        "column": 8
                      },
                      "end": {
                        "row": 83,
                        "column": 69
                      },
                      "text": "params = _tc.extensions._toolkits.graph.pagerank.create(opts)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 83,
                            "column": 8
                          },
                          "end": {
                            "row": 83,
                            "column": 69
                          },
                          "text": "params = _tc.extensions._toolkits.graph.pagerank.create(opts)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 83,
                                "column": 8
                              },
                              "end": {
                                "row": 83,
                                "column": 14
                              },
                              "text": "params"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 83,
                                "column": 15
                              },
                              "end": {
                                "row": 83,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 83,
                                "column": 17
                              },
                              "end": {
                                "row": 83,
                                "column": 69
                              },
                              "text": "_tc.extensions._toolkits.graph.pagerank.create(opts)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 83,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 83,
                                    "column": 63
                                  },
                                  "text": "_tc.extensions._toolkits.graph.pagerank.create",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 83,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 56
                                      },
                                      "text": "_tc.extensions._toolkits.graph.pagerank",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 83,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 83,
                                            "column": 47
                                          },
                                          "text": "_tc.extensions._toolkits.graph",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 83,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 83,
                                                "column": 41
                                              },
                                              "text": "_tc.extensions._toolkits",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 83,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 83,
                                                    "column": 31
                                                  },
                                                  "text": "_tc.extensions",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 83,
                                                        "column": 17
                                                      },
                                                      "end": {
                                                        "row": 83,
                                                        "column": 20
                                                      },
                                                      "text": "_tc"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 83,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 83,
                                                        "column": 21
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 83,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 83,
                                                        "column": 31
                                                      },
                                                      "text": "extensions"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 83,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 83,
                                                    "column": 32
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 83,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 83,
                                                    "column": 41
                                                  },
                                                  "text": "_toolkits"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 83,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 83,
                                                "column": 42
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 83,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 83,
                                                "column": 47
                                              },
                                              "text": "graph"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 83,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 83,
                                            "column": 48
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 83,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 83,
                                            "column": 56
                                          },
                                          "text": "pagerank"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 83,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 57
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 83,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 63
                                      },
                                      "text": "create"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 83,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 83,
                                    "column": 69
                                  },
                                  "text": "(opts)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 83,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 64
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 83,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 68
                                      },
                                      "text": "opts"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 83,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 69
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 84,
                "column": 4
              },
              "end": {
                "row": 84,
                "column": 27
              },
              "text": "model = params['model']",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 84,
                    "column": 4
                  },
                  "end": {
                    "row": 84,
                    "column": 27
                  },
                  "text": "model = params['model']",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 84,
                        "column": 4
                      },
                      "end": {
                        "row": 84,
                        "column": 9
                      },
                      "text": "model"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 84,
                        "column": 10
                      },
                      "end": {
                        "row": 84,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 84,
                        "column": 12
                      },
                      "end": {
                        "row": 84,
                        "column": 27
                      },
                      "text": "params['model']",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 84,
                            "column": 12
                          },
                          "end": {
                            "row": 84,
                            "column": 18
                          },
                          "text": "params"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 84,
                            "column": 18
                          },
                          "end": {
                            "row": 84,
                            "column": 19
                          },
                          "text": "["
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 84,
                            "column": 19
                          },
                          "end": {
                            "row": 84,
                            "column": 26
                          },
                          "text": "'model'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 84,
                                "column": 19
                              },
                              "end": {
                                "row": 84,
                                "column": 20
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 84,
                                "column": 20
                              },
                              "end": {
                                "row": 84,
                                "column": 25
                              },
                              "text": "model"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 84,
                                "column": 25
                              },
                              "end": {
                                "row": 84,
                                "column": 26
                              },
                              "text": "'"
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 84,
                            "column": 26
                          },
                          "end": {
                            "row": 84,
                            "column": 27
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 86,
                "column": 4
              },
              "end": {
                "row": 86,
                "column": 31
              },
              "text": "return PagerankModel(model)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 86,
                    "column": 4
                  },
                  "end": {
                    "row": 86,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 86,
                    "column": 11
                  },
                  "end": {
                    "row": 86,
                    "column": 31
                  },
                  "text": "PagerankModel(model)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 86,
                        "column": 11
                      },
                      "end": {
                        "row": 86,
                        "column": 24
                      },
                      "text": "PagerankModel"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 86,
                        "column": 24
                      },
                      "end": {
                        "row": 86,
                        "column": 31
                      },
                      "text": "(model)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 86,
                            "column": 24
                          },
                          "end": {
                            "row": 86,
                            "column": 25
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 86,
                            "column": 25
                          },
                          "end": {
                            "row": 86,
                            "column": 30
                          },
                          "text": "model"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 86,
                            "column": 30
                          },
                          "end": {
                            "row": 86,
                            "column": 31
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}