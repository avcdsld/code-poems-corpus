{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 14,
    "column": 47
  },
  "text": "def linear(m=1, b=0):\n    ''' Return a driver function that can advance a sequence of linear values.\n\n    .. code-block:: none\n\n        value = m * i + b\n\n    Args:\n        m (float) : a slope for the linear driver\n        x (float) : an offset for the linear driver\n\n    '''\n    def f(i):\n        return m * i + b\n    return partial(force, sequence=_advance(f))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 14,
        "column": 47
      },
      "text": "def linear(m=1, b=0):\n    ''' Return a driver function that can advance a sequence of linear values.\n\n    .. code-block:: none\n\n        value = m * i + b\n\n    Args:\n        m (float) : a slope for the linear driver\n        x (float) : an offset for the linear driver\n\n    '''\n    def f(i):\n        return m * i + b\n    return partial(force, sequence=_advance(f))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "linear"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "(m=1, b=0)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "("
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "m=1",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 11
                  },
                  "end": {
                    "row": 0,
                    "column": 12
                  },
                  "text": "m"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 12
                  },
                  "end": {
                    "row": 0,
                    "column": 13
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 13
                  },
                  "end": {
                    "row": 0,
                    "column": 14
                  },
                  "text": "1"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "b=0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 16
                  },
                  "end": {
                    "row": 0,
                    "column": 17
                  },
                  "text": "b"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 17
                  },
                  "end": {
                    "row": 0,
                    "column": 18
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 18
                  },
                  "end": {
                    "row": 0,
                    "column": 19
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 14,
            "column": 47
          },
          "text": "''' Return a driver function that can advance a sequence of linear values.\n\n    .. code-block:: none\n\n        value = m * i + b\n\n    Args:\n        m (float) : a slope for the linear driver\n        x (float) : an offset for the linear driver\n\n    '''\n    def f(i):\n        return m * i + b\n    return partial(force, sequence=_advance(f))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 7
              },
              "text": "''' Return a driver function that can advance a sequence of linear values.\n\n    .. code-block:: none\n\n        value = m * i + b\n\n    Args:\n        m (float) : a slope for the linear driver\n        x (float) : an offset for the linear driver\n\n    '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 11,
                    "column": 7
                  },
                  "text": "''' Return a driver function that can advance a sequence of linear values.\n\n    .. code-block:: none\n\n        value = m * i + b\n\n    Args:\n        m (float) : a slope for the linear driver\n        x (float) : an offset for the linear driver\n\n    '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 11,
                        "column": 4
                      },
                      "text": " Return a driver function that can advance a sequence of linear values.\n\n    .. code-block:: none\n\n        value = m * i + b\n\n    Args:\n        m (float) : a slope for the linear driver\n        x (float) : an offset for the linear driver\n\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 11,
                        "column": 4
                      },
                      "end": {
                        "row": 11,
                        "column": 7
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 12,
                "column": 4
              },
              "end": {
                "row": 13,
                "column": 24
              },
              "text": "def f(i):\n        return m * i + b",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 12,
                    "column": 4
                  },
                  "end": {
                    "row": 12,
                    "column": 7
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 12,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 9
                  },
                  "text": "f"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 12,
                    "column": 9
                  },
                  "end": {
                    "row": 12,
                    "column": 12
                  },
                  "text": "(i)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 12,
                        "column": 9
                      },
                      "end": {
                        "row": 12,
                        "column": 10
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 10
                      },
                      "end": {
                        "row": 12,
                        "column": 11
                      },
                      "text": "i"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 12,
                        "column": 11
                      },
                      "end": {
                        "row": 12,
                        "column": 12
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 12,
                    "column": 12
                  },
                  "end": {
                    "row": 12,
                    "column": 13
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 24
                  },
                  "text": "return m * i + b",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 24
                      },
                      "text": "return m * i + b",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 13,
                            "column": 8
                          },
                          "end": {
                            "row": 13,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "binary_operator",
                          "start": {
                            "row": 13,
                            "column": 15
                          },
                          "end": {
                            "row": 13,
                            "column": 24
                          },
                          "text": "m * i + b",
                          "children": [
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 13,
                                "column": 15
                              },
                              "end": {
                                "row": 13,
                                "column": 20
                              },
                              "text": "m * i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 16
                                  },
                                  "text": "m"
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 13,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 18
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 20
                                  },
                                  "text": "i"
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 13,
                                "column": 21
                              },
                              "end": {
                                "row": 13,
                                "column": 22
                              },
                              "text": "+"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 23
                              },
                              "end": {
                                "row": 13,
                                "column": 24
                              },
                              "text": "b"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 14,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 47
              },
              "text": "return partial(force, sequence=_advance(f))",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 14,
                    "column": 4
                  },
                  "end": {
                    "row": 14,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 14,
                    "column": 11
                  },
                  "end": {
                    "row": 14,
                    "column": 47
                  },
                  "text": "partial(force, sequence=_advance(f))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 11
                      },
                      "end": {
                        "row": 14,
                        "column": 18
                      },
                      "text": "partial"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 14,
                        "column": 18
                      },
                      "end": {
                        "row": 14,
                        "column": 47
                      },
                      "text": "(force, sequence=_advance(f))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 14,
                            "column": 18
                          },
                          "end": {
                            "row": 14,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 19
                          },
                          "end": {
                            "row": 14,
                            "column": 24
                          },
                          "text": "force"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 14,
                            "column": 24
                          },
                          "end": {
                            "row": 14,
                            "column": 25
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 14,
                            "column": 26
                          },
                          "end": {
                            "row": 14,
                            "column": 46
                          },
                          "text": "sequence=_advance(f)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 26
                              },
                              "end": {
                                "row": 14,
                                "column": 34
                              },
                              "text": "sequence"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 14,
                                "column": 34
                              },
                              "end": {
                                "row": 14,
                                "column": 35
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 14,
                                "column": 35
                              },
                              "end": {
                                "row": 14,
                                "column": 46
                              },
                              "text": "_advance(f)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 43
                                  },
                                  "text": "_advance"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 14,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 46
                                  },
                                  "text": "(f)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 14,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 44
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 45
                                      },
                                      "text": "f"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 14,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 46
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 14,
                            "column": 46
                          },
                          "end": {
                            "row": 14,
                            "column": 47
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}