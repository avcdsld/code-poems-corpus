{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 23,
    "column": 20
  },
  "text": "def random_string():\n    \"\"\"Generate a random string to use as an ID.\n\n    Note that users may seed numpy, which could cause this function to generate\n    duplicate IDs. Therefore, we need to seed numpy ourselves, but we can't\n    interfere with the state of the user's random number generator, so we\n    extract the state of the random number generator and reset it after we are\n    done.\n\n    TODO(rkn): If we want to later guarantee that these are generated in a\n    deterministic manner, then we will need to make some changes here.\n\n    Returns:\n        A random byte string of length ray_constants.ID_SIZE.\n    \"\"\"\n    # Get the state of the numpy random number generator.\n    numpy_state = np.random.get_state()\n    # Try to use true randomness.\n    np.random.seed(None)\n    # Generate the random ID.\n    random_id = np.random.bytes(ray_constants.ID_SIZE)\n    # Reset the state of the numpy random number generator.\n    np.random.set_state(numpy_state)\n    return random_id",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 23,
        "column": 20
      },
      "text": "def random_string():\n    \"\"\"Generate a random string to use as an ID.\n\n    Note that users may seed numpy, which could cause this function to generate\n    duplicate IDs. Therefore, we need to seed numpy ourselves, but we can't\n    interfere with the state of the user's random number generator, so we\n    extract the state of the random number generator and reset it after we are\n    done.\n\n    TODO(rkn): If we want to later guarantee that these are generated in a\n    deterministic manner, then we will need to make some changes here.\n\n    Returns:\n        A random byte string of length ray_constants.ID_SIZE.\n    \"\"\"\n    # Get the state of the numpy random number generator.\n    numpy_state = np.random.get_state()\n    # Try to use true randomness.\n    np.random.seed(None)\n    # Generate the random ID.\n    random_id = np.random.bytes(ray_constants.ID_SIZE)\n    # Reset the state of the numpy random number generator.\n    np.random.set_state(numpy_state)\n    return random_id",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "random_string"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 17
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "()",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "("
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 23,
            "column": 20
          },
          "text": "\"\"\"Generate a random string to use as an ID.\n\n    Note that users may seed numpy, which could cause this function to generate\n    duplicate IDs. Therefore, we need to seed numpy ourselves, but we can't\n    interfere with the state of the user's random number generator, so we\n    extract the state of the random number generator and reset it after we are\n    done.\n\n    TODO(rkn): If we want to later guarantee that these are generated in a\n    deterministic manner, then we will need to make some changes here.\n\n    Returns:\n        A random byte string of length ray_constants.ID_SIZE.\n    \"\"\"\n    # Get the state of the numpy random number generator.\n    numpy_state = np.random.get_state()\n    # Try to use true randomness.\n    np.random.seed(None)\n    # Generate the random ID.\n    random_id = np.random.bytes(ray_constants.ID_SIZE)\n    # Reset the state of the numpy random number generator.\n    np.random.set_state(numpy_state)\n    return random_id",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 7
              },
              "text": "\"\"\"Generate a random string to use as an ID.\n\n    Note that users may seed numpy, which could cause this function to generate\n    duplicate IDs. Therefore, we need to seed numpy ourselves, but we can't\n    interfere with the state of the user's random number generator, so we\n    extract the state of the random number generator and reset it after we are\n    done.\n\n    TODO(rkn): If we want to later guarantee that these are generated in a\n    deterministic manner, then we will need to make some changes here.\n\n    Returns:\n        A random byte string of length ray_constants.ID_SIZE.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 14,
                    "column": 7
                  },
                  "text": "\"\"\"Generate a random string to use as an ID.\n\n    Note that users may seed numpy, which could cause this function to generate\n    duplicate IDs. Therefore, we need to seed numpy ourselves, but we can't\n    interfere with the state of the user's random number generator, so we\n    extract the state of the random number generator and reset it after we are\n    done.\n\n    TODO(rkn): If we want to later guarantee that these are generated in a\n    deterministic manner, then we will need to make some changes here.\n\n    Returns:\n        A random byte string of length ray_constants.ID_SIZE.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 14,
                        "column": 4
                      },
                      "text": "Generate a random string to use as an ID.\n\n    Note that users may seed numpy, which could cause this function to generate\n    duplicate IDs. Therefore, we need to seed numpy ourselves, but we can't\n    interfere with the state of the user's random number generator, so we\n    extract the state of the random number generator and reset it after we are\n    done.\n\n    TODO(rkn): If we want to later guarantee that these are generated in a\n    deterministic manner, then we will need to make some changes here.\n\n    Returns:\n        A random byte string of length ray_constants.ID_SIZE.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 14,
                        "column": 4
                      },
                      "end": {
                        "row": 14,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 57
              },
              "text": "# Get the state of the numpy random number generator."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 39
              },
              "text": "numpy_state = np.random.get_state()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 16,
                    "column": 4
                  },
                  "end": {
                    "row": 16,
                    "column": 39
                  },
                  "text": "numpy_state = np.random.get_state()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 4
                      },
                      "end": {
                        "row": 16,
                        "column": 15
                      },
                      "text": "numpy_state"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 16,
                        "column": 16
                      },
                      "end": {
                        "row": 16,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 16,
                        "column": 18
                      },
                      "end": {
                        "row": 16,
                        "column": 39
                      },
                      "text": "np.random.get_state()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 18
                          },
                          "end": {
                            "row": 16,
                            "column": 37
                          },
                          "text": "np.random.get_state",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 16,
                                "column": 18
                              },
                              "end": {
                                "row": 16,
                                "column": 27
                              },
                              "text": "np.random",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "text": "np"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 27
                                  },
                                  "text": "random"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 27
                              },
                              "end": {
                                "row": 16,
                                "column": 28
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 28
                              },
                              "end": {
                                "row": 16,
                                "column": 37
                              },
                              "text": "get_state"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 16,
                            "column": 37
                          },
                          "end": {
                            "row": 16,
                            "column": 39
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 16,
                                "column": 37
                              },
                              "end": {
                                "row": 16,
                                "column": 38
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 38
                              },
                              "end": {
                                "row": 16,
                                "column": 39
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 17,
                "column": 33
              },
              "text": "# Try to use true randomness."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 24
              },
              "text": "np.random.seed(None)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 18,
                    "column": 4
                  },
                  "end": {
                    "row": 18,
                    "column": 24
                  },
                  "text": "np.random.seed(None)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 18,
                        "column": 4
                      },
                      "end": {
                        "row": 18,
                        "column": 18
                      },
                      "text": "np.random.seed",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 18,
                            "column": 4
                          },
                          "end": {
                            "row": 18,
                            "column": 13
                          },
                          "text": "np.random",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 4
                              },
                              "end": {
                                "row": 18,
                                "column": 6
                              },
                              "text": "np"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 18,
                                "column": 6
                              },
                              "end": {
                                "row": 18,
                                "column": 7
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 7
                              },
                              "end": {
                                "row": 18,
                                "column": 13
                              },
                              "text": "random"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 18,
                            "column": 13
                          },
                          "end": {
                            "row": 18,
                            "column": 14
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 14
                          },
                          "end": {
                            "row": 18,
                            "column": 18
                          },
                          "text": "seed"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 18,
                        "column": 18
                      },
                      "end": {
                        "row": 18,
                        "column": 24
                      },
                      "text": "(None)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 18,
                            "column": 18
                          },
                          "end": {
                            "row": 18,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 18,
                            "column": 19
                          },
                          "end": {
                            "row": 18,
                            "column": 23
                          },
                          "text": "None"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 18,
                            "column": 23
                          },
                          "end": {
                            "row": 18,
                            "column": 24
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 29
              },
              "text": "# Generate the random ID."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 54
              },
              "text": "random_id = np.random.bytes(ray_constants.ID_SIZE)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 54
                  },
                  "text": "random_id = np.random.bytes(ray_constants.ID_SIZE)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 13
                      },
                      "text": "random_id"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 14
                      },
                      "end": {
                        "row": 20,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 20,
                        "column": 16
                      },
                      "end": {
                        "row": 20,
                        "column": 54
                      },
                      "text": "np.random.bytes(ray_constants.ID_SIZE)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 20,
                            "column": 16
                          },
                          "end": {
                            "row": 20,
                            "column": 31
                          },
                          "text": "np.random.bytes",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 20,
                                "column": 16
                              },
                              "end": {
                                "row": 20,
                                "column": 25
                              },
                              "text": "np.random",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 18
                                  },
                                  "text": "np"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 19
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 25
                                  },
                                  "text": "random"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 20,
                                "column": 25
                              },
                              "end": {
                                "row": 20,
                                "column": 26
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 26
                              },
                              "end": {
                                "row": 20,
                                "column": 31
                              },
                              "text": "bytes"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 20,
                            "column": 31
                          },
                          "end": {
                            "row": 20,
                            "column": 54
                          },
                          "text": "(ray_constants.ID_SIZE)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 20,
                                "column": 31
                              },
                              "end": {
                                "row": 20,
                                "column": 32
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 20,
                                "column": 32
                              },
                              "end": {
                                "row": 20,
                                "column": 53
                              },
                              "text": "ray_constants.ID_SIZE",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 45
                                  },
                                  "text": "ray_constants"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 46
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 53
                                  },
                                  "text": "ID_SIZE"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 20,
                                "column": 53
                              },
                              "end": {
                                "row": 20,
                                "column": 54
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 59
              },
              "text": "# Reset the state of the numpy random number generator."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 36
              },
              "text": "np.random.set_state(numpy_state)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 36
                  },
                  "text": "np.random.set_state(numpy_state)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 23
                      },
                      "text": "np.random.set_state",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 22,
                            "column": 4
                          },
                          "end": {
                            "row": 22,
                            "column": 13
                          },
                          "text": "np.random",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 4
                              },
                              "end": {
                                "row": 22,
                                "column": 6
                              },
                              "text": "np"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 22,
                                "column": 6
                              },
                              "end": {
                                "row": 22,
                                "column": 7
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 7
                              },
                              "end": {
                                "row": 22,
                                "column": 13
                              },
                              "text": "random"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 22,
                            "column": 13
                          },
                          "end": {
                            "row": 22,
                            "column": 14
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 14
                          },
                          "end": {
                            "row": 22,
                            "column": 23
                          },
                          "text": "set_state"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 22,
                        "column": 23
                      },
                      "end": {
                        "row": 22,
                        "column": 36
                      },
                      "text": "(numpy_state)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 22,
                            "column": 23
                          },
                          "end": {
                            "row": 22,
                            "column": 24
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 24
                          },
                          "end": {
                            "row": 22,
                            "column": 35
                          },
                          "text": "numpy_state"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 22,
                            "column": 35
                          },
                          "end": {
                            "row": 22,
                            "column": 36
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 23,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 20
              },
              "text": "return random_id",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 23,
                    "column": 4
                  },
                  "end": {
                    "row": 23,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 23,
                    "column": 11
                  },
                  "end": {
                    "row": 23,
                    "column": 20
                  },
                  "text": "random_id"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}