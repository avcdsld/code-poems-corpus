{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 31,
    "column": 17
  },
  "text": "def dispatch_to_index_op(op, left, right, index_class):\n    \"\"\"\n    Wrap Series left in the given index_class to delegate the operation op\n    to the index implementation.  DatetimeIndex and TimedeltaIndex perform\n    type checking, timezone handling, overflow checks, etc.\n\n    Parameters\n    ----------\n    op : binary operator (operator.add, operator.sub, ...)\n    left : Series\n    right : object\n    index_class : DatetimeIndex or TimedeltaIndex\n\n    Returns\n    -------\n    result : object, usually DatetimeIndex, TimedeltaIndex, or Series\n    \"\"\"\n    left_idx = index_class(left)\n\n    # avoid accidentally allowing integer add/sub.  For datetime64[tz] dtypes,\n    # left_idx may inherit a freq from a cached DatetimeIndex.\n    # See discussion in GH#19147.\n    if getattr(left_idx, 'freq', None) is not None:\n        left_idx = left_idx._shallow_copy(freq=None)\n    try:\n        result = op(left_idx, right)\n    except NullFrequencyError:\n        # DatetimeIndex and TimedeltaIndex with freq == None raise ValueError\n        # on add/sub of integers (or int-like).  We re-raise as a TypeError.\n        raise TypeError('incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__))\n    return result",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 31,
        "column": 17
      },
      "text": "def dispatch_to_index_op(op, left, right, index_class):\n    \"\"\"\n    Wrap Series left in the given index_class to delegate the operation op\n    to the index implementation.  DatetimeIndex and TimedeltaIndex perform\n    type checking, timezone handling, overflow checks, etc.\n\n    Parameters\n    ----------\n    op : binary operator (operator.add, operator.sub, ...)\n    left : Series\n    right : object\n    index_class : DatetimeIndex or TimedeltaIndex\n\n    Returns\n    -------\n    result : object, usually DatetimeIndex, TimedeltaIndex, or Series\n    \"\"\"\n    left_idx = index_class(left)\n\n    # avoid accidentally allowing integer add/sub.  For datetime64[tz] dtypes,\n    # left_idx may inherit a freq from a cached DatetimeIndex.\n    # See discussion in GH#19147.\n    if getattr(left_idx, 'freq', None) is not None:\n        left_idx = left_idx._shallow_copy(freq=None)\n    try:\n        result = op(left_idx, right)\n    except NullFrequencyError:\n        # DatetimeIndex and TimedeltaIndex with freq == None raise ValueError\n        # on add/sub of integers (or int-like).  We re-raise as a TypeError.\n        raise TypeError('incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__))\n    return result",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "dispatch_to_index_op"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 0,
            "column": 54
          },
          "text": "(op, left, right, index_class)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "op"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": "left"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "right"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": "index_class"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 53
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 54
          },
          "end": {
            "row": 0,
            "column": 55
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 31,
            "column": 17
          },
          "text": "\"\"\"\n    Wrap Series left in the given index_class to delegate the operation op\n    to the index implementation.  DatetimeIndex and TimedeltaIndex perform\n    type checking, timezone handling, overflow checks, etc.\n\n    Parameters\n    ----------\n    op : binary operator (operator.add, operator.sub, ...)\n    left : Series\n    right : object\n    index_class : DatetimeIndex or TimedeltaIndex\n\n    Returns\n    -------\n    result : object, usually DatetimeIndex, TimedeltaIndex, or Series\n    \"\"\"\n    left_idx = index_class(left)\n\n    # avoid accidentally allowing integer add/sub.  For datetime64[tz] dtypes,\n    # left_idx may inherit a freq from a cached DatetimeIndex.\n    # See discussion in GH#19147.\n    if getattr(left_idx, 'freq', None) is not None:\n        left_idx = left_idx._shallow_copy(freq=None)\n    try:\n        result = op(left_idx, right)\n    except NullFrequencyError:\n        # DatetimeIndex and TimedeltaIndex with freq == None raise ValueError\n        # on add/sub of integers (or int-like).  We re-raise as a TypeError.\n        raise TypeError('incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__))\n    return result",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 7
              },
              "text": "\"\"\"\n    Wrap Series left in the given index_class to delegate the operation op\n    to the index implementation.  DatetimeIndex and TimedeltaIndex perform\n    type checking, timezone handling, overflow checks, etc.\n\n    Parameters\n    ----------\n    op : binary operator (operator.add, operator.sub, ...)\n    left : Series\n    right : object\n    index_class : DatetimeIndex or TimedeltaIndex\n\n    Returns\n    -------\n    result : object, usually DatetimeIndex, TimedeltaIndex, or Series\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 16,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Wrap Series left in the given index_class to delegate the operation op\n    to the index implementation.  DatetimeIndex and TimedeltaIndex perform\n    type checking, timezone handling, overflow checks, etc.\n\n    Parameters\n    ----------\n    op : binary operator (operator.add, operator.sub, ...)\n    left : Series\n    right : object\n    index_class : DatetimeIndex or TimedeltaIndex\n\n    Returns\n    -------\n    result : object, usually DatetimeIndex, TimedeltaIndex, or Series\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 16,
                        "column": 4
                      },
                      "text": "\n    Wrap Series left in the given index_class to delegate the operation op\n    to the index implementation.  DatetimeIndex and TimedeltaIndex perform\n    type checking, timezone handling, overflow checks, etc.\n\n    Parameters\n    ----------\n    op : binary operator (operator.add, operator.sub, ...)\n    left : Series\n    right : object\n    index_class : DatetimeIndex or TimedeltaIndex\n\n    Returns\n    -------\n    result : object, usually DatetimeIndex, TimedeltaIndex, or Series\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 16,
                        "column": 4
                      },
                      "end": {
                        "row": 16,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 17,
                "column": 32
              },
              "text": "left_idx = index_class(left)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 32
                  },
                  "text": "left_idx = index_class(left)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 4
                      },
                      "end": {
                        "row": 17,
                        "column": 12
                      },
                      "text": "left_idx"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 17,
                        "column": 13
                      },
                      "end": {
                        "row": 17,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 17,
                        "column": 15
                      },
                      "end": {
                        "row": 17,
                        "column": 32
                      },
                      "text": "index_class(left)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 15
                          },
                          "end": {
                            "row": 17,
                            "column": 26
                          },
                          "text": "index_class"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 17,
                            "column": 26
                          },
                          "end": {
                            "row": 17,
                            "column": 32
                          },
                          "text": "(left)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 17,
                                "column": 26
                              },
                              "end": {
                                "row": 17,
                                "column": 27
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 27
                              },
                              "end": {
                                "row": 17,
                                "column": 31
                              },
                              "text": "left"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 17,
                                "column": 31
                              },
                              "end": {
                                "row": 17,
                                "column": 32
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 78
              },
              "text": "# avoid accidentally allowing integer add/sub.  For datetime64[tz] dtypes,"
            },
            {
              "type": "comment",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 62
              },
              "text": "# left_idx may inherit a freq from a cached DatetimeIndex."
            },
            {
              "type": "comment",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 33
              },
              "text": "# See discussion in GH#19147."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 52
              },
              "text": "if getattr(left_idx, 'freq', None) is not None:\n        left_idx = left_idx._shallow_copy(freq=None)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 22,
                    "column": 7
                  },
                  "end": {
                    "row": 22,
                    "column": 50
                  },
                  "text": "getattr(left_idx, 'freq', None) is not None",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 22,
                        "column": 7
                      },
                      "end": {
                        "row": 22,
                        "column": 38
                      },
                      "text": "getattr(left_idx, 'freq', None)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 7
                          },
                          "end": {
                            "row": 22,
                            "column": 14
                          },
                          "text": "getattr"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 22,
                            "column": 14
                          },
                          "end": {
                            "row": 22,
                            "column": 38
                          },
                          "text": "(left_idx, 'freq', None)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 22,
                                "column": 14
                              },
                              "end": {
                                "row": 22,
                                "column": 15
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 15
                              },
                              "end": {
                                "row": 22,
                                "column": 23
                              },
                              "text": "left_idx"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 22,
                                "column": 23
                              },
                              "end": {
                                "row": 22,
                                "column": 24
                              },
                              "text": ","
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 22,
                                "column": 25
                              },
                              "end": {
                                "row": 22,
                                "column": 31
                              },
                              "text": "'freq'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 22,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 26
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 22,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 30
                                  },
                                  "text": "freq"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 22,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 31
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 22,
                                "column": 31
                              },
                              "end": {
                                "row": 22,
                                "column": 32
                              },
                              "text": ","
                            },
                            {
                              "type": "none",
                              "start": {
                                "row": 22,
                                "column": 33
                              },
                              "end": {
                                "row": 22,
                                "column": 37
                              },
                              "text": "None"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 22,
                                "column": 37
                              },
                              "end": {
                                "row": 22,
                                "column": 38
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 22,
                        "column": 39
                      },
                      "end": {
                        "row": 22,
                        "column": 41
                      },
                      "text": "is"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 22,
                        "column": 42
                      },
                      "end": {
                        "row": 22,
                        "column": 45
                      },
                      "text": "not"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 22,
                        "column": 46
                      },
                      "end": {
                        "row": 22,
                        "column": 50
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 22,
                    "column": 50
                  },
                  "end": {
                    "row": 22,
                    "column": 51
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 52
                  },
                  "text": "left_idx = left_idx._shallow_copy(freq=None)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 52
                      },
                      "text": "left_idx = left_idx._shallow_copy(freq=None)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 23,
                            "column": 8
                          },
                          "end": {
                            "row": 23,
                            "column": 52
                          },
                          "text": "left_idx = left_idx._shallow_copy(freq=None)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 8
                              },
                              "end": {
                                "row": 23,
                                "column": 16
                              },
                              "text": "left_idx"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 23,
                                "column": 17
                              },
                              "end": {
                                "row": 23,
                                "column": 18
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 23,
                                "column": 19
                              },
                              "end": {
                                "row": 23,
                                "column": 52
                              },
                              "text": "left_idx._shallow_copy(freq=None)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 23,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 41
                                  },
                                  "text": "left_idx._shallow_copy",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 27
                                      },
                                      "text": "left_idx"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 23,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 28
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 41
                                      },
                                      "text": "_shallow_copy"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 23,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 52
                                  },
                                  "text": "(freq=None)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 23,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 42
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 23,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 51
                                      },
                                      "text": "freq=None",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 23,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 46
                                          },
                                          "text": "freq"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 23,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 47
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "none",
                                          "start": {
                                            "row": 23,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 51
                                          },
                                          "text": "None"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 23,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 52
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 24,
                "column": 4
              },
              "end": {
                "row": 30,
                "column": 70
              },
              "text": "try:\n        result = op(left_idx, right)\n    except NullFrequencyError:\n        # DatetimeIndex and TimedeltaIndex with freq == None raise ValueError\n        # on add/sub of integers (or int-like).  We re-raise as a TypeError.\n        raise TypeError('incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__))",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 24,
                    "column": 4
                  },
                  "end": {
                    "row": 24,
                    "column": 7
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 24,
                    "column": 7
                  },
                  "end": {
                    "row": 24,
                    "column": 8
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 36
                  },
                  "text": "result = op(left_idx, right)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 36
                      },
                      "text": "result = op(left_idx, right)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 25,
                            "column": 8
                          },
                          "end": {
                            "row": 25,
                            "column": 36
                          },
                          "text": "result = op(left_idx, right)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 8
                              },
                              "end": {
                                "row": 25,
                                "column": 14
                              },
                              "text": "result"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 25,
                                "column": 15
                              },
                              "end": {
                                "row": 25,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 25,
                                "column": 17
                              },
                              "end": {
                                "row": 25,
                                "column": 36
                              },
                              "text": "op(left_idx, right)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 19
                                  },
                                  "text": "op"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 25,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 36
                                  },
                                  "text": "(left_idx, right)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 25,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 20
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 28
                                      },
                                      "text": "left_idx"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 25,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 29
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 35
                                      },
                                      "text": "right"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 25,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 36
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 26,
                    "column": 4
                  },
                  "end": {
                    "row": 30,
                    "column": 70
                  },
                  "text": "except NullFrequencyError:\n        # DatetimeIndex and TimedeltaIndex with freq == None raise ValueError\n        # on add/sub of integers (or int-like).  We re-raise as a TypeError.\n        raise TypeError('incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__))",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 26,
                        "column": 4
                      },
                      "end": {
                        "row": 26,
                        "column": 10
                      },
                      "text": "except"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 26,
                        "column": 11
                      },
                      "end": {
                        "row": 26,
                        "column": 29
                      },
                      "text": "NullFrequencyError"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 26,
                        "column": 29
                      },
                      "end": {
                        "row": 26,
                        "column": 30
                      },
                      "text": ":"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 27,
                        "column": 8
                      },
                      "end": {
                        "row": 27,
                        "column": 77
                      },
                      "text": "# DatetimeIndex and TimedeltaIndex with freq == None raise ValueError"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 28,
                        "column": 8
                      },
                      "end": {
                        "row": 28,
                        "column": 76
                      },
                      "text": "# on add/sub of integers (or int-like).  We re-raise as a TypeError."
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 29,
                        "column": 8
                      },
                      "end": {
                        "row": 30,
                        "column": 70
                      },
                      "text": "raise TypeError('incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__))",
                      "children": [
                        {
                          "type": "raise_statement",
                          "start": {
                            "row": 29,
                            "column": 8
                          },
                          "end": {
                            "row": 30,
                            "column": 70
                          },
                          "text": "raise TypeError('incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__))",
                          "children": [
                            {
                              "type": "raise",
                              "start": {
                                "row": 29,
                                "column": 8
                              },
                              "end": {
                                "row": 29,
                                "column": 13
                              },
                              "text": "raise"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 29,
                                "column": 14
                              },
                              "end": {
                                "row": 30,
                                "column": 70
                              },
                              "text": "TypeError('incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 23
                                  },
                                  "text": "TypeError"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 29,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 70
                                  },
                                  "text": "('incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 29,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 24
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 29,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 69
                                      },
                                      "text": "'incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format(name=op.__name__)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 29,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 51
                                          },
                                          "text": "'incompatible type for a datetime/timedelta '\n                        'operation [{name}]'.format",
                                          "children": [
                                            {
                                              "type": "concatenated_string",
                                              "start": {
                                                "row": 29,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 44
                                              },
                                              "text": "'incompatible type for a datetime/timedelta '\n                        'operation [{name}]'",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 69
                                                  },
                                                  "text": "'incompatible type for a datetime/timedelta '",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 29,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 25
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 29,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 68
                                                      },
                                                      "text": "incompatible type for a datetime/timedelta "
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 29,
                                                        "column": 68
                                                      },
                                                      "end": {
                                                        "row": 29,
                                                        "column": 69
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 44
                                                  },
                                                  "text": "'operation [{name}]'",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 25
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 43
                                                      },
                                                      "text": "operation [{name}]"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 44
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 30,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 45
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 30,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 51
                                              },
                                              "text": "format"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 30,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 69
                                          },
                                          "text": "(name=op.__name__)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 30,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 52
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 30,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 68
                                              },
                                              "text": "name=op.__name__",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 56
                                                  },
                                                  "text": "name"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 57
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 68
                                                  },
                                                  "text": "op.__name__",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 57
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 59
                                                      },
                                                      "text": "op"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 60
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 60
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 68
                                                      },
                                                      "text": "__name__"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 30,
                                                "column": 68
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 69
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 30,
                                        "column": 69
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 70
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 31,
                "column": 4
              },
              "end": {
                "row": 31,
                "column": 17
              },
              "text": "return result",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 31,
                    "column": 4
                  },
                  "end": {
                    "row": 31,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 31,
                    "column": 11
                  },
                  "end": {
                    "row": 31,
                    "column": 17
                  },
                  "text": "result"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}