{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 37,
    "column": 32
  },
  "text": "def is_scipy_sparse(arr):\n    \"\"\"\n    Check whether an array-like is a scipy.sparse.spmatrix instance.\n\n    Parameters\n    ----------\n    arr : array-like\n        The array-like to check.\n\n    Returns\n    -------\n    boolean\n        Whether or not the array-like is a scipy.sparse.spmatrix instance.\n\n    Notes\n    -----\n    If scipy is not installed, this function will always return False.\n\n    Examples\n    --------\n    >>> from scipy.sparse import bsr_matrix\n    >>> is_scipy_sparse(bsr_matrix([1, 2, 3]))\n    True\n    >>> is_scipy_sparse(pd.SparseArray([1, 2, 3]))\n    False\n    >>> is_scipy_sparse(pd.SparseSeries([1, 2, 3]))\n    False\n    \"\"\"\n\n    global _is_scipy_sparse\n\n    if _is_scipy_sparse is None:\n        try:\n            from scipy.sparse import issparse as _is_scipy_sparse\n        except ImportError:\n            _is_scipy_sparse = lambda _: False\n\n    return _is_scipy_sparse(arr)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 37,
        "column": 32
      },
      "text": "def is_scipy_sparse(arr):\n    \"\"\"\n    Check whether an array-like is a scipy.sparse.spmatrix instance.\n\n    Parameters\n    ----------\n    arr : array-like\n        The array-like to check.\n\n    Returns\n    -------\n    boolean\n        Whether or not the array-like is a scipy.sparse.spmatrix instance.\n\n    Notes\n    -----\n    If scipy is not installed, this function will always return False.\n\n    Examples\n    --------\n    >>> from scipy.sparse import bsr_matrix\n    >>> is_scipy_sparse(bsr_matrix([1, 2, 3]))\n    True\n    >>> is_scipy_sparse(pd.SparseArray([1, 2, 3]))\n    False\n    >>> is_scipy_sparse(pd.SparseSeries([1, 2, 3]))\n    False\n    \"\"\"\n\n    global _is_scipy_sparse\n\n    if _is_scipy_sparse is None:\n        try:\n            from scipy.sparse import issparse as _is_scipy_sparse\n        except ImportError:\n            _is_scipy_sparse = lambda _: False\n\n    return _is_scipy_sparse(arr)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "is_scipy_sparse"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "(arr)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "arr"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 0,
            "column": 25
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 37,
            "column": 32
          },
          "text": "\"\"\"\n    Check whether an array-like is a scipy.sparse.spmatrix instance.\n\n    Parameters\n    ----------\n    arr : array-like\n        The array-like to check.\n\n    Returns\n    -------\n    boolean\n        Whether or not the array-like is a scipy.sparse.spmatrix instance.\n\n    Notes\n    -----\n    If scipy is not installed, this function will always return False.\n\n    Examples\n    --------\n    >>> from scipy.sparse import bsr_matrix\n    >>> is_scipy_sparse(bsr_matrix([1, 2, 3]))\n    True\n    >>> is_scipy_sparse(pd.SparseArray([1, 2, 3]))\n    False\n    >>> is_scipy_sparse(pd.SparseSeries([1, 2, 3]))\n    False\n    \"\"\"\n\n    global _is_scipy_sparse\n\n    if _is_scipy_sparse is None:\n        try:\n            from scipy.sparse import issparse as _is_scipy_sparse\n        except ImportError:\n            _is_scipy_sparse = lambda _: False\n\n    return _is_scipy_sparse(arr)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 27,
                "column": 7
              },
              "text": "\"\"\"\n    Check whether an array-like is a scipy.sparse.spmatrix instance.\n\n    Parameters\n    ----------\n    arr : array-like\n        The array-like to check.\n\n    Returns\n    -------\n    boolean\n        Whether or not the array-like is a scipy.sparse.spmatrix instance.\n\n    Notes\n    -----\n    If scipy is not installed, this function will always return False.\n\n    Examples\n    --------\n    >>> from scipy.sparse import bsr_matrix\n    >>> is_scipy_sparse(bsr_matrix([1, 2, 3]))\n    True\n    >>> is_scipy_sparse(pd.SparseArray([1, 2, 3]))\n    False\n    >>> is_scipy_sparse(pd.SparseSeries([1, 2, 3]))\n    False\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 27,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Check whether an array-like is a scipy.sparse.spmatrix instance.\n\n    Parameters\n    ----------\n    arr : array-like\n        The array-like to check.\n\n    Returns\n    -------\n    boolean\n        Whether or not the array-like is a scipy.sparse.spmatrix instance.\n\n    Notes\n    -----\n    If scipy is not installed, this function will always return False.\n\n    Examples\n    --------\n    >>> from scipy.sparse import bsr_matrix\n    >>> is_scipy_sparse(bsr_matrix([1, 2, 3]))\n    True\n    >>> is_scipy_sparse(pd.SparseArray([1, 2, 3]))\n    False\n    >>> is_scipy_sparse(pd.SparseSeries([1, 2, 3]))\n    False\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 27,
                        "column": 4
                      },
                      "text": "\n    Check whether an array-like is a scipy.sparse.spmatrix instance.\n\n    Parameters\n    ----------\n    arr : array-like\n        The array-like to check.\n\n    Returns\n    -------\n    boolean\n        Whether or not the array-like is a scipy.sparse.spmatrix instance.\n\n    Notes\n    -----\n    If scipy is not installed, this function will always return False.\n\n    Examples\n    --------\n    >>> from scipy.sparse import bsr_matrix\n    >>> is_scipy_sparse(bsr_matrix([1, 2, 3]))\n    True\n    >>> is_scipy_sparse(pd.SparseArray([1, 2, 3]))\n    False\n    >>> is_scipy_sparse(pd.SparseSeries([1, 2, 3]))\n    False\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 27,
                        "column": 4
                      },
                      "end": {
                        "row": 27,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "global_statement",
              "start": {
                "row": 29,
                "column": 4
              },
              "end": {
                "row": 29,
                "column": 27
              },
              "text": "global _is_scipy_sparse",
              "children": [
                {
                  "type": "global",
                  "start": {
                    "row": 29,
                    "column": 4
                  },
                  "end": {
                    "row": 29,
                    "column": 10
                  },
                  "text": "global"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 29,
                    "column": 11
                  },
                  "end": {
                    "row": 29,
                    "column": 27
                  },
                  "text": "_is_scipy_sparse"
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 31,
                "column": 4
              },
              "end": {
                "row": 35,
                "column": 46
              },
              "text": "if _is_scipy_sparse is None:\n        try:\n            from scipy.sparse import issparse as _is_scipy_sparse\n        except ImportError:\n            _is_scipy_sparse = lambda _: False",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 31,
                    "column": 4
                  },
                  "end": {
                    "row": 31,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 31,
                    "column": 7
                  },
                  "end": {
                    "row": 31,
                    "column": 31
                  },
                  "text": "_is_scipy_sparse is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 31,
                        "column": 7
                      },
                      "end": {
                        "row": 31,
                        "column": 23
                      },
                      "text": "_is_scipy_sparse"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 31,
                        "column": 24
                      },
                      "end": {
                        "row": 31,
                        "column": 26
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 31,
                        "column": 27
                      },
                      "end": {
                        "row": 31,
                        "column": 31
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 31,
                    "column": 31
                  },
                  "end": {
                    "row": 31,
                    "column": 32
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 32,
                    "column": 8
                  },
                  "end": {
                    "row": 35,
                    "column": 46
                  },
                  "text": "try:\n            from scipy.sparse import issparse as _is_scipy_sparse\n        except ImportError:\n            _is_scipy_sparse = lambda _: False",
                  "children": [
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 32,
                        "column": 8
                      },
                      "end": {
                        "row": 35,
                        "column": 46
                      },
                      "text": "try:\n            from scipy.sparse import issparse as _is_scipy_sparse\n        except ImportError:\n            _is_scipy_sparse = lambda _: False",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 32,
                            "column": 8
                          },
                          "end": {
                            "row": 32,
                            "column": 11
                          },
                          "text": "try"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 32,
                            "column": 11
                          },
                          "end": {
                            "row": 32,
                            "column": 12
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 33,
                            "column": 12
                          },
                          "end": {
                            "row": 33,
                            "column": 65
                          },
                          "text": "from scipy.sparse import issparse as _is_scipy_sparse",
                          "children": [
                            {
                              "type": "import_from_statement",
                              "start": {
                                "row": 33,
                                "column": 12
                              },
                              "end": {
                                "row": 33,
                                "column": 65
                              },
                              "text": "from scipy.sparse import issparse as _is_scipy_sparse",
                              "children": [
                                {
                                  "type": "from",
                                  "start": {
                                    "row": 33,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 16
                                  },
                                  "text": "from"
                                },
                                {
                                  "type": "dotted_name",
                                  "start": {
                                    "row": 33,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 29
                                  },
                                  "text": "scipy.sparse",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "text": "scipy"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 23
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 29
                                      },
                                      "text": "sparse"
                                    }
                                  ]
                                },
                                {
                                  "type": "import",
                                  "start": {
                                    "row": 33,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 36
                                  },
                                  "text": "import"
                                },
                                {
                                  "type": "aliased_import",
                                  "start": {
                                    "row": 33,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 65
                                  },
                                  "text": "issparse as _is_scipy_sparse",
                                  "children": [
                                    {
                                      "type": "dotted_name",
                                      "start": {
                                        "row": 33,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 45
                                      },
                                      "text": "issparse",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 33,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 45
                                          },
                                          "text": "issparse"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "as",
                                      "start": {
                                        "row": 33,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 48
                                      },
                                      "text": "as"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 65
                                      },
                                      "text": "_is_scipy_sparse"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "except_clause",
                          "start": {
                            "row": 34,
                            "column": 8
                          },
                          "end": {
                            "row": 35,
                            "column": 46
                          },
                          "text": "except ImportError:\n            _is_scipy_sparse = lambda _: False",
                          "children": [
                            {
                              "type": "except",
                              "start": {
                                "row": 34,
                                "column": 8
                              },
                              "end": {
                                "row": 34,
                                "column": 14
                              },
                              "text": "except"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 15
                              },
                              "end": {
                                "row": 34,
                                "column": 26
                              },
                              "text": "ImportError"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 34,
                                "column": 26
                              },
                              "end": {
                                "row": 34,
                                "column": 27
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 35,
                                "column": 12
                              },
                              "end": {
                                "row": 35,
                                "column": 46
                              },
                              "text": "_is_scipy_sparse = lambda _: False",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 35,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 46
                                  },
                                  "text": "_is_scipy_sparse = lambda _: False",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 35,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 46
                                      },
                                      "text": "_is_scipy_sparse = lambda _: False",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 35,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 28
                                          },
                                          "text": "_is_scipy_sparse"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 35,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 30
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "lambda",
                                          "start": {
                                            "row": 35,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 46
                                          },
                                          "text": "lambda _: False",
                                          "children": [
                                            {
                                              "type": "lambda",
                                              "start": {
                                                "row": 35,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 37
                                              },
                                              "text": "lambda"
                                            },
                                            {
                                              "type": "lambda_parameters",
                                              "start": {
                                                "row": 35,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 39
                                              },
                                              "text": "_",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 39
                                                  },
                                                  "text": "_"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ":",
                                              "start": {
                                                "row": 35,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 40
                                              },
                                              "text": ":"
                                            },
                                            {
                                              "type": "false",
                                              "start": {
                                                "row": 35,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 46
                                              },
                                              "text": "False"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 37,
                "column": 4
              },
              "end": {
                "row": 37,
                "column": 32
              },
              "text": "return _is_scipy_sparse(arr)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 37,
                    "column": 4
                  },
                  "end": {
                    "row": 37,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 37,
                    "column": 11
                  },
                  "end": {
                    "row": 37,
                    "column": 32
                  },
                  "text": "_is_scipy_sparse(arr)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 37,
                        "column": 11
                      },
                      "end": {
                        "row": 37,
                        "column": 27
                      },
                      "text": "_is_scipy_sparse"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 37,
                        "column": 27
                      },
                      "end": {
                        "row": 37,
                        "column": 32
                      },
                      "text": "(arr)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 37,
                            "column": 27
                          },
                          "end": {
                            "row": 37,
                            "column": 28
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 37,
                            "column": 28
                          },
                          "end": {
                            "row": 37,
                            "column": 31
                          },
                          "text": "arr"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 37,
                            "column": 31
                          },
                          "end": {
                            "row": 37,
                            "column": 32
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}