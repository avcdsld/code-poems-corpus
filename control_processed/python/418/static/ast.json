{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 24,
    "column": 90
  },
  "text": "def text(self, paths, wholetext=False, lineSep=None):\n        \"\"\"\n        Loads text files and returns a :class:`DataFrame` whose schema starts with a\n        string column named \"value\", and followed by partitioned columns if there\n        are any.\n        The text files must be encoded as UTF-8.\n\n        By default, each line in the text file is a new row in the resulting DataFrame.\n\n        :param paths: string, or list of strings, for input path(s).\n        :param wholetext: if true, read each file from input path(s) as a single row.\n        :param lineSep: defines the line separator that should be used for parsing. If None is\n                        set, it covers all ``\\\\r``, ``\\\\r\\\\n`` and ``\\\\n``.\n\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt')\n        >>> df.collect()\n        [Row(value=u'hello'), Row(value=u'this')]\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt', wholetext=True)\n        >>> df.collect()\n        [Row(value=u'hello\\\\nthis')]\n        \"\"\"\n        self._set_opts(wholetext=wholetext, lineSep=lineSep)\n        if isinstance(paths, basestring):\n            paths = [paths]\n        return self._df(self._jreader.text(self._spark._sc._jvm.PythonUtils.toSeq(paths)))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 24,
        "column": 90
      },
      "text": "def text(self, paths, wholetext=False, lineSep=None):\n        \"\"\"\n        Loads text files and returns a :class:`DataFrame` whose schema starts with a\n        string column named \"value\", and followed by partitioned columns if there\n        are any.\n        The text files must be encoded as UTF-8.\n\n        By default, each line in the text file is a new row in the resulting DataFrame.\n\n        :param paths: string, or list of strings, for input path(s).\n        :param wholetext: if true, read each file from input path(s) as a single row.\n        :param lineSep: defines the line separator that should be used for parsing. If None is\n                        set, it covers all ``\\\\r``, ``\\\\r\\\\n`` and ``\\\\n``.\n\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt')\n        >>> df.collect()\n        [Row(value=u'hello'), Row(value=u'this')]\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt', wholetext=True)\n        >>> df.collect()\n        [Row(value=u'hello\\\\nthis')]\n        \"\"\"\n        self._set_opts(wholetext=wholetext, lineSep=lineSep)\n        if isinstance(paths, basestring):\n            paths = [paths]\n        return self._df(self._jreader.text(self._spark._sc._jvm.PythonUtils.toSeq(paths)))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "text"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 52
          },
          "text": "(self, paths, wholetext=False, lineSep=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "paths"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "wholetext=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 22
                  },
                  "end": {
                    "row": 0,
                    "column": 31
                  },
                  "text": "wholetext"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 31
                  },
                  "end": {
                    "row": 0,
                    "column": 32
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 37
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 51
              },
              "text": "lineSep=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 39
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "lineSep"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 46
                  },
                  "end": {
                    "row": 0,
                    "column": 47
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 47
                  },
                  "end": {
                    "row": 0,
                    "column": 51
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 51
              },
              "end": {
                "row": 0,
                "column": 52
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 52
          },
          "end": {
            "row": 0,
            "column": 53
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 24,
            "column": 90
          },
          "text": "\"\"\"\n        Loads text files and returns a :class:`DataFrame` whose schema starts with a\n        string column named \"value\", and followed by partitioned columns if there\n        are any.\n        The text files must be encoded as UTF-8.\n\n        By default, each line in the text file is a new row in the resulting DataFrame.\n\n        :param paths: string, or list of strings, for input path(s).\n        :param wholetext: if true, read each file from input path(s) as a single row.\n        :param lineSep: defines the line separator that should be used for parsing. If None is\n                        set, it covers all ``\\\\r``, ``\\\\r\\\\n`` and ``\\\\n``.\n\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt')\n        >>> df.collect()\n        [Row(value=u'hello'), Row(value=u'this')]\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt', wholetext=True)\n        >>> df.collect()\n        [Row(value=u'hello\\\\nthis')]\n        \"\"\"\n        self._set_opts(wholetext=wholetext, lineSep=lineSep)\n        if isinstance(paths, basestring):\n            paths = [paths]\n        return self._df(self._jreader.text(self._spark._sc._jvm.PythonUtils.toSeq(paths)))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 11
              },
              "text": "\"\"\"\n        Loads text files and returns a :class:`DataFrame` whose schema starts with a\n        string column named \"value\", and followed by partitioned columns if there\n        are any.\n        The text files must be encoded as UTF-8.\n\n        By default, each line in the text file is a new row in the resulting DataFrame.\n\n        :param paths: string, or list of strings, for input path(s).\n        :param wholetext: if true, read each file from input path(s) as a single row.\n        :param lineSep: defines the line separator that should be used for parsing. If None is\n                        set, it covers all ``\\\\r``, ``\\\\r\\\\n`` and ``\\\\n``.\n\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt')\n        >>> df.collect()\n        [Row(value=u'hello'), Row(value=u'this')]\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt', wholetext=True)\n        >>> df.collect()\n        [Row(value=u'hello\\\\nthis')]\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Loads text files and returns a :class:`DataFrame` whose schema starts with a\n        string column named \"value\", and followed by partitioned columns if there\n        are any.\n        The text files must be encoded as UTF-8.\n\n        By default, each line in the text file is a new row in the resulting DataFrame.\n\n        :param paths: string, or list of strings, for input path(s).\n        :param wholetext: if true, read each file from input path(s) as a single row.\n        :param lineSep: defines the line separator that should be used for parsing. If None is\n                        set, it covers all ``\\\\r``, ``\\\\r\\\\n`` and ``\\\\n``.\n\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt')\n        >>> df.collect()\n        [Row(value=u'hello'), Row(value=u'this')]\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt', wholetext=True)\n        >>> df.collect()\n        [Row(value=u'hello\\\\nthis')]\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 20,
                        "column": 8
                      },
                      "text": "\n        Loads text files and returns a :class:`DataFrame` whose schema starts with a\n        string column named \"value\", and followed by partitioned columns if there\n        are any.\n        The text files must be encoded as UTF-8.\n\n        By default, each line in the text file is a new row in the resulting DataFrame.\n\n        :param paths: string, or list of strings, for input path(s).\n        :param wholetext: if true, read each file from input path(s) as a single row.\n        :param lineSep: defines the line separator that should be used for parsing. If None is\n                        set, it covers all ``\\\\r``, ``\\\\r\\\\n`` and ``\\\\n``.\n\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt')\n        >>> df.collect()\n        [Row(value=u'hello'), Row(value=u'this')]\n        >>> df = spark.read.text('python/test_support/sql/text-test.txt', wholetext=True)\n        >>> df.collect()\n        [Row(value=u'hello\\\\nthis')]\n        ",
                      "children": [
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 12,
                            "column": 45
                          },
                          "end": {
                            "row": 12,
                            "column": 47
                          },
                          "text": "\\\\"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 12,
                            "column": 54
                          },
                          "end": {
                            "row": 12,
                            "column": 56
                          },
                          "text": "\\\\"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 12,
                            "column": 57
                          },
                          "end": {
                            "row": 12,
                            "column": 59
                          },
                          "text": "\\\\"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 12,
                            "column": 69
                          },
                          "end": {
                            "row": 12,
                            "column": 71
                          },
                          "text": "\\\\"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 19,
                            "column": 26
                          },
                          "end": {
                            "row": 19,
                            "column": 28
                          },
                          "text": "\\\\"
                        }
                      ]
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 21,
                "column": 60
              },
              "text": "self._set_opts(wholetext=wholetext, lineSep=lineSep)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 60
                  },
                  "text": "self._set_opts(wholetext=wholetext, lineSep=lineSep)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 22
                      },
                      "text": "self._set_opts",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 8
                          },
                          "end": {
                            "row": 21,
                            "column": 12
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 21,
                            "column": 12
                          },
                          "end": {
                            "row": 21,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 13
                          },
                          "end": {
                            "row": 21,
                            "column": 22
                          },
                          "text": "_set_opts"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 21,
                        "column": 22
                      },
                      "end": {
                        "row": 21,
                        "column": 60
                      },
                      "text": "(wholetext=wholetext, lineSep=lineSep)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 21,
                            "column": 22
                          },
                          "end": {
                            "row": 21,
                            "column": 23
                          },
                          "text": "("
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 21,
                            "column": 23
                          },
                          "end": {
                            "row": 21,
                            "column": 42
                          },
                          "text": "wholetext=wholetext",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 23
                              },
                              "end": {
                                "row": 21,
                                "column": 32
                              },
                              "text": "wholetext"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 21,
                                "column": 32
                              },
                              "end": {
                                "row": 21,
                                "column": 33
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 33
                              },
                              "end": {
                                "row": 21,
                                "column": 42
                              },
                              "text": "wholetext"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 21,
                            "column": 42
                          },
                          "end": {
                            "row": 21,
                            "column": 43
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 21,
                            "column": 44
                          },
                          "end": {
                            "row": 21,
                            "column": 59
                          },
                          "text": "lineSep=lineSep",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 44
                              },
                              "end": {
                                "row": 21,
                                "column": 51
                              },
                              "text": "lineSep"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 21,
                                "column": 51
                              },
                              "end": {
                                "row": 21,
                                "column": 52
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 52
                              },
                              "end": {
                                "row": 21,
                                "column": 59
                              },
                              "text": "lineSep"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 21,
                            "column": 59
                          },
                          "end": {
                            "row": 21,
                            "column": 60
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 22,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 27
              },
              "text": "if isinstance(paths, basestring):\n            paths = [paths]",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 22,
                    "column": 11
                  },
                  "end": {
                    "row": 22,
                    "column": 40
                  },
                  "text": "isinstance(paths, basestring)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 11
                      },
                      "end": {
                        "row": 22,
                        "column": 21
                      },
                      "text": "isinstance"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 22,
                        "column": 21
                      },
                      "end": {
                        "row": 22,
                        "column": 40
                      },
                      "text": "(paths, basestring)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 22,
                            "column": 21
                          },
                          "end": {
                            "row": 22,
                            "column": 22
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 22
                          },
                          "end": {
                            "row": 22,
                            "column": 27
                          },
                          "text": "paths"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 22,
                            "column": 27
                          },
                          "end": {
                            "row": 22,
                            "column": 28
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 29
                          },
                          "end": {
                            "row": 22,
                            "column": 39
                          },
                          "text": "basestring"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 22,
                            "column": 39
                          },
                          "end": {
                            "row": 22,
                            "column": 40
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 22,
                    "column": 40
                  },
                  "end": {
                    "row": 22,
                    "column": 41
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 23,
                    "column": 12
                  },
                  "end": {
                    "row": 23,
                    "column": 27
                  },
                  "text": "paths = [paths]",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 23,
                        "column": 12
                      },
                      "end": {
                        "row": 23,
                        "column": 27
                      },
                      "text": "paths = [paths]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 23,
                            "column": 12
                          },
                          "end": {
                            "row": 23,
                            "column": 27
                          },
                          "text": "paths = [paths]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 17
                              },
                              "text": "paths"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 23,
                                "column": 18
                              },
                              "end": {
                                "row": 23,
                                "column": 19
                              },
                              "text": "="
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 23,
                                "column": 20
                              },
                              "end": {
                                "row": 23,
                                "column": 27
                              },
                              "text": "[paths]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 23,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 21
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 26
                                  },
                                  "text": "paths"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 23,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 27
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 24,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 90
              },
              "text": "return self._df(self._jreader.text(self._spark._sc._jvm.PythonUtils.toSeq(paths)))",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 24,
                    "column": 8
                  },
                  "end": {
                    "row": 24,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 24,
                    "column": 15
                  },
                  "end": {
                    "row": 24,
                    "column": 90
                  },
                  "text": "self._df(self._jreader.text(self._spark._sc._jvm.PythonUtils.toSeq(paths)))",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 24,
                        "column": 15
                      },
                      "end": {
                        "row": 24,
                        "column": 23
                      },
                      "text": "self._df",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 15
                          },
                          "end": {
                            "row": 24,
                            "column": 19
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 24,
                            "column": 19
                          },
                          "end": {
                            "row": 24,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 20
                          },
                          "end": {
                            "row": 24,
                            "column": 23
                          },
                          "text": "_df"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 24,
                        "column": 23
                      },
                      "end": {
                        "row": 24,
                        "column": 90
                      },
                      "text": "(self._jreader.text(self._spark._sc._jvm.PythonUtils.toSeq(paths)))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 24,
                            "column": 23
                          },
                          "end": {
                            "row": 24,
                            "column": 24
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 24,
                            "column": 24
                          },
                          "end": {
                            "row": 24,
                            "column": 89
                          },
                          "text": "self._jreader.text(self._spark._sc._jvm.PythonUtils.toSeq(paths))",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 24,
                                "column": 24
                              },
                              "end": {
                                "row": 24,
                                "column": 42
                              },
                              "text": "self._jreader.text",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 24,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 37
                                  },
                                  "text": "self._jreader",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 24,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 28
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 24,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 29
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 24,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 37
                                      },
                                      "text": "_jreader"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 24,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 38
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 42
                                  },
                                  "text": "text"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 24,
                                "column": 42
                              },
                              "end": {
                                "row": 24,
                                "column": 89
                              },
                              "text": "(self._spark._sc._jvm.PythonUtils.toSeq(paths))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 24,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 43
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 24,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 88
                                  },
                                  "text": "self._spark._sc._jvm.PythonUtils.toSeq(paths)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 24,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 81
                                      },
                                      "text": "self._spark._sc._jvm.PythonUtils.toSeq",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 24,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 75
                                          },
                                          "text": "self._spark._sc._jvm.PythonUtils",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 24,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 63
                                              },
                                              "text": "self._spark._sc._jvm",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 58
                                                  },
                                                  "text": "self._spark._sc",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 54
                                                      },
                                                      "text": "self._spark",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 43
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 47
                                                          },
                                                          "text": "self"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 47
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 48
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 48
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 54
                                                          },
                                                          "text": "_spark"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 55
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 58
                                                      },
                                                      "text": "_sc"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 59
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 59
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 63
                                                  },
                                                  "text": "_jvm"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 24,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 64
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 24,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 75
                                              },
                                              "text": "PythonUtils"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 24,
                                            "column": 75
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 76
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 76
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 81
                                          },
                                          "text": "toSeq"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 24,
                                        "column": 81
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 88
                                      },
                                      "text": "(paths)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 24,
                                            "column": 81
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 82
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 82
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 87
                                          },
                                          "text": "paths"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 24,
                                            "column": 87
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 88
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 24,
                                    "column": 88
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 89
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 24,
                            "column": 89
                          },
                          "end": {
                            "row": 24,
                            "column": 90
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}