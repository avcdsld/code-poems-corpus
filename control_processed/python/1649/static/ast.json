{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 54,
    "column": 46
  },
  "text": "def asfreq(self, freq=None, how='E'):\n        \"\"\"\n        Convert the Period Array/Index to the specified frequency `freq`.\n\n        Parameters\n        ----------\n        freq : str\n            a frequency\n        how : str {'E', 'S'}\n            'E', 'END', or 'FINISH' for end,\n            'S', 'START', or 'BEGIN' for start.\n            Whether the elements should be aligned to the end\n            or start within pa period. January 31st ('END') vs.\n            January 1st ('START') for example.\n\n        Returns\n        -------\n        new : Period Array/Index with the new frequency\n\n        Examples\n        --------\n        >>> pidx = pd.period_range('2010-01-01', '2015-01-01', freq='A')\n        >>> pidx\n        PeriodIndex(['2010', '2011', '2012', '2013', '2014', '2015'],\n        dtype='period[A-DEC]', freq='A-DEC')\n\n        >>> pidx.asfreq('M')\n        PeriodIndex(['2010-12', '2011-12', '2012-12', '2013-12', '2014-12',\n        '2015-12'], dtype='period[M]', freq='M')\n\n        >>> pidx.asfreq('M', how='S')\n        PeriodIndex(['2010-01', '2011-01', '2012-01', '2013-01', '2014-01',\n        '2015-01'], dtype='period[M]', freq='M')\n        \"\"\"\n        how = libperiod._validate_end_alias(how)\n\n        freq = Period._maybe_convert_freq(freq)\n\n        base1, mult1 = libfrequencies.get_freq_code(self.freq)\n        base2, mult2 = libfrequencies.get_freq_code(freq)\n\n        asi8 = self.asi8\n        # mult1 can't be negative or 0\n        end = how == 'E'\n        if end:\n            ordinal = asi8 + mult1 - 1\n        else:\n            ordinal = asi8\n\n        new_data = period_asfreq_arr(ordinal, base1, base2, end)\n\n        if self._hasnans:\n            new_data[self._isnan] = iNaT\n\n        return type(self)(new_data, freq=freq)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 54,
        "column": 46
      },
      "text": "def asfreq(self, freq=None, how='E'):\n        \"\"\"\n        Convert the Period Array/Index to the specified frequency `freq`.\n\n        Parameters\n        ----------\n        freq : str\n            a frequency\n        how : str {'E', 'S'}\n            'E', 'END', or 'FINISH' for end,\n            'S', 'START', or 'BEGIN' for start.\n            Whether the elements should be aligned to the end\n            or start within pa period. January 31st ('END') vs.\n            January 1st ('START') for example.\n\n        Returns\n        -------\n        new : Period Array/Index with the new frequency\n\n        Examples\n        --------\n        >>> pidx = pd.period_range('2010-01-01', '2015-01-01', freq='A')\n        >>> pidx\n        PeriodIndex(['2010', '2011', '2012', '2013', '2014', '2015'],\n        dtype='period[A-DEC]', freq='A-DEC')\n\n        >>> pidx.asfreq('M')\n        PeriodIndex(['2010-12', '2011-12', '2012-12', '2013-12', '2014-12',\n        '2015-12'], dtype='period[M]', freq='M')\n\n        >>> pidx.asfreq('M', how='S')\n        PeriodIndex(['2010-01', '2011-01', '2012-01', '2013-01', '2014-01',\n        '2015-01'], dtype='period[M]', freq='M')\n        \"\"\"\n        how = libperiod._validate_end_alias(how)\n\n        freq = Period._maybe_convert_freq(freq)\n\n        base1, mult1 = libfrequencies.get_freq_code(self.freq)\n        base2, mult2 = libfrequencies.get_freq_code(freq)\n\n        asi8 = self.asi8\n        # mult1 can't be negative or 0\n        end = how == 'E'\n        if end:\n            ordinal = asi8 + mult1 - 1\n        else:\n            ordinal = asi8\n\n        new_data = period_asfreq_arr(ordinal, base1, base2, end)\n\n        if self._hasnans:\n            new_data[self._isnan] = iNaT\n\n        return type(self)(new_data, freq=freq)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "asfreq"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 36
          },
          "text": "(self, freq=None, how='E')",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "freq=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 17
                  },
                  "end": {
                    "row": 0,
                    "column": 21
                  },
                  "text": "freq"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 21
                  },
                  "end": {
                    "row": 0,
                    "column": 22
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 22
                  },
                  "end": {
                    "row": 0,
                    "column": 26
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "how='E'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 28
                  },
                  "end": {
                    "row": 0,
                    "column": 31
                  },
                  "text": "how"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 31
                  },
                  "end": {
                    "row": 0,
                    "column": 32
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 35
                  },
                  "text": "'E'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 0,
                        "column": 32
                      },
                      "end": {
                        "row": 0,
                        "column": 33
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 0,
                        "column": 33
                      },
                      "end": {
                        "row": 0,
                        "column": 34
                      },
                      "text": "E"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 0,
                        "column": 34
                      },
                      "end": {
                        "row": 0,
                        "column": 35
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 36
          },
          "end": {
            "row": 0,
            "column": 37
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 54,
            "column": 46
          },
          "text": "\"\"\"\n        Convert the Period Array/Index to the specified frequency `freq`.\n\n        Parameters\n        ----------\n        freq : str\n            a frequency\n        how : str {'E', 'S'}\n            'E', 'END', or 'FINISH' for end,\n            'S', 'START', or 'BEGIN' for start.\n            Whether the elements should be aligned to the end\n            or start within pa period. January 31st ('END') vs.\n            January 1st ('START') for example.\n\n        Returns\n        -------\n        new : Period Array/Index with the new frequency\n\n        Examples\n        --------\n        >>> pidx = pd.period_range('2010-01-01', '2015-01-01', freq='A')\n        >>> pidx\n        PeriodIndex(['2010', '2011', '2012', '2013', '2014', '2015'],\n        dtype='period[A-DEC]', freq='A-DEC')\n\n        >>> pidx.asfreq('M')\n        PeriodIndex(['2010-12', '2011-12', '2012-12', '2013-12', '2014-12',\n        '2015-12'], dtype='period[M]', freq='M')\n\n        >>> pidx.asfreq('M', how='S')\n        PeriodIndex(['2010-01', '2011-01', '2012-01', '2013-01', '2014-01',\n        '2015-01'], dtype='period[M]', freq='M')\n        \"\"\"\n        how = libperiod._validate_end_alias(how)\n\n        freq = Period._maybe_convert_freq(freq)\n\n        base1, mult1 = libfrequencies.get_freq_code(self.freq)\n        base2, mult2 = libfrequencies.get_freq_code(freq)\n\n        asi8 = self.asi8\n        # mult1 can't be negative or 0\n        end = how == 'E'\n        if end:\n            ordinal = asi8 + mult1 - 1\n        else:\n            ordinal = asi8\n\n        new_data = period_asfreq_arr(ordinal, base1, base2, end)\n\n        if self._hasnans:\n            new_data[self._isnan] = iNaT\n\n        return type(self)(new_data, freq=freq)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 33,
                "column": 11
              },
              "text": "\"\"\"\n        Convert the Period Array/Index to the specified frequency `freq`.\n\n        Parameters\n        ----------\n        freq : str\n            a frequency\n        how : str {'E', 'S'}\n            'E', 'END', or 'FINISH' for end,\n            'S', 'START', or 'BEGIN' for start.\n            Whether the elements should be aligned to the end\n            or start within pa period. January 31st ('END') vs.\n            January 1st ('START') for example.\n\n        Returns\n        -------\n        new : Period Array/Index with the new frequency\n\n        Examples\n        --------\n        >>> pidx = pd.period_range('2010-01-01', '2015-01-01', freq='A')\n        >>> pidx\n        PeriodIndex(['2010', '2011', '2012', '2013', '2014', '2015'],\n        dtype='period[A-DEC]', freq='A-DEC')\n\n        >>> pidx.asfreq('M')\n        PeriodIndex(['2010-12', '2011-12', '2012-12', '2013-12', '2014-12',\n        '2015-12'], dtype='period[M]', freq='M')\n\n        >>> pidx.asfreq('M', how='S')\n        PeriodIndex(['2010-01', '2011-01', '2012-01', '2013-01', '2014-01',\n        '2015-01'], dtype='period[M]', freq='M')\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 33,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Convert the Period Array/Index to the specified frequency `freq`.\n\n        Parameters\n        ----------\n        freq : str\n            a frequency\n        how : str {'E', 'S'}\n            'E', 'END', or 'FINISH' for end,\n            'S', 'START', or 'BEGIN' for start.\n            Whether the elements should be aligned to the end\n            or start within pa period. January 31st ('END') vs.\n            January 1st ('START') for example.\n\n        Returns\n        -------\n        new : Period Array/Index with the new frequency\n\n        Examples\n        --------\n        >>> pidx = pd.period_range('2010-01-01', '2015-01-01', freq='A')\n        >>> pidx\n        PeriodIndex(['2010', '2011', '2012', '2013', '2014', '2015'],\n        dtype='period[A-DEC]', freq='A-DEC')\n\n        >>> pidx.asfreq('M')\n        PeriodIndex(['2010-12', '2011-12', '2012-12', '2013-12', '2014-12',\n        '2015-12'], dtype='period[M]', freq='M')\n\n        >>> pidx.asfreq('M', how='S')\n        PeriodIndex(['2010-01', '2011-01', '2012-01', '2013-01', '2014-01',\n        '2015-01'], dtype='period[M]', freq='M')\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 33,
                        "column": 8
                      },
                      "text": "\n        Convert the Period Array/Index to the specified frequency `freq`.\n\n        Parameters\n        ----------\n        freq : str\n            a frequency\n        how : str {'E', 'S'}\n            'E', 'END', or 'FINISH' for end,\n            'S', 'START', or 'BEGIN' for start.\n            Whether the elements should be aligned to the end\n            or start within pa period. January 31st ('END') vs.\n            January 1st ('START') for example.\n\n        Returns\n        -------\n        new : Period Array/Index with the new frequency\n\n        Examples\n        --------\n        >>> pidx = pd.period_range('2010-01-01', '2015-01-01', freq='A')\n        >>> pidx\n        PeriodIndex(['2010', '2011', '2012', '2013', '2014', '2015'],\n        dtype='period[A-DEC]', freq='A-DEC')\n\n        >>> pidx.asfreq('M')\n        PeriodIndex(['2010-12', '2011-12', '2012-12', '2013-12', '2014-12',\n        '2015-12'], dtype='period[M]', freq='M')\n\n        >>> pidx.asfreq('M', how='S')\n        PeriodIndex(['2010-01', '2011-01', '2012-01', '2013-01', '2014-01',\n        '2015-01'], dtype='period[M]', freq='M')\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 33,
                        "column": 8
                      },
                      "end": {
                        "row": 33,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 34,
                "column": 8
              },
              "end": {
                "row": 34,
                "column": 48
              },
              "text": "how = libperiod._validate_end_alias(how)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 34,
                    "column": 8
                  },
                  "end": {
                    "row": 34,
                    "column": 48
                  },
                  "text": "how = libperiod._validate_end_alias(how)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 34,
                        "column": 8
                      },
                      "end": {
                        "row": 34,
                        "column": 11
                      },
                      "text": "how"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 34,
                        "column": 12
                      },
                      "end": {
                        "row": 34,
                        "column": 13
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 34,
                        "column": 14
                      },
                      "end": {
                        "row": 34,
                        "column": 48
                      },
                      "text": "libperiod._validate_end_alias(how)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 34,
                            "column": 14
                          },
                          "end": {
                            "row": 34,
                            "column": 43
                          },
                          "text": "libperiod._validate_end_alias",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 14
                              },
                              "end": {
                                "row": 34,
                                "column": 23
                              },
                              "text": "libperiod"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 34,
                                "column": 23
                              },
                              "end": {
                                "row": 34,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 24
                              },
                              "end": {
                                "row": 34,
                                "column": 43
                              },
                              "text": "_validate_end_alias"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 34,
                            "column": 43
                          },
                          "end": {
                            "row": 34,
                            "column": 48
                          },
                          "text": "(how)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 34,
                                "column": 43
                              },
                              "end": {
                                "row": 34,
                                "column": 44
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 44
                              },
                              "end": {
                                "row": 34,
                                "column": 47
                              },
                              "text": "how"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 34,
                                "column": 47
                              },
                              "end": {
                                "row": 34,
                                "column": 48
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 36,
                "column": 8
              },
              "end": {
                "row": 36,
                "column": 47
              },
              "text": "freq = Period._maybe_convert_freq(freq)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 36,
                    "column": 8
                  },
                  "end": {
                    "row": 36,
                    "column": 47
                  },
                  "text": "freq = Period._maybe_convert_freq(freq)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 36,
                        "column": 8
                      },
                      "end": {
                        "row": 36,
                        "column": 12
                      },
                      "text": "freq"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 36,
                        "column": 13
                      },
                      "end": {
                        "row": 36,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 36,
                        "column": 15
                      },
                      "end": {
                        "row": 36,
                        "column": 47
                      },
                      "text": "Period._maybe_convert_freq(freq)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 36,
                            "column": 15
                          },
                          "end": {
                            "row": 36,
                            "column": 41
                          },
                          "text": "Period._maybe_convert_freq",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 15
                              },
                              "end": {
                                "row": 36,
                                "column": 21
                              },
                              "text": "Period"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 36,
                                "column": 21
                              },
                              "end": {
                                "row": 36,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 22
                              },
                              "end": {
                                "row": 36,
                                "column": 41
                              },
                              "text": "_maybe_convert_freq"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 36,
                            "column": 41
                          },
                          "end": {
                            "row": 36,
                            "column": 47
                          },
                          "text": "(freq)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 36,
                                "column": 41
                              },
                              "end": {
                                "row": 36,
                                "column": 42
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 42
                              },
                              "end": {
                                "row": 36,
                                "column": 46
                              },
                              "text": "freq"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 36,
                                "column": 46
                              },
                              "end": {
                                "row": 36,
                                "column": 47
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 38,
                "column": 8
              },
              "end": {
                "row": 38,
                "column": 62
              },
              "text": "base1, mult1 = libfrequencies.get_freq_code(self.freq)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 38,
                    "column": 8
                  },
                  "end": {
                    "row": 38,
                    "column": 62
                  },
                  "text": "base1, mult1 = libfrequencies.get_freq_code(self.freq)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 38,
                        "column": 8
                      },
                      "end": {
                        "row": 38,
                        "column": 20
                      },
                      "text": "base1, mult1",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 38,
                            "column": 8
                          },
                          "end": {
                            "row": 38,
                            "column": 13
                          },
                          "text": "base1"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 38,
                            "column": 13
                          },
                          "end": {
                            "row": 38,
                            "column": 14
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 38,
                            "column": 15
                          },
                          "end": {
                            "row": 38,
                            "column": 20
                          },
                          "text": "mult1"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 38,
                        "column": 21
                      },
                      "end": {
                        "row": 38,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 38,
                        "column": 23
                      },
                      "end": {
                        "row": 38,
                        "column": 62
                      },
                      "text": "libfrequencies.get_freq_code(self.freq)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 38,
                            "column": 23
                          },
                          "end": {
                            "row": 38,
                            "column": 51
                          },
                          "text": "libfrequencies.get_freq_code",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 23
                              },
                              "end": {
                                "row": 38,
                                "column": 37
                              },
                              "text": "libfrequencies"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 38,
                                "column": 37
                              },
                              "end": {
                                "row": 38,
                                "column": 38
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 38
                              },
                              "end": {
                                "row": 38,
                                "column": 51
                              },
                              "text": "get_freq_code"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 38,
                            "column": 51
                          },
                          "end": {
                            "row": 38,
                            "column": 62
                          },
                          "text": "(self.freq)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 38,
                                "column": 51
                              },
                              "end": {
                                "row": 38,
                                "column": 52
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 38,
                                "column": 52
                              },
                              "end": {
                                "row": 38,
                                "column": 61
                              },
                              "text": "self.freq",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 56
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 38,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 57
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 61
                                  },
                                  "text": "freq"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 38,
                                "column": 61
                              },
                              "end": {
                                "row": 38,
                                "column": 62
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 39,
                "column": 8
              },
              "end": {
                "row": 39,
                "column": 57
              },
              "text": "base2, mult2 = libfrequencies.get_freq_code(freq)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 39,
                    "column": 8
                  },
                  "end": {
                    "row": 39,
                    "column": 57
                  },
                  "text": "base2, mult2 = libfrequencies.get_freq_code(freq)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 39,
                        "column": 8
                      },
                      "end": {
                        "row": 39,
                        "column": 20
                      },
                      "text": "base2, mult2",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 39,
                            "column": 8
                          },
                          "end": {
                            "row": 39,
                            "column": 13
                          },
                          "text": "base2"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 39,
                            "column": 13
                          },
                          "end": {
                            "row": 39,
                            "column": 14
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 39,
                            "column": 15
                          },
                          "end": {
                            "row": 39,
                            "column": 20
                          },
                          "text": "mult2"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 39,
                        "column": 21
                      },
                      "end": {
                        "row": 39,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 39,
                        "column": 23
                      },
                      "end": {
                        "row": 39,
                        "column": 57
                      },
                      "text": "libfrequencies.get_freq_code(freq)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 39,
                            "column": 23
                          },
                          "end": {
                            "row": 39,
                            "column": 51
                          },
                          "text": "libfrequencies.get_freq_code",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 23
                              },
                              "end": {
                                "row": 39,
                                "column": 37
                              },
                              "text": "libfrequencies"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 39,
                                "column": 37
                              },
                              "end": {
                                "row": 39,
                                "column": 38
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 38
                              },
                              "end": {
                                "row": 39,
                                "column": 51
                              },
                              "text": "get_freq_code"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 39,
                            "column": 51
                          },
                          "end": {
                            "row": 39,
                            "column": 57
                          },
                          "text": "(freq)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 39,
                                "column": 51
                              },
                              "end": {
                                "row": 39,
                                "column": 52
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 52
                              },
                              "end": {
                                "row": 39,
                                "column": 56
                              },
                              "text": "freq"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 39,
                                "column": 56
                              },
                              "end": {
                                "row": 39,
                                "column": 57
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 41,
                "column": 8
              },
              "end": {
                "row": 41,
                "column": 24
              },
              "text": "asi8 = self.asi8",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 41,
                    "column": 8
                  },
                  "end": {
                    "row": 41,
                    "column": 24
                  },
                  "text": "asi8 = self.asi8",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 41,
                        "column": 8
                      },
                      "end": {
                        "row": 41,
                        "column": 12
                      },
                      "text": "asi8"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 41,
                        "column": 13
                      },
                      "end": {
                        "row": 41,
                        "column": 14
                      },
                      "text": "="
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 41,
                        "column": 15
                      },
                      "end": {
                        "row": 41,
                        "column": 24
                      },
                      "text": "self.asi8",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 41,
                            "column": 15
                          },
                          "end": {
                            "row": 41,
                            "column": 19
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 41,
                            "column": 19
                          },
                          "end": {
                            "row": 41,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 41,
                            "column": 20
                          },
                          "end": {
                            "row": 41,
                            "column": 24
                          },
                          "text": "asi8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 42,
                "column": 8
              },
              "end": {
                "row": 42,
                "column": 38
              },
              "text": "# mult1 can't be negative or 0"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 43,
                "column": 8
              },
              "end": {
                "row": 43,
                "column": 24
              },
              "text": "end = how == 'E'",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 43,
                    "column": 8
                  },
                  "end": {
                    "row": 43,
                    "column": 24
                  },
                  "text": "end = how == 'E'",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 43,
                        "column": 8
                      },
                      "end": {
                        "row": 43,
                        "column": 11
                      },
                      "text": "end"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 43,
                        "column": 12
                      },
                      "end": {
                        "row": 43,
                        "column": 13
                      },
                      "text": "="
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 43,
                        "column": 14
                      },
                      "end": {
                        "row": 43,
                        "column": 24
                      },
                      "text": "how == 'E'",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 43,
                            "column": 14
                          },
                          "end": {
                            "row": 43,
                            "column": 17
                          },
                          "text": "how"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 43,
                            "column": 18
                          },
                          "end": {
                            "row": 43,
                            "column": 20
                          },
                          "text": "=="
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 43,
                            "column": 21
                          },
                          "end": {
                            "row": 43,
                            "column": 24
                          },
                          "text": "'E'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 43,
                                "column": 21
                              },
                              "end": {
                                "row": 43,
                                "column": 22
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 43,
                                "column": 22
                              },
                              "end": {
                                "row": 43,
                                "column": 23
                              },
                              "text": "E"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 43,
                                "column": 23
                              },
                              "end": {
                                "row": 43,
                                "column": 24
                              },
                              "text": "'"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 44,
                "column": 8
              },
              "end": {
                "row": 47,
                "column": 26
              },
              "text": "if end:\n            ordinal = asi8 + mult1 - 1\n        else:\n            ordinal = asi8",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 44,
                    "column": 8
                  },
                  "end": {
                    "row": 44,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 44,
                    "column": 11
                  },
                  "end": {
                    "row": 44,
                    "column": 14
                  },
                  "text": "end"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 44,
                    "column": 14
                  },
                  "end": {
                    "row": 44,
                    "column": 15
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 45,
                    "column": 12
                  },
                  "end": {
                    "row": 45,
                    "column": 38
                  },
                  "text": "ordinal = asi8 + mult1 - 1",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 45,
                        "column": 12
                      },
                      "end": {
                        "row": 45,
                        "column": 38
                      },
                      "text": "ordinal = asi8 + mult1 - 1",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 45,
                            "column": 12
                          },
                          "end": {
                            "row": 45,
                            "column": 38
                          },
                          "text": "ordinal = asi8 + mult1 - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 45,
                                "column": 12
                              },
                              "end": {
                                "row": 45,
                                "column": 19
                              },
                              "text": "ordinal"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 45,
                                "column": 20
                              },
                              "end": {
                                "row": 45,
                                "column": 21
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 45,
                                "column": 22
                              },
                              "end": {
                                "row": 45,
                                "column": 38
                              },
                              "text": "asi8 + mult1 - 1",
                              "children": [
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 45,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 34
                                  },
                                  "text": "asi8 + mult1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 45,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 26
                                      },
                                      "text": "asi8"
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 45,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 28
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 45,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 34
                                      },
                                      "text": "mult1"
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start": {
                                    "row": 45,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 36
                                  },
                                  "text": "-"
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 45,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 38
                                  },
                                  "text": "1"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 46,
                    "column": 8
                  },
                  "end": {
                    "row": 47,
                    "column": 26
                  },
                  "text": "else:\n            ordinal = asi8",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 46,
                        "column": 8
                      },
                      "end": {
                        "row": 46,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 46,
                        "column": 12
                      },
                      "end": {
                        "row": 46,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 47,
                        "column": 12
                      },
                      "end": {
                        "row": 47,
                        "column": 26
                      },
                      "text": "ordinal = asi8",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 47,
                            "column": 12
                          },
                          "end": {
                            "row": 47,
                            "column": 26
                          },
                          "text": "ordinal = asi8",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 47,
                                "column": 12
                              },
                              "end": {
                                "row": 47,
                                "column": 26
                              },
                              "text": "ordinal = asi8",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 47,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 19
                                  },
                                  "text": "ordinal"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 47,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 21
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 47,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 26
                                  },
                                  "text": "asi8"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 49,
                "column": 8
              },
              "end": {
                "row": 49,
                "column": 64
              },
              "text": "new_data = period_asfreq_arr(ordinal, base1, base2, end)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 49,
                    "column": 8
                  },
                  "end": {
                    "row": 49,
                    "column": 64
                  },
                  "text": "new_data = period_asfreq_arr(ordinal, base1, base2, end)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 49,
                        "column": 8
                      },
                      "end": {
                        "row": 49,
                        "column": 16
                      },
                      "text": "new_data"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 49,
                        "column": 17
                      },
                      "end": {
                        "row": 49,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 49,
                        "column": 19
                      },
                      "end": {
                        "row": 49,
                        "column": 64
                      },
                      "text": "period_asfreq_arr(ordinal, base1, base2, end)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 49,
                            "column": 19
                          },
                          "end": {
                            "row": 49,
                            "column": 36
                          },
                          "text": "period_asfreq_arr"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 49,
                            "column": 36
                          },
                          "end": {
                            "row": 49,
                            "column": 64
                          },
                          "text": "(ordinal, base1, base2, end)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 49,
                                "column": 36
                              },
                              "end": {
                                "row": 49,
                                "column": 37
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 49,
                                "column": 37
                              },
                              "end": {
                                "row": 49,
                                "column": 44
                              },
                              "text": "ordinal"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 49,
                                "column": 44
                              },
                              "end": {
                                "row": 49,
                                "column": 45
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 49,
                                "column": 46
                              },
                              "end": {
                                "row": 49,
                                "column": 51
                              },
                              "text": "base1"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 49,
                                "column": 51
                              },
                              "end": {
                                "row": 49,
                                "column": 52
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 49,
                                "column": 53
                              },
                              "end": {
                                "row": 49,
                                "column": 58
                              },
                              "text": "base2"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 49,
                                "column": 58
                              },
                              "end": {
                                "row": 49,
                                "column": 59
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 49,
                                "column": 60
                              },
                              "end": {
                                "row": 49,
                                "column": 63
                              },
                              "text": "end"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 49,
                                "column": 63
                              },
                              "end": {
                                "row": 49,
                                "column": 64
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 51,
                "column": 8
              },
              "end": {
                "row": 52,
                "column": 40
              },
              "text": "if self._hasnans:\n            new_data[self._isnan] = iNaT",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 51,
                    "column": 8
                  },
                  "end": {
                    "row": 51,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 51,
                    "column": 11
                  },
                  "end": {
                    "row": 51,
                    "column": 24
                  },
                  "text": "self._hasnans",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 51,
                        "column": 11
                      },
                      "end": {
                        "row": 51,
                        "column": 15
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 51,
                        "column": 15
                      },
                      "end": {
                        "row": 51,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 51,
                        "column": 16
                      },
                      "end": {
                        "row": 51,
                        "column": 24
                      },
                      "text": "_hasnans"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 51,
                    "column": 24
                  },
                  "end": {
                    "row": 51,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 52,
                    "column": 12
                  },
                  "end": {
                    "row": 52,
                    "column": 40
                  },
                  "text": "new_data[self._isnan] = iNaT",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 52,
                        "column": 12
                      },
                      "end": {
                        "row": 52,
                        "column": 40
                      },
                      "text": "new_data[self._isnan] = iNaT",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 52,
                            "column": 12
                          },
                          "end": {
                            "row": 52,
                            "column": 40
                          },
                          "text": "new_data[self._isnan] = iNaT",
                          "children": [
                            {
                              "type": "subscript",
                              "start": {
                                "row": 52,
                                "column": 12
                              },
                              "end": {
                                "row": 52,
                                "column": 33
                              },
                              "text": "new_data[self._isnan]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 52,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 20
                                  },
                                  "text": "new_data"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 52,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 21
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 52,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 32
                                  },
                                  "text": "self._isnan",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 25
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 52,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 26
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 32
                                      },
                                      "text": "_isnan"
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 52,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 33
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 52,
                                "column": 34
                              },
                              "end": {
                                "row": 52,
                                "column": 35
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 52,
                                "column": 36
                              },
                              "end": {
                                "row": 52,
                                "column": 40
                              },
                              "text": "iNaT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 54,
                "column": 8
              },
              "end": {
                "row": 54,
                "column": 46
              },
              "text": "return type(self)(new_data, freq=freq)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 54,
                    "column": 8
                  },
                  "end": {
                    "row": 54,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 54,
                    "column": 15
                  },
                  "end": {
                    "row": 54,
                    "column": 46
                  },
                  "text": "type(self)(new_data, freq=freq)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 54,
                        "column": 15
                      },
                      "end": {
                        "row": 54,
                        "column": 25
                      },
                      "text": "type(self)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 54,
                            "column": 15
                          },
                          "end": {
                            "row": 54,
                            "column": 19
                          },
                          "text": "type"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 54,
                            "column": 19
                          },
                          "end": {
                            "row": 54,
                            "column": 25
                          },
                          "text": "(self)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 54,
                                "column": 19
                              },
                              "end": {
                                "row": 54,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 20
                              },
                              "end": {
                                "row": 54,
                                "column": 24
                              },
                              "text": "self"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 54,
                                "column": 24
                              },
                              "end": {
                                "row": 54,
                                "column": 25
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 54,
                        "column": 25
                      },
                      "end": {
                        "row": 54,
                        "column": 46
                      },
                      "text": "(new_data, freq=freq)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 54,
                            "column": 25
                          },
                          "end": {
                            "row": 54,
                            "column": 26
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 54,
                            "column": 26
                          },
                          "end": {
                            "row": 54,
                            "column": 34
                          },
                          "text": "new_data"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 54,
                            "column": 34
                          },
                          "end": {
                            "row": 54,
                            "column": 35
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 54,
                            "column": 36
                          },
                          "end": {
                            "row": 54,
                            "column": 45
                          },
                          "text": "freq=freq",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 36
                              },
                              "end": {
                                "row": 54,
                                "column": 40
                              },
                              "text": "freq"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 54,
                                "column": 40
                              },
                              "end": {
                                "row": 54,
                                "column": 41
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 41
                              },
                              "end": {
                                "row": 54,
                                "column": 45
                              },
                              "text": "freq"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 54,
                            "column": 45
                          },
                          "end": {
                            "row": 54,
                            "column": 46
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}