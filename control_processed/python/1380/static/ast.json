{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 66,
    "column": 53
  },
  "text": "def from_codes(cls, codes, categories=None, ordered=None, dtype=None):\n        \"\"\"\n        Make a Categorical type from codes and categories or dtype.\n\n        This constructor is useful if you already have codes and\n        categories/dtype and so do not need the (computation intensive)\n        factorization step, which is usually done on the constructor.\n\n        If your data does not follow this convention, please use the normal\n        constructor.\n\n        Parameters\n        ----------\n        codes : array-like, integers\n            An integer array, where each integer points to a category in\n            categories or dtype.categories, or else is -1 for NaN.\n        categories : index-like, optional\n            The categories for the categorical. Items need to be unique.\n            If the categories are not given here, then they must be provided\n            in `dtype`.\n        ordered : bool, optional\n            Whether or not this categorical is treated as an ordered\n            categorical. If not given here or in `dtype`, the resulting\n            categorical will be unordered.\n        dtype : CategoricalDtype or the string \"category\", optional\n            If :class:`CategoricalDtype`, cannot be used together with\n            `categories` or `ordered`.\n\n            .. versionadded:: 0.24.0\n\n               When `dtype` is provided, neither `categories` nor `ordered`\n               should be provided.\n\n        Examples\n        --------\n        >>> dtype = pd.CategoricalDtype(['a', 'b'], ordered=True)\n        >>> pd.Categorical.from_codes(codes=[0, 1, 0, 1], dtype=dtype)\n        [a, b, a, b]\n        Categories (2, object): [a < b]\n        \"\"\"\n        dtype = CategoricalDtype._from_values_or_dtype(categories=categories,\n                                                       ordered=ordered,\n                                                       dtype=dtype)\n        if dtype.categories is None:\n            msg = (\"The categories must be provided in 'categories' or \"\n                   \"'dtype'. Both were None.\")\n            raise ValueError(msg)\n\n        codes = np.asarray(codes)  # #21767\n        if not is_integer_dtype(codes):\n            msg = \"codes need to be array-like integers\"\n            if is_float_dtype(codes):\n                icodes = codes.astype('i8')\n                if (icodes == codes).all():\n                    msg = None\n                    codes = icodes\n                    warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)\n            if msg:\n                raise ValueError(msg)\n\n        if len(codes) and (\n                codes.max() >= len(dtype.categories) or codes.min() < -1):\n            raise ValueError(\"codes need to be between -1 and \"\n                             \"len(categories)-1\")\n\n        return cls(codes, dtype=dtype, fastpath=True)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 66,
        "column": 53
      },
      "text": "def from_codes(cls, codes, categories=None, ordered=None, dtype=None):\n        \"\"\"\n        Make a Categorical type from codes and categories or dtype.\n\n        This constructor is useful if you already have codes and\n        categories/dtype and so do not need the (computation intensive)\n        factorization step, which is usually done on the constructor.\n\n        If your data does not follow this convention, please use the normal\n        constructor.\n\n        Parameters\n        ----------\n        codes : array-like, integers\n            An integer array, where each integer points to a category in\n            categories or dtype.categories, or else is -1 for NaN.\n        categories : index-like, optional\n            The categories for the categorical. Items need to be unique.\n            If the categories are not given here, then they must be provided\n            in `dtype`.\n        ordered : bool, optional\n            Whether or not this categorical is treated as an ordered\n            categorical. If not given here or in `dtype`, the resulting\n            categorical will be unordered.\n        dtype : CategoricalDtype or the string \"category\", optional\n            If :class:`CategoricalDtype`, cannot be used together with\n            `categories` or `ordered`.\n\n            .. versionadded:: 0.24.0\n\n               When `dtype` is provided, neither `categories` nor `ordered`\n               should be provided.\n\n        Examples\n        --------\n        >>> dtype = pd.CategoricalDtype(['a', 'b'], ordered=True)\n        >>> pd.Categorical.from_codes(codes=[0, 1, 0, 1], dtype=dtype)\n        [a, b, a, b]\n        Categories (2, object): [a < b]\n        \"\"\"\n        dtype = CategoricalDtype._from_values_or_dtype(categories=categories,\n                                                       ordered=ordered,\n                                                       dtype=dtype)\n        if dtype.categories is None:\n            msg = (\"The categories must be provided in 'categories' or \"\n                   \"'dtype'. Both were None.\")\n            raise ValueError(msg)\n\n        codes = np.asarray(codes)  # #21767\n        if not is_integer_dtype(codes):\n            msg = \"codes need to be array-like integers\"\n            if is_float_dtype(codes):\n                icodes = codes.astype('i8')\n                if (icodes == codes).all():\n                    msg = None\n                    codes = icodes\n                    warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)\n            if msg:\n                raise ValueError(msg)\n\n        if len(codes) and (\n                codes.max() >= len(dtype.categories) or codes.min() < -1):\n            raise ValueError(\"codes need to be between -1 and \"\n                             \"len(categories)-1\")\n\n        return cls(codes, dtype=dtype, fastpath=True)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 14
          },
          "text": "from_codes"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 14
          },
          "end": {
            "row": 0,
            "column": 69
          },
          "text": "(cls, codes, categories=None, ordered=None, dtype=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "cls"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "codes"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": "categories=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 27
                  },
                  "end": {
                    "row": 0,
                    "column": 37
                  },
                  "text": "categories"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 38
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 38
                  },
                  "end": {
                    "row": 0,
                    "column": 42
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 56
              },
              "text": "ordered=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 44
                  },
                  "end": {
                    "row": 0,
                    "column": 51
                  },
                  "text": "ordered"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 51
                  },
                  "end": {
                    "row": 0,
                    "column": 52
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 52
                  },
                  "end": {
                    "row": 0,
                    "column": 56
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 56
              },
              "end": {
                "row": 0,
                "column": 57
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 58
              },
              "end": {
                "row": 0,
                "column": 68
              },
              "text": "dtype=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 58
                  },
                  "end": {
                    "row": 0,
                    "column": 63
                  },
                  "text": "dtype"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 63
                  },
                  "end": {
                    "row": 0,
                    "column": 64
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 64
                  },
                  "end": {
                    "row": 0,
                    "column": 68
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 68
              },
              "end": {
                "row": 0,
                "column": 69
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 69
          },
          "end": {
            "row": 0,
            "column": 70
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 66,
            "column": 53
          },
          "text": "\"\"\"\n        Make a Categorical type from codes and categories or dtype.\n\n        This constructor is useful if you already have codes and\n        categories/dtype and so do not need the (computation intensive)\n        factorization step, which is usually done on the constructor.\n\n        If your data does not follow this convention, please use the normal\n        constructor.\n\n        Parameters\n        ----------\n        codes : array-like, integers\n            An integer array, where each integer points to a category in\n            categories or dtype.categories, or else is -1 for NaN.\n        categories : index-like, optional\n            The categories for the categorical. Items need to be unique.\n            If the categories are not given here, then they must be provided\n            in `dtype`.\n        ordered : bool, optional\n            Whether or not this categorical is treated as an ordered\n            categorical. If not given here or in `dtype`, the resulting\n            categorical will be unordered.\n        dtype : CategoricalDtype or the string \"category\", optional\n            If :class:`CategoricalDtype`, cannot be used together with\n            `categories` or `ordered`.\n\n            .. versionadded:: 0.24.0\n\n               When `dtype` is provided, neither `categories` nor `ordered`\n               should be provided.\n\n        Examples\n        --------\n        >>> dtype = pd.CategoricalDtype(['a', 'b'], ordered=True)\n        >>> pd.Categorical.from_codes(codes=[0, 1, 0, 1], dtype=dtype)\n        [a, b, a, b]\n        Categories (2, object): [a < b]\n        \"\"\"\n        dtype = CategoricalDtype._from_values_or_dtype(categories=categories,\n                                                       ordered=ordered,\n                                                       dtype=dtype)\n        if dtype.categories is None:\n            msg = (\"The categories must be provided in 'categories' or \"\n                   \"'dtype'. Both were None.\")\n            raise ValueError(msg)\n\n        codes = np.asarray(codes)  # #21767\n        if not is_integer_dtype(codes):\n            msg = \"codes need to be array-like integers\"\n            if is_float_dtype(codes):\n                icodes = codes.astype('i8')\n                if (icodes == codes).all():\n                    msg = None\n                    codes = icodes\n                    warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)\n            if msg:\n                raise ValueError(msg)\n\n        if len(codes) and (\n                codes.max() >= len(dtype.categories) or codes.min() < -1):\n            raise ValueError(\"codes need to be between -1 and \"\n                             \"len(categories)-1\")\n\n        return cls(codes, dtype=dtype, fastpath=True)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 39,
                "column": 11
              },
              "text": "\"\"\"\n        Make a Categorical type from codes and categories or dtype.\n\n        This constructor is useful if you already have codes and\n        categories/dtype and so do not need the (computation intensive)\n        factorization step, which is usually done on the constructor.\n\n        If your data does not follow this convention, please use the normal\n        constructor.\n\n        Parameters\n        ----------\n        codes : array-like, integers\n            An integer array, where each integer points to a category in\n            categories or dtype.categories, or else is -1 for NaN.\n        categories : index-like, optional\n            The categories for the categorical. Items need to be unique.\n            If the categories are not given here, then they must be provided\n            in `dtype`.\n        ordered : bool, optional\n            Whether or not this categorical is treated as an ordered\n            categorical. If not given here or in `dtype`, the resulting\n            categorical will be unordered.\n        dtype : CategoricalDtype or the string \"category\", optional\n            If :class:`CategoricalDtype`, cannot be used together with\n            `categories` or `ordered`.\n\n            .. versionadded:: 0.24.0\n\n               When `dtype` is provided, neither `categories` nor `ordered`\n               should be provided.\n\n        Examples\n        --------\n        >>> dtype = pd.CategoricalDtype(['a', 'b'], ordered=True)\n        >>> pd.Categorical.from_codes(codes=[0, 1, 0, 1], dtype=dtype)\n        [a, b, a, b]\n        Categories (2, object): [a < b]\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 39,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Make a Categorical type from codes and categories or dtype.\n\n        This constructor is useful if you already have codes and\n        categories/dtype and so do not need the (computation intensive)\n        factorization step, which is usually done on the constructor.\n\n        If your data does not follow this convention, please use the normal\n        constructor.\n\n        Parameters\n        ----------\n        codes : array-like, integers\n            An integer array, where each integer points to a category in\n            categories or dtype.categories, or else is -1 for NaN.\n        categories : index-like, optional\n            The categories for the categorical. Items need to be unique.\n            If the categories are not given here, then they must be provided\n            in `dtype`.\n        ordered : bool, optional\n            Whether or not this categorical is treated as an ordered\n            categorical. If not given here or in `dtype`, the resulting\n            categorical will be unordered.\n        dtype : CategoricalDtype or the string \"category\", optional\n            If :class:`CategoricalDtype`, cannot be used together with\n            `categories` or `ordered`.\n\n            .. versionadded:: 0.24.0\n\n               When `dtype` is provided, neither `categories` nor `ordered`\n               should be provided.\n\n        Examples\n        --------\n        >>> dtype = pd.CategoricalDtype(['a', 'b'], ordered=True)\n        >>> pd.Categorical.from_codes(codes=[0, 1, 0, 1], dtype=dtype)\n        [a, b, a, b]\n        Categories (2, object): [a < b]\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 39,
                        "column": 8
                      },
                      "text": "\n        Make a Categorical type from codes and categories or dtype.\n\n        This constructor is useful if you already have codes and\n        categories/dtype and so do not need the (computation intensive)\n        factorization step, which is usually done on the constructor.\n\n        If your data does not follow this convention, please use the normal\n        constructor.\n\n        Parameters\n        ----------\n        codes : array-like, integers\n            An integer array, where each integer points to a category in\n            categories or dtype.categories, or else is -1 for NaN.\n        categories : index-like, optional\n            The categories for the categorical. Items need to be unique.\n            If the categories are not given here, then they must be provided\n            in `dtype`.\n        ordered : bool, optional\n            Whether or not this categorical is treated as an ordered\n            categorical. If not given here or in `dtype`, the resulting\n            categorical will be unordered.\n        dtype : CategoricalDtype or the string \"category\", optional\n            If :class:`CategoricalDtype`, cannot be used together with\n            `categories` or `ordered`.\n\n            .. versionadded:: 0.24.0\n\n               When `dtype` is provided, neither `categories` nor `ordered`\n               should be provided.\n\n        Examples\n        --------\n        >>> dtype = pd.CategoricalDtype(['a', 'b'], ordered=True)\n        >>> pd.Categorical.from_codes(codes=[0, 1, 0, 1], dtype=dtype)\n        [a, b, a, b]\n        Categories (2, object): [a < b]\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 39,
                        "column": 8
                      },
                      "end": {
                        "row": 39,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 40,
                "column": 8
              },
              "end": {
                "row": 42,
                "column": 67
              },
              "text": "dtype = CategoricalDtype._from_values_or_dtype(categories=categories,\n                                                       ordered=ordered,\n                                                       dtype=dtype)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 40,
                    "column": 8
                  },
                  "end": {
                    "row": 42,
                    "column": 67
                  },
                  "text": "dtype = CategoricalDtype._from_values_or_dtype(categories=categories,\n                                                       ordered=ordered,\n                                                       dtype=dtype)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 40,
                        "column": 8
                      },
                      "end": {
                        "row": 40,
                        "column": 13
                      },
                      "text": "dtype"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 40,
                        "column": 14
                      },
                      "end": {
                        "row": 40,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 40,
                        "column": 16
                      },
                      "end": {
                        "row": 42,
                        "column": 67
                      },
                      "text": "CategoricalDtype._from_values_or_dtype(categories=categories,\n                                                       ordered=ordered,\n                                                       dtype=dtype)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 40,
                            "column": 16
                          },
                          "end": {
                            "row": 40,
                            "column": 54
                          },
                          "text": "CategoricalDtype._from_values_or_dtype",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 16
                              },
                              "end": {
                                "row": 40,
                                "column": 32
                              },
                              "text": "CategoricalDtype"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 40,
                                "column": 32
                              },
                              "end": {
                                "row": 40,
                                "column": 33
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 33
                              },
                              "end": {
                                "row": 40,
                                "column": 54
                              },
                              "text": "_from_values_or_dtype"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 40,
                            "column": 54
                          },
                          "end": {
                            "row": 42,
                            "column": 67
                          },
                          "text": "(categories=categories,\n                                                       ordered=ordered,\n                                                       dtype=dtype)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 40,
                                "column": 54
                              },
                              "end": {
                                "row": 40,
                                "column": 55
                              },
                              "text": "("
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 40,
                                "column": 55
                              },
                              "end": {
                                "row": 40,
                                "column": 76
                              },
                              "text": "categories=categories",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 65
                                  },
                                  "text": "categories"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 40,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 66
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 76
                                  },
                                  "text": "categories"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 40,
                                "column": 76
                              },
                              "end": {
                                "row": 40,
                                "column": 77
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 41,
                                "column": 55
                              },
                              "end": {
                                "row": 41,
                                "column": 70
                              },
                              "text": "ordered=ordered",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 62
                                  },
                                  "text": "ordered"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 41,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 63
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 70
                                  },
                                  "text": "ordered"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 41,
                                "column": 70
                              },
                              "end": {
                                "row": 41,
                                "column": 71
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 42,
                                "column": 55
                              },
                              "end": {
                                "row": 42,
                                "column": 66
                              },
                              "text": "dtype=dtype",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 42,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 60
                                  },
                                  "text": "dtype"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 42,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 61
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 42,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 66
                                  },
                                  "text": "dtype"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 42,
                                "column": 66
                              },
                              "end": {
                                "row": 42,
                                "column": 67
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 43,
                "column": 8
              },
              "end": {
                "row": 46,
                "column": 33
              },
              "text": "if dtype.categories is None:\n            msg = (\"The categories must be provided in 'categories' or \"\n                   \"'dtype'. Both were None.\")\n            raise ValueError(msg)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 43,
                    "column": 8
                  },
                  "end": {
                    "row": 43,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 43,
                    "column": 11
                  },
                  "end": {
                    "row": 43,
                    "column": 35
                  },
                  "text": "dtype.categories is None",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 43,
                        "column": 11
                      },
                      "end": {
                        "row": 43,
                        "column": 27
                      },
                      "text": "dtype.categories",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 43,
                            "column": 11
                          },
                          "end": {
                            "row": 43,
                            "column": 16
                          },
                          "text": "dtype"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 43,
                            "column": 16
                          },
                          "end": {
                            "row": 43,
                            "column": 17
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 43,
                            "column": 17
                          },
                          "end": {
                            "row": 43,
                            "column": 27
                          },
                          "text": "categories"
                        }
                      ]
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 43,
                        "column": 28
                      },
                      "end": {
                        "row": 43,
                        "column": 30
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 43,
                        "column": 31
                      },
                      "end": {
                        "row": 43,
                        "column": 35
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 43,
                    "column": 35
                  },
                  "end": {
                    "row": 43,
                    "column": 36
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 44,
                    "column": 12
                  },
                  "end": {
                    "row": 46,
                    "column": 33
                  },
                  "text": "msg = (\"The categories must be provided in 'categories' or \"\n                   \"'dtype'. Both were None.\")\n            raise ValueError(msg)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 44,
                        "column": 12
                      },
                      "end": {
                        "row": 45,
                        "column": 46
                      },
                      "text": "msg = (\"The categories must be provided in 'categories' or \"\n                   \"'dtype'. Both were None.\")",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 44,
                            "column": 12
                          },
                          "end": {
                            "row": 45,
                            "column": 46
                          },
                          "text": "msg = (\"The categories must be provided in 'categories' or \"\n                   \"'dtype'. Both were None.\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 44,
                                "column": 12
                              },
                              "end": {
                                "row": 44,
                                "column": 15
                              },
                              "text": "msg"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 44,
                                "column": 16
                              },
                              "end": {
                                "row": 44,
                                "column": 17
                              },
                              "text": "="
                            },
                            {
                              "type": "parenthesized_expression",
                              "start": {
                                "row": 44,
                                "column": 18
                              },
                              "end": {
                                "row": 45,
                                "column": 46
                              },
                              "text": "(\"The categories must be provided in 'categories' or \"\n                   \"'dtype'. Both were None.\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 44,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 19
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "concatenated_string",
                                  "start": {
                                    "row": 44,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 45
                                  },
                                  "text": "\"The categories must be provided in 'categories' or \"\n                   \"'dtype'. Both were None.\"",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 44,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 72
                                      },
                                      "text": "\"The categories must be provided in 'categories' or \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 44,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 20
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 44,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 71
                                          },
                                          "text": "The categories must be provided in 'categories' or "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 44,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 72
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 45,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 45
                                      },
                                      "text": "\"'dtype'. Both were None.\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 45,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 20
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 45,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 44
                                          },
                                          "text": "'dtype'. Both were None."
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 45,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 45
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 45,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 46
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 46,
                        "column": 12
                      },
                      "end": {
                        "row": 46,
                        "column": 33
                      },
                      "text": "raise ValueError(msg)",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 46,
                            "column": 12
                          },
                          "end": {
                            "row": 46,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 46,
                            "column": 18
                          },
                          "end": {
                            "row": 46,
                            "column": 33
                          },
                          "text": "ValueError(msg)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 46,
                                "column": 18
                              },
                              "end": {
                                "row": 46,
                                "column": 28
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 46,
                                "column": 28
                              },
                              "end": {
                                "row": 46,
                                "column": 33
                              },
                              "text": "(msg)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 46,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 46,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 32
                                  },
                                  "text": "msg"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 46,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 33
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 48,
                "column": 8
              },
              "end": {
                "row": 48,
                "column": 33
              },
              "text": "codes = np.asarray(codes)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 48,
                    "column": 8
                  },
                  "end": {
                    "row": 48,
                    "column": 33
                  },
                  "text": "codes = np.asarray(codes)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 48,
                        "column": 8
                      },
                      "end": {
                        "row": 48,
                        "column": 13
                      },
                      "text": "codes"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 48,
                        "column": 14
                      },
                      "end": {
                        "row": 48,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 48,
                        "column": 16
                      },
                      "end": {
                        "row": 48,
                        "column": 33
                      },
                      "text": "np.asarray(codes)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 48,
                            "column": 16
                          },
                          "end": {
                            "row": 48,
                            "column": 26
                          },
                          "text": "np.asarray",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 48,
                                "column": 16
                              },
                              "end": {
                                "row": 48,
                                "column": 18
                              },
                              "text": "np"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 48,
                                "column": 18
                              },
                              "end": {
                                "row": 48,
                                "column": 19
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 48,
                                "column": 19
                              },
                              "end": {
                                "row": 48,
                                "column": 26
                              },
                              "text": "asarray"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 48,
                            "column": 26
                          },
                          "end": {
                            "row": 48,
                            "column": 33
                          },
                          "text": "(codes)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 48,
                                "column": 26
                              },
                              "end": {
                                "row": 48,
                                "column": 27
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 48,
                                "column": 27
                              },
                              "end": {
                                "row": 48,
                                "column": 32
                              },
                              "text": "codes"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 48,
                                "column": 32
                              },
                              "end": {
                                "row": 48,
                                "column": 33
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 48,
                "column": 35
              },
              "end": {
                "row": 48,
                "column": 43
              },
              "text": "# #21767"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 49,
                "column": 8
              },
              "end": {
                "row": 59,
                "column": 37
              },
              "text": "if not is_integer_dtype(codes):\n            msg = \"codes need to be array-like integers\"\n            if is_float_dtype(codes):\n                icodes = codes.astype('i8')\n                if (icodes == codes).all():\n                    msg = None\n                    codes = icodes\n                    warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)\n            if msg:\n                raise ValueError(msg)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 49,
                    "column": 8
                  },
                  "end": {
                    "row": 49,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 49,
                    "column": 11
                  },
                  "end": {
                    "row": 49,
                    "column": 38
                  },
                  "text": "not is_integer_dtype(codes)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 49,
                        "column": 11
                      },
                      "end": {
                        "row": 49,
                        "column": 14
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 49,
                        "column": 15
                      },
                      "end": {
                        "row": 49,
                        "column": 38
                      },
                      "text": "is_integer_dtype(codes)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 49,
                            "column": 15
                          },
                          "end": {
                            "row": 49,
                            "column": 31
                          },
                          "text": "is_integer_dtype"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 49,
                            "column": 31
                          },
                          "end": {
                            "row": 49,
                            "column": 38
                          },
                          "text": "(codes)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 49,
                                "column": 31
                              },
                              "end": {
                                "row": 49,
                                "column": 32
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 49,
                                "column": 32
                              },
                              "end": {
                                "row": 49,
                                "column": 37
                              },
                              "text": "codes"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 49,
                                "column": 37
                              },
                              "end": {
                                "row": 49,
                                "column": 38
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 49,
                    "column": 38
                  },
                  "end": {
                    "row": 49,
                    "column": 39
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 50,
                    "column": 12
                  },
                  "end": {
                    "row": 59,
                    "column": 37
                  },
                  "text": "msg = \"codes need to be array-like integers\"\n            if is_float_dtype(codes):\n                icodes = codes.astype('i8')\n                if (icodes == codes).all():\n                    msg = None\n                    codes = icodes\n                    warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)\n            if msg:\n                raise ValueError(msg)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 50,
                        "column": 12
                      },
                      "end": {
                        "row": 50,
                        "column": 56
                      },
                      "text": "msg = \"codes need to be array-like integers\"",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 50,
                            "column": 12
                          },
                          "end": {
                            "row": 50,
                            "column": 56
                          },
                          "text": "msg = \"codes need to be array-like integers\"",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 50,
                                "column": 12
                              },
                              "end": {
                                "row": 50,
                                "column": 15
                              },
                              "text": "msg"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 50,
                                "column": 16
                              },
                              "end": {
                                "row": 50,
                                "column": 17
                              },
                              "text": "="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 50,
                                "column": 18
                              },
                              "end": {
                                "row": 50,
                                "column": 56
                              },
                              "text": "\"codes need to be array-like integers\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 50,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 19
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 50,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 55
                                  },
                                  "text": "codes need to be array-like integers"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 50,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 56
                                  },
                                  "text": "\""
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 51,
                        "column": 12
                      },
                      "end": {
                        "row": 57,
                        "column": 77
                      },
                      "text": "if is_float_dtype(codes):\n                icodes = codes.astype('i8')\n                if (icodes == codes).all():\n                    msg = None\n                    codes = icodes\n                    warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 51,
                            "column": 12
                          },
                          "end": {
                            "row": 51,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 51,
                            "column": 15
                          },
                          "end": {
                            "row": 51,
                            "column": 36
                          },
                          "text": "is_float_dtype(codes)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 51,
                                "column": 15
                              },
                              "end": {
                                "row": 51,
                                "column": 29
                              },
                              "text": "is_float_dtype"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 51,
                                "column": 29
                              },
                              "end": {
                                "row": 51,
                                "column": 36
                              },
                              "text": "(codes)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 51,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 30
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 51,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 35
                                  },
                                  "text": "codes"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 51,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 36
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 51,
                            "column": 36
                          },
                          "end": {
                            "row": 51,
                            "column": 37
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 52,
                            "column": 16
                          },
                          "end": {
                            "row": 57,
                            "column": 77
                          },
                          "text": "icodes = codes.astype('i8')\n                if (icodes == codes).all():\n                    msg = None\n                    codes = icodes\n                    warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 52,
                                "column": 16
                              },
                              "end": {
                                "row": 52,
                                "column": 43
                              },
                              "text": "icodes = codes.astype('i8')",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 52,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 43
                                  },
                                  "text": "icodes = codes.astype('i8')",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 22
                                      },
                                      "text": "icodes"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 52,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 24
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 52,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 43
                                      },
                                      "text": "codes.astype('i8')",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 52,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 37
                                          },
                                          "text": "codes.astype",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 52,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 30
                                              },
                                              "text": "codes"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 52,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 31
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 52,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 37
                                              },
                                              "text": "astype"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 52,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 43
                                          },
                                          "text": "('i8')",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 52,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 38
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 52,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 42
                                              },
                                              "text": "'i8'",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 39
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 41
                                                  },
                                                  "text": "i8"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 52,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 52,
                                                    "column": 42
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 52,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 43
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 53,
                                "column": 16
                              },
                              "end": {
                                "row": 57,
                                "column": 77
                              },
                              "text": "if (icodes == codes).all():\n                    msg = None\n                    codes = icodes\n                    warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 53,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 18
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 53,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 42
                                  },
                                  "text": "(icodes == codes).all()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 53,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 53,
                                        "column": 40
                                      },
                                      "text": "(icodes == codes).all",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start": {
                                            "row": 53,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 36
                                          },
                                          "text": "(icodes == codes)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 53,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 20
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "comparison_operator",
                                              "start": {
                                                "row": 53,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 35
                                              },
                                              "text": "icodes == codes",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 53,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 53,
                                                    "column": 26
                                                  },
                                                  "text": "icodes"
                                                },
                                                {
                                                  "type": "==",
                                                  "start": {
                                                    "row": 53,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 53,
                                                    "column": 29
                                                  },
                                                  "text": "=="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 53,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 53,
                                                    "column": 35
                                                  },
                                                  "text": "codes"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 53,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 36
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 53,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 37
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 53,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 40
                                          },
                                          "text": "all"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 53,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 53,
                                        "column": 42
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 53,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 41
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 53,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 42
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 53,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 43
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 54,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 77
                                  },
                                  "text": "msg = None\n                    codes = icodes\n                    warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)",
                                  "children": [
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 54,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 30
                                      },
                                      "text": "msg = None",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 54,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 30
                                          },
                                          "text": "msg = None",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 54,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 54,
                                                "column": 23
                                              },
                                              "text": "msg"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 54,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 54,
                                                "column": 25
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "none",
                                              "start": {
                                                "row": 54,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 54,
                                                "column": 30
                                              },
                                              "text": "None"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 55,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 34
                                      },
                                      "text": "codes = icodes",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 55,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 34
                                          },
                                          "text": "codes = icodes",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 55,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 25
                                              },
                                              "text": "codes"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 55,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 27
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 55,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 34
                                              },
                                              "text": "icodes"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 56,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 77
                                      },
                                      "text": "warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 56,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 57,
                                            "column": 77
                                          },
                                          "text": "warn((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 56,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 56,
                                                "column": 24
                                              },
                                              "text": "warn"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 56,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 57,
                                                "column": 77
                                              },
                                              "text": "((\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"), FutureWarning, stacklevel=2)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 25
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "parenthesized_expression",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 47
                                                  },
                                                  "text": "(\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\")",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 56,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 56,
                                                        "column": 26
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "concatenated_string",
                                                      "start": {
                                                        "row": 56,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 46
                                                      },
                                                      "text": "\"float codes will be disallowed in the future and \"\n                          \"raise a ValueError\"",
                                                      "children": [
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 56,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 56,
                                                            "column": 77
                                                          },
                                                          "text": "\"float codes will be disallowed in the future and \"",
                                                          "children": [
                                                            {
                                                              "type": "string_start",
                                                              "start": {
                                                                "row": 56,
                                                                "column": 26
                                                              },
                                                              "end": {
                                                                "row": 56,
                                                                "column": 27
                                                              },
                                                              "text": "\""
                                                            },
                                                            {
                                                              "type": "string_content",
                                                              "start": {
                                                                "row": 56,
                                                                "column": 27
                                                              },
                                                              "end": {
                                                                "row": 56,
                                                                "column": 76
                                                              },
                                                              "text": "float codes will be disallowed in the future and "
                                                            },
                                                            {
                                                              "type": "string_end",
                                                              "start": {
                                                                "row": 56,
                                                                "column": 76
                                                              },
                                                              "end": {
                                                                "row": 56,
                                                                "column": 77
                                                              },
                                                              "text": "\""
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 57,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 57,
                                                            "column": 46
                                                          },
                                                          "text": "\"raise a ValueError\"",
                                                          "children": [
                                                            {
                                                              "type": "string_start",
                                                              "start": {
                                                                "row": 57,
                                                                "column": 26
                                                              },
                                                              "end": {
                                                                "row": 57,
                                                                "column": 27
                                                              },
                                                              "text": "\""
                                                            },
                                                            {
                                                              "type": "string_content",
                                                              "start": {
                                                                "row": 57,
                                                                "column": 27
                                                              },
                                                              "end": {
                                                                "row": 57,
                                                                "column": 45
                                                              },
                                                              "text": "raise a ValueError"
                                                            },
                                                            {
                                                              "type": "string_end",
                                                              "start": {
                                                                "row": 57,
                                                                "column": 45
                                                              },
                                                              "end": {
                                                                "row": 57,
                                                                "column": 46
                                                              },
                                                              "text": "\""
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 47
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 48
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 62
                                                  },
                                                  "text": "FutureWarning"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 62
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 63
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "keyword_argument",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 76
                                                  },
                                                  "text": "stacklevel=2",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 64
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 74
                                                      },
                                                      "text": "stacklevel"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 74
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 75
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "integer",
                                                      "start": {
                                                        "row": 57,
                                                        "column": 75
                                                      },
                                                      "end": {
                                                        "row": 57,
                                                        "column": 76
                                                      },
                                                      "text": "2"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 57,
                                                    "column": 76
                                                  },
                                                  "end": {
                                                    "row": 57,
                                                    "column": 77
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 58,
                        "column": 12
                      },
                      "end": {
                        "row": 59,
                        "column": 37
                      },
                      "text": "if msg:\n                raise ValueError(msg)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 58,
                            "column": 12
                          },
                          "end": {
                            "row": 58,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 58,
                            "column": 15
                          },
                          "end": {
                            "row": 58,
                            "column": 18
                          },
                          "text": "msg"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 58,
                            "column": 18
                          },
                          "end": {
                            "row": 58,
                            "column": 19
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 59,
                            "column": 16
                          },
                          "end": {
                            "row": 59,
                            "column": 37
                          },
                          "text": "raise ValueError(msg)",
                          "children": [
                            {
                              "type": "raise_statement",
                              "start": {
                                "row": 59,
                                "column": 16
                              },
                              "end": {
                                "row": 59,
                                "column": 37
                              },
                              "text": "raise ValueError(msg)",
                              "children": [
                                {
                                  "type": "raise",
                                  "start": {
                                    "row": 59,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 21
                                  },
                                  "text": "raise"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 59,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 37
                                  },
                                  "text": "ValueError(msg)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 59,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 32
                                      },
                                      "text": "ValueError"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 59,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 37
                                      },
                                      "text": "(msg)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 59,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 33
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 59,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 36
                                          },
                                          "text": "msg"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 59,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 37
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 61,
                "column": 8
              },
              "end": {
                "row": 64,
                "column": 49
              },
              "text": "if len(codes) and (\n                codes.max() >= len(dtype.categories) or codes.min() < -1):\n            raise ValueError(\"codes need to be between -1 and \"\n                             \"len(categories)-1\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 61,
                    "column": 8
                  },
                  "end": {
                    "row": 61,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 61,
                    "column": 11
                  },
                  "end": {
                    "row": 62,
                    "column": 73
                  },
                  "text": "len(codes) and (\n                codes.max() >= len(dtype.categories) or codes.min() < -1)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 61,
                        "column": 11
                      },
                      "end": {
                        "row": 61,
                        "column": 21
                      },
                      "text": "len(codes)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 61,
                            "column": 11
                          },
                          "end": {
                            "row": 61,
                            "column": 14
                          },
                          "text": "len"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 61,
                            "column": 14
                          },
                          "end": {
                            "row": 61,
                            "column": 21
                          },
                          "text": "(codes)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 61,
                                "column": 14
                              },
                              "end": {
                                "row": 61,
                                "column": 15
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 61,
                                "column": 15
                              },
                              "end": {
                                "row": 61,
                                "column": 20
                              },
                              "text": "codes"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 61,
                                "column": 20
                              },
                              "end": {
                                "row": 61,
                                "column": 21
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 61,
                        "column": 22
                      },
                      "end": {
                        "row": 61,
                        "column": 25
                      },
                      "text": "and"
                    },
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 61,
                        "column": 26
                      },
                      "end": {
                        "row": 62,
                        "column": 73
                      },
                      "text": "(\n                codes.max() >= len(dtype.categories) or codes.min() < -1)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 61,
                            "column": 26
                          },
                          "end": {
                            "row": 61,
                            "column": 27
                          },
                          "text": "("
                        },
                        {
                          "type": "boolean_operator",
                          "start": {
                            "row": 62,
                            "column": 16
                          },
                          "end": {
                            "row": 62,
                            "column": 72
                          },
                          "text": "codes.max() >= len(dtype.categories) or codes.min() < -1",
                          "children": [
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 62,
                                "column": 16
                              },
                              "end": {
                                "row": 62,
                                "column": 52
                              },
                              "text": "codes.max() >= len(dtype.categories)",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 62,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 27
                                  },
                                  "text": "codes.max()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 62,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 25
                                      },
                                      "text": "codes.max",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 62,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 21
                                          },
                                          "text": "codes"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 62,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 22
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 62,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 25
                                          },
                                          "text": "max"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 62,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 27
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 62,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 26
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 62,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 27
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ">=",
                                  "start": {
                                    "row": 62,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 30
                                  },
                                  "text": ">="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 62,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 52
                                  },
                                  "text": "len(dtype.categories)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 62,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 34
                                      },
                                      "text": "len"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 62,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 52
                                      },
                                      "text": "(dtype.categories)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 62,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 35
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 62,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 51
                                          },
                                          "text": "dtype.categories",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 40
                                              },
                                              "text": "dtype"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 62,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 41
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 51
                                              },
                                              "text": "categories"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 62,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 52
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "start": {
                                "row": 62,
                                "column": 53
                              },
                              "end": {
                                "row": 62,
                                "column": 55
                              },
                              "text": "or"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 62,
                                "column": 56
                              },
                              "end": {
                                "row": 62,
                                "column": 72
                              },
                              "text": "codes.min() < -1",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 62,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 67
                                  },
                                  "text": "codes.min()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 62,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 65
                                      },
                                      "text": "codes.min",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 62,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 61
                                          },
                                          "text": "codes"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 62,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 62
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 62,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 65
                                          },
                                          "text": "min"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 62,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 67
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 62,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 66
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 62,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 67
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "<",
                                  "start": {
                                    "row": 62,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 69
                                  },
                                  "text": "<"
                                },
                                {
                                  "type": "unary_operator",
                                  "start": {
                                    "row": 62,
                                    "column": 70
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 72
                                  },
                                  "text": "-1",
                                  "children": [
                                    {
                                      "type": "-",
                                      "start": {
                                        "row": 62,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 71
                                      },
                                      "text": "-"
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 62,
                                        "column": 71
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 72
                                      },
                                      "text": "1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 62,
                            "column": 72
                          },
                          "end": {
                            "row": 62,
                            "column": 73
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 62,
                    "column": 73
                  },
                  "end": {
                    "row": 62,
                    "column": 74
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 63,
                    "column": 12
                  },
                  "end": {
                    "row": 64,
                    "column": 49
                  },
                  "text": "raise ValueError(\"codes need to be between -1 and \"\n                             \"len(categories)-1\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 63,
                        "column": 12
                      },
                      "end": {
                        "row": 64,
                        "column": 49
                      },
                      "text": "raise ValueError(\"codes need to be between -1 and \"\n                             \"len(categories)-1\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 63,
                            "column": 12
                          },
                          "end": {
                            "row": 63,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 63,
                            "column": 18
                          },
                          "end": {
                            "row": 64,
                            "column": 49
                          },
                          "text": "ValueError(\"codes need to be between -1 and \"\n                             \"len(categories)-1\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 63,
                                "column": 18
                              },
                              "end": {
                                "row": 63,
                                "column": 28
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 63,
                                "column": 28
                              },
                              "end": {
                                "row": 64,
                                "column": 49
                              },
                              "text": "(\"codes need to be between -1 and \"\n                             \"len(categories)-1\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 63,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "concatenated_string",
                                  "start": {
                                    "row": 63,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 48
                                  },
                                  "text": "\"codes need to be between -1 and \"\n                             \"len(categories)-1\"",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 63,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 63
                                      },
                                      "text": "\"codes need to be between -1 and \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 63,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 30
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 63,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 62
                                          },
                                          "text": "codes need to be between -1 and "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 63,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 63
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 64,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 64,
                                        "column": 48
                                      },
                                      "text": "\"len(categories)-1\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 64,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 30
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 64,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 47
                                          },
                                          "text": "len(categories)-1"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 64,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 48
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 64,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 49
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 66,
                "column": 8
              },
              "end": {
                "row": 66,
                "column": 53
              },
              "text": "return cls(codes, dtype=dtype, fastpath=True)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 66,
                    "column": 8
                  },
                  "end": {
                    "row": 66,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 66,
                    "column": 15
                  },
                  "end": {
                    "row": 66,
                    "column": 53
                  },
                  "text": "cls(codes, dtype=dtype, fastpath=True)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 66,
                        "column": 15
                      },
                      "end": {
                        "row": 66,
                        "column": 18
                      },
                      "text": "cls"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 66,
                        "column": 18
                      },
                      "end": {
                        "row": 66,
                        "column": 53
                      },
                      "text": "(codes, dtype=dtype, fastpath=True)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 66,
                            "column": 18
                          },
                          "end": {
                            "row": 66,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 66,
                            "column": 19
                          },
                          "end": {
                            "row": 66,
                            "column": 24
                          },
                          "text": "codes"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 66,
                            "column": 24
                          },
                          "end": {
                            "row": 66,
                            "column": 25
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 66,
                            "column": 26
                          },
                          "end": {
                            "row": 66,
                            "column": 37
                          },
                          "text": "dtype=dtype",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 66,
                                "column": 26
                              },
                              "end": {
                                "row": 66,
                                "column": 31
                              },
                              "text": "dtype"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 66,
                                "column": 31
                              },
                              "end": {
                                "row": 66,
                                "column": 32
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 66,
                                "column": 32
                              },
                              "end": {
                                "row": 66,
                                "column": 37
                              },
                              "text": "dtype"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 66,
                            "column": 37
                          },
                          "end": {
                            "row": 66,
                            "column": 38
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 66,
                            "column": 39
                          },
                          "end": {
                            "row": 66,
                            "column": 52
                          },
                          "text": "fastpath=True",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 66,
                                "column": 39
                              },
                              "end": {
                                "row": 66,
                                "column": 47
                              },
                              "text": "fastpath"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 66,
                                "column": 47
                              },
                              "end": {
                                "row": 66,
                                "column": 48
                              },
                              "text": "="
                            },
                            {
                              "type": "true",
                              "start": {
                                "row": 66,
                                "column": 48
                              },
                              "end": {
                                "row": 66,
                                "column": 52
                              },
                              "text": "True"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 66,
                            "column": 52
                          },
                          "end": {
                            "row": 66,
                            "column": 53
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}