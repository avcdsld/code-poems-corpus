{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 49,
    "column": 16
  },
  "text": "def get_subj_alt_name(peer_cert):\n    \"\"\"\n    Given an PyOpenSSL certificate, provides all the subject alternative names.\n    \"\"\"\n    # Pass the cert to cryptography, which has much better APIs for this.\n    if hasattr(peer_cert, \"to_cryptography\"):\n        cert = peer_cert.to_cryptography()\n    else:\n        # This is technically using private APIs, but should work across all\n        # relevant versions before PyOpenSSL got a proper API for this.\n        cert = _Certificate(openssl_backend, peer_cert._x509)\n\n    # We want to find the SAN extension. Ask Cryptography to locate it (it's\n    # faster than looping in Python)\n    try:\n        ext = cert.extensions.get_extension_for_class(\n            x509.SubjectAlternativeName\n        ).value\n    except x509.ExtensionNotFound:\n        # No such extension, return the empty list.\n        return []\n    except (x509.DuplicateExtension, UnsupportedExtension,\n            x509.UnsupportedGeneralNameType, UnicodeError) as e:\n        # A problem has been found with the quality of the certificate. Assume\n        # no SAN field is present.\n        log.warning(\n            \"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\",\n            e,\n        )\n        return []\n\n    # We want to return dNSName and iPAddress fields. We need to cast the IPs\n    # back to strings because the match_hostname function wants them as\n    # strings.\n    # Sadly the DNS names need to be idna encoded and then, on Python 3, UTF-8\n    # decoded. This is pretty frustrating, but that's what the standard library\n    # does with certificates, and so we need to attempt to do the same.\n    # We also want to skip over names which cannot be idna encoded.\n    names = [\n        ('DNS', name) for name in map(_dnsname_to_stdlib, ext.get_values_for_type(x509.DNSName))\n        if name is not None\n    ]\n    names.extend(\n        ('IP Address', str(name))\n        for name in ext.get_values_for_type(x509.IPAddress)\n    )\n\n    return names",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 49,
        "column": 16
      },
      "text": "def get_subj_alt_name(peer_cert):\n    \"\"\"\n    Given an PyOpenSSL certificate, provides all the subject alternative names.\n    \"\"\"\n    # Pass the cert to cryptography, which has much better APIs for this.\n    if hasattr(peer_cert, \"to_cryptography\"):\n        cert = peer_cert.to_cryptography()\n    else:\n        # This is technically using private APIs, but should work across all\n        # relevant versions before PyOpenSSL got a proper API for this.\n        cert = _Certificate(openssl_backend, peer_cert._x509)\n\n    # We want to find the SAN extension. Ask Cryptography to locate it (it's\n    # faster than looping in Python)\n    try:\n        ext = cert.extensions.get_extension_for_class(\n            x509.SubjectAlternativeName\n        ).value\n    except x509.ExtensionNotFound:\n        # No such extension, return the empty list.\n        return []\n    except (x509.DuplicateExtension, UnsupportedExtension,\n            x509.UnsupportedGeneralNameType, UnicodeError) as e:\n        # A problem has been found with the quality of the certificate. Assume\n        # no SAN field is present.\n        log.warning(\n            \"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\",\n            e,\n        )\n        return []\n\n    # We want to return dNSName and iPAddress fields. We need to cast the IPs\n    # back to strings because the match_hostname function wants them as\n    # strings.\n    # Sadly the DNS names need to be idna encoded and then, on Python 3, UTF-8\n    # decoded. This is pretty frustrating, but that's what the standard library\n    # does with certificates, and so we need to attempt to do the same.\n    # We also want to skip over names which cannot be idna encoded.\n    names = [\n        ('DNS', name) for name in map(_dnsname_to_stdlib, ext.get_values_for_type(x509.DNSName))\n        if name is not None\n    ]\n    names.extend(\n        ('IP Address', str(name))\n        for name in ext.get_values_for_type(x509.IPAddress)\n    )\n\n    return names",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "get_subj_alt_name"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 32
          },
          "text": "(peer_cert)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": "peer_cert"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 32
          },
          "end": {
            "row": 0,
            "column": 33
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 49,
            "column": 16
          },
          "text": "\"\"\"\n    Given an PyOpenSSL certificate, provides all the subject alternative names.\n    \"\"\"\n    # Pass the cert to cryptography, which has much better APIs for this.\n    if hasattr(peer_cert, \"to_cryptography\"):\n        cert = peer_cert.to_cryptography()\n    else:\n        # This is technically using private APIs, but should work across all\n        # relevant versions before PyOpenSSL got a proper API for this.\n        cert = _Certificate(openssl_backend, peer_cert._x509)\n\n    # We want to find the SAN extension. Ask Cryptography to locate it (it's\n    # faster than looping in Python)\n    try:\n        ext = cert.extensions.get_extension_for_class(\n            x509.SubjectAlternativeName\n        ).value\n    except x509.ExtensionNotFound:\n        # No such extension, return the empty list.\n        return []\n    except (x509.DuplicateExtension, UnsupportedExtension,\n            x509.UnsupportedGeneralNameType, UnicodeError) as e:\n        # A problem has been found with the quality of the certificate. Assume\n        # no SAN field is present.\n        log.warning(\n            \"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\",\n            e,\n        )\n        return []\n\n    # We want to return dNSName and iPAddress fields. We need to cast the IPs\n    # back to strings because the match_hostname function wants them as\n    # strings.\n    # Sadly the DNS names need to be idna encoded and then, on Python 3, UTF-8\n    # decoded. This is pretty frustrating, but that's what the standard library\n    # does with certificates, and so we need to attempt to do the same.\n    # We also want to skip over names which cannot be idna encoded.\n    names = [\n        ('DNS', name) for name in map(_dnsname_to_stdlib, ext.get_values_for_type(x509.DNSName))\n        if name is not None\n    ]\n    names.extend(\n        ('IP Address', str(name))\n        for name in ext.get_values_for_type(x509.IPAddress)\n    )\n\n    return names",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 3,
                "column": 7
              },
              "text": "\"\"\"\n    Given an PyOpenSSL certificate, provides all the subject alternative names.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 3,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Given an PyOpenSSL certificate, provides all the subject alternative names.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 3,
                        "column": 4
                      },
                      "text": "\n    Given an PyOpenSSL certificate, provides all the subject alternative names.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 3,
                        "column": 4
                      },
                      "end": {
                        "row": 3,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 73
              },
              "text": "# Pass the cert to cryptography, which has much better APIs for this."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 5,
                "column": 4
              },
              "end": {
                "row": 10,
                "column": 61
              },
              "text": "if hasattr(peer_cert, \"to_cryptography\"):\n        cert = peer_cert.to_cryptography()\n    else:\n        # This is technically using private APIs, but should work across all\n        # relevant versions before PyOpenSSL got a proper API for this.\n        cert = _Certificate(openssl_backend, peer_cert._x509)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 5,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 5,
                    "column": 7
                  },
                  "end": {
                    "row": 5,
                    "column": 44
                  },
                  "text": "hasattr(peer_cert, \"to_cryptography\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 7
                      },
                      "end": {
                        "row": 5,
                        "column": 14
                      },
                      "text": "hasattr"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 5,
                        "column": 14
                      },
                      "end": {
                        "row": 5,
                        "column": 44
                      },
                      "text": "(peer_cert, \"to_cryptography\")",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 5,
                            "column": 14
                          },
                          "end": {
                            "row": 5,
                            "column": 15
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 15
                          },
                          "end": {
                            "row": 5,
                            "column": 24
                          },
                          "text": "peer_cert"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 5,
                            "column": 24
                          },
                          "end": {
                            "row": 5,
                            "column": 25
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 5,
                            "column": 26
                          },
                          "end": {
                            "row": 5,
                            "column": 43
                          },
                          "text": "\"to_cryptography\"",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 5,
                                "column": 26
                              },
                              "end": {
                                "row": 5,
                                "column": 27
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 5,
                                "column": 27
                              },
                              "end": {
                                "row": 5,
                                "column": 42
                              },
                              "text": "to_cryptography"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 5,
                                "column": 42
                              },
                              "end": {
                                "row": 5,
                                "column": 43
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 5,
                            "column": 43
                          },
                          "end": {
                            "row": 5,
                            "column": 44
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 5,
                    "column": 44
                  },
                  "end": {
                    "row": 5,
                    "column": 45
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 42
                  },
                  "text": "cert = peer_cert.to_cryptography()",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 42
                      },
                      "text": "cert = peer_cert.to_cryptography()",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 6,
                            "column": 8
                          },
                          "end": {
                            "row": 6,
                            "column": 42
                          },
                          "text": "cert = peer_cert.to_cryptography()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 8
                              },
                              "end": {
                                "row": 6,
                                "column": 12
                              },
                              "text": "cert"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 6,
                                "column": 13
                              },
                              "end": {
                                "row": 6,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 6,
                                "column": 15
                              },
                              "end": {
                                "row": 6,
                                "column": 42
                              },
                              "text": "peer_cert.to_cryptography()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 6,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 40
                                  },
                                  "text": "peer_cert.to_cryptography",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 6,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 24
                                      },
                                      "text": "peer_cert"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 6,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 25
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 6,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 40
                                      },
                                      "text": "to_cryptography"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 6,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 42
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 6,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 41
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 6,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 42
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 7,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 61
                  },
                  "text": "else:\n        # This is technically using private APIs, but should work across all\n        # relevant versions before PyOpenSSL got a proper API for this.\n        cert = _Certificate(openssl_backend, peer_cert._x509)",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 7,
                        "column": 4
                      },
                      "end": {
                        "row": 7,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 9
                      },
                      "text": ":"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 76
                      },
                      "text": "# This is technically using private APIs, but should work across all"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 9,
                        "column": 8
                      },
                      "end": {
                        "row": 9,
                        "column": 71
                      },
                      "text": "# relevant versions before PyOpenSSL got a proper API for this."
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 61
                      },
                      "text": "cert = _Certificate(openssl_backend, peer_cert._x509)",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 10,
                            "column": 8
                          },
                          "end": {
                            "row": 10,
                            "column": 61
                          },
                          "text": "cert = _Certificate(openssl_backend, peer_cert._x509)",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 10,
                                "column": 8
                              },
                              "end": {
                                "row": 10,
                                "column": 61
                              },
                              "text": "cert = _Certificate(openssl_backend, peer_cert._x509)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 12
                                  },
                                  "text": "cert"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 10,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 14
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 10,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 61
                                  },
                                  "text": "_Certificate(openssl_backend, peer_cert._x509)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 27
                                      },
                                      "text": "_Certificate"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 10,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 61
                                      },
                                      "text": "(openssl_backend, peer_cert._x509)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 10,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 28
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 43
                                          },
                                          "text": "openssl_backend"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 10,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 44
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 10,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 60
                                          },
                                          "text": "peer_cert._x509",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 10,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 54
                                              },
                                              "text": "peer_cert"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 10,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 55
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 10,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 60
                                              },
                                              "text": "_x509"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 10,
                                            "column": 60
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 61
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 76
              },
              "text": "# We want to find the SAN extension. Ask Cryptography to locate it (it's"
            },
            {
              "type": "comment",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 13,
                "column": 36
              },
              "text": "# faster than looping in Python)"
            },
            {
              "type": "try_statement",
              "start": {
                "row": 14,
                "column": 4
              },
              "end": {
                "row": 31,
                "column": 17
              },
              "text": "try:\n        ext = cert.extensions.get_extension_for_class(\n            x509.SubjectAlternativeName\n        ).value\n    except x509.ExtensionNotFound:\n        # No such extension, return the empty list.\n        return []\n    except (x509.DuplicateExtension, UnsupportedExtension,\n            x509.UnsupportedGeneralNameType, UnicodeError) as e:\n        # A problem has been found with the quality of the certificate. Assume\n        # no SAN field is present.\n        log.warning(\n            \"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\",\n            e,\n        )\n        return []",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 14,
                    "column": 4
                  },
                  "end": {
                    "row": 14,
                    "column": 7
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 14,
                    "column": 7
                  },
                  "end": {
                    "row": 14,
                    "column": 8
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 15
                  },
                  "text": "ext = cert.extensions.get_extension_for_class(\n            x509.SubjectAlternativeName\n        ).value",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 15
                      },
                      "text": "ext = cert.extensions.get_extension_for_class(\n            x509.SubjectAlternativeName\n        ).value",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 17,
                            "column": 15
                          },
                          "text": "ext = cert.extensions.get_extension_for_class(\n            x509.SubjectAlternativeName\n        ).value",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 15,
                                "column": 11
                              },
                              "text": "ext"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 13
                              },
                              "text": "="
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 15,
                                "column": 14
                              },
                              "end": {
                                "row": 17,
                                "column": 15
                              },
                              "text": "cert.extensions.get_extension_for_class(\n            x509.SubjectAlternativeName\n        ).value",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 15,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 9
                                  },
                                  "text": "cert.extensions.get_extension_for_class(\n            x509.SubjectAlternativeName\n        )",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 15,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 53
                                      },
                                      "text": "cert.extensions.get_extension_for_class",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 15,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 29
                                          },
                                          "text": "cert.extensions",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 15,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 18
                                              },
                                              "text": "cert"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 15,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 19
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 15,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 29
                                              },
                                              "text": "extensions"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 15,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 30
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 53
                                          },
                                          "text": "get_extension_for_class"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 15,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 9
                                      },
                                      "text": "(\n            x509.SubjectAlternativeName\n        )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 15,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 54
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 16,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 39
                                          },
                                          "text": "x509.SubjectAlternativeName",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 16
                                              },
                                              "text": "x509"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 16,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 17
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 39
                                              },
                                              "text": "SubjectAlternativeName"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 17,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 9
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 17,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 10
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 15
                                  },
                                  "text": "value"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 18,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 17
                  },
                  "text": "except x509.ExtensionNotFound:\n        # No such extension, return the empty list.\n        return []",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 18,
                        "column": 4
                      },
                      "end": {
                        "row": 18,
                        "column": 10
                      },
                      "text": "except"
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 18,
                        "column": 11
                      },
                      "end": {
                        "row": 18,
                        "column": 33
                      },
                      "text": "x509.ExtensionNotFound",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 11
                          },
                          "end": {
                            "row": 18,
                            "column": 15
                          },
                          "text": "x509"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 18,
                            "column": 15
                          },
                          "end": {
                            "row": 18,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 16
                          },
                          "end": {
                            "row": 18,
                            "column": 33
                          },
                          "text": "ExtensionNotFound"
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 18,
                        "column": 33
                      },
                      "end": {
                        "row": 18,
                        "column": 34
                      },
                      "text": ":"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 19,
                        "column": 8
                      },
                      "end": {
                        "row": 19,
                        "column": 51
                      },
                      "text": "# No such extension, return the empty list."
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 17
                      },
                      "text": "return []",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 20,
                            "column": 8
                          },
                          "end": {
                            "row": 20,
                            "column": 17
                          },
                          "text": "return []",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 20,
                                "column": 8
                              },
                              "end": {
                                "row": 20,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 20,
                                "column": 15
                              },
                              "end": {
                                "row": 20,
                                "column": 17
                              },
                              "text": "[]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 20,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 17
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 21,
                    "column": 4
                  },
                  "end": {
                    "row": 31,
                    "column": 17
                  },
                  "text": "except (x509.DuplicateExtension, UnsupportedExtension,\n            x509.UnsupportedGeneralNameType, UnicodeError) as e:\n        # A problem has been found with the quality of the certificate. Assume\n        # no SAN field is present.\n        log.warning(\n            \"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\",\n            e,\n        )\n        return []",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 21,
                        "column": 4
                      },
                      "end": {
                        "row": 21,
                        "column": 10
                      },
                      "text": "except"
                    },
                    {
                      "type": "as_pattern",
                      "start": {
                        "row": 21,
                        "column": 11
                      },
                      "end": {
                        "row": 22,
                        "column": 63
                      },
                      "text": "(x509.DuplicateExtension, UnsupportedExtension,\n            x509.UnsupportedGeneralNameType, UnicodeError) as e",
                      "children": [
                        {
                          "type": "tuple",
                          "start": {
                            "row": 21,
                            "column": 11
                          },
                          "end": {
                            "row": 22,
                            "column": 58
                          },
                          "text": "(x509.DuplicateExtension, UnsupportedExtension,\n            x509.UnsupportedGeneralNameType, UnicodeError)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 21,
                                "column": 11
                              },
                              "end": {
                                "row": 21,
                                "column": 12
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 21,
                                "column": 12
                              },
                              "end": {
                                "row": 21,
                                "column": 35
                              },
                              "text": "x509.DuplicateExtension",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 16
                                  },
                                  "text": "x509"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 21,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 35
                                  },
                                  "text": "DuplicateExtension"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 21,
                                "column": 35
                              },
                              "end": {
                                "row": 21,
                                "column": 36
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 37
                              },
                              "end": {
                                "row": 21,
                                "column": 57
                              },
                              "text": "UnsupportedExtension"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 21,
                                "column": 57
                              },
                              "end": {
                                "row": 21,
                                "column": 58
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 22,
                                "column": 12
                              },
                              "end": {
                                "row": 22,
                                "column": 43
                              },
                              "text": "x509.UnsupportedGeneralNameType",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 16
                                  },
                                  "text": "x509"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 22,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 43
                                  },
                                  "text": "UnsupportedGeneralNameType"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 22,
                                "column": 43
                              },
                              "end": {
                                "row": 22,
                                "column": 44
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 45
                              },
                              "end": {
                                "row": 22,
                                "column": 57
                              },
                              "text": "UnicodeError"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 22,
                                "column": 57
                              },
                              "end": {
                                "row": 22,
                                "column": 58
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "as",
                          "start": {
                            "row": 22,
                            "column": 59
                          },
                          "end": {
                            "row": 22,
                            "column": 61
                          },
                          "text": "as"
                        },
                        {
                          "type": "as_pattern_target",
                          "start": {
                            "row": 22,
                            "column": 62
                          },
                          "end": {
                            "row": 22,
                            "column": 63
                          },
                          "text": "e",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 62
                              },
                              "end": {
                                "row": 22,
                                "column": 63
                              },
                              "text": "e"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 22,
                        "column": 63
                      },
                      "end": {
                        "row": 22,
                        "column": 64
                      },
                      "text": ":"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 78
                      },
                      "text": "# A problem has been found with the quality of the certificate. Assume"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 24,
                        "column": 8
                      },
                      "end": {
                        "row": 24,
                        "column": 34
                      },
                      "text": "# no SAN field is present."
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 31,
                        "column": 17
                      },
                      "text": "log.warning(\n            \"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\",\n            e,\n        )\n        return []",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 25,
                            "column": 8
                          },
                          "end": {
                            "row": 30,
                            "column": 9
                          },
                          "text": "log.warning(\n            \"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\",\n            e,\n        )",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 25,
                                "column": 8
                              },
                              "end": {
                                "row": 30,
                                "column": 9
                              },
                              "text": "log.warning(\n            \"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\",\n            e,\n        )",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 25,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 19
                                  },
                                  "text": "log.warning",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 11
                                      },
                                      "text": "log"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 25,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 12
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 19
                                      },
                                      "text": "warning"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 25,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 9
                                  },
                                  "text": "(\n            \"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\",\n            e,\n        )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 25,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 20
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "concatenated_string",
                                      "start": {
                                        "row": 26,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 61
                                      },
                                      "text": "\"A problem was encountered with the certificate that prevented \"\n            \"urllib3 from finding the SubjectAlternativeName field. This can \"\n            \"affect certificate validation. The error was %s\"",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 26,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 76
                                          },
                                          "text": "\"A problem was encountered with the certificate that prevented \"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 26,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 13
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 26,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 75
                                              },
                                              "text": "A problem was encountered with the certificate that prevented "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 26,
                                                "column": 75
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 76
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 27,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 78
                                          },
                                          "text": "\"urllib3 from finding the SubjectAlternativeName field. This can \"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 27,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 13
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 27,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 77
                                              },
                                              "text": "urllib3 from finding the SubjectAlternativeName field. This can "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 27,
                                                "column": 77
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 78
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 28,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 61
                                          },
                                          "text": "\"affect certificate validation. The error was %s\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 28,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 13
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 28,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 60
                                              },
                                              "text": "affect certificate validation. The error was %s"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 28,
                                                "column": 60
                                              },
                                              "end": {
                                                "row": 28,
                                                "column": 61
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 28,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 62
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 29,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 13
                                      },
                                      "text": "e"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 29,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 14
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 30,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 9
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 31,
                            "column": 8
                          },
                          "end": {
                            "row": 31,
                            "column": 17
                          },
                          "text": "return []",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 31,
                                "column": 8
                              },
                              "end": {
                                "row": 31,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 31,
                                "column": 15
                              },
                              "end": {
                                "row": 31,
                                "column": 17
                              },
                              "text": "[]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 31,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 16
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 31,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 17
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 33,
                "column": 4
              },
              "end": {
                "row": 33,
                "column": 77
              },
              "text": "# We want to return dNSName and iPAddress fields. We need to cast the IPs"
            },
            {
              "type": "comment",
              "start": {
                "row": 34,
                "column": 4
              },
              "end": {
                "row": 34,
                "column": 71
              },
              "text": "# back to strings because the match_hostname function wants them as"
            },
            {
              "type": "comment",
              "start": {
                "row": 35,
                "column": 4
              },
              "end": {
                "row": 35,
                "column": 14
              },
              "text": "# strings."
            },
            {
              "type": "comment",
              "start": {
                "row": 36,
                "column": 4
              },
              "end": {
                "row": 36,
                "column": 78
              },
              "text": "# Sadly the DNS names need to be idna encoded and then, on Python 3, UTF-8"
            },
            {
              "type": "comment",
              "start": {
                "row": 37,
                "column": 4
              },
              "end": {
                "row": 37,
                "column": 79
              },
              "text": "# decoded. This is pretty frustrating, but that's what the standard library"
            },
            {
              "type": "comment",
              "start": {
                "row": 38,
                "column": 4
              },
              "end": {
                "row": 38,
                "column": 71
              },
              "text": "# does with certificates, and so we need to attempt to do the same."
            },
            {
              "type": "comment",
              "start": {
                "row": 39,
                "column": 4
              },
              "end": {
                "row": 39,
                "column": 67
              },
              "text": "# We also want to skip over names which cannot be idna encoded."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 40,
                "column": 4
              },
              "end": {
                "row": 43,
                "column": 5
              },
              "text": "names = [\n        ('DNS', name) for name in map(_dnsname_to_stdlib, ext.get_values_for_type(x509.DNSName))\n        if name is not None\n    ]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 40,
                    "column": 4
                  },
                  "end": {
                    "row": 43,
                    "column": 5
                  },
                  "text": "names = [\n        ('DNS', name) for name in map(_dnsname_to_stdlib, ext.get_values_for_type(x509.DNSName))\n        if name is not None\n    ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 40,
                        "column": 4
                      },
                      "end": {
                        "row": 40,
                        "column": 9
                      },
                      "text": "names"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 40,
                        "column": 10
                      },
                      "end": {
                        "row": 40,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "list_comprehension",
                      "start": {
                        "row": 40,
                        "column": 12
                      },
                      "end": {
                        "row": 43,
                        "column": 5
                      },
                      "text": "[\n        ('DNS', name) for name in map(_dnsname_to_stdlib, ext.get_values_for_type(x509.DNSName))\n        if name is not None\n    ]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 40,
                            "column": 12
                          },
                          "end": {
                            "row": 40,
                            "column": 13
                          },
                          "text": "["
                        },
                        {
                          "type": "tuple",
                          "start": {
                            "row": 41,
                            "column": 8
                          },
                          "end": {
                            "row": 41,
                            "column": 21
                          },
                          "text": "('DNS', name)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 41,
                                "column": 8
                              },
                              "end": {
                                "row": 41,
                                "column": 9
                              },
                              "text": "("
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 41,
                                "column": 9
                              },
                              "end": {
                                "row": 41,
                                "column": 14
                              },
                              "text": "'DNS'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 41,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 10
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 41,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 13
                                  },
                                  "text": "DNS"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 41,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 14
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 41,
                                "column": 14
                              },
                              "end": {
                                "row": 41,
                                "column": 15
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 16
                              },
                              "end": {
                                "row": 41,
                                "column": 20
                              },
                              "text": "name"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 41,
                                "column": 20
                              },
                              "end": {
                                "row": 41,
                                "column": 21
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "for_in_clause",
                          "start": {
                            "row": 41,
                            "column": 22
                          },
                          "end": {
                            "row": 41,
                            "column": 96
                          },
                          "text": "for name in map(_dnsname_to_stdlib, ext.get_values_for_type(x509.DNSName))",
                          "children": [
                            {
                              "type": "for",
                              "start": {
                                "row": 41,
                                "column": 22
                              },
                              "end": {
                                "row": 41,
                                "column": 25
                              },
                              "text": "for"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 26
                              },
                              "end": {
                                "row": 41,
                                "column": 30
                              },
                              "text": "name"
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 41,
                                "column": 31
                              },
                              "end": {
                                "row": 41,
                                "column": 33
                              },
                              "text": "in"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 41,
                                "column": 34
                              },
                              "end": {
                                "row": 41,
                                "column": 96
                              },
                              "text": "map(_dnsname_to_stdlib, ext.get_values_for_type(x509.DNSName))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 37
                                  },
                                  "text": "map"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 41,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 96
                                  },
                                  "text": "(_dnsname_to_stdlib, ext.get_values_for_type(x509.DNSName))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 41,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 38
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 41,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 56
                                      },
                                      "text": "_dnsname_to_stdlib"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 41,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 57
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 41,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 95
                                      },
                                      "text": "ext.get_values_for_type(x509.DNSName)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 41,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 81
                                          },
                                          "text": "ext.get_values_for_type",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 41,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 61
                                              },
                                              "text": "ext"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 41,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 62
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 41,
                                                "column": 62
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 81
                                              },
                                              "text": "get_values_for_type"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 41,
                                            "column": 81
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 95
                                          },
                                          "text": "(x509.DNSName)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 41,
                                                "column": 81
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 82
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 41,
                                                "column": 82
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 94
                                              },
                                              "text": "x509.DNSName",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 82
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 86
                                                  },
                                                  "text": "x509"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 86
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 87
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 87
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 94
                                                  },
                                                  "text": "DNSName"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 41,
                                                "column": 94
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 95
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 41,
                                        "column": 95
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 96
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "if_clause",
                          "start": {
                            "row": 42,
                            "column": 8
                          },
                          "end": {
                            "row": 42,
                            "column": 27
                          },
                          "text": "if name is not None",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 42,
                                "column": 8
                              },
                              "end": {
                                "row": 42,
                                "column": 10
                              },
                              "text": "if"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 42,
                                "column": 11
                              },
                              "end": {
                                "row": 42,
                                "column": 27
                              },
                              "text": "name is not None",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 42,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 15
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": "is not",
                                  "start": {
                                    "row": 42,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 18
                                  },
                                  "text": "is"
                                },
                                {
                                  "type": "is not",
                                  "start": {
                                    "row": 42,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 22
                                  },
                                  "text": "not"
                                },
                                {
                                  "type": "none",
                                  "start": {
                                    "row": 42,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 27
                                  },
                                  "text": "None"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 43,
                            "column": 4
                          },
                          "end": {
                            "row": 43,
                            "column": 5
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 44,
                "column": 4
              },
              "end": {
                "row": 47,
                "column": 5
              },
              "text": "names.extend(\n        ('IP Address', str(name))\n        for name in ext.get_values_for_type(x509.IPAddress)\n    )",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 44,
                    "column": 4
                  },
                  "end": {
                    "row": 47,
                    "column": 5
                  },
                  "text": "names.extend(\n        ('IP Address', str(name))\n        for name in ext.get_values_for_type(x509.IPAddress)\n    )",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 44,
                        "column": 4
                      },
                      "end": {
                        "row": 44,
                        "column": 16
                      },
                      "text": "names.extend",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 44,
                            "column": 4
                          },
                          "end": {
                            "row": 44,
                            "column": 9
                          },
                          "text": "names"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 44,
                            "column": 9
                          },
                          "end": {
                            "row": 44,
                            "column": 10
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 44,
                            "column": 10
                          },
                          "end": {
                            "row": 44,
                            "column": 16
                          },
                          "text": "extend"
                        }
                      ]
                    },
                    {
                      "type": "generator_expression",
                      "start": {
                        "row": 44,
                        "column": 16
                      },
                      "end": {
                        "row": 47,
                        "column": 5
                      },
                      "text": "(\n        ('IP Address', str(name))\n        for name in ext.get_values_for_type(x509.IPAddress)\n    )",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 44,
                            "column": 16
                          },
                          "end": {
                            "row": 44,
                            "column": 17
                          },
                          "text": "("
                        },
                        {
                          "type": "tuple",
                          "start": {
                            "row": 45,
                            "column": 8
                          },
                          "end": {
                            "row": 45,
                            "column": 33
                          },
                          "text": "('IP Address', str(name))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 45,
                                "column": 8
                              },
                              "end": {
                                "row": 45,
                                "column": 9
                              },
                              "text": "("
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 45,
                                "column": 9
                              },
                              "end": {
                                "row": 45,
                                "column": 21
                              },
                              "text": "'IP Address'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 45,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 10
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 45,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 20
                                  },
                                  "text": "IP Address"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 45,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 21
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 45,
                                "column": 21
                              },
                              "end": {
                                "row": 45,
                                "column": 22
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 45,
                                "column": 23
                              },
                              "end": {
                                "row": 45,
                                "column": 32
                              },
                              "text": "str(name)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 26
                                  },
                                  "text": "str"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 45,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 32
                                  },
                                  "text": "(name)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 45,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 27
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 45,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 31
                                      },
                                      "text": "name"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 45,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 32
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 45,
                                "column": 32
                              },
                              "end": {
                                "row": 45,
                                "column": 33
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "for_in_clause",
                          "start": {
                            "row": 46,
                            "column": 8
                          },
                          "end": {
                            "row": 46,
                            "column": 59
                          },
                          "text": "for name in ext.get_values_for_type(x509.IPAddress)",
                          "children": [
                            {
                              "type": "for",
                              "start": {
                                "row": 46,
                                "column": 8
                              },
                              "end": {
                                "row": 46,
                                "column": 11
                              },
                              "text": "for"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 46,
                                "column": 12
                              },
                              "end": {
                                "row": 46,
                                "column": 16
                              },
                              "text": "name"
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 46,
                                "column": 17
                              },
                              "end": {
                                "row": 46,
                                "column": 19
                              },
                              "text": "in"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 46,
                                "column": 20
                              },
                              "end": {
                                "row": 46,
                                "column": 59
                              },
                              "text": "ext.get_values_for_type(x509.IPAddress)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 46,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 43
                                  },
                                  "text": "ext.get_values_for_type",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 46,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 23
                                      },
                                      "text": "ext"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 46,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 24
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 46,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 43
                                      },
                                      "text": "get_values_for_type"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 46,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 59
                                  },
                                  "text": "(x509.IPAddress)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 46,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 44
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 46,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 58
                                      },
                                      "text": "x509.IPAddress",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 48
                                          },
                                          "text": "x509"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 46,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 49
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 58
                                          },
                                          "text": "IPAddress"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 46,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 59
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 47,
                            "column": 4
                          },
                          "end": {
                            "row": 47,
                            "column": 5
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 49,
                "column": 4
              },
              "end": {
                "row": 49,
                "column": 16
              },
              "text": "return names",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 49,
                    "column": 4
                  },
                  "end": {
                    "row": 49,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 49,
                    "column": 11
                  },
                  "end": {
                    "row": 49,
                    "column": 16
                  },
                  "text": "names"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}