{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 11,
    "column": 38
  },
  "text": "def _CheckForOutOfOrderStepAndMaybePurge(self, event):\n    \"\"\"Check for out-of-order event.step and discard expired events for tags.\n\n    Check if the event is out of order relative to the global most recent step.\n    If it is, purge outdated summaries for tags that the event contains.\n\n    Args:\n      event: The event to use as reference. If the event is out-of-order, all\n        events with the same tags, but with a greater event.step will be purged.\n    \"\"\"\n    if event.step < self.most_recent_step and event.HasField('summary'):\n      self._Purge(event, by_tags=True)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 11,
        "column": 38
      },
      "text": "def _CheckForOutOfOrderStepAndMaybePurge(self, event):\n    \"\"\"Check for out-of-order event.step and discard expired events for tags.\n\n    Check if the event is out of order relative to the global most recent step.\n    If it is, purge outdated summaries for tags that the event contains.\n\n    Args:\n      event: The event to use as reference. If the event is out-of-order, all\n        events with the same tags, but with a greater event.step will be purged.\n    \"\"\"\n    if event.step < self.most_recent_step and event.HasField('summary'):\n      self._Purge(event, by_tags=True)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 40
          },
          "text": "_CheckForOutOfOrderStepAndMaybePurge"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 40
          },
          "end": {
            "row": 0,
            "column": 53
          },
          "text": "(self, event)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 52
              },
              "text": "event"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 52
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 53
          },
          "end": {
            "row": 0,
            "column": 54
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 11,
            "column": 38
          },
          "text": "\"\"\"Check for out-of-order event.step and discard expired events for tags.\n\n    Check if the event is out of order relative to the global most recent step.\n    If it is, purge outdated summaries for tags that the event contains.\n\n    Args:\n      event: The event to use as reference. If the event is out-of-order, all\n        events with the same tags, but with a greater event.step will be purged.\n    \"\"\"\n    if event.step < self.most_recent_step and event.HasField('summary'):\n      self._Purge(event, by_tags=True)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 9,
                "column": 7
              },
              "text": "\"\"\"Check for out-of-order event.step and discard expired events for tags.\n\n    Check if the event is out of order relative to the global most recent step.\n    If it is, purge outdated summaries for tags that the event contains.\n\n    Args:\n      event: The event to use as reference. If the event is out-of-order, all\n        events with the same tags, but with a greater event.step will be purged.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 9,
                    "column": 7
                  },
                  "text": "\"\"\"Check for out-of-order event.step and discard expired events for tags.\n\n    Check if the event is out of order relative to the global most recent step.\n    If it is, purge outdated summaries for tags that the event contains.\n\n    Args:\n      event: The event to use as reference. If the event is out-of-order, all\n        events with the same tags, but with a greater event.step will be purged.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 9,
                        "column": 4
                      },
                      "text": "Check for out-of-order event.step and discard expired events for tags.\n\n    Check if the event is out of order relative to the global most recent step.\n    If it is, purge outdated summaries for tags that the event contains.\n\n    Args:\n      event: The event to use as reference. If the event is out-of-order, all\n        events with the same tags, but with a greater event.step will be purged.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 9,
                        "column": 4
                      },
                      "end": {
                        "row": 9,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 10,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 38
              },
              "text": "if event.step < self.most_recent_step and event.HasField('summary'):\n      self._Purge(event, by_tags=True)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 10,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 10,
                    "column": 7
                  },
                  "end": {
                    "row": 10,
                    "column": 71
                  },
                  "text": "event.step < self.most_recent_step and event.HasField('summary')",
                  "children": [
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 10,
                        "column": 7
                      },
                      "end": {
                        "row": 10,
                        "column": 41
                      },
                      "text": "event.step < self.most_recent_step",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 10,
                            "column": 7
                          },
                          "end": {
                            "row": 10,
                            "column": 17
                          },
                          "text": "event.step",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 7
                              },
                              "end": {
                                "row": 10,
                                "column": 12
                              },
                              "text": "event"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 10,
                                "column": 12
                              },
                              "end": {
                                "row": 10,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 13
                              },
                              "end": {
                                "row": 10,
                                "column": 17
                              },
                              "text": "step"
                            }
                          ]
                        },
                        {
                          "type": "<",
                          "start": {
                            "row": 10,
                            "column": 18
                          },
                          "end": {
                            "row": 10,
                            "column": 19
                          },
                          "text": "<"
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 10,
                            "column": 20
                          },
                          "end": {
                            "row": 10,
                            "column": 41
                          },
                          "text": "self.most_recent_step",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 20
                              },
                              "end": {
                                "row": 10,
                                "column": 24
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 10,
                                "column": 24
                              },
                              "end": {
                                "row": 10,
                                "column": 25
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 25
                              },
                              "end": {
                                "row": 10,
                                "column": 41
                              },
                              "text": "most_recent_step"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 10,
                        "column": 42
                      },
                      "end": {
                        "row": 10,
                        "column": 45
                      },
                      "text": "and"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 10,
                        "column": 46
                      },
                      "end": {
                        "row": 10,
                        "column": 71
                      },
                      "text": "event.HasField('summary')",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 10,
                            "column": 46
                          },
                          "end": {
                            "row": 10,
                            "column": 60
                          },
                          "text": "event.HasField",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 46
                              },
                              "end": {
                                "row": 10,
                                "column": 51
                              },
                              "text": "event"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 10,
                                "column": 51
                              },
                              "end": {
                                "row": 10,
                                "column": 52
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 52
                              },
                              "end": {
                                "row": 10,
                                "column": 60
                              },
                              "text": "HasField"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 10,
                            "column": 60
                          },
                          "end": {
                            "row": 10,
                            "column": 71
                          },
                          "text": "('summary')",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 10,
                                "column": 60
                              },
                              "end": {
                                "row": 10,
                                "column": 61
                              },
                              "text": "("
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 10,
                                "column": 61
                              },
                              "end": {
                                "row": 10,
                                "column": 70
                              },
                              "text": "'summary'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 10,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 62
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 10,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 69
                                  },
                                  "text": "summary"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 10,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 70
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 10,
                                "column": 70
                              },
                              "end": {
                                "row": 10,
                                "column": 71
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 10,
                    "column": 71
                  },
                  "end": {
                    "row": 10,
                    "column": 72
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 11,
                    "column": 6
                  },
                  "end": {
                    "row": 11,
                    "column": 38
                  },
                  "text": "self._Purge(event, by_tags=True)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 11,
                        "column": 38
                      },
                      "text": "self._Purge(event, by_tags=True)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 11,
                            "column": 6
                          },
                          "end": {
                            "row": 11,
                            "column": 38
                          },
                          "text": "self._Purge(event, by_tags=True)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 11,
                                "column": 6
                              },
                              "end": {
                                "row": 11,
                                "column": 17
                              },
                              "text": "self._Purge",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 10
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 11
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 17
                                  },
                                  "text": "_Purge"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 11,
                                "column": 17
                              },
                              "end": {
                                "row": 11,
                                "column": 38
                              },
                              "text": "(event, by_tags=True)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 18
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 23
                                  },
                                  "text": "event"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 11,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 24
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "keyword_argument",
                                  "start": {
                                    "row": 11,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 37
                                  },
                                  "text": "by_tags=True",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 32
                                      },
                                      "text": "by_tags"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 11,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 33
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "true",
                                      "start": {
                                        "row": 11,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 37
                                      },
                                      "text": "True"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 38
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}