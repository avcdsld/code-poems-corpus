{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 17,
    "column": 9
  },
  "text": "def modify_ack_deadline(self, seconds):\n        \"\"\"Resets the deadline for acknowledgement.\n\n        New deadline will be the given value of seconds from now.\n\n        The default implementation handles this for you; you should not need\n        to manually deal with setting ack deadlines. The exception case is\n        if you are implementing your own custom subclass of\n        :class:`~.pubsub_v1.subcriber._consumer.Consumer`.\n\n        Args:\n            seconds (int): The number of seconds to set the lease deadline\n                to. This should be between 0 and 600. Due to network latency,\n                values below 10 are advised against.\n        \"\"\"\n        self._request_queue.put(\n            requests.ModAckRequest(ack_id=self._ack_id, seconds=seconds)\n        )",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 17,
        "column": 9
      },
      "text": "def modify_ack_deadline(self, seconds):\n        \"\"\"Resets the deadline for acknowledgement.\n\n        New deadline will be the given value of seconds from now.\n\n        The default implementation handles this for you; you should not need\n        to manually deal with setting ack deadlines. The exception case is\n        if you are implementing your own custom subclass of\n        :class:`~.pubsub_v1.subcriber._consumer.Consumer`.\n\n        Args:\n            seconds (int): The number of seconds to set the lease deadline\n                to. This should be between 0 and 600. Due to network latency,\n                values below 10 are advised against.\n        \"\"\"\n        self._request_queue.put(\n            requests.ModAckRequest(ack_id=self._ack_id, seconds=seconds)\n        )",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 23
          },
          "text": "modify_ack_deadline"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 23
          },
          "end": {
            "row": 0,
            "column": 38
          },
          "text": "(self, seconds)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "seconds"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 38
          },
          "end": {
            "row": 0,
            "column": 39
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 17,
            "column": 9
          },
          "text": "\"\"\"Resets the deadline for acknowledgement.\n\n        New deadline will be the given value of seconds from now.\n\n        The default implementation handles this for you; you should not need\n        to manually deal with setting ack deadlines. The exception case is\n        if you are implementing your own custom subclass of\n        :class:`~.pubsub_v1.subcriber._consumer.Consumer`.\n\n        Args:\n            seconds (int): The number of seconds to set the lease deadline\n                to. This should be between 0 and 600. Due to network latency,\n                values below 10 are advised against.\n        \"\"\"\n        self._request_queue.put(\n            requests.ModAckRequest(ack_id=self._ack_id, seconds=seconds)\n        )",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 11
              },
              "text": "\"\"\"Resets the deadline for acknowledgement.\n\n        New deadline will be the given value of seconds from now.\n\n        The default implementation handles this for you; you should not need\n        to manually deal with setting ack deadlines. The exception case is\n        if you are implementing your own custom subclass of\n        :class:`~.pubsub_v1.subcriber._consumer.Consumer`.\n\n        Args:\n            seconds (int): The number of seconds to set the lease deadline\n                to. This should be between 0 and 600. Due to network latency,\n                values below 10 are advised against.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 14,
                    "column": 11
                  },
                  "text": "\"\"\"Resets the deadline for acknowledgement.\n\n        New deadline will be the given value of seconds from now.\n\n        The default implementation handles this for you; you should not need\n        to manually deal with setting ack deadlines. The exception case is\n        if you are implementing your own custom subclass of\n        :class:`~.pubsub_v1.subcriber._consumer.Consumer`.\n\n        Args:\n            seconds (int): The number of seconds to set the lease deadline\n                to. This should be between 0 and 600. Due to network latency,\n                values below 10 are advised against.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 14,
                        "column": 8
                      },
                      "text": "Resets the deadline for acknowledgement.\n\n        New deadline will be the given value of seconds from now.\n\n        The default implementation handles this for you; you should not need\n        to manually deal with setting ack deadlines. The exception case is\n        if you are implementing your own custom subclass of\n        :class:`~.pubsub_v1.subcriber._consumer.Consumer`.\n\n        Args:\n            seconds (int): The number of seconds to set the lease deadline\n                to. This should be between 0 and 600. Due to network latency,\n                values below 10 are advised against.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 9
              },
              "text": "self._request_queue.put(\n            requests.ModAckRequest(ack_id=self._ack_id, seconds=seconds)\n        )",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 9
                  },
                  "text": "self._request_queue.put(\n            requests.ModAckRequest(ack_id=self._ack_id, seconds=seconds)\n        )",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 31
                      },
                      "text": "self._request_queue.put",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 27
                          },
                          "text": "self._request_queue",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 15,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 13
                              },
                              "end": {
                                "row": 15,
                                "column": 27
                              },
                              "text": "_request_queue"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 15,
                            "column": 27
                          },
                          "end": {
                            "row": 15,
                            "column": 28
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 28
                          },
                          "end": {
                            "row": 15,
                            "column": 31
                          },
                          "text": "put"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 15,
                        "column": 31
                      },
                      "end": {
                        "row": 17,
                        "column": 9
                      },
                      "text": "(\n            requests.ModAckRequest(ack_id=self._ack_id, seconds=seconds)\n        )",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 15,
                            "column": 31
                          },
                          "end": {
                            "row": 15,
                            "column": 32
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 16,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 72
                          },
                          "text": "requests.ModAckRequest(ack_id=self._ack_id, seconds=seconds)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 34
                              },
                              "text": "requests.ModAckRequest",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "text": "requests"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "text": "ModAckRequest"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 16,
                                "column": 34
                              },
                              "end": {
                                "row": 16,
                                "column": 72
                              },
                              "text": "(ack_id=self._ack_id, seconds=seconds)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 35
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "keyword_argument",
                                  "start": {
                                    "row": 16,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 54
                                  },
                                  "text": "ack_id=self._ack_id",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 41
                                      },
                                      "text": "ack_id"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 16,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 42
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 16,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 54
                                      },
                                      "text": "self._ack_id",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 46
                                          },
                                          "text": "self"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 16,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 47
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 54
                                          },
                                          "text": "_ack_id"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 16,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 55
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "keyword_argument",
                                  "start": {
                                    "row": 16,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 71
                                  },
                                  "text": "seconds=seconds",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 63
                                      },
                                      "text": "seconds"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 16,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 64
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 71
                                      },
                                      "text": "seconds"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 72
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 17,
                            "column": 8
                          },
                          "end": {
                            "row": 17,
                            "column": 9
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}