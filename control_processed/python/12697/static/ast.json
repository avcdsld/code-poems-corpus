{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 21,
    "column": 87
  },
  "text": "def generate_parameters(self, parameter_id):\n        \"\"\"generate one instance of hyperparameters\n        \n        Parameters\n        ----------\n        parameter_id: int\n            parameter id\n        \n        Returns\n        -------\n        list\n            new generated parameters\n        \"\"\"\n        if self.first_one:\n            init_challenger = self.smbo_solver.nni_smac_start()\n            self.total_data[parameter_id] = init_challenger\n            return self.convert_loguniform_categorical(init_challenger.get_dictionary())\n        else:\n            challengers = self.smbo_solver.nni_smac_request_challengers()\n            for challenger in challengers:\n                self.total_data[parameter_id] = challenger\n                return self.convert_loguniform_categorical(challenger.get_dictionary())",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 21,
        "column": 87
      },
      "text": "def generate_parameters(self, parameter_id):\n        \"\"\"generate one instance of hyperparameters\n        \n        Parameters\n        ----------\n        parameter_id: int\n            parameter id\n        \n        Returns\n        -------\n        list\n            new generated parameters\n        \"\"\"\n        if self.first_one:\n            init_challenger = self.smbo_solver.nni_smac_start()\n            self.total_data[parameter_id] = init_challenger\n            return self.convert_loguniform_categorical(init_challenger.get_dictionary())\n        else:\n            challengers = self.smbo_solver.nni_smac_request_challengers()\n            for challenger in challengers:\n                self.total_data[parameter_id] = challenger\n                return self.convert_loguniform_categorical(challenger.get_dictionary())",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 23
          },
          "text": "generate_parameters"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 23
          },
          "end": {
            "row": 0,
            "column": 43
          },
          "text": "(self, parameter_id)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": "parameter_id"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 43
          },
          "end": {
            "row": 0,
            "column": 44
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 21,
            "column": 87
          },
          "text": "\"\"\"generate one instance of hyperparameters\n        \n        Parameters\n        ----------\n        parameter_id: int\n            parameter id\n        \n        Returns\n        -------\n        list\n            new generated parameters\n        \"\"\"\n        if self.first_one:\n            init_challenger = self.smbo_solver.nni_smac_start()\n            self.total_data[parameter_id] = init_challenger\n            return self.convert_loguniform_categorical(init_challenger.get_dictionary())\n        else:\n            challengers = self.smbo_solver.nni_smac_request_challengers()\n            for challenger in challengers:\n                self.total_data[parameter_id] = challenger\n                return self.convert_loguniform_categorical(challenger.get_dictionary())",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 11
              },
              "text": "\"\"\"generate one instance of hyperparameters\n        \n        Parameters\n        ----------\n        parameter_id: int\n            parameter id\n        \n        Returns\n        -------\n        list\n            new generated parameters\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 11
                  },
                  "text": "\"\"\"generate one instance of hyperparameters\n        \n        Parameters\n        ----------\n        parameter_id: int\n            parameter id\n        \n        Returns\n        -------\n        list\n            new generated parameters\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 12,
                        "column": 8
                      },
                      "text": "generate one instance of hyperparameters\n        \n        Parameters\n        ----------\n        parameter_id: int\n            parameter id\n        \n        Returns\n        -------\n        list\n            new generated parameters\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 21,
                "column": 87
              },
              "text": "if self.first_one:\n            init_challenger = self.smbo_solver.nni_smac_start()\n            self.total_data[parameter_id] = init_challenger\n            return self.convert_loguniform_categorical(init_challenger.get_dictionary())\n        else:\n            challengers = self.smbo_solver.nni_smac_request_challengers()\n            for challenger in challengers:\n                self.total_data[parameter_id] = challenger\n                return self.convert_loguniform_categorical(challenger.get_dictionary())",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 13,
                    "column": 11
                  },
                  "end": {
                    "row": 13,
                    "column": 25
                  },
                  "text": "self.first_one",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 11
                      },
                      "end": {
                        "row": 13,
                        "column": 15
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 13,
                        "column": 15
                      },
                      "end": {
                        "row": 13,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 16
                      },
                      "end": {
                        "row": 13,
                        "column": 25
                      },
                      "text": "first_one"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 13,
                    "column": 25
                  },
                  "end": {
                    "row": 13,
                    "column": 26
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 14,
                    "column": 12
                  },
                  "end": {
                    "row": 16,
                    "column": 88
                  },
                  "text": "init_challenger = self.smbo_solver.nni_smac_start()\n            self.total_data[parameter_id] = init_challenger\n            return self.convert_loguniform_categorical(init_challenger.get_dictionary())",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 14,
                        "column": 12
                      },
                      "end": {
                        "row": 14,
                        "column": 63
                      },
                      "text": "init_challenger = self.smbo_solver.nni_smac_start()",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 14,
                            "column": 12
                          },
                          "end": {
                            "row": 14,
                            "column": 63
                          },
                          "text": "init_challenger = self.smbo_solver.nni_smac_start()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 12
                              },
                              "end": {
                                "row": 14,
                                "column": 27
                              },
                              "text": "init_challenger"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 14,
                                "column": 28
                              },
                              "end": {
                                "row": 14,
                                "column": 29
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 14,
                                "column": 30
                              },
                              "end": {
                                "row": 14,
                                "column": 63
                              },
                              "text": "self.smbo_solver.nni_smac_start()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 14,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 61
                                  },
                                  "text": "self.smbo_solver.nni_smac_start",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 14,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 46
                                      },
                                      "text": "self.smbo_solver",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 34
                                          },
                                          "text": "self"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 14,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 35
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 46
                                          },
                                          "text": "smbo_solver"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 14,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 47
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 61
                                      },
                                      "text": "nni_smac_start"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 14,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 63
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 14,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 62
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 14,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 63
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 15,
                        "column": 12
                      },
                      "end": {
                        "row": 15,
                        "column": 59
                      },
                      "text": "self.total_data[parameter_id] = init_challenger",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 15,
                            "column": 12
                          },
                          "end": {
                            "row": 15,
                            "column": 59
                          },
                          "text": "self.total_data[parameter_id] = init_challenger",
                          "children": [
                            {
                              "type": "subscript",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 41
                              },
                              "text": "self.total_data[parameter_id]",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 15,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 27
                                  },
                                  "text": "self.total_data",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 16
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 15,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 17
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 27
                                      },
                                      "text": "total_data"
                                    }
                                  ]
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 15,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 28
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 40
                                  },
                                  "text": "parameter_id"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 15,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 41
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 15,
                                "column": 42
                              },
                              "end": {
                                "row": 15,
                                "column": 43
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 44
                              },
                              "end": {
                                "row": 15,
                                "column": 59
                              },
                              "text": "init_challenger"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 16,
                        "column": 12
                      },
                      "end": {
                        "row": 16,
                        "column": 88
                      },
                      "text": "return self.convert_loguniform_categorical(init_challenger.get_dictionary())",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 16,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 16,
                            "column": 19
                          },
                          "end": {
                            "row": 16,
                            "column": 88
                          },
                          "text": "self.convert_loguniform_categorical(init_challenger.get_dictionary())",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 16,
                                "column": 19
                              },
                              "end": {
                                "row": 16,
                                "column": 54
                              },
                              "text": "self.convert_loguniform_categorical",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 23
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 16,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 24
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 54
                                  },
                                  "text": "convert_loguniform_categorical"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 16,
                                "column": 54
                              },
                              "end": {
                                "row": 16,
                                "column": 88
                              },
                              "text": "(init_challenger.get_dictionary())",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 16,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 55
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 16,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 87
                                  },
                                  "text": "init_challenger.get_dictionary()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 16,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 85
                                      },
                                      "text": "init_challenger.get_dictionary",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 70
                                          },
                                          "text": "init_challenger"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 16,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 71
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 85
                                          },
                                          "text": "get_dictionary"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 16,
                                        "column": 85
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 87
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 16,
                                            "column": 85
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 86
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 16,
                                            "column": 86
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 87
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 87
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 88
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 17,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 87
                  },
                  "text": "else:\n            challengers = self.smbo_solver.nni_smac_request_challengers()\n            for challenger in challengers:\n                self.total_data[parameter_id] = challenger\n                return self.convert_loguniform_categorical(challenger.get_dictionary())",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 17,
                        "column": 12
                      },
                      "end": {
                        "row": 17,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 18,
                        "column": 12
                      },
                      "end": {
                        "row": 21,
                        "column": 87
                      },
                      "text": "challengers = self.smbo_solver.nni_smac_request_challengers()\n            for challenger in challengers:\n                self.total_data[parameter_id] = challenger\n                return self.convert_loguniform_categorical(challenger.get_dictionary())",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 18,
                            "column": 12
                          },
                          "end": {
                            "row": 18,
                            "column": 73
                          },
                          "text": "challengers = self.smbo_solver.nni_smac_request_challengers()",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 18,
                                "column": 12
                              },
                              "end": {
                                "row": 18,
                                "column": 73
                              },
                              "text": "challengers = self.smbo_solver.nni_smac_request_challengers()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 23
                                  },
                                  "text": "challengers"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 18,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 25
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 18,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 73
                                  },
                                  "text": "self.smbo_solver.nni_smac_request_challengers()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 18,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 71
                                      },
                                      "text": "self.smbo_solver.nni_smac_request_challengers",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 18,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 42
                                          },
                                          "text": "self.smbo_solver",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 30
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 18,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 31
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 42
                                              },
                                              "text": "smbo_solver"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 18,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 43
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 18,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 71
                                          },
                                          "text": "nni_smac_request_challengers"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 18,
                                        "column": 71
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 73
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 18,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 72
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 18,
                                            "column": 72
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 73
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "for_statement",
                          "start": {
                            "row": 19,
                            "column": 12
                          },
                          "end": {
                            "row": 21,
                            "column": 87
                          },
                          "text": "for challenger in challengers:\n                self.total_data[parameter_id] = challenger\n                return self.convert_loguniform_categorical(challenger.get_dictionary())",
                          "children": [
                            {
                              "type": "for",
                              "start": {
                                "row": 19,
                                "column": 12
                              },
                              "end": {
                                "row": 19,
                                "column": 15
                              },
                              "text": "for"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 16
                              },
                              "end": {
                                "row": 19,
                                "column": 26
                              },
                              "text": "challenger"
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 19,
                                "column": 27
                              },
                              "end": {
                                "row": 19,
                                "column": 29
                              },
                              "text": "in"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 30
                              },
                              "end": {
                                "row": 19,
                                "column": 41
                              },
                              "text": "challengers"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 19,
                                "column": 41
                              },
                              "end": {
                                "row": 19,
                                "column": 42
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 20,
                                "column": 16
                              },
                              "end": {
                                "row": 21,
                                "column": 87
                              },
                              "text": "self.total_data[parameter_id] = challenger\n                return self.convert_loguniform_categorical(challenger.get_dictionary())",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 58
                                  },
                                  "text": "self.total_data[parameter_id] = challenger",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 20,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 58
                                      },
                                      "text": "self.total_data[parameter_id] = challenger",
                                      "children": [
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 20,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 45
                                          },
                                          "text": "self.total_data[parameter_id]",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 20,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 31
                                              },
                                              "text": "self.total_data",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 20
                                                  },
                                                  "text": "self"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 21
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 31
                                                  },
                                                  "text": "total_data"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 20,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 32
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 20,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 44
                                              },
                                              "text": "parameter_id"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 20,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 45
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 20,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 47
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 20,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 58
                                          },
                                          "text": "challenger"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 21,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 87
                                  },
                                  "text": "return self.convert_loguniform_categorical(challenger.get_dictionary())",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 21,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 22
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 21,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 87
                                      },
                                      "text": "self.convert_loguniform_categorical(challenger.get_dictionary())",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 21,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 58
                                          },
                                          "text": "self.convert_loguniform_categorical",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 27
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 21,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 28
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 58
                                              },
                                              "text": "convert_loguniform_categorical"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 21,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 87
                                          },
                                          "text": "(challenger.get_dictionary())",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 21,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 59
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 21,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 86
                                              },
                                              "text": "challenger.get_dictionary()",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 59
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 84
                                                  },
                                                  "text": "challenger.get_dictionary",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 69
                                                      },
                                                      "text": "challenger"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 69
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 70
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 70
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 84
                                                      },
                                                      "text": "get_dictionary"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 21,
                                                    "column": 84
                                                  },
                                                  "end": {
                                                    "row": 21,
                                                    "column": 86
                                                  },
                                                  "text": "()",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 84
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 85
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 21,
                                                        "column": 85
                                                      },
                                                      "end": {
                                                        "row": 21,
                                                        "column": 86
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 21,
                                                "column": 86
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 87
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}