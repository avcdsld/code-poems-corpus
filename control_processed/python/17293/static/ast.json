{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 20,
    "column": 12
  },
  "text": "def string_to_timestamp(timestring):\n    \"\"\"\n    Accepts a str, returns an int timestamp.\n    \"\"\"\n\n    ts = None\n\n    # Uses an extended version of Go's duration string.\n    try:\n        delta = durationpy.from_str(timestring);\n        past = datetime.datetime.utcnow() - delta\n        ts = calendar.timegm(past.timetuple())\n        return ts\n    except Exception as e:\n        pass\n\n    if ts:\n        return ts\n    # else:\n    #     print(\"Unable to parse timestring.\")\n    return 0",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 20,
        "column": 12
      },
      "text": "def string_to_timestamp(timestring):\n    \"\"\"\n    Accepts a str, returns an int timestamp.\n    \"\"\"\n\n    ts = None\n\n    # Uses an extended version of Go's duration string.\n    try:\n        delta = durationpy.from_str(timestring);\n        past = datetime.datetime.utcnow() - delta\n        ts = calendar.timegm(past.timetuple())\n        return ts\n    except Exception as e:\n        pass\n\n    if ts:\n        return ts\n    # else:\n    #     print(\"Unable to parse timestring.\")\n    return 0",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 23
          },
          "text": "string_to_timestamp"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 23
          },
          "end": {
            "row": 0,
            "column": 35
          },
          "text": "(timestring)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": "timestring"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 35
          },
          "end": {
            "row": 0,
            "column": 36
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 20,
            "column": 12
          },
          "text": "\"\"\"\n    Accepts a str, returns an int timestamp.\n    \"\"\"\n\n    ts = None\n\n    # Uses an extended version of Go's duration string.\n    try:\n        delta = durationpy.from_str(timestring);\n        past = datetime.datetime.utcnow() - delta\n        ts = calendar.timegm(past.timetuple())\n        return ts\n    except Exception as e:\n        pass\n\n    if ts:\n        return ts\n    # else:\n    #     print(\"Unable to parse timestring.\")\n    return 0",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 3,
                "column": 7
              },
              "text": "\"\"\"\n    Accepts a str, returns an int timestamp.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 3,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Accepts a str, returns an int timestamp.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 3,
                        "column": 4
                      },
                      "text": "\n    Accepts a str, returns an int timestamp.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 3,
                        "column": 4
                      },
                      "end": {
                        "row": 3,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 5,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 13
              },
              "text": "ts = None",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 5,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 13
                  },
                  "text": "ts = None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 6
                      },
                      "text": "ts"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 5,
                        "column": 7
                      },
                      "end": {
                        "row": 5,
                        "column": 8
                      },
                      "text": "="
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 5,
                        "column": 9
                      },
                      "end": {
                        "row": 5,
                        "column": 13
                      },
                      "text": "None"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 7,
                "column": 4
              },
              "end": {
                "row": 7,
                "column": 55
              },
              "text": "# Uses an extended version of Go's duration string."
            },
            {
              "type": "try_statement",
              "start": {
                "row": 8,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 12
              },
              "text": "try:\n        delta = durationpy.from_str(timestring);\n        past = datetime.datetime.utcnow() - delta\n        ts = calendar.timegm(past.timetuple())\n        return ts\n    except Exception as e:\n        pass",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 8,
                    "column": 4
                  },
                  "end": {
                    "row": 8,
                    "column": 7
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 8,
                    "column": 7
                  },
                  "end": {
                    "row": 8,
                    "column": 8
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 17
                  },
                  "text": "delta = durationpy.from_str(timestring);\n        past = datetime.datetime.utcnow() - delta\n        ts = calendar.timegm(past.timetuple())\n        return ts",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 9,
                        "column": 8
                      },
                      "end": {
                        "row": 9,
                        "column": 47
                      },
                      "text": "delta = durationpy.from_str(timestring)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 9,
                            "column": 8
                          },
                          "end": {
                            "row": 9,
                            "column": 47
                          },
                          "text": "delta = durationpy.from_str(timestring)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 8
                              },
                              "end": {
                                "row": 9,
                                "column": 13
                              },
                              "text": "delta"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 9,
                                "column": 14
                              },
                              "end": {
                                "row": 9,
                                "column": 15
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 9,
                                "column": 16
                              },
                              "end": {
                                "row": 9,
                                "column": 47
                              },
                              "text": "durationpy.from_str(timestring)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 9,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 35
                                  },
                                  "text": "durationpy.from_str",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 26
                                      },
                                      "text": "durationpy"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 9,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 27
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 35
                                      },
                                      "text": "from_str"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 9,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 47
                                  },
                                  "text": "(timestring)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 9,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 36
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 46
                                      },
                                      "text": "timestring"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 9,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start": {
                        "row": 9,
                        "column": 47
                      },
                      "end": {
                        "row": 9,
                        "column": 48
                      },
                      "text": ";"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 49
                      },
                      "text": "past = datetime.datetime.utcnow() - delta",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 10,
                            "column": 8
                          },
                          "end": {
                            "row": 10,
                            "column": 49
                          },
                          "text": "past = datetime.datetime.utcnow() - delta",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 8
                              },
                              "end": {
                                "row": 10,
                                "column": 12
                              },
                              "text": "past"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 10,
                                "column": 13
                              },
                              "end": {
                                "row": 10,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 10,
                                "column": 15
                              },
                              "end": {
                                "row": 10,
                                "column": 49
                              },
                              "text": "datetime.datetime.utcnow() - delta",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 10,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 41
                                  },
                                  "text": "datetime.datetime.utcnow()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 10,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 39
                                      },
                                      "text": "datetime.datetime.utcnow",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 10,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 32
                                          },
                                          "text": "datetime.datetime",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 10,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 23
                                              },
                                              "text": "datetime"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 10,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 24
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 10,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 32
                                              },
                                              "text": "datetime"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 10,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 33
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 10,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 39
                                          },
                                          "text": "utcnow"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 10,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 41
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 10,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 40
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 10,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 41
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start": {
                                    "row": 10,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 43
                                  },
                                  "text": "-"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 49
                                  },
                                  "text": "delta"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 46
                      },
                      "text": "ts = calendar.timegm(past.timetuple())",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 11,
                            "column": 8
                          },
                          "end": {
                            "row": 11,
                            "column": 46
                          },
                          "text": "ts = calendar.timegm(past.timetuple())",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 8
                              },
                              "end": {
                                "row": 11,
                                "column": 10
                              },
                              "text": "ts"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 11,
                                "column": 11
                              },
                              "end": {
                                "row": 11,
                                "column": 12
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 11,
                                "column": 13
                              },
                              "end": {
                                "row": 11,
                                "column": 46
                              },
                              "text": "calendar.timegm(past.timetuple())",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 11,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 28
                                  },
                                  "text": "calendar.timegm",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 21
                                      },
                                      "text": "calendar"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 11,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 22
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 28
                                      },
                                      "text": "timegm"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 11,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 46
                                  },
                                  "text": "(past.timetuple())",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 11,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 29
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 11,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 45
                                      },
                                      "text": "past.timetuple()",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 11,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 43
                                          },
                                          "text": "past.timetuple",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 11,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 33
                                              },
                                              "text": "past"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 11,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 34
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 11,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 43
                                              },
                                              "text": "timetuple"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 11,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 45
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 11,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 44
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 11,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 11,
                                                "column": 45
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 11,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 46
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 17
                      },
                      "text": "return ts",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 12,
                            "column": 8
                          },
                          "end": {
                            "row": 12,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 15
                          },
                          "end": {
                            "row": 12,
                            "column": 17
                          },
                          "text": "ts"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 13,
                    "column": 4
                  },
                  "end": {
                    "row": 14,
                    "column": 12
                  },
                  "text": "except Exception as e:\n        pass",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 13,
                        "column": 4
                      },
                      "end": {
                        "row": 13,
                        "column": 10
                      },
                      "text": "except"
                    },
                    {
                      "type": "as_pattern",
                      "start": {
                        "row": 13,
                        "column": 11
                      },
                      "end": {
                        "row": 13,
                        "column": 25
                      },
                      "text": "Exception as e",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 11
                          },
                          "end": {
                            "row": 13,
                            "column": 20
                          },
                          "text": "Exception"
                        },
                        {
                          "type": "as",
                          "start": {
                            "row": 13,
                            "column": 21
                          },
                          "end": {
                            "row": 13,
                            "column": 23
                          },
                          "text": "as"
                        },
                        {
                          "type": "as_pattern_target",
                          "start": {
                            "row": 13,
                            "column": 24
                          },
                          "end": {
                            "row": 13,
                            "column": 25
                          },
                          "text": "e",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 24
                              },
                              "end": {
                                "row": 13,
                                "column": 25
                              },
                              "text": "e"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 13,
                        "column": 25
                      },
                      "end": {
                        "row": 13,
                        "column": 26
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 12
                      },
                      "text": "pass",
                      "children": [
                        {
                          "type": "pass_statement",
                          "start": {
                            "row": 14,
                            "column": 8
                          },
                          "end": {
                            "row": 14,
                            "column": 12
                          },
                          "text": "pass",
                          "children": [
                            {
                              "type": "pass",
                              "start": {
                                "row": 14,
                                "column": 8
                              },
                              "end": {
                                "row": 14,
                                "column": 12
                              },
                              "text": "pass"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 16,
                "column": 4
              },
              "end": {
                "row": 17,
                "column": 17
              },
              "text": "if ts:\n        return ts",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 16,
                    "column": 4
                  },
                  "end": {
                    "row": 16,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 16,
                    "column": 7
                  },
                  "end": {
                    "row": 16,
                    "column": 9
                  },
                  "text": "ts"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 16,
                    "column": 9
                  },
                  "end": {
                    "row": 16,
                    "column": 10
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 17,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 17
                  },
                  "text": "return ts",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 17
                      },
                      "text": "return ts",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 17,
                            "column": 8
                          },
                          "end": {
                            "row": 17,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 15
                          },
                          "end": {
                            "row": 17,
                            "column": 17
                          },
                          "text": "ts"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 11
              },
              "text": "# else:"
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 46
              },
              "text": "#     print(\"Unable to parse timestring.\")"
            },
            {
              "type": "return_statement",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 12
              },
              "text": "return 0",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 20,
                    "column": 11
                  },
                  "end": {
                    "row": 20,
                    "column": 12
                  },
                  "text": "0"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}