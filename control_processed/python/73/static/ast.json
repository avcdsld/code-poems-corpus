{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 13,
    "column": 52
  },
  "text": "def foreach(self, f):\n        \"\"\"\n        Applies a function to all elements of this RDD.\n\n        >>> def f(x): print(x)\n        >>> sc.parallelize([1, 2, 3, 4, 5]).foreach(f)\n        \"\"\"\n        f = fail_on_stopiteration(f)\n\n        def processPartition(iterator):\n            for x in iterator:\n                f(x)\n            return iter([])\n        self.mapPartitions(processPartition).count()",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 13,
        "column": 52
      },
      "text": "def foreach(self, f):\n        \"\"\"\n        Applies a function to all elements of this RDD.\n\n        >>> def f(x): print(x)\n        >>> sc.parallelize([1, 2, 3, 4, 5]).foreach(f)\n        \"\"\"\n        f = fail_on_stopiteration(f)\n\n        def processPartition(iterator):\n            for x in iterator:\n                f(x)\n            return iter([])\n        self.mapPartitions(processPartition).count()",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "foreach"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 11
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "(self, f)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "f"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 13,
            "column": 52
          },
          "text": "\"\"\"\n        Applies a function to all elements of this RDD.\n\n        >>> def f(x): print(x)\n        >>> sc.parallelize([1, 2, 3, 4, 5]).foreach(f)\n        \"\"\"\n        f = fail_on_stopiteration(f)\n\n        def processPartition(iterator):\n            for x in iterator:\n                f(x)\n            return iter([])\n        self.mapPartitions(processPartition).count()",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 6,
                "column": 11
              },
              "text": "\"\"\"\n        Applies a function to all elements of this RDD.\n\n        >>> def f(x): print(x)\n        >>> sc.parallelize([1, 2, 3, 4, 5]).foreach(f)\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Applies a function to all elements of this RDD.\n\n        >>> def f(x): print(x)\n        >>> sc.parallelize([1, 2, 3, 4, 5]).foreach(f)\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 6,
                        "column": 8
                      },
                      "text": "\n        Applies a function to all elements of this RDD.\n\n        >>> def f(x): print(x)\n        >>> sc.parallelize([1, 2, 3, 4, 5]).foreach(f)\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 7,
                "column": 8
              },
              "end": {
                "row": 7,
                "column": 36
              },
              "text": "f = fail_on_stopiteration(f)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 36
                  },
                  "text": "f = fail_on_stopiteration(f)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 9
                      },
                      "text": "f"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 7,
                        "column": 10
                      },
                      "end": {
                        "row": 7,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 7,
                        "column": 12
                      },
                      "end": {
                        "row": 7,
                        "column": 36
                      },
                      "text": "fail_on_stopiteration(f)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 12
                          },
                          "end": {
                            "row": 7,
                            "column": 33
                          },
                          "text": "fail_on_stopiteration"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 7,
                            "column": 33
                          },
                          "end": {
                            "row": 7,
                            "column": 36
                          },
                          "text": "(f)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 7,
                                "column": 33
                              },
                              "end": {
                                "row": 7,
                                "column": 34
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 34
                              },
                              "end": {
                                "row": 7,
                                "column": 35
                              },
                              "text": "f"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 7,
                                "column": 35
                              },
                              "end": {
                                "row": 7,
                                "column": 36
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 27
              },
              "text": "def processPartition(iterator):\n            for x in iterator:\n                f(x)\n            return iter([])",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 11
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 9,
                    "column": 12
                  },
                  "end": {
                    "row": 9,
                    "column": 28
                  },
                  "text": "processPartition"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 9,
                    "column": 28
                  },
                  "end": {
                    "row": 9,
                    "column": 38
                  },
                  "text": "(iterator)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 9,
                        "column": 28
                      },
                      "end": {
                        "row": 9,
                        "column": 29
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 29
                      },
                      "end": {
                        "row": 9,
                        "column": 37
                      },
                      "text": "iterator"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 9,
                        "column": 37
                      },
                      "end": {
                        "row": 9,
                        "column": 38
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 9,
                    "column": 38
                  },
                  "end": {
                    "row": 9,
                    "column": 39
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 10,
                    "column": 12
                  },
                  "end": {
                    "row": 12,
                    "column": 27
                  },
                  "text": "for x in iterator:\n                f(x)\n            return iter([])",
                  "children": [
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 10,
                        "column": 12
                      },
                      "end": {
                        "row": 11,
                        "column": 20
                      },
                      "text": "for x in iterator:\n                f(x)",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 10,
                            "column": 12
                          },
                          "end": {
                            "row": 10,
                            "column": 15
                          },
                          "text": "for"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 16
                          },
                          "end": {
                            "row": 10,
                            "column": 17
                          },
                          "text": "x"
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 10,
                            "column": 18
                          },
                          "end": {
                            "row": 10,
                            "column": 20
                          },
                          "text": "in"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 21
                          },
                          "end": {
                            "row": 10,
                            "column": 29
                          },
                          "text": "iterator"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 10,
                            "column": 29
                          },
                          "end": {
                            "row": 10,
                            "column": 30
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 11,
                            "column": 16
                          },
                          "end": {
                            "row": 11,
                            "column": 20
                          },
                          "text": "f(x)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 11,
                                "column": 16
                              },
                              "end": {
                                "row": 11,
                                "column": 20
                              },
                              "text": "f(x)",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 11,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 20
                                  },
                                  "text": "f(x)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 17
                                      },
                                      "text": "f"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 11,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 20
                                      },
                                      "text": "(x)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 11,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 18
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 11,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 19
                                          },
                                          "text": "x"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 11,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 11,
                                            "column": 20
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 12,
                        "column": 12
                      },
                      "end": {
                        "row": 12,
                        "column": 27
                      },
                      "text": "return iter([])",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 12,
                            "column": 12
                          },
                          "end": {
                            "row": 12,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 12,
                            "column": 19
                          },
                          "end": {
                            "row": 12,
                            "column": 27
                          },
                          "text": "iter([])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 19
                              },
                              "end": {
                                "row": 12,
                                "column": 23
                              },
                              "text": "iter"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 12,
                                "column": 23
                              },
                              "end": {
                                "row": 12,
                                "column": 27
                              },
                              "text": "([])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 12,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 24
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "list",
                                  "start": {
                                    "row": 12,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 26
                                  },
                                  "text": "[]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 12,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 25
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 12,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 26
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 12,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 27
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 52
              },
              "text": "self.mapPartitions(processPartition).count()",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 52
                  },
                  "text": "self.mapPartitions(processPartition).count()",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 50
                      },
                      "text": "self.mapPartitions(processPartition).count",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 13,
                            "column": 8
                          },
                          "end": {
                            "row": 13,
                            "column": 44
                          },
                          "text": "self.mapPartitions(processPartition)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 13,
                                "column": 8
                              },
                              "end": {
                                "row": 13,
                                "column": 26
                              },
                              "text": "self.mapPartitions",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 12
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 13
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 26
                                  },
                                  "text": "mapPartitions"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 13,
                                "column": 26
                              },
                              "end": {
                                "row": 13,
                                "column": 44
                              },
                              "text": "(processPartition)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 13,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 27
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 43
                                  },
                                  "text": "processPartition"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 13,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 44
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 13,
                            "column": 44
                          },
                          "end": {
                            "row": 13,
                            "column": 45
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 45
                          },
                          "end": {
                            "row": 13,
                            "column": 50
                          },
                          "text": "count"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 13,
                        "column": 50
                      },
                      "end": {
                        "row": 13,
                        "column": 52
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 13,
                            "column": 50
                          },
                          "end": {
                            "row": 13,
                            "column": 51
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 13,
                            "column": 51
                          },
                          "end": {
                            "row": 13,
                            "column": 52
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}