{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 98,
    "column": 15
  },
  "text": "def create_volume(name, bricks, stripe=False, replica=False, device_vg=False,\n                  transport='tcp', start=False, force=False, arbiter=False):\n    '''\n    Create a glusterfs volume\n\n    name\n        Name of the gluster volume\n\n    bricks\n        Bricks to create volume from, in <peer>:<brick path> format. For \\\n        multiple bricks use list format: '[\"<peer1>:<brick1>\", \\\n        \"<peer2>:<brick2>\"]'\n\n    stripe\n        Stripe count, the number of bricks should be a multiple of the stripe \\\n        count for a distributed striped volume\n\n    replica\n        Replica count, the number of bricks should be a multiple of the \\\n        replica count for a distributed replicated volume\n\n    arbiter\n        If true, specifies volume should use arbiter brick(s). \\\n        Valid configuration limited to \"replica 3 arbiter 1\" per \\\n        Gluster documentation. Every third brick in the brick list \\\n        is used as an arbiter brick.\n\n        .. versionadded:: 2019.2.0\n\n    device_vg\n        If true, specifies volume should use block backend instead of regular \\\n        posix backend. Block device backend volume does not support multiple \\\n        bricks\n\n    transport\n        Transport protocol to use, can be 'tcp', 'rdma' or 'tcp,rdma'\n\n    start\n        Start the volume after creation\n\n    force\n        Force volume creation, this works even if creating in root FS\n\n    CLI Examples:\n\n    .. code-block:: bash\n\n        salt host1 glusterfs.create newvolume host1:/brick\n\n        salt gluster1 glusterfs.create vol2 '[\"gluster1:/export/vol2/brick\", \\\n        \"gluster2:/export/vol2/brick\"]' replica=2 start=True\n    '''\n    # If single brick given as a string, accept it\n    if isinstance(bricks, six.string_types):\n        bricks = [bricks]\n\n    # Error for block devices with multiple bricks\n    if device_vg and len(bricks) > 1:\n        raise SaltInvocationError('Block device backend volume does not ' +\n                                  'support multiple bricks')\n\n    # Validate bricks syntax\n    for brick in bricks:\n        try:\n            peer_name, path = brick.split(':')\n            if not path.startswith('/'):\n                raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))\n        except ValueError:\n            raise SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))\n\n    # Validate arbiter config\n    if arbiter and replica != 3:\n        raise SaltInvocationError('Arbiter configuration only valid ' +\n                                  'in replica 3 volume')\n\n    # Format creation call\n    cmd = 'volume create {0} '.format(name)\n    if stripe:\n        cmd += 'stripe {0} '.format(stripe)\n    if replica:\n        cmd += 'replica {0} '.format(replica)\n    if arbiter:\n        cmd += 'arbiter 1 '\n    if device_vg:\n        cmd += 'device vg '\n    if transport != 'tcp':\n        cmd += 'transport {0} '.format(transport)\n    cmd += ' '.join(bricks)\n    if force:\n        cmd += ' force'\n\n    if not _gluster(cmd):\n        return False\n\n    if start:\n        return start_volume(name)\n    return True",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 98,
        "column": 15
      },
      "text": "def create_volume(name, bricks, stripe=False, replica=False, device_vg=False,\n                  transport='tcp', start=False, force=False, arbiter=False):\n    '''\n    Create a glusterfs volume\n\n    name\n        Name of the gluster volume\n\n    bricks\n        Bricks to create volume from, in <peer>:<brick path> format. For \\\n        multiple bricks use list format: '[\"<peer1>:<brick1>\", \\\n        \"<peer2>:<brick2>\"]'\n\n    stripe\n        Stripe count, the number of bricks should be a multiple of the stripe \\\n        count for a distributed striped volume\n\n    replica\n        Replica count, the number of bricks should be a multiple of the \\\n        replica count for a distributed replicated volume\n\n    arbiter\n        If true, specifies volume should use arbiter brick(s). \\\n        Valid configuration limited to \"replica 3 arbiter 1\" per \\\n        Gluster documentation. Every third brick in the brick list \\\n        is used as an arbiter brick.\n\n        .. versionadded:: 2019.2.0\n\n    device_vg\n        If true, specifies volume should use block backend instead of regular \\\n        posix backend. Block device backend volume does not support multiple \\\n        bricks\n\n    transport\n        Transport protocol to use, can be 'tcp', 'rdma' or 'tcp,rdma'\n\n    start\n        Start the volume after creation\n\n    force\n        Force volume creation, this works even if creating in root FS\n\n    CLI Examples:\n\n    .. code-block:: bash\n\n        salt host1 glusterfs.create newvolume host1:/brick\n\n        salt gluster1 glusterfs.create vol2 '[\"gluster1:/export/vol2/brick\", \\\n        \"gluster2:/export/vol2/brick\"]' replica=2 start=True\n    '''\n    # If single brick given as a string, accept it\n    if isinstance(bricks, six.string_types):\n        bricks = [bricks]\n\n    # Error for block devices with multiple bricks\n    if device_vg and len(bricks) > 1:\n        raise SaltInvocationError('Block device backend volume does not ' +\n                                  'support multiple bricks')\n\n    # Validate bricks syntax\n    for brick in bricks:\n        try:\n            peer_name, path = brick.split(':')\n            if not path.startswith('/'):\n                raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))\n        except ValueError:\n            raise SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))\n\n    # Validate arbiter config\n    if arbiter and replica != 3:\n        raise SaltInvocationError('Arbiter configuration only valid ' +\n                                  'in replica 3 volume')\n\n    # Format creation call\n    cmd = 'volume create {0} '.format(name)\n    if stripe:\n        cmd += 'stripe {0} '.format(stripe)\n    if replica:\n        cmd += 'replica {0} '.format(replica)\n    if arbiter:\n        cmd += 'arbiter 1 '\n    if device_vg:\n        cmd += 'device vg '\n    if transport != 'tcp':\n        cmd += 'transport {0} '.format(transport)\n    cmd += ' '.join(bricks)\n    if force:\n        cmd += ' force'\n\n    if not _gluster(cmd):\n        return False\n\n    if start:\n        return start_volume(name)\n    return True",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "create_volume"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 17
          },
          "end": {
            "row": 1,
            "column": 75
          },
          "text": "(name, bricks, stripe=False, replica=False, device_vg=False,\n                  transport='tcp', start=False, force=False, arbiter=False)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "name"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "bricks"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": "stripe=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 38
                  },
                  "text": "stripe"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 38
                  },
                  "end": {
                    "row": 0,
                    "column": 39
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 0,
                    "column": 39
                  },
                  "end": {
                    "row": 0,
                    "column": 44
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": "replica=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 46
                  },
                  "end": {
                    "row": 0,
                    "column": 53
                  },
                  "text": "replica"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 53
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 0,
                    "column": 54
                  },
                  "end": {
                    "row": 0,
                    "column": 59
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 59
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 61
              },
              "end": {
                "row": 0,
                "column": 76
              },
              "text": "device_vg=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 61
                  },
                  "end": {
                    "row": 0,
                    "column": 70
                  },
                  "text": "device_vg"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 70
                  },
                  "end": {
                    "row": 0,
                    "column": 71
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 0,
                    "column": 71
                  },
                  "end": {
                    "row": 0,
                    "column": 76
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 76
              },
              "end": {
                "row": 0,
                "column": 77
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 18
              },
              "end": {
                "row": 1,
                "column": 33
              },
              "text": "transport='tcp'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 18
                  },
                  "end": {
                    "row": 1,
                    "column": 27
                  },
                  "text": "transport"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 27
                  },
                  "end": {
                    "row": 1,
                    "column": 28
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 28
                  },
                  "end": {
                    "row": 1,
                    "column": 33
                  },
                  "text": "'tcp'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 28
                      },
                      "end": {
                        "row": 1,
                        "column": 29
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 29
                      },
                      "end": {
                        "row": 1,
                        "column": 32
                      },
                      "text": "tcp"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 1,
                        "column": 32
                      },
                      "end": {
                        "row": 1,
                        "column": 33
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 33
              },
              "end": {
                "row": 1,
                "column": 34
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 35
              },
              "end": {
                "row": 1,
                "column": 46
              },
              "text": "start=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 35
                  },
                  "end": {
                    "row": 1,
                    "column": 40
                  },
                  "text": "start"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 40
                  },
                  "end": {
                    "row": 1,
                    "column": 41
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 1,
                    "column": 41
                  },
                  "end": {
                    "row": 1,
                    "column": 46
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 46
              },
              "end": {
                "row": 1,
                "column": 47
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 48
              },
              "end": {
                "row": 1,
                "column": 59
              },
              "text": "force=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 48
                  },
                  "end": {
                    "row": 1,
                    "column": 53
                  },
                  "text": "force"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 53
                  },
                  "end": {
                    "row": 1,
                    "column": 54
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 1,
                    "column": 54
                  },
                  "end": {
                    "row": 1,
                    "column": 59
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 59
              },
              "end": {
                "row": 1,
                "column": 60
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 61
              },
              "end": {
                "row": 1,
                "column": 74
              },
              "text": "arbiter=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 61
                  },
                  "end": {
                    "row": 1,
                    "column": 68
                  },
                  "text": "arbiter"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 68
                  },
                  "end": {
                    "row": 1,
                    "column": 69
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 1,
                    "column": 69
                  },
                  "end": {
                    "row": 1,
                    "column": 74
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 74
              },
              "end": {
                "row": 1,
                "column": 75
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 1,
            "column": 75
          },
          "end": {
            "row": 1,
            "column": 76
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 2,
            "column": 4
          },
          "end": {
            "row": 98,
            "column": 15
          },
          "text": "'''\n    Create a glusterfs volume\n\n    name\n        Name of the gluster volume\n\n    bricks\n        Bricks to create volume from, in <peer>:<brick path> format. For \\\n        multiple bricks use list format: '[\"<peer1>:<brick1>\", \\\n        \"<peer2>:<brick2>\"]'\n\n    stripe\n        Stripe count, the number of bricks should be a multiple of the stripe \\\n        count for a distributed striped volume\n\n    replica\n        Replica count, the number of bricks should be a multiple of the \\\n        replica count for a distributed replicated volume\n\n    arbiter\n        If true, specifies volume should use arbiter brick(s). \\\n        Valid configuration limited to \"replica 3 arbiter 1\" per \\\n        Gluster documentation. Every third brick in the brick list \\\n        is used as an arbiter brick.\n\n        .. versionadded:: 2019.2.0\n\n    device_vg\n        If true, specifies volume should use block backend instead of regular \\\n        posix backend. Block device backend volume does not support multiple \\\n        bricks\n\n    transport\n        Transport protocol to use, can be 'tcp', 'rdma' or 'tcp,rdma'\n\n    start\n        Start the volume after creation\n\n    force\n        Force volume creation, this works even if creating in root FS\n\n    CLI Examples:\n\n    .. code-block:: bash\n\n        salt host1 glusterfs.create newvolume host1:/brick\n\n        salt gluster1 glusterfs.create vol2 '[\"gluster1:/export/vol2/brick\", \\\n        \"gluster2:/export/vol2/brick\"]' replica=2 start=True\n    '''\n    # If single brick given as a string, accept it\n    if isinstance(bricks, six.string_types):\n        bricks = [bricks]\n\n    # Error for block devices with multiple bricks\n    if device_vg and len(bricks) > 1:\n        raise SaltInvocationError('Block device backend volume does not ' +\n                                  'support multiple bricks')\n\n    # Validate bricks syntax\n    for brick in bricks:\n        try:\n            peer_name, path = brick.split(':')\n            if not path.startswith('/'):\n                raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))\n        except ValueError:\n            raise SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))\n\n    # Validate arbiter config\n    if arbiter and replica != 3:\n        raise SaltInvocationError('Arbiter configuration only valid ' +\n                                  'in replica 3 volume')\n\n    # Format creation call\n    cmd = 'volume create {0} '.format(name)\n    if stripe:\n        cmd += 'stripe {0} '.format(stripe)\n    if replica:\n        cmd += 'replica {0} '.format(replica)\n    if arbiter:\n        cmd += 'arbiter 1 '\n    if device_vg:\n        cmd += 'device vg '\n    if transport != 'tcp':\n        cmd += 'transport {0} '.format(transport)\n    cmd += ' '.join(bricks)\n    if force:\n        cmd += ' force'\n\n    if not _gluster(cmd):\n        return False\n\n    if start:\n        return start_volume(name)\n    return True",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 51,
                "column": 7
              },
              "text": "'''\n    Create a glusterfs volume\n\n    name\n        Name of the gluster volume\n\n    bricks\n        Bricks to create volume from, in <peer>:<brick path> format. For \\\n        multiple bricks use list format: '[\"<peer1>:<brick1>\", \\\n        \"<peer2>:<brick2>\"]'\n\n    stripe\n        Stripe count, the number of bricks should be a multiple of the stripe \\\n        count for a distributed striped volume\n\n    replica\n        Replica count, the number of bricks should be a multiple of the \\\n        replica count for a distributed replicated volume\n\n    arbiter\n        If true, specifies volume should use arbiter brick(s). \\\n        Valid configuration limited to \"replica 3 arbiter 1\" per \\\n        Gluster documentation. Every third brick in the brick list \\\n        is used as an arbiter brick.\n\n        .. versionadded:: 2019.2.0\n\n    device_vg\n        If true, specifies volume should use block backend instead of regular \\\n        posix backend. Block device backend volume does not support multiple \\\n        bricks\n\n    transport\n        Transport protocol to use, can be 'tcp', 'rdma' or 'tcp,rdma'\n\n    start\n        Start the volume after creation\n\n    force\n        Force volume creation, this works even if creating in root FS\n\n    CLI Examples:\n\n    .. code-block:: bash\n\n        salt host1 glusterfs.create newvolume host1:/brick\n\n        salt gluster1 glusterfs.create vol2 '[\"gluster1:/export/vol2/brick\", \\\n        \"gluster2:/export/vol2/brick\"]' replica=2 start=True\n    '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 51,
                    "column": 7
                  },
                  "text": "'''\n    Create a glusterfs volume\n\n    name\n        Name of the gluster volume\n\n    bricks\n        Bricks to create volume from, in <peer>:<brick path> format. For \\\n        multiple bricks use list format: '[\"<peer1>:<brick1>\", \\\n        \"<peer2>:<brick2>\"]'\n\n    stripe\n        Stripe count, the number of bricks should be a multiple of the stripe \\\n        count for a distributed striped volume\n\n    replica\n        Replica count, the number of bricks should be a multiple of the \\\n        replica count for a distributed replicated volume\n\n    arbiter\n        If true, specifies volume should use arbiter brick(s). \\\n        Valid configuration limited to \"replica 3 arbiter 1\" per \\\n        Gluster documentation. Every third brick in the brick list \\\n        is used as an arbiter brick.\n\n        .. versionadded:: 2019.2.0\n\n    device_vg\n        If true, specifies volume should use block backend instead of regular \\\n        posix backend. Block device backend volume does not support multiple \\\n        bricks\n\n    transport\n        Transport protocol to use, can be 'tcp', 'rdma' or 'tcp,rdma'\n\n    start\n        Start the volume after creation\n\n    force\n        Force volume creation, this works even if creating in root FS\n\n    CLI Examples:\n\n    .. code-block:: bash\n\n        salt host1 glusterfs.create newvolume host1:/brick\n\n        salt gluster1 glusterfs.create vol2 '[\"gluster1:/export/vol2/brick\", \\\n        \"gluster2:/export/vol2/brick\"]' replica=2 start=True\n    '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 4
                      },
                      "end": {
                        "row": 2,
                        "column": 7
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 2,
                        "column": 7
                      },
                      "end": {
                        "row": 51,
                        "column": 4
                      },
                      "text": "\n    Create a glusterfs volume\n\n    name\n        Name of the gluster volume\n\n    bricks\n        Bricks to create volume from, in <peer>:<brick path> format. For \\\n        multiple bricks use list format: '[\"<peer1>:<brick1>\", \\\n        \"<peer2>:<brick2>\"]'\n\n    stripe\n        Stripe count, the number of bricks should be a multiple of the stripe \\\n        count for a distributed striped volume\n\n    replica\n        Replica count, the number of bricks should be a multiple of the \\\n        replica count for a distributed replicated volume\n\n    arbiter\n        If true, specifies volume should use arbiter brick(s). \\\n        Valid configuration limited to \"replica 3 arbiter 1\" per \\\n        Gluster documentation. Every third brick in the brick list \\\n        is used as an arbiter brick.\n\n        .. versionadded:: 2019.2.0\n\n    device_vg\n        If true, specifies volume should use block backend instead of regular \\\n        posix backend. Block device backend volume does not support multiple \\\n        bricks\n\n    transport\n        Transport protocol to use, can be 'tcp', 'rdma' or 'tcp,rdma'\n\n    start\n        Start the volume after creation\n\n    force\n        Force volume creation, this works even if creating in root FS\n\n    CLI Examples:\n\n    .. code-block:: bash\n\n        salt host1 glusterfs.create newvolume host1:/brick\n\n        salt gluster1 glusterfs.create vol2 '[\"gluster1:/export/vol2/brick\", \\\n        \"gluster2:/export/vol2/brick\"]' replica=2 start=True\n    ",
                      "children": [
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 9,
                            "column": 73
                          },
                          "end": {
                            "row": 10,
                            "column": 0
                          },
                          "text": "\\\n"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 10,
                            "column": 63
                          },
                          "end": {
                            "row": 11,
                            "column": 0
                          },
                          "text": "\\\n"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 14,
                            "column": 78
                          },
                          "end": {
                            "row": 15,
                            "column": 0
                          },
                          "text": "\\\n"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 18,
                            "column": 72
                          },
                          "end": {
                            "row": 19,
                            "column": 0
                          },
                          "text": "\\\n"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 22,
                            "column": 63
                          },
                          "end": {
                            "row": 23,
                            "column": 0
                          },
                          "text": "\\\n"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 23,
                            "column": 65
                          },
                          "end": {
                            "row": 24,
                            "column": 0
                          },
                          "text": "\\\n"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 24,
                            "column": 67
                          },
                          "end": {
                            "row": 25,
                            "column": 0
                          },
                          "text": "\\\n"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 30,
                            "column": 78
                          },
                          "end": {
                            "row": 31,
                            "column": 0
                          },
                          "text": "\\\n"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 31,
                            "column": 77
                          },
                          "end": {
                            "row": 32,
                            "column": 0
                          },
                          "text": "\\\n"
                        },
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 49,
                            "column": 77
                          },
                          "end": {
                            "row": 50,
                            "column": 0
                          },
                          "text": "\\\n"
                        }
                      ]
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 51,
                        "column": 4
                      },
                      "end": {
                        "row": 51,
                        "column": 7
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 52,
                "column": 4
              },
              "end": {
                "row": 52,
                "column": 50
              },
              "text": "# If single brick given as a string, accept it"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 53,
                "column": 4
              },
              "end": {
                "row": 54,
                "column": 25
              },
              "text": "if isinstance(bricks, six.string_types):\n        bricks = [bricks]",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 53,
                    "column": 4
                  },
                  "end": {
                    "row": 53,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 53,
                    "column": 7
                  },
                  "end": {
                    "row": 53,
                    "column": 43
                  },
                  "text": "isinstance(bricks, six.string_types)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 53,
                        "column": 7
                      },
                      "end": {
                        "row": 53,
                        "column": 17
                      },
                      "text": "isinstance"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 53,
                        "column": 17
                      },
                      "end": {
                        "row": 53,
                        "column": 43
                      },
                      "text": "(bricks, six.string_types)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 53,
                            "column": 17
                          },
                          "end": {
                            "row": 53,
                            "column": 18
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 53,
                            "column": 18
                          },
                          "end": {
                            "row": 53,
                            "column": 24
                          },
                          "text": "bricks"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 53,
                            "column": 24
                          },
                          "end": {
                            "row": 53,
                            "column": 25
                          },
                          "text": ","
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 53,
                            "column": 26
                          },
                          "end": {
                            "row": 53,
                            "column": 42
                          },
                          "text": "six.string_types",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 53,
                                "column": 26
                              },
                              "end": {
                                "row": 53,
                                "column": 29
                              },
                              "text": "six"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 53,
                                "column": 29
                              },
                              "end": {
                                "row": 53,
                                "column": 30
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 53,
                                "column": 30
                              },
                              "end": {
                                "row": 53,
                                "column": 42
                              },
                              "text": "string_types"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 53,
                            "column": 42
                          },
                          "end": {
                            "row": 53,
                            "column": 43
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 53,
                    "column": 43
                  },
                  "end": {
                    "row": 53,
                    "column": 44
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 54,
                    "column": 8
                  },
                  "end": {
                    "row": 54,
                    "column": 25
                  },
                  "text": "bricks = [bricks]",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 54,
                        "column": 8
                      },
                      "end": {
                        "row": 54,
                        "column": 25
                      },
                      "text": "bricks = [bricks]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 54,
                            "column": 8
                          },
                          "end": {
                            "row": 54,
                            "column": 25
                          },
                          "text": "bricks = [bricks]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 8
                              },
                              "end": {
                                "row": 54,
                                "column": 14
                              },
                              "text": "bricks"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 54,
                                "column": 15
                              },
                              "end": {
                                "row": 54,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 54,
                                "column": 17
                              },
                              "end": {
                                "row": 54,
                                "column": 25
                              },
                              "text": "[bricks]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 54,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 18
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 24
                                  },
                                  "text": "bricks"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 54,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 25
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 56,
                "column": 4
              },
              "end": {
                "row": 56,
                "column": 50
              },
              "text": "# Error for block devices with multiple bricks"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 57,
                "column": 4
              },
              "end": {
                "row": 59,
                "column": 60
              },
              "text": "if device_vg and len(bricks) > 1:\n        raise SaltInvocationError('Block device backend volume does not ' +\n                                  'support multiple bricks')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 57,
                    "column": 4
                  },
                  "end": {
                    "row": 57,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 57,
                    "column": 7
                  },
                  "end": {
                    "row": 57,
                    "column": 36
                  },
                  "text": "device_vg and len(bricks) > 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 57,
                        "column": 7
                      },
                      "end": {
                        "row": 57,
                        "column": 16
                      },
                      "text": "device_vg"
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 57,
                        "column": 17
                      },
                      "end": {
                        "row": 57,
                        "column": 20
                      },
                      "text": "and"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 57,
                        "column": 21
                      },
                      "end": {
                        "row": 57,
                        "column": 36
                      },
                      "text": "len(bricks) > 1",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 57,
                            "column": 21
                          },
                          "end": {
                            "row": 57,
                            "column": 32
                          },
                          "text": "len(bricks)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 57,
                                "column": 21
                              },
                              "end": {
                                "row": 57,
                                "column": 24
                              },
                              "text": "len"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 57,
                                "column": 24
                              },
                              "end": {
                                "row": 57,
                                "column": 32
                              },
                              "text": "(bricks)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 57,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 57,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 31
                                  },
                                  "text": "bricks"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 57,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 32
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ">",
                          "start": {
                            "row": 57,
                            "column": 33
                          },
                          "end": {
                            "row": 57,
                            "column": 34
                          },
                          "text": ">"
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 57,
                            "column": 35
                          },
                          "end": {
                            "row": 57,
                            "column": 36
                          },
                          "text": "1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 57,
                    "column": 36
                  },
                  "end": {
                    "row": 57,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 58,
                    "column": 8
                  },
                  "end": {
                    "row": 59,
                    "column": 60
                  },
                  "text": "raise SaltInvocationError('Block device backend volume does not ' +\n                                  'support multiple bricks')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 58,
                        "column": 8
                      },
                      "end": {
                        "row": 59,
                        "column": 60
                      },
                      "text": "raise SaltInvocationError('Block device backend volume does not ' +\n                                  'support multiple bricks')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 58,
                            "column": 8
                          },
                          "end": {
                            "row": 58,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 58,
                            "column": 14
                          },
                          "end": {
                            "row": 59,
                            "column": 60
                          },
                          "text": "SaltInvocationError('Block device backend volume does not ' +\n                                  'support multiple bricks')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 58,
                                "column": 14
                              },
                              "end": {
                                "row": 58,
                                "column": 33
                              },
                              "text": "SaltInvocationError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 58,
                                "column": 33
                              },
                              "end": {
                                "row": 59,
                                "column": 60
                              },
                              "text": "('Block device backend volume does not ' +\n                                  'support multiple bricks')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 58,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 34
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 58,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 59
                                  },
                                  "text": "'Block device backend volume does not ' +\n                                  'support multiple bricks'",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 58,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 73
                                      },
                                      "text": "'Block device backend volume does not '",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 58,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 35
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 58,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 72
                                          },
                                          "text": "Block device backend volume does not "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 58,
                                            "column": 72
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 73
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 58,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 75
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 59,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 59,
                                        "column": 59
                                      },
                                      "text": "'support multiple bricks'",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 59,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 35
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 59,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 58
                                          },
                                          "text": "support multiple bricks"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 59,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 59,
                                            "column": 59
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 59,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 60
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 61,
                "column": 4
              },
              "end": {
                "row": 61,
                "column": 28
              },
              "text": "# Validate bricks syntax"
            },
            {
              "type": "for_statement",
              "start": {
                "row": 62,
                "column": 4
              },
              "end": {
                "row": 70,
                "column": 70
              },
              "text": "for brick in bricks:\n        try:\n            peer_name, path = brick.split(':')\n            if not path.startswith('/'):\n                raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))\n        except ValueError:\n            raise SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 62,
                    "column": 4
                  },
                  "end": {
                    "row": 62,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 62,
                    "column": 8
                  },
                  "end": {
                    "row": 62,
                    "column": 13
                  },
                  "text": "brick"
                },
                {
                  "type": "in",
                  "start": {
                    "row": 62,
                    "column": 14
                  },
                  "end": {
                    "row": 62,
                    "column": 16
                  },
                  "text": "in"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 62,
                    "column": 17
                  },
                  "end": {
                    "row": 62,
                    "column": 23
                  },
                  "text": "bricks"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 62,
                    "column": 23
                  },
                  "end": {
                    "row": 62,
                    "column": 24
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 63,
                    "column": 8
                  },
                  "end": {
                    "row": 70,
                    "column": 70
                  },
                  "text": "try:\n            peer_name, path = brick.split(':')\n            if not path.startswith('/'):\n                raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))\n        except ValueError:\n            raise SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))",
                  "children": [
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 63,
                        "column": 8
                      },
                      "end": {
                        "row": 70,
                        "column": 70
                      },
                      "text": "try:\n            peer_name, path = brick.split(':')\n            if not path.startswith('/'):\n                raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))\n        except ValueError:\n            raise SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 63,
                            "column": 8
                          },
                          "end": {
                            "row": 63,
                            "column": 11
                          },
                          "text": "try"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 63,
                            "column": 11
                          },
                          "end": {
                            "row": 63,
                            "column": 12
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 64,
                            "column": 12
                          },
                          "end": {
                            "row": 67,
                            "column": 73
                          },
                          "text": "peer_name, path = brick.split(':')\n            if not path.startswith('/'):\n                raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 64,
                                "column": 12
                              },
                              "end": {
                                "row": 64,
                                "column": 46
                              },
                              "text": "peer_name, path = brick.split(':')",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 64,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 46
                                  },
                                  "text": "peer_name, path = brick.split(':')",
                                  "children": [
                                    {
                                      "type": "pattern_list",
                                      "start": {
                                        "row": 64,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 64,
                                        "column": 27
                                      },
                                      "text": "peer_name, path",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 64,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 21
                                          },
                                          "text": "peer_name"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 64,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 22
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 64,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 27
                                          },
                                          "text": "path"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 64,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 64,
                                        "column": 29
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 64,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 64,
                                        "column": 46
                                      },
                                      "text": "brick.split(':')",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 64,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 41
                                          },
                                          "text": "brick.split",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 64,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 64,
                                                "column": 35
                                              },
                                              "text": "brick"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 64,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 64,
                                                "column": 36
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 64,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 64,
                                                "column": 41
                                              },
                                              "text": "split"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 64,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 64,
                                            "column": 46
                                          },
                                          "text": "(':')",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 64,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 64,
                                                "column": 42
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 64,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 64,
                                                "column": 45
                                              },
                                              "text": "':'",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 64,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 64,
                                                    "column": 43
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 64,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 64,
                                                    "column": 44
                                                  },
                                                  "text": ":"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 64,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 64,
                                                    "column": 45
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 64,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 64,
                                                "column": 46
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start": {
                                "row": 65,
                                "column": 12
                              },
                              "end": {
                                "row": 67,
                                "column": 73
                              },
                              "text": "if not path.startswith('/'):\n                raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))",
                              "children": [
                                {
                                  "type": "if",
                                  "start": {
                                    "row": 65,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 14
                                  },
                                  "text": "if"
                                },
                                {
                                  "type": "not_operator",
                                  "start": {
                                    "row": 65,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 39
                                  },
                                  "text": "not path.startswith('/')",
                                  "children": [
                                    {
                                      "type": "not",
                                      "start": {
                                        "row": 65,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 18
                                      },
                                      "text": "not"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 65,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 39
                                      },
                                      "text": "path.startswith('/')",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 65,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 34
                                          },
                                          "text": "path.startswith",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 65,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 23
                                              },
                                              "text": "path"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 65,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 24
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 65,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 34
                                              },
                                              "text": "startswith"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 65,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 39
                                          },
                                          "text": "('/')",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 65,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 35
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 65,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 38
                                              },
                                              "text": "'/'",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 65,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 65,
                                                    "column": 36
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 65,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 65,
                                                    "column": 37
                                                  },
                                                  "text": "/"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 65,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 65,
                                                    "column": 38
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 65,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 39
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 65,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 40
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 66,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 73
                                  },
                                  "text": "raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))",
                                  "children": [
                                    {
                                      "type": "raise_statement",
                                      "start": {
                                        "row": 66,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 73
                                      },
                                      "text": "raise SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))",
                                      "children": [
                                        {
                                          "type": "raise",
                                          "start": {
                                            "row": 66,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 21
                                          },
                                          "text": "raise"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 66,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 73
                                          },
                                          "text": "SaltInvocationError(\n                    'Brick paths must start with / in {0}'.format(brick))",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 66,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 41
                                              },
                                              "text": "SaltInvocationError"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 66,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 73
                                              },
                                              "text": "(\n                    'Brick paths must start with / in {0}'.format(brick))",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 66,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 66,
                                                    "column": 42
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 72
                                                  },
                                                  "text": "'Brick paths must start with / in {0}'.format(brick)",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 67,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 67,
                                                        "column": 65
                                                      },
                                                      "text": "'Brick paths must start with / in {0}'.format",
                                                      "children": [
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 67,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 67,
                                                            "column": 58
                                                          },
                                                          "text": "'Brick paths must start with / in {0}'",
                                                          "children": [
                                                            {
                                                              "type": "string_start",
                                                              "start": {
                                                                "row": 67,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 67,
                                                                "column": 21
                                                              },
                                                              "text": "'"
                                                            },
                                                            {
                                                              "type": "string_content",
                                                              "start": {
                                                                "row": 67,
                                                                "column": 21
                                                              },
                                                              "end": {
                                                                "row": 67,
                                                                "column": 57
                                                              },
                                                              "text": "Brick paths must start with / in {0}"
                                                            },
                                                            {
                                                              "type": "string_end",
                                                              "start": {
                                                                "row": 67,
                                                                "column": 57
                                                              },
                                                              "end": {
                                                                "row": 67,
                                                                "column": 58
                                                              },
                                                              "text": "'"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 67,
                                                            "column": 58
                                                          },
                                                          "end": {
                                                            "row": 67,
                                                            "column": 59
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 67,
                                                            "column": 59
                                                          },
                                                          "end": {
                                                            "row": 67,
                                                            "column": 65
                                                          },
                                                          "text": "format"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 67,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 67,
                                                        "column": 72
                                                      },
                                                      "text": "(brick)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 67,
                                                            "column": 65
                                                          },
                                                          "end": {
                                                            "row": 67,
                                                            "column": 66
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 67,
                                                            "column": 66
                                                          },
                                                          "end": {
                                                            "row": 67,
                                                            "column": 71
                                                          },
                                                          "text": "brick"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 67,
                                                            "column": 71
                                                          },
                                                          "end": {
                                                            "row": 67,
                                                            "column": 72
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 72
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 73
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "except_clause",
                          "start": {
                            "row": 68,
                            "column": 8
                          },
                          "end": {
                            "row": 70,
                            "column": 70
                          },
                          "text": "except ValueError:\n            raise SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))",
                          "children": [
                            {
                              "type": "except",
                              "start": {
                                "row": 68,
                                "column": 8
                              },
                              "end": {
                                "row": 68,
                                "column": 14
                              },
                              "text": "except"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 68,
                                "column": 15
                              },
                              "end": {
                                "row": 68,
                                "column": 25
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 68,
                                "column": 25
                              },
                              "end": {
                                "row": 68,
                                "column": 26
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 69,
                                "column": 12
                              },
                              "end": {
                                "row": 70,
                                "column": 70
                              },
                              "text": "raise SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))",
                              "children": [
                                {
                                  "type": "raise_statement",
                                  "start": {
                                    "row": 69,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 70
                                  },
                                  "text": "raise SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))",
                                  "children": [
                                    {
                                      "type": "raise",
                                      "start": {
                                        "row": 69,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 17
                                      },
                                      "text": "raise"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 69,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 70
                                      },
                                      "text": "SaltInvocationError(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 69,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 37
                                          },
                                          "text": "SaltInvocationError"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 69,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 70
                                          },
                                          "text": "(\n                'Brick syntax is <peer>:<path> got {0}'.format(brick))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 69,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 69,
                                                "column": 38
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 70,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 69
                                              },
                                              "text": "'Brick syntax is <peer>:<path> got {0}'.format(brick)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 62
                                                  },
                                                  "text": "'Brick syntax is <peer>:<path> got {0}'.format",
                                                  "children": [
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 55
                                                      },
                                                      "text": "'Brick syntax is <peer>:<path> got {0}'",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 16
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 17
                                                          },
                                                          "text": "'"
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 17
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 54
                                                          },
                                                          "text": "Brick syntax is <peer>:<path> got {0}"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 54
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 55
                                                          },
                                                          "text": "'"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 56
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 56
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 62
                                                      },
                                                      "text": "format"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 62
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 69
                                                  },
                                                  "text": "(brick)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 62
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 63
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 63
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 68
                                                      },
                                                      "text": "brick"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 68
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 69
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 70,
                                                "column": 69
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 70
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 72,
                "column": 4
              },
              "end": {
                "row": 72,
                "column": 29
              },
              "text": "# Validate arbiter config"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 73,
                "column": 4
              },
              "end": {
                "row": 75,
                "column": 56
              },
              "text": "if arbiter and replica != 3:\n        raise SaltInvocationError('Arbiter configuration only valid ' +\n                                  'in replica 3 volume')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 73,
                    "column": 4
                  },
                  "end": {
                    "row": 73,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 73,
                    "column": 7
                  },
                  "end": {
                    "row": 73,
                    "column": 31
                  },
                  "text": "arbiter and replica != 3",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 73,
                        "column": 7
                      },
                      "end": {
                        "row": 73,
                        "column": 14
                      },
                      "text": "arbiter"
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 73,
                        "column": 15
                      },
                      "end": {
                        "row": 73,
                        "column": 18
                      },
                      "text": "and"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 73,
                        "column": 19
                      },
                      "end": {
                        "row": 73,
                        "column": 31
                      },
                      "text": "replica != 3",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 73,
                            "column": 19
                          },
                          "end": {
                            "row": 73,
                            "column": 26
                          },
                          "text": "replica"
                        },
                        {
                          "type": "!=",
                          "start": {
                            "row": 73,
                            "column": 27
                          },
                          "end": {
                            "row": 73,
                            "column": 29
                          },
                          "text": "!="
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 73,
                            "column": 30
                          },
                          "end": {
                            "row": 73,
                            "column": 31
                          },
                          "text": "3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 73,
                    "column": 31
                  },
                  "end": {
                    "row": 73,
                    "column": 32
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 74,
                    "column": 8
                  },
                  "end": {
                    "row": 75,
                    "column": 56
                  },
                  "text": "raise SaltInvocationError('Arbiter configuration only valid ' +\n                                  'in replica 3 volume')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 74,
                        "column": 8
                      },
                      "end": {
                        "row": 75,
                        "column": 56
                      },
                      "text": "raise SaltInvocationError('Arbiter configuration only valid ' +\n                                  'in replica 3 volume')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 74,
                            "column": 8
                          },
                          "end": {
                            "row": 74,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 74,
                            "column": 14
                          },
                          "end": {
                            "row": 75,
                            "column": 56
                          },
                          "text": "SaltInvocationError('Arbiter configuration only valid ' +\n                                  'in replica 3 volume')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 74,
                                "column": 14
                              },
                              "end": {
                                "row": 74,
                                "column": 33
                              },
                              "text": "SaltInvocationError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 74,
                                "column": 33
                              },
                              "end": {
                                "row": 75,
                                "column": 56
                              },
                              "text": "('Arbiter configuration only valid ' +\n                                  'in replica 3 volume')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 74,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 34
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 74,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 55
                                  },
                                  "text": "'Arbiter configuration only valid ' +\n                                  'in replica 3 volume'",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 74,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 69
                                      },
                                      "text": "'Arbiter configuration only valid '",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 74,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 35
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 74,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 68
                                          },
                                          "text": "Arbiter configuration only valid "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 74,
                                            "column": 68
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 69
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 74,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 71
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 75,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 55
                                      },
                                      "text": "'in replica 3 volume'",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 75,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 35
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 75,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 54
                                          },
                                          "text": "in replica 3 volume"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 75,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 55
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 75,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 77,
                "column": 4
              },
              "end": {
                "row": 77,
                "column": 26
              },
              "text": "# Format creation call"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 78,
                "column": 4
              },
              "end": {
                "row": 78,
                "column": 43
              },
              "text": "cmd = 'volume create {0} '.format(name)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 78,
                    "column": 4
                  },
                  "end": {
                    "row": 78,
                    "column": 43
                  },
                  "text": "cmd = 'volume create {0} '.format(name)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 78,
                        "column": 4
                      },
                      "end": {
                        "row": 78,
                        "column": 7
                      },
                      "text": "cmd"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 78,
                        "column": 8
                      },
                      "end": {
                        "row": 78,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 78,
                        "column": 10
                      },
                      "end": {
                        "row": 78,
                        "column": 43
                      },
                      "text": "'volume create {0} '.format(name)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 78,
                            "column": 10
                          },
                          "end": {
                            "row": 78,
                            "column": 37
                          },
                          "text": "'volume create {0} '.format",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 78,
                                "column": 10
                              },
                              "end": {
                                "row": 78,
                                "column": 30
                              },
                              "text": "'volume create {0} '",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 78,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 11
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 78,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 29
                                  },
                                  "text": "volume create {0} "
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 78,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 30
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 78,
                                "column": 30
                              },
                              "end": {
                                "row": 78,
                                "column": 31
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 78,
                                "column": 31
                              },
                              "end": {
                                "row": 78,
                                "column": 37
                              },
                              "text": "format"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 78,
                            "column": 37
                          },
                          "end": {
                            "row": 78,
                            "column": 43
                          },
                          "text": "(name)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 78,
                                "column": 37
                              },
                              "end": {
                                "row": 78,
                                "column": 38
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 78,
                                "column": 38
                              },
                              "end": {
                                "row": 78,
                                "column": 42
                              },
                              "text": "name"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 78,
                                "column": 42
                              },
                              "end": {
                                "row": 78,
                                "column": 43
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 79,
                "column": 4
              },
              "end": {
                "row": 80,
                "column": 43
              },
              "text": "if stripe:\n        cmd += 'stripe {0} '.format(stripe)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 79,
                    "column": 4
                  },
                  "end": {
                    "row": 79,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 79,
                    "column": 7
                  },
                  "end": {
                    "row": 79,
                    "column": 13
                  },
                  "text": "stripe"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 79,
                    "column": 13
                  },
                  "end": {
                    "row": 79,
                    "column": 14
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 80,
                    "column": 8
                  },
                  "end": {
                    "row": 80,
                    "column": 43
                  },
                  "text": "cmd += 'stripe {0} '.format(stripe)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 80,
                        "column": 8
                      },
                      "end": {
                        "row": 80,
                        "column": 43
                      },
                      "text": "cmd += 'stripe {0} '.format(stripe)",
                      "children": [
                        {
                          "type": "augmented_assignment",
                          "start": {
                            "row": 80,
                            "column": 8
                          },
                          "end": {
                            "row": 80,
                            "column": 43
                          },
                          "text": "cmd += 'stripe {0} '.format(stripe)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 80,
                                "column": 8
                              },
                              "end": {
                                "row": 80,
                                "column": 11
                              },
                              "text": "cmd"
                            },
                            {
                              "type": "+=",
                              "start": {
                                "row": 80,
                                "column": 12
                              },
                              "end": {
                                "row": 80,
                                "column": 14
                              },
                              "text": "+="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 80,
                                "column": 15
                              },
                              "end": {
                                "row": 80,
                                "column": 43
                              },
                              "text": "'stripe {0} '.format(stripe)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 80,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 80,
                                    "column": 35
                                  },
                                  "text": "'stripe {0} '.format",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 80,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 80,
                                        "column": 28
                                      },
                                      "text": "'stripe {0} '",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 80,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 80,
                                            "column": 16
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 80,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 80,
                                            "column": 27
                                          },
                                          "text": "stripe {0} "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 80,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 80,
                                            "column": 28
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 80,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 80,
                                        "column": 29
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 80,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 80,
                                        "column": 35
                                      },
                                      "text": "format"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 80,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 80,
                                    "column": 43
                                  },
                                  "text": "(stripe)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 80,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 80,
                                        "column": 36
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 80,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 80,
                                        "column": 42
                                      },
                                      "text": "stripe"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 80,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 80,
                                        "column": 43
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 81,
                "column": 4
              },
              "end": {
                "row": 82,
                "column": 45
              },
              "text": "if replica:\n        cmd += 'replica {0} '.format(replica)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 81,
                    "column": 4
                  },
                  "end": {
                    "row": 81,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 81,
                    "column": 7
                  },
                  "end": {
                    "row": 81,
                    "column": 14
                  },
                  "text": "replica"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 81,
                    "column": 14
                  },
                  "end": {
                    "row": 81,
                    "column": 15
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 82,
                    "column": 8
                  },
                  "end": {
                    "row": 82,
                    "column": 45
                  },
                  "text": "cmd += 'replica {0} '.format(replica)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 82,
                        "column": 8
                      },
                      "end": {
                        "row": 82,
                        "column": 45
                      },
                      "text": "cmd += 'replica {0} '.format(replica)",
                      "children": [
                        {
                          "type": "augmented_assignment",
                          "start": {
                            "row": 82,
                            "column": 8
                          },
                          "end": {
                            "row": 82,
                            "column": 45
                          },
                          "text": "cmd += 'replica {0} '.format(replica)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 82,
                                "column": 8
                              },
                              "end": {
                                "row": 82,
                                "column": 11
                              },
                              "text": "cmd"
                            },
                            {
                              "type": "+=",
                              "start": {
                                "row": 82,
                                "column": 12
                              },
                              "end": {
                                "row": 82,
                                "column": 14
                              },
                              "text": "+="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 82,
                                "column": 15
                              },
                              "end": {
                                "row": 82,
                                "column": 45
                              },
                              "text": "'replica {0} '.format(replica)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 82,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 82,
                                    "column": 36
                                  },
                                  "text": "'replica {0} '.format",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 82,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 82,
                                        "column": 29
                                      },
                                      "text": "'replica {0} '",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 82,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 82,
                                            "column": 16
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 82,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 82,
                                            "column": 28
                                          },
                                          "text": "replica {0} "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 82,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 82,
                                            "column": 29
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 82,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 82,
                                        "column": 30
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 82,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 82,
                                        "column": 36
                                      },
                                      "text": "format"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 82,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 82,
                                    "column": 45
                                  },
                                  "text": "(replica)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 82,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 82,
                                        "column": 37
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 82,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 82,
                                        "column": 44
                                      },
                                      "text": "replica"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 82,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 82,
                                        "column": 45
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 83,
                "column": 4
              },
              "end": {
                "row": 84,
                "column": 27
              },
              "text": "if arbiter:\n        cmd += 'arbiter 1 '",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 83,
                    "column": 4
                  },
                  "end": {
                    "row": 83,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 83,
                    "column": 7
                  },
                  "end": {
                    "row": 83,
                    "column": 14
                  },
                  "text": "arbiter"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 83,
                    "column": 14
                  },
                  "end": {
                    "row": 83,
                    "column": 15
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 84,
                    "column": 8
                  },
                  "end": {
                    "row": 84,
                    "column": 27
                  },
                  "text": "cmd += 'arbiter 1 '",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 84,
                        "column": 8
                      },
                      "end": {
                        "row": 84,
                        "column": 27
                      },
                      "text": "cmd += 'arbiter 1 '",
                      "children": [
                        {
                          "type": "augmented_assignment",
                          "start": {
                            "row": 84,
                            "column": 8
                          },
                          "end": {
                            "row": 84,
                            "column": 27
                          },
                          "text": "cmd += 'arbiter 1 '",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 84,
                                "column": 8
                              },
                              "end": {
                                "row": 84,
                                "column": 11
                              },
                              "text": "cmd"
                            },
                            {
                              "type": "+=",
                              "start": {
                                "row": 84,
                                "column": 12
                              },
                              "end": {
                                "row": 84,
                                "column": 14
                              },
                              "text": "+="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 84,
                                "column": 15
                              },
                              "end": {
                                "row": 84,
                                "column": 27
                              },
                              "text": "'arbiter 1 '",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 84,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 84,
                                    "column": 16
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 84,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 84,
                                    "column": 26
                                  },
                                  "text": "arbiter 1 "
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 84,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 84,
                                    "column": 27
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 85,
                "column": 4
              },
              "end": {
                "row": 86,
                "column": 27
              },
              "text": "if device_vg:\n        cmd += 'device vg '",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 85,
                    "column": 4
                  },
                  "end": {
                    "row": 85,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 85,
                    "column": 7
                  },
                  "end": {
                    "row": 85,
                    "column": 16
                  },
                  "text": "device_vg"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 85,
                    "column": 16
                  },
                  "end": {
                    "row": 85,
                    "column": 17
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 86,
                    "column": 8
                  },
                  "end": {
                    "row": 86,
                    "column": 27
                  },
                  "text": "cmd += 'device vg '",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 86,
                        "column": 8
                      },
                      "end": {
                        "row": 86,
                        "column": 27
                      },
                      "text": "cmd += 'device vg '",
                      "children": [
                        {
                          "type": "augmented_assignment",
                          "start": {
                            "row": 86,
                            "column": 8
                          },
                          "end": {
                            "row": 86,
                            "column": 27
                          },
                          "text": "cmd += 'device vg '",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 86,
                                "column": 8
                              },
                              "end": {
                                "row": 86,
                                "column": 11
                              },
                              "text": "cmd"
                            },
                            {
                              "type": "+=",
                              "start": {
                                "row": 86,
                                "column": 12
                              },
                              "end": {
                                "row": 86,
                                "column": 14
                              },
                              "text": "+="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 86,
                                "column": 15
                              },
                              "end": {
                                "row": 86,
                                "column": 27
                              },
                              "text": "'device vg '",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 86,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 16
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 86,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 26
                                  },
                                  "text": "device vg "
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 86,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 27
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 87,
                "column": 4
              },
              "end": {
                "row": 88,
                "column": 49
              },
              "text": "if transport != 'tcp':\n        cmd += 'transport {0} '.format(transport)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 87,
                    "column": 4
                  },
                  "end": {
                    "row": 87,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 87,
                    "column": 7
                  },
                  "end": {
                    "row": 87,
                    "column": 25
                  },
                  "text": "transport != 'tcp'",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 87,
                        "column": 7
                      },
                      "end": {
                        "row": 87,
                        "column": 16
                      },
                      "text": "transport"
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 87,
                        "column": 17
                      },
                      "end": {
                        "row": 87,
                        "column": 19
                      },
                      "text": "!="
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 87,
                        "column": 20
                      },
                      "end": {
                        "row": 87,
                        "column": 25
                      },
                      "text": "'tcp'",
                      "children": [
                        {
                          "type": "string_start",
                          "start": {
                            "row": 87,
                            "column": 20
                          },
                          "end": {
                            "row": 87,
                            "column": 21
                          },
                          "text": "'"
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 87,
                            "column": 21
                          },
                          "end": {
                            "row": 87,
                            "column": 24
                          },
                          "text": "tcp"
                        },
                        {
                          "type": "string_end",
                          "start": {
                            "row": 87,
                            "column": 24
                          },
                          "end": {
                            "row": 87,
                            "column": 25
                          },
                          "text": "'"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 87,
                    "column": 25
                  },
                  "end": {
                    "row": 87,
                    "column": 26
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 88,
                    "column": 8
                  },
                  "end": {
                    "row": 88,
                    "column": 49
                  },
                  "text": "cmd += 'transport {0} '.format(transport)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 88,
                        "column": 8
                      },
                      "end": {
                        "row": 88,
                        "column": 49
                      },
                      "text": "cmd += 'transport {0} '.format(transport)",
                      "children": [
                        {
                          "type": "augmented_assignment",
                          "start": {
                            "row": 88,
                            "column": 8
                          },
                          "end": {
                            "row": 88,
                            "column": 49
                          },
                          "text": "cmd += 'transport {0} '.format(transport)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 88,
                                "column": 8
                              },
                              "end": {
                                "row": 88,
                                "column": 11
                              },
                              "text": "cmd"
                            },
                            {
                              "type": "+=",
                              "start": {
                                "row": 88,
                                "column": 12
                              },
                              "end": {
                                "row": 88,
                                "column": 14
                              },
                              "text": "+="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 88,
                                "column": 15
                              },
                              "end": {
                                "row": 88,
                                "column": 49
                              },
                              "text": "'transport {0} '.format(transport)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 88,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 38
                                  },
                                  "text": "'transport {0} '.format",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 88,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 31
                                      },
                                      "text": "'transport {0} '",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 88,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 88,
                                            "column": 16
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 88,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 88,
                                            "column": 30
                                          },
                                          "text": "transport {0} "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 88,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 88,
                                            "column": 31
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 88,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 32
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 88,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 38
                                      },
                                      "text": "format"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 88,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 88,
                                    "column": 49
                                  },
                                  "text": "(transport)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 88,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 39
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 88,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 48
                                      },
                                      "text": "transport"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 88,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 49
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 89,
                "column": 4
              },
              "end": {
                "row": 89,
                "column": 27
              },
              "text": "cmd += ' '.join(bricks)",
              "children": [
                {
                  "type": "augmented_assignment",
                  "start": {
                    "row": 89,
                    "column": 4
                  },
                  "end": {
                    "row": 89,
                    "column": 27
                  },
                  "text": "cmd += ' '.join(bricks)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 89,
                        "column": 4
                      },
                      "end": {
                        "row": 89,
                        "column": 7
                      },
                      "text": "cmd"
                    },
                    {
                      "type": "+=",
                      "start": {
                        "row": 89,
                        "column": 8
                      },
                      "end": {
                        "row": 89,
                        "column": 10
                      },
                      "text": "+="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 89,
                        "column": 11
                      },
                      "end": {
                        "row": 89,
                        "column": 27
                      },
                      "text": "' '.join(bricks)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 89,
                            "column": 11
                          },
                          "end": {
                            "row": 89,
                            "column": 19
                          },
                          "text": "' '.join",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 89,
                                "column": 11
                              },
                              "end": {
                                "row": 89,
                                "column": 14
                              },
                              "text": "' '",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 89,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 89,
                                    "column": 12
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 89,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 89,
                                    "column": 13
                                  },
                                  "text": " "
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 89,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 89,
                                    "column": 14
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 89,
                                "column": 14
                              },
                              "end": {
                                "row": 89,
                                "column": 15
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 89,
                                "column": 15
                              },
                              "end": {
                                "row": 89,
                                "column": 19
                              },
                              "text": "join"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 89,
                            "column": 19
                          },
                          "end": {
                            "row": 89,
                            "column": 27
                          },
                          "text": "(bricks)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 89,
                                "column": 19
                              },
                              "end": {
                                "row": 89,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 89,
                                "column": 20
                              },
                              "end": {
                                "row": 89,
                                "column": 26
                              },
                              "text": "bricks"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 89,
                                "column": 26
                              },
                              "end": {
                                "row": 89,
                                "column": 27
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 90,
                "column": 4
              },
              "end": {
                "row": 91,
                "column": 23
              },
              "text": "if force:\n        cmd += ' force'",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 90,
                    "column": 4
                  },
                  "end": {
                    "row": 90,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 90,
                    "column": 7
                  },
                  "end": {
                    "row": 90,
                    "column": 12
                  },
                  "text": "force"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 90,
                    "column": 12
                  },
                  "end": {
                    "row": 90,
                    "column": 13
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 91,
                    "column": 8
                  },
                  "end": {
                    "row": 91,
                    "column": 23
                  },
                  "text": "cmd += ' force'",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 91,
                        "column": 8
                      },
                      "end": {
                        "row": 91,
                        "column": 23
                      },
                      "text": "cmd += ' force'",
                      "children": [
                        {
                          "type": "augmented_assignment",
                          "start": {
                            "row": 91,
                            "column": 8
                          },
                          "end": {
                            "row": 91,
                            "column": 23
                          },
                          "text": "cmd += ' force'",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 91,
                                "column": 8
                              },
                              "end": {
                                "row": 91,
                                "column": 11
                              },
                              "text": "cmd"
                            },
                            {
                              "type": "+=",
                              "start": {
                                "row": 91,
                                "column": 12
                              },
                              "end": {
                                "row": 91,
                                "column": 14
                              },
                              "text": "+="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 91,
                                "column": 15
                              },
                              "end": {
                                "row": 91,
                                "column": 23
                              },
                              "text": "' force'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 91,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 16
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 91,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 22
                                  },
                                  "text": " force"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 91,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 23
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 93,
                "column": 4
              },
              "end": {
                "row": 94,
                "column": 20
              },
              "text": "if not _gluster(cmd):\n        return False",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 93,
                    "column": 4
                  },
                  "end": {
                    "row": 93,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 93,
                    "column": 7
                  },
                  "end": {
                    "row": 93,
                    "column": 24
                  },
                  "text": "not _gluster(cmd)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 93,
                        "column": 7
                      },
                      "end": {
                        "row": 93,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 93,
                        "column": 11
                      },
                      "end": {
                        "row": 93,
                        "column": 24
                      },
                      "text": "_gluster(cmd)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 93,
                            "column": 11
                          },
                          "end": {
                            "row": 93,
                            "column": 19
                          },
                          "text": "_gluster"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 93,
                            "column": 19
                          },
                          "end": {
                            "row": 93,
                            "column": 24
                          },
                          "text": "(cmd)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 93,
                                "column": 19
                              },
                              "end": {
                                "row": 93,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 93,
                                "column": 20
                              },
                              "end": {
                                "row": 93,
                                "column": 23
                              },
                              "text": "cmd"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 93,
                                "column": 23
                              },
                              "end": {
                                "row": 93,
                                "column": 24
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 93,
                    "column": 24
                  },
                  "end": {
                    "row": 93,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 94,
                    "column": 8
                  },
                  "end": {
                    "row": 94,
                    "column": 20
                  },
                  "text": "return False",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 94,
                        "column": 8
                      },
                      "end": {
                        "row": 94,
                        "column": 20
                      },
                      "text": "return False",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 94,
                            "column": 8
                          },
                          "end": {
                            "row": 94,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "false",
                          "start": {
                            "row": 94,
                            "column": 15
                          },
                          "end": {
                            "row": 94,
                            "column": 20
                          },
                          "text": "False"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 96,
                "column": 4
              },
              "end": {
                "row": 97,
                "column": 33
              },
              "text": "if start:\n        return start_volume(name)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 96,
                    "column": 4
                  },
                  "end": {
                    "row": 96,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 96,
                    "column": 7
                  },
                  "end": {
                    "row": 96,
                    "column": 12
                  },
                  "text": "start"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 96,
                    "column": 12
                  },
                  "end": {
                    "row": 96,
                    "column": 13
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 97,
                    "column": 8
                  },
                  "end": {
                    "row": 97,
                    "column": 33
                  },
                  "text": "return start_volume(name)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 97,
                        "column": 8
                      },
                      "end": {
                        "row": 97,
                        "column": 33
                      },
                      "text": "return start_volume(name)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 97,
                            "column": 8
                          },
                          "end": {
                            "row": 97,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 97,
                            "column": 15
                          },
                          "end": {
                            "row": 97,
                            "column": 33
                          },
                          "text": "start_volume(name)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 97,
                                "column": 15
                              },
                              "end": {
                                "row": 97,
                                "column": 27
                              },
                              "text": "start_volume"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 97,
                                "column": 27
                              },
                              "end": {
                                "row": 97,
                                "column": 33
                              },
                              "text": "(name)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 97,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 97,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 97,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 97,
                                    "column": 32
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 97,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 97,
                                    "column": 33
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 98,
                "column": 4
              },
              "end": {
                "row": 98,
                "column": 15
              },
              "text": "return True",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 98,
                    "column": 4
                  },
                  "end": {
                    "row": 98,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "true",
                  "start": {
                    "row": 98,
                    "column": 11
                  },
                  "end": {
                    "row": 98,
                    "column": 15
                  },
                  "text": "True"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}