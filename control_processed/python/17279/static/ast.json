{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 27,
    "column": 21
  },
  "text": "def train(self, input, label):\n        \"\"\"\n        Submits an input batch to the model. Returns a MpsFloatArray\n        representing the batch loss. Calling asnumpy() on this value will wait\n        for the batch to finish and yield the loss as a numpy array.\n        \"\"\"\n\n        assert self._mode == MpsGraphMode.Train\n        assert input.shape == self._ishape\n        assert label.shape == self._oshape\n\n        input_array = MpsFloatArray(input)\n        label_array = MpsFloatArray(label)\n        result_handle = _ctypes.c_void_p()\n        status_code = self._LIB.TCMPSTrainGraph(\n            self.handle, input_array.handle, label_array.handle,\n            _ctypes.byref(result_handle))\n\n        assert status_code == 0, \"Error calling TCMPSTrainGraph\"\n        assert result_handle, \"TCMPSTrainGraph unexpectedly returned NULL pointer\"\n\n        result = MpsFloatArray(result_handle)\n\n        # Output from training should be a one-dimensional array of loss values,\n        # one per example in the batch.\n        assert result.shape() == (self._oshape[0],)\n\n        return result",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 27,
        "column": 21
      },
      "text": "def train(self, input, label):\n        \"\"\"\n        Submits an input batch to the model. Returns a MpsFloatArray\n        representing the batch loss. Calling asnumpy() on this value will wait\n        for the batch to finish and yield the loss as a numpy array.\n        \"\"\"\n\n        assert self._mode == MpsGraphMode.Train\n        assert input.shape == self._ishape\n        assert label.shape == self._oshape\n\n        input_array = MpsFloatArray(input)\n        label_array = MpsFloatArray(label)\n        result_handle = _ctypes.c_void_p()\n        status_code = self._LIB.TCMPSTrainGraph(\n            self.handle, input_array.handle, label_array.handle,\n            _ctypes.byref(result_handle))\n\n        assert status_code == 0, \"Error calling TCMPSTrainGraph\"\n        assert result_handle, \"TCMPSTrainGraph unexpectedly returned NULL pointer\"\n\n        result = MpsFloatArray(result_handle)\n\n        # Output from training should be a one-dimensional array of loss values,\n        # one per example in the batch.\n        assert result.shape() == (self._oshape[0],)\n\n        return result",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 9
          },
          "text": "train"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 29
          },
          "text": "(self, input, label)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 10
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "input"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "label"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 29
          },
          "end": {
            "row": 0,
            "column": 30
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 27,
            "column": 21
          },
          "text": "\"\"\"\n        Submits an input batch to the model. Returns a MpsFloatArray\n        representing the batch loss. Calling asnumpy() on this value will wait\n        for the batch to finish and yield the loss as a numpy array.\n        \"\"\"\n\n        assert self._mode == MpsGraphMode.Train\n        assert input.shape == self._ishape\n        assert label.shape == self._oshape\n\n        input_array = MpsFloatArray(input)\n        label_array = MpsFloatArray(label)\n        result_handle = _ctypes.c_void_p()\n        status_code = self._LIB.TCMPSTrainGraph(\n            self.handle, input_array.handle, label_array.handle,\n            _ctypes.byref(result_handle))\n\n        assert status_code == 0, \"Error calling TCMPSTrainGraph\"\n        assert result_handle, \"TCMPSTrainGraph unexpectedly returned NULL pointer\"\n\n        result = MpsFloatArray(result_handle)\n\n        # Output from training should be a one-dimensional array of loss values,\n        # one per example in the batch.\n        assert result.shape() == (self._oshape[0],)\n\n        return result",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 5,
                "column": 11
              },
              "text": "\"\"\"\n        Submits an input batch to the model. Returns a MpsFloatArray\n        representing the batch loss. Calling asnumpy() on this value will wait\n        for the batch to finish and yield the loss as a numpy array.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 5,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Submits an input batch to the model. Returns a MpsFloatArray\n        representing the batch loss. Calling asnumpy() on this value will wait\n        for the batch to finish and yield the loss as a numpy array.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 5,
                        "column": 8
                      },
                      "text": "\n        Submits an input batch to the model. Returns a MpsFloatArray\n        representing the batch loss. Calling asnumpy() on this value will wait\n        for the batch to finish and yield the loss as a numpy array.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 5,
                        "column": 8
                      },
                      "end": {
                        "row": 5,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 7,
                "column": 8
              },
              "end": {
                "row": 7,
                "column": 47
              },
              "text": "assert self._mode == MpsGraphMode.Train",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 14
                  },
                  "text": "assert"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 7,
                    "column": 15
                  },
                  "end": {
                    "row": 7,
                    "column": 47
                  },
                  "text": "self._mode == MpsGraphMode.Train",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 7,
                        "column": 15
                      },
                      "end": {
                        "row": 7,
                        "column": 25
                      },
                      "text": "self._mode",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 15
                          },
                          "end": {
                            "row": 7,
                            "column": 19
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 7,
                            "column": 19
                          },
                          "end": {
                            "row": 7,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 20
                          },
                          "end": {
                            "row": 7,
                            "column": 25
                          },
                          "text": "_mode"
                        }
                      ]
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 7,
                        "column": 26
                      },
                      "end": {
                        "row": 7,
                        "column": 28
                      },
                      "text": "=="
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 7,
                        "column": 29
                      },
                      "end": {
                        "row": 7,
                        "column": 47
                      },
                      "text": "MpsGraphMode.Train",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 29
                          },
                          "end": {
                            "row": 7,
                            "column": 41
                          },
                          "text": "MpsGraphMode"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 7,
                            "column": 41
                          },
                          "end": {
                            "row": 7,
                            "column": 42
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 42
                          },
                          "end": {
                            "row": 7,
                            "column": 47
                          },
                          "text": "Train"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 8,
                "column": 8
              },
              "end": {
                "row": 8,
                "column": 42
              },
              "text": "assert input.shape == self._ishape",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 8,
                    "column": 8
                  },
                  "end": {
                    "row": 8,
                    "column": 14
                  },
                  "text": "assert"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 8,
                    "column": 15
                  },
                  "end": {
                    "row": 8,
                    "column": 42
                  },
                  "text": "input.shape == self._ishape",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 8,
                        "column": 15
                      },
                      "end": {
                        "row": 8,
                        "column": 26
                      },
                      "text": "input.shape",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 15
                          },
                          "end": {
                            "row": 8,
                            "column": 20
                          },
                          "text": "input"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 8,
                            "column": 20
                          },
                          "end": {
                            "row": 8,
                            "column": 21
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 21
                          },
                          "end": {
                            "row": 8,
                            "column": 26
                          },
                          "text": "shape"
                        }
                      ]
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 8,
                        "column": 27
                      },
                      "end": {
                        "row": 8,
                        "column": 29
                      },
                      "text": "=="
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 8,
                        "column": 30
                      },
                      "end": {
                        "row": 8,
                        "column": 42
                      },
                      "text": "self._ishape",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 30
                          },
                          "end": {
                            "row": 8,
                            "column": 34
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 8,
                            "column": 34
                          },
                          "end": {
                            "row": 8,
                            "column": 35
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 8,
                            "column": 35
                          },
                          "end": {
                            "row": 8,
                            "column": 42
                          },
                          "text": "_ishape"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 9,
                "column": 42
              },
              "text": "assert label.shape == self._oshape",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 14
                  },
                  "text": "assert"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 9,
                    "column": 15
                  },
                  "end": {
                    "row": 9,
                    "column": 42
                  },
                  "text": "label.shape == self._oshape",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 9,
                        "column": 15
                      },
                      "end": {
                        "row": 9,
                        "column": 26
                      },
                      "text": "label.shape",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 15
                          },
                          "end": {
                            "row": 9,
                            "column": 20
                          },
                          "text": "label"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 9,
                            "column": 20
                          },
                          "end": {
                            "row": 9,
                            "column": 21
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 21
                          },
                          "end": {
                            "row": 9,
                            "column": 26
                          },
                          "text": "shape"
                        }
                      ]
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 9,
                        "column": 27
                      },
                      "end": {
                        "row": 9,
                        "column": 29
                      },
                      "text": "=="
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 9,
                        "column": 30
                      },
                      "end": {
                        "row": 9,
                        "column": 42
                      },
                      "text": "self._oshape",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 30
                          },
                          "end": {
                            "row": 9,
                            "column": 34
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 9,
                            "column": 34
                          },
                          "end": {
                            "row": 9,
                            "column": 35
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 9,
                            "column": 35
                          },
                          "end": {
                            "row": 9,
                            "column": 42
                          },
                          "text": "_oshape"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 11,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 42
              },
              "text": "input_array = MpsFloatArray(input)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 11,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 42
                  },
                  "text": "input_array = MpsFloatArray(input)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 19
                      },
                      "text": "input_array"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 11,
                        "column": 20
                      },
                      "end": {
                        "row": 11,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 11,
                        "column": 22
                      },
                      "end": {
                        "row": 11,
                        "column": 42
                      },
                      "text": "MpsFloatArray(input)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 22
                          },
                          "end": {
                            "row": 11,
                            "column": 35
                          },
                          "text": "MpsFloatArray"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 11,
                            "column": 35
                          },
                          "end": {
                            "row": 11,
                            "column": 42
                          },
                          "text": "(input)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 11,
                                "column": 35
                              },
                              "end": {
                                "row": 11,
                                "column": 36
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 36
                              },
                              "end": {
                                "row": 11,
                                "column": 41
                              },
                              "text": "input"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 11,
                                "column": 41
                              },
                              "end": {
                                "row": 11,
                                "column": 42
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 42
              },
              "text": "label_array = MpsFloatArray(label)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 12,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 42
                  },
                  "text": "label_array = MpsFloatArray(label)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 19
                      },
                      "text": "label_array"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 20
                      },
                      "end": {
                        "row": 12,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 12,
                        "column": 22
                      },
                      "end": {
                        "row": 12,
                        "column": 42
                      },
                      "text": "MpsFloatArray(label)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 22
                          },
                          "end": {
                            "row": 12,
                            "column": 35
                          },
                          "text": "MpsFloatArray"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 35
                          },
                          "end": {
                            "row": 12,
                            "column": 42
                          },
                          "text": "(label)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 35
                              },
                              "end": {
                                "row": 12,
                                "column": 36
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 36
                              },
                              "end": {
                                "row": 12,
                                "column": 41
                              },
                              "text": "label"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 41
                              },
                              "end": {
                                "row": 12,
                                "column": 42
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 42
              },
              "text": "result_handle = _ctypes.c_void_p()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 42
                  },
                  "text": "result_handle = _ctypes.c_void_p()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 21
                      },
                      "text": "result_handle"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 22
                      },
                      "end": {
                        "row": 13,
                        "column": 23
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 13,
                        "column": 24
                      },
                      "end": {
                        "row": 13,
                        "column": 42
                      },
                      "text": "_ctypes.c_void_p()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 13,
                            "column": 24
                          },
                          "end": {
                            "row": 13,
                            "column": 40
                          },
                          "text": "_ctypes.c_void_p",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 24
                              },
                              "end": {
                                "row": 13,
                                "column": 31
                              },
                              "text": "_ctypes"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 13,
                                "column": 31
                              },
                              "end": {
                                "row": 13,
                                "column": 32
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 32
                              },
                              "end": {
                                "row": 13,
                                "column": 40
                              },
                              "text": "c_void_p"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 40
                          },
                          "end": {
                            "row": 13,
                            "column": 42
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 40
                              },
                              "end": {
                                "row": 13,
                                "column": 41
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 41
                              },
                              "end": {
                                "row": 13,
                                "column": 42
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 41
              },
              "text": "status_code = self._LIB.TCMPSTrainGraph(\n            self.handle, input_array.handle, label_array.handle,\n            _ctypes.byref(result_handle))",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 14,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 41
                  },
                  "text": "status_code = self._LIB.TCMPSTrainGraph(\n            self.handle, input_array.handle, label_array.handle,\n            _ctypes.byref(result_handle))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 19
                      },
                      "text": "status_code"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 14,
                        "column": 20
                      },
                      "end": {
                        "row": 14,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 14,
                        "column": 22
                      },
                      "end": {
                        "row": 16,
                        "column": 41
                      },
                      "text": "self._LIB.TCMPSTrainGraph(\n            self.handle, input_array.handle, label_array.handle,\n            _ctypes.byref(result_handle))",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 14,
                            "column": 22
                          },
                          "end": {
                            "row": 14,
                            "column": 47
                          },
                          "text": "self._LIB.TCMPSTrainGraph",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 14,
                                "column": 22
                              },
                              "end": {
                                "row": 14,
                                "column": 31
                              },
                              "text": "self._LIB",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 26
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 14,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 27
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 31
                                  },
                                  "text": "_LIB"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 14,
                                "column": 31
                              },
                              "end": {
                                "row": 14,
                                "column": 32
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 32
                              },
                              "end": {
                                "row": 14,
                                "column": 47
                              },
                              "text": "TCMPSTrainGraph"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 14,
                            "column": 47
                          },
                          "end": {
                            "row": 16,
                            "column": 41
                          },
                          "text": "(\n            self.handle, input_array.handle, label_array.handle,\n            _ctypes.byref(result_handle))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 14,
                                "column": 47
                              },
                              "end": {
                                "row": 14,
                                "column": 48
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 23
                              },
                              "text": "self.handle",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 16
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 15,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 23
                                  },
                                  "text": "handle"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 15,
                                "column": 23
                              },
                              "end": {
                                "row": 15,
                                "column": 24
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 15,
                                "column": 25
                              },
                              "end": {
                                "row": 15,
                                "column": 43
                              },
                              "text": "input_array.handle",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 36
                                  },
                                  "text": "input_array"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 15,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 37
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 43
                                  },
                                  "text": "handle"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 15,
                                "column": 43
                              },
                              "end": {
                                "row": 15,
                                "column": 44
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 15,
                                "column": 45
                              },
                              "end": {
                                "row": 15,
                                "column": 63
                              },
                              "text": "label_array.handle",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 56
                                  },
                                  "text": "label_array"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 15,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 57
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 63
                                  },
                                  "text": "handle"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 15,
                                "column": 63
                              },
                              "end": {
                                "row": 15,
                                "column": 64
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 40
                              },
                              "text": "_ctypes.byref(result_handle)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 16,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 25
                                  },
                                  "text": "_ctypes.byref",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 19
                                      },
                                      "text": "_ctypes"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 16,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 20
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 25
                                      },
                                      "text": "byref"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 16,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 40
                                  },
                                  "text": "(result_handle)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 16,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 26
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 39
                                      },
                                      "text": "result_handle"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 16,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 40
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 40
                              },
                              "end": {
                                "row": 16,
                                "column": 41
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 64
              },
              "text": "assert status_code == 0, \"Error calling TCMPSTrainGraph\"",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 14
                  },
                  "text": "assert"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 18,
                    "column": 15
                  },
                  "end": {
                    "row": 18,
                    "column": 31
                  },
                  "text": "status_code == 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 15
                      },
                      "end": {
                        "row": 18,
                        "column": 26
                      },
                      "text": "status_code"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 18,
                        "column": 27
                      },
                      "end": {
                        "row": 18,
                        "column": 29
                      },
                      "text": "=="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 18,
                        "column": 30
                      },
                      "end": {
                        "row": 18,
                        "column": 31
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ",",
                  "start": {
                    "row": 18,
                    "column": 31
                  },
                  "end": {
                    "row": 18,
                    "column": 32
                  },
                  "text": ","
                },
                {
                  "type": "string",
                  "start": {
                    "row": 18,
                    "column": 33
                  },
                  "end": {
                    "row": 18,
                    "column": 64
                  },
                  "text": "\"Error calling TCMPSTrainGraph\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 18,
                        "column": 33
                      },
                      "end": {
                        "row": 18,
                        "column": 34
                      },
                      "text": "\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 18,
                        "column": 34
                      },
                      "end": {
                        "row": 18,
                        "column": 63
                      },
                      "text": "Error calling TCMPSTrainGraph"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 18,
                        "column": 63
                      },
                      "end": {
                        "row": 18,
                        "column": 64
                      },
                      "text": "\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 82
              },
              "text": "assert result_handle, \"TCMPSTrainGraph unexpectedly returned NULL pointer\"",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 14
                  },
                  "text": "assert"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 19,
                    "column": 15
                  },
                  "end": {
                    "row": 19,
                    "column": 28
                  },
                  "text": "result_handle"
                },
                {
                  "type": ",",
                  "start": {
                    "row": 19,
                    "column": 28
                  },
                  "end": {
                    "row": 19,
                    "column": 29
                  },
                  "text": ","
                },
                {
                  "type": "string",
                  "start": {
                    "row": 19,
                    "column": 30
                  },
                  "end": {
                    "row": 19,
                    "column": 82
                  },
                  "text": "\"TCMPSTrainGraph unexpectedly returned NULL pointer\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 19,
                        "column": 30
                      },
                      "end": {
                        "row": 19,
                        "column": 31
                      },
                      "text": "\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 19,
                        "column": 31
                      },
                      "end": {
                        "row": 19,
                        "column": 81
                      },
                      "text": "TCMPSTrainGraph unexpectedly returned NULL pointer"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 19,
                        "column": 81
                      },
                      "end": {
                        "row": 19,
                        "column": 82
                      },
                      "text": "\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 21,
                "column": 45
              },
              "text": "result = MpsFloatArray(result_handle)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 45
                  },
                  "text": "result = MpsFloatArray(result_handle)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 14
                      },
                      "text": "result"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 21,
                        "column": 15
                      },
                      "end": {
                        "row": 21,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 21,
                        "column": 17
                      },
                      "end": {
                        "row": 21,
                        "column": 45
                      },
                      "text": "MpsFloatArray(result_handle)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 17
                          },
                          "end": {
                            "row": 21,
                            "column": 30
                          },
                          "text": "MpsFloatArray"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 21,
                            "column": 30
                          },
                          "end": {
                            "row": 21,
                            "column": 45
                          },
                          "text": "(result_handle)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 21,
                                "column": 30
                              },
                              "end": {
                                "row": 21,
                                "column": 31
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 31
                              },
                              "end": {
                                "row": 21,
                                "column": 44
                              },
                              "text": "result_handle"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 21,
                                "column": 44
                              },
                              "end": {
                                "row": 21,
                                "column": 45
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 23,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 80
              },
              "text": "# Output from training should be a one-dimensional array of loss values,"
            },
            {
              "type": "comment",
              "start": {
                "row": 24,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 39
              },
              "text": "# one per example in the batch."
            },
            {
              "type": "assert_statement",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 51
              },
              "text": "assert result.shape() == (self._oshape[0],)",
              "children": [
                {
                  "type": "assert",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 14
                  },
                  "text": "assert"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 25,
                    "column": 15
                  },
                  "end": {
                    "row": 25,
                    "column": 51
                  },
                  "text": "result.shape() == (self._oshape[0],)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 25,
                        "column": 15
                      },
                      "end": {
                        "row": 25,
                        "column": 29
                      },
                      "text": "result.shape()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 25,
                            "column": 15
                          },
                          "end": {
                            "row": 25,
                            "column": 27
                          },
                          "text": "result.shape",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 15
                              },
                              "end": {
                                "row": 25,
                                "column": 21
                              },
                              "text": "result"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 25,
                                "column": 21
                              },
                              "end": {
                                "row": 25,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 22
                              },
                              "end": {
                                "row": 25,
                                "column": 27
                              },
                              "text": "shape"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 25,
                            "column": 27
                          },
                          "end": {
                            "row": 25,
                            "column": 29
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 25,
                                "column": 27
                              },
                              "end": {
                                "row": 25,
                                "column": 28
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 25,
                                "column": 28
                              },
                              "end": {
                                "row": 25,
                                "column": 29
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 25,
                        "column": 30
                      },
                      "end": {
                        "row": 25,
                        "column": 32
                      },
                      "text": "=="
                    },
                    {
                      "type": "tuple",
                      "start": {
                        "row": 25,
                        "column": 33
                      },
                      "end": {
                        "row": 25,
                        "column": 51
                      },
                      "text": "(self._oshape[0],)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 25,
                            "column": 33
                          },
                          "end": {
                            "row": 25,
                            "column": 34
                          },
                          "text": "("
                        },
                        {
                          "type": "subscript",
                          "start": {
                            "row": 25,
                            "column": 34
                          },
                          "end": {
                            "row": 25,
                            "column": 49
                          },
                          "text": "self._oshape[0]",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 25,
                                "column": 34
                              },
                              "end": {
                                "row": 25,
                                "column": 46
                              },
                              "text": "self._oshape",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 38
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 25,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 39
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 46
                                  },
                                  "text": "_oshape"
                                }
                              ]
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 25,
                                "column": 46
                              },
                              "end": {
                                "row": 25,
                                "column": 47
                              },
                              "text": "["
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 25,
                                "column": 47
                              },
                              "end": {
                                "row": 25,
                                "column": 48
                              },
                              "text": "0"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 25,
                                "column": 48
                              },
                              "end": {
                                "row": 25,
                                "column": 49
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 25,
                            "column": 49
                          },
                          "end": {
                            "row": 25,
                            "column": 50
                          },
                          "text": ","
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 25,
                            "column": 50
                          },
                          "end": {
                            "row": 25,
                            "column": 51
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 27,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 21
              },
              "text": "return result",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 27,
                    "column": 15
                  },
                  "end": {
                    "row": 27,
                    "column": 21
                  },
                  "text": "result"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}