{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 15,
    "column": 16
  },
  "text": "def looks_like_python(name):\n    # type: (str) -> bool\n    \"\"\"\n    Determine whether the supplied filename looks like a possible name of python.\n\n    :param str name: The name of the provided file.\n    :return: Whether the provided name looks like python.\n    :rtype: bool\n    \"\"\"\n\n    if not any(name.lower().startswith(py_name) for py_name in PYTHON_IMPLEMENTATIONS):\n        return False\n    match = RE_MATCHER.match(name)\n    if match:\n        return any(fnmatch(name, rule) for rule in MATCH_RULES)\n    return False",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 15,
        "column": 16
      },
      "text": "def looks_like_python(name):\n    # type: (str) -> bool\n    \"\"\"\n    Determine whether the supplied filename looks like a possible name of python.\n\n    :param str name: The name of the provided file.\n    :return: Whether the provided name looks like python.\n    :rtype: bool\n    \"\"\"\n\n    if not any(name.lower().startswith(py_name) for py_name in PYTHON_IMPLEMENTATIONS):\n        return False\n    match = RE_MATCHER.match(name)\n    if match:\n        return any(fnmatch(name, rule) for rule in MATCH_RULES)\n    return False",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "looks_like_python"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 27
          },
          "text": "(name)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "name"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 27
          },
          "end": {
            "row": 0,
            "column": 28
          },
          "text": ":"
        },
        {
          "type": "comment",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 1,
            "column": 25
          },
          "text": "# type: (str) -> bool"
        },
        {
          "type": "block",
          "start": {
            "row": 2,
            "column": 4
          },
          "end": {
            "row": 15,
            "column": 16
          },
          "text": "\"\"\"\n    Determine whether the supplied filename looks like a possible name of python.\n\n    :param str name: The name of the provided file.\n    :return: Whether the provided name looks like python.\n    :rtype: bool\n    \"\"\"\n\n    if not any(name.lower().startswith(py_name) for py_name in PYTHON_IMPLEMENTATIONS):\n        return False\n    match = RE_MATCHER.match(name)\n    if match:\n        return any(fnmatch(name, rule) for rule in MATCH_RULES)\n    return False",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 4
              },
              "end": {
                "row": 8,
                "column": 7
              },
              "text": "\"\"\"\n    Determine whether the supplied filename looks like a possible name of python.\n\n    :param str name: The name of the provided file.\n    :return: Whether the provided name looks like python.\n    :rtype: bool\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 4
                  },
                  "end": {
                    "row": 8,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Determine whether the supplied filename looks like a possible name of python.\n\n    :param str name: The name of the provided file.\n    :return: Whether the provided name looks like python.\n    :rtype: bool\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 4
                      },
                      "end": {
                        "row": 2,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 2,
                        "column": 7
                      },
                      "end": {
                        "row": 8,
                        "column": 4
                      },
                      "text": "\n    Determine whether the supplied filename looks like a possible name of python.\n\n    :param str name: The name of the provided file.\n    :return: Whether the provided name looks like python.\n    :rtype: bool\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 8,
                        "column": 4
                      },
                      "end": {
                        "row": 8,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 10,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 20
              },
              "text": "if not any(name.lower().startswith(py_name) for py_name in PYTHON_IMPLEMENTATIONS):\n        return False",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 10,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 10,
                    "column": 7
                  },
                  "end": {
                    "row": 10,
                    "column": 86
                  },
                  "text": "not any(name.lower().startswith(py_name) for py_name in PYTHON_IMPLEMENTATIONS)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 10,
                        "column": 7
                      },
                      "end": {
                        "row": 10,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 10,
                        "column": 11
                      },
                      "end": {
                        "row": 10,
                        "column": 86
                      },
                      "text": "any(name.lower().startswith(py_name) for py_name in PYTHON_IMPLEMENTATIONS)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 11
                          },
                          "end": {
                            "row": 10,
                            "column": 14
                          },
                          "text": "any"
                        },
                        {
                          "type": "generator_expression",
                          "start": {
                            "row": 10,
                            "column": 14
                          },
                          "end": {
                            "row": 10,
                            "column": 86
                          },
                          "text": "(name.lower().startswith(py_name) for py_name in PYTHON_IMPLEMENTATIONS)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 10,
                                "column": 14
                              },
                              "end": {
                                "row": 10,
                                "column": 15
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 10,
                                "column": 15
                              },
                              "end": {
                                "row": 10,
                                "column": 47
                              },
                              "text": "name.lower().startswith(py_name)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 10,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 38
                                  },
                                  "text": "name.lower().startswith",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 10,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 27
                                      },
                                      "text": "name.lower()",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 10,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 25
                                          },
                                          "text": "name.lower",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 10,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 19
                                              },
                                              "text": "name"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 10,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 20
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 10,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 25
                                              },
                                              "text": "lower"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 10,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 27
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 10,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 26
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 10,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 27
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 10,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 28
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 38
                                      },
                                      "text": "startswith"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 10,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 47
                                  },
                                  "text": "(py_name)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 10,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 39
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 46
                                      },
                                      "text": "py_name"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 10,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "for_in_clause",
                              "start": {
                                "row": 10,
                                "column": 48
                              },
                              "end": {
                                "row": 10,
                                "column": 85
                              },
                              "text": "for py_name in PYTHON_IMPLEMENTATIONS",
                              "children": [
                                {
                                  "type": "for",
                                  "start": {
                                    "row": 10,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 51
                                  },
                                  "text": "for"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 59
                                  },
                                  "text": "py_name"
                                },
                                {
                                  "type": "in",
                                  "start": {
                                    "row": 10,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 62
                                  },
                                  "text": "in"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 10,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 85
                                  },
                                  "text": "PYTHON_IMPLEMENTATIONS"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 10,
                                "column": 85
                              },
                              "end": {
                                "row": 10,
                                "column": 86
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 10,
                    "column": 86
                  },
                  "end": {
                    "row": 10,
                    "column": 87
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 11,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 20
                  },
                  "text": "return False",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 20
                      },
                      "text": "return False",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 11,
                            "column": 8
                          },
                          "end": {
                            "row": 11,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "false",
                          "start": {
                            "row": 11,
                            "column": 15
                          },
                          "end": {
                            "row": 11,
                            "column": 20
                          },
                          "text": "False"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 4
              },
              "end": {
                "row": 12,
                "column": 34
              },
              "text": "match = RE_MATCHER.match(name)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 12,
                    "column": 4
                  },
                  "end": {
                    "row": 12,
                    "column": 34
                  },
                  "text": "match = RE_MATCHER.match(name)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 4
                      },
                      "end": {
                        "row": 12,
                        "column": 9
                      },
                      "text": "match"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 10
                      },
                      "end": {
                        "row": 12,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 12,
                        "column": 12
                      },
                      "end": {
                        "row": 12,
                        "column": 34
                      },
                      "text": "RE_MATCHER.match(name)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 12,
                            "column": 12
                          },
                          "end": {
                            "row": 12,
                            "column": 28
                          },
                          "text": "RE_MATCHER.match",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 12
                              },
                              "end": {
                                "row": 12,
                                "column": 22
                              },
                              "text": "RE_MATCHER"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 12,
                                "column": 22
                              },
                              "end": {
                                "row": 12,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 23
                              },
                              "end": {
                                "row": 12,
                                "column": 28
                              },
                              "text": "match"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 28
                          },
                          "end": {
                            "row": 12,
                            "column": 34
                          },
                          "text": "(name)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 28
                              },
                              "end": {
                                "row": 12,
                                "column": 29
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 29
                              },
                              "end": {
                                "row": 12,
                                "column": 33
                              },
                              "text": "name"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 33
                              },
                              "end": {
                                "row": 12,
                                "column": 34
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 63
              },
              "text": "if match:\n        return any(fnmatch(name, rule) for rule in MATCH_RULES)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 13,
                    "column": 4
                  },
                  "end": {
                    "row": 13,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 13,
                    "column": 7
                  },
                  "end": {
                    "row": 13,
                    "column": 12
                  },
                  "text": "match"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 13,
                    "column": 12
                  },
                  "end": {
                    "row": 13,
                    "column": 13
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 14,
                    "column": 8
                  },
                  "end": {
                    "row": 14,
                    "column": 63
                  },
                  "text": "return any(fnmatch(name, rule) for rule in MATCH_RULES)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 63
                      },
                      "text": "return any(fnmatch(name, rule) for rule in MATCH_RULES)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 14,
                            "column": 8
                          },
                          "end": {
                            "row": 14,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 14,
                            "column": 15
                          },
                          "end": {
                            "row": 14,
                            "column": 63
                          },
                          "text": "any(fnmatch(name, rule) for rule in MATCH_RULES)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 15
                              },
                              "end": {
                                "row": 14,
                                "column": 18
                              },
                              "text": "any"
                            },
                            {
                              "type": "generator_expression",
                              "start": {
                                "row": 14,
                                "column": 18
                              },
                              "end": {
                                "row": 14,
                                "column": 63
                              },
                              "text": "(fnmatch(name, rule) for rule in MATCH_RULES)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 14,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 19
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 14,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 38
                                  },
                                  "text": "fnmatch(name, rule)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 26
                                      },
                                      "text": "fnmatch"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 14,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 38
                                      },
                                      "text": "(name, rule)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 14,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 27
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 31
                                          },
                                          "text": "name"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 14,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 32
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 37
                                          },
                                          "text": "rule"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 14,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 38
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "for_in_clause",
                                  "start": {
                                    "row": 14,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 62
                                  },
                                  "text": "for rule in MATCH_RULES",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start": {
                                        "row": 14,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 42
                                      },
                                      "text": "for"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 47
                                      },
                                      "text": "rule"
                                    },
                                    {
                                      "type": "in",
                                      "start": {
                                        "row": 14,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 50
                                      },
                                      "text": "in"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 62
                                      },
                                      "text": "MATCH_RULES"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 14,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 63
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 16
              },
              "text": "return False",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 15,
                    "column": 4
                  },
                  "end": {
                    "row": 15,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "false",
                  "start": {
                    "row": 15,
                    "column": 11
                  },
                  "end": {
                    "row": 15,
                    "column": 16
                  },
                  "text": "False"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}