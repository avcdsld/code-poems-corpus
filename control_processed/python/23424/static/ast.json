{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 40,
    "column": 16
  },
  "text": "def find_objects(config=None, config_path=None, regex=None, saltenv='base'):\n    '''\n    Return all the line objects that match the expression in the ``regex``\n    argument.\n\n    .. warning::\n        This function is mostly valuable when invoked from other Salt\n        components (i.e., execution modules, states, templates etc.). For CLI\n        usage, please consider using\n        :py:func:`ciscoconfparse.find_lines <salt.ciscoconfparse_mod.find_lines>`\n\n    config\n        The configuration sent as text.\n\n        .. note::\n            This argument is ignored when ``config_path`` is specified.\n\n    config_path\n        The absolute or remote path to the file with the configuration to be\n        parsed. This argument supports the usual Salt filesystem URIs, e.g.,\n        ``salt://``, ``https://``, ``ftp://``, ``s3://``, etc.\n\n    regex\n        The regular expression to match the lines against.\n\n    saltenv: ``base``\n        Salt fileserver environment from which to retrieve the file. This\n        argument is ignored when ``config_path`` is not a ``salt://`` URL.\n\n    Usage example:\n\n    .. code-block:: python\n\n        objects = __salt__['ciscoconfparse.find_objects'](config_path='salt://path/to/config.txt',\n                                                          regex='Gigabit')\n        for obj in objects:\n            print(obj.text)\n    '''\n    ccp = _get_ccp(config=config, config_path=config_path, saltenv=saltenv)\n    lines = ccp.find_objects(regex)\n    return lines",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 40,
        "column": 16
      },
      "text": "def find_objects(config=None, config_path=None, regex=None, saltenv='base'):\n    '''\n    Return all the line objects that match the expression in the ``regex``\n    argument.\n\n    .. warning::\n        This function is mostly valuable when invoked from other Salt\n        components (i.e., execution modules, states, templates etc.). For CLI\n        usage, please consider using\n        :py:func:`ciscoconfparse.find_lines <salt.ciscoconfparse_mod.find_lines>`\n\n    config\n        The configuration sent as text.\n\n        .. note::\n            This argument is ignored when ``config_path`` is specified.\n\n    config_path\n        The absolute or remote path to the file with the configuration to be\n        parsed. This argument supports the usual Salt filesystem URIs, e.g.,\n        ``salt://``, ``https://``, ``ftp://``, ``s3://``, etc.\n\n    regex\n        The regular expression to match the lines against.\n\n    saltenv: ``base``\n        Salt fileserver environment from which to retrieve the file. This\n        argument is ignored when ``config_path`` is not a ``salt://`` URL.\n\n    Usage example:\n\n    .. code-block:: python\n\n        objects = __salt__['ciscoconfparse.find_objects'](config_path='salt://path/to/config.txt',\n                                                          regex='Gigabit')\n        for obj in objects:\n            print(obj.text)\n    '''\n    ccp = _get_ccp(config=config, config_path=config_path, saltenv=saltenv)\n    lines = ccp.find_objects(regex)\n    return lines",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 16
          },
          "text": "find_objects"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 16
          },
          "end": {
            "row": 0,
            "column": 75
          },
          "text": "(config=None, config_path=None, regex=None, saltenv='base')",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "("
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "config=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 17
                  },
                  "end": {
                    "row": 0,
                    "column": 23
                  },
                  "text": "config"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 23
                  },
                  "end": {
                    "row": 0,
                    "column": 24
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 24
                  },
                  "end": {
                    "row": 0,
                    "column": 28
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": "config_path=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 41
                  },
                  "text": "config_path"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 41
                  },
                  "end": {
                    "row": 0,
                    "column": 42
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 42
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 48
              },
              "end": {
                "row": 0,
                "column": 58
              },
              "text": "regex=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 48
                  },
                  "end": {
                    "row": 0,
                    "column": 53
                  },
                  "text": "regex"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 53
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 54
                  },
                  "end": {
                    "row": 0,
                    "column": 58
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 58
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 60
              },
              "end": {
                "row": 0,
                "column": 74
              },
              "text": "saltenv='base'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 60
                  },
                  "end": {
                    "row": 0,
                    "column": 67
                  },
                  "text": "saltenv"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 67
                  },
                  "end": {
                    "row": 0,
                    "column": 68
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 0,
                    "column": 68
                  },
                  "end": {
                    "row": 0,
                    "column": 74
                  },
                  "text": "'base'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 0,
                        "column": 68
                      },
                      "end": {
                        "row": 0,
                        "column": 69
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 0,
                        "column": 69
                      },
                      "end": {
                        "row": 0,
                        "column": 73
                      },
                      "text": "base"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 0,
                        "column": 73
                      },
                      "end": {
                        "row": 0,
                        "column": 74
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 74
              },
              "end": {
                "row": 0,
                "column": 75
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 75
          },
          "end": {
            "row": 0,
            "column": 76
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 40,
            "column": 16
          },
          "text": "'''\n    Return all the line objects that match the expression in the ``regex``\n    argument.\n\n    .. warning::\n        This function is mostly valuable when invoked from other Salt\n        components (i.e., execution modules, states, templates etc.). For CLI\n        usage, please consider using\n        :py:func:`ciscoconfparse.find_lines <salt.ciscoconfparse_mod.find_lines>`\n\n    config\n        The configuration sent as text.\n\n        .. note::\n            This argument is ignored when ``config_path`` is specified.\n\n    config_path\n        The absolute or remote path to the file with the configuration to be\n        parsed. This argument supports the usual Salt filesystem URIs, e.g.,\n        ``salt://``, ``https://``, ``ftp://``, ``s3://``, etc.\n\n    regex\n        The regular expression to match the lines against.\n\n    saltenv: ``base``\n        Salt fileserver environment from which to retrieve the file. This\n        argument is ignored when ``config_path`` is not a ``salt://`` URL.\n\n    Usage example:\n\n    .. code-block:: python\n\n        objects = __salt__['ciscoconfparse.find_objects'](config_path='salt://path/to/config.txt',\n                                                          regex='Gigabit')\n        for obj in objects:\n            print(obj.text)\n    '''\n    ccp = _get_ccp(config=config, config_path=config_path, saltenv=saltenv)\n    lines = ccp.find_objects(regex)\n    return lines",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 37,
                "column": 7
              },
              "text": "'''\n    Return all the line objects that match the expression in the ``regex``\n    argument.\n\n    .. warning::\n        This function is mostly valuable when invoked from other Salt\n        components (i.e., execution modules, states, templates etc.). For CLI\n        usage, please consider using\n        :py:func:`ciscoconfparse.find_lines <salt.ciscoconfparse_mod.find_lines>`\n\n    config\n        The configuration sent as text.\n\n        .. note::\n            This argument is ignored when ``config_path`` is specified.\n\n    config_path\n        The absolute or remote path to the file with the configuration to be\n        parsed. This argument supports the usual Salt filesystem URIs, e.g.,\n        ``salt://``, ``https://``, ``ftp://``, ``s3://``, etc.\n\n    regex\n        The regular expression to match the lines against.\n\n    saltenv: ``base``\n        Salt fileserver environment from which to retrieve the file. This\n        argument is ignored when ``config_path`` is not a ``salt://`` URL.\n\n    Usage example:\n\n    .. code-block:: python\n\n        objects = __salt__['ciscoconfparse.find_objects'](config_path='salt://path/to/config.txt',\n                                                          regex='Gigabit')\n        for obj in objects:\n            print(obj.text)\n    '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 37,
                    "column": 7
                  },
                  "text": "'''\n    Return all the line objects that match the expression in the ``regex``\n    argument.\n\n    .. warning::\n        This function is mostly valuable when invoked from other Salt\n        components (i.e., execution modules, states, templates etc.). For CLI\n        usage, please consider using\n        :py:func:`ciscoconfparse.find_lines <salt.ciscoconfparse_mod.find_lines>`\n\n    config\n        The configuration sent as text.\n\n        .. note::\n            This argument is ignored when ``config_path`` is specified.\n\n    config_path\n        The absolute or remote path to the file with the configuration to be\n        parsed. This argument supports the usual Salt filesystem URIs, e.g.,\n        ``salt://``, ``https://``, ``ftp://``, ``s3://``, etc.\n\n    regex\n        The regular expression to match the lines against.\n\n    saltenv: ``base``\n        Salt fileserver environment from which to retrieve the file. This\n        argument is ignored when ``config_path`` is not a ``salt://`` URL.\n\n    Usage example:\n\n    .. code-block:: python\n\n        objects = __salt__['ciscoconfparse.find_objects'](config_path='salt://path/to/config.txt',\n                                                          regex='Gigabit')\n        for obj in objects:\n            print(obj.text)\n    '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 37,
                        "column": 4
                      },
                      "text": "\n    Return all the line objects that match the expression in the ``regex``\n    argument.\n\n    .. warning::\n        This function is mostly valuable when invoked from other Salt\n        components (i.e., execution modules, states, templates etc.). For CLI\n        usage, please consider using\n        :py:func:`ciscoconfparse.find_lines <salt.ciscoconfparse_mod.find_lines>`\n\n    config\n        The configuration sent as text.\n\n        .. note::\n            This argument is ignored when ``config_path`` is specified.\n\n    config_path\n        The absolute or remote path to the file with the configuration to be\n        parsed. This argument supports the usual Salt filesystem URIs, e.g.,\n        ``salt://``, ``https://``, ``ftp://``, ``s3://``, etc.\n\n    regex\n        The regular expression to match the lines against.\n\n    saltenv: ``base``\n        Salt fileserver environment from which to retrieve the file. This\n        argument is ignored when ``config_path`` is not a ``salt://`` URL.\n\n    Usage example:\n\n    .. code-block:: python\n\n        objects = __salt__['ciscoconfparse.find_objects'](config_path='salt://path/to/config.txt',\n                                                          regex='Gigabit')\n        for obj in objects:\n            print(obj.text)\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 37,
                        "column": 4
                      },
                      "end": {
                        "row": 37,
                        "column": 7
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 38,
                "column": 4
              },
              "end": {
                "row": 38,
                "column": 75
              },
              "text": "ccp = _get_ccp(config=config, config_path=config_path, saltenv=saltenv)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 38,
                    "column": 4
                  },
                  "end": {
                    "row": 38,
                    "column": 75
                  },
                  "text": "ccp = _get_ccp(config=config, config_path=config_path, saltenv=saltenv)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 38,
                        "column": 4
                      },
                      "end": {
                        "row": 38,
                        "column": 7
                      },
                      "text": "ccp"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 38,
                        "column": 8
                      },
                      "end": {
                        "row": 38,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 38,
                        "column": 10
                      },
                      "end": {
                        "row": 38,
                        "column": 75
                      },
                      "text": "_get_ccp(config=config, config_path=config_path, saltenv=saltenv)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 38,
                            "column": 10
                          },
                          "end": {
                            "row": 38,
                            "column": 18
                          },
                          "text": "_get_ccp"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 38,
                            "column": 18
                          },
                          "end": {
                            "row": 38,
                            "column": 75
                          },
                          "text": "(config=config, config_path=config_path, saltenv=saltenv)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 38,
                                "column": 18
                              },
                              "end": {
                                "row": 38,
                                "column": 19
                              },
                              "text": "("
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 38,
                                "column": 19
                              },
                              "end": {
                                "row": 38,
                                "column": 32
                              },
                              "text": "config=config",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 25
                                  },
                                  "text": "config"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 38,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 26
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 32
                                  },
                                  "text": "config"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 38,
                                "column": 32
                              },
                              "end": {
                                "row": 38,
                                "column": 33
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 38,
                                "column": 34
                              },
                              "end": {
                                "row": 38,
                                "column": 57
                              },
                              "text": "config_path=config_path",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 45
                                  },
                                  "text": "config_path"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 38,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 46
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 57
                                  },
                                  "text": "config_path"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 38,
                                "column": 57
                              },
                              "end": {
                                "row": 38,
                                "column": 58
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 38,
                                "column": 59
                              },
                              "end": {
                                "row": 38,
                                "column": 74
                              },
                              "text": "saltenv=saltenv",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 66
                                  },
                                  "text": "saltenv"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 38,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 67
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 74
                                  },
                                  "text": "saltenv"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 38,
                                "column": 74
                              },
                              "end": {
                                "row": 38,
                                "column": 75
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 39,
                "column": 4
              },
              "end": {
                "row": 39,
                "column": 35
              },
              "text": "lines = ccp.find_objects(regex)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 39,
                    "column": 4
                  },
                  "end": {
                    "row": 39,
                    "column": 35
                  },
                  "text": "lines = ccp.find_objects(regex)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 39,
                        "column": 4
                      },
                      "end": {
                        "row": 39,
                        "column": 9
                      },
                      "text": "lines"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 39,
                        "column": 10
                      },
                      "end": {
                        "row": 39,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 39,
                        "column": 12
                      },
                      "end": {
                        "row": 39,
                        "column": 35
                      },
                      "text": "ccp.find_objects(regex)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 39,
                            "column": 12
                          },
                          "end": {
                            "row": 39,
                            "column": 28
                          },
                          "text": "ccp.find_objects",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 12
                              },
                              "end": {
                                "row": 39,
                                "column": 15
                              },
                              "text": "ccp"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 39,
                                "column": 15
                              },
                              "end": {
                                "row": 39,
                                "column": 16
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 16
                              },
                              "end": {
                                "row": 39,
                                "column": 28
                              },
                              "text": "find_objects"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 39,
                            "column": 28
                          },
                          "end": {
                            "row": 39,
                            "column": 35
                          },
                          "text": "(regex)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 39,
                                "column": 28
                              },
                              "end": {
                                "row": 39,
                                "column": 29
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 29
                              },
                              "end": {
                                "row": 39,
                                "column": 34
                              },
                              "text": "regex"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 39,
                                "column": 34
                              },
                              "end": {
                                "row": 39,
                                "column": 35
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 40,
                "column": 4
              },
              "end": {
                "row": 40,
                "column": 16
              },
              "text": "return lines",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 40,
                    "column": 4
                  },
                  "end": {
                    "row": 40,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 40,
                    "column": 11
                  },
                  "end": {
                    "row": 40,
                    "column": 16
                  },
                  "text": "lines"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}