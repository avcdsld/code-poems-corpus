{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 37,
    "column": 43
  },
  "text": "def row(self, row_key, filter_=None, append=False):\n        \"\"\"Factory to create a row associated with this table.\n\n        For example:\n\n        .. literalinclude:: snippets_table.py\n            :start-after: [START bigtable_table_row]\n            :end-before: [END bigtable_table_row]\n\n        .. warning::\n\n           At most one of ``filter_`` and ``append`` can be used in a\n           :class:`~google.cloud.bigtable.row.Row`.\n\n        :type row_key: bytes\n        :param row_key: The key for the row being created.\n\n        :type filter_: :class:`.RowFilter`\n        :param filter_: (Optional) Filter to be used for conditional mutations.\n                        See :class:`.ConditionalRow` for more details.\n\n        :type append: bool\n        :param append: (Optional) Flag to determine if the row should be used\n                       for append mutations.\n\n        :rtype: :class:`~google.cloud.bigtable.row.Row`\n        :returns: A row owned by this table.\n        :raises: :class:`ValueError <exceptions.ValueError>` if both\n                 ``filter_`` and ``append`` are used.\n        \"\"\"\n        if append and filter_ is not None:\n            raise ValueError(\"At most one of filter_ and append can be set\")\n        if append:\n            return AppendRow(row_key, self)\n        elif filter_ is not None:\n            return ConditionalRow(row_key, self, filter_=filter_)\n        else:\n            return DirectRow(row_key, self)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 37,
        "column": 43
      },
      "text": "def row(self, row_key, filter_=None, append=False):\n        \"\"\"Factory to create a row associated with this table.\n\n        For example:\n\n        .. literalinclude:: snippets_table.py\n            :start-after: [START bigtable_table_row]\n            :end-before: [END bigtable_table_row]\n\n        .. warning::\n\n           At most one of ``filter_`` and ``append`` can be used in a\n           :class:`~google.cloud.bigtable.row.Row`.\n\n        :type row_key: bytes\n        :param row_key: The key for the row being created.\n\n        :type filter_: :class:`.RowFilter`\n        :param filter_: (Optional) Filter to be used for conditional mutations.\n                        See :class:`.ConditionalRow` for more details.\n\n        :type append: bool\n        :param append: (Optional) Flag to determine if the row should be used\n                       for append mutations.\n\n        :rtype: :class:`~google.cloud.bigtable.row.Row`\n        :returns: A row owned by this table.\n        :raises: :class:`ValueError <exceptions.ValueError>` if both\n                 ``filter_`` and ``append`` are used.\n        \"\"\"\n        if append and filter_ is not None:\n            raise ValueError(\"At most one of filter_ and append can be set\")\n        if append:\n            return AppendRow(row_key, self)\n        elif filter_ is not None:\n            return ConditionalRow(row_key, self, filter_=filter_)\n        else:\n            return DirectRow(row_key, self)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 7
          },
          "text": "row"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 50
          },
          "text": "(self, row_key, filter_=None, append=False)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 8
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "row_key"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "filter_=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 23
                  },
                  "end": {
                    "row": 0,
                    "column": 30
                  },
                  "text": "filter_"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 31
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 31
                  },
                  "end": {
                    "row": 0,
                    "column": 35
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 49
              },
              "text": "append=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 43
                  },
                  "text": "append"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 43
                  },
                  "end": {
                    "row": 0,
                    "column": 44
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 0,
                    "column": 44
                  },
                  "end": {
                    "row": 0,
                    "column": 49
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 49
              },
              "end": {
                "row": 0,
                "column": 50
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 50
          },
          "end": {
            "row": 0,
            "column": 51
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 37,
            "column": 43
          },
          "text": "\"\"\"Factory to create a row associated with this table.\n\n        For example:\n\n        .. literalinclude:: snippets_table.py\n            :start-after: [START bigtable_table_row]\n            :end-before: [END bigtable_table_row]\n\n        .. warning::\n\n           At most one of ``filter_`` and ``append`` can be used in a\n           :class:`~google.cloud.bigtable.row.Row`.\n\n        :type row_key: bytes\n        :param row_key: The key for the row being created.\n\n        :type filter_: :class:`.RowFilter`\n        :param filter_: (Optional) Filter to be used for conditional mutations.\n                        See :class:`.ConditionalRow` for more details.\n\n        :type append: bool\n        :param append: (Optional) Flag to determine if the row should be used\n                       for append mutations.\n\n        :rtype: :class:`~google.cloud.bigtable.row.Row`\n        :returns: A row owned by this table.\n        :raises: :class:`ValueError <exceptions.ValueError>` if both\n                 ``filter_`` and ``append`` are used.\n        \"\"\"\n        if append and filter_ is not None:\n            raise ValueError(\"At most one of filter_ and append can be set\")\n        if append:\n            return AppendRow(row_key, self)\n        elif filter_ is not None:\n            return ConditionalRow(row_key, self, filter_=filter_)\n        else:\n            return DirectRow(row_key, self)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 29,
                "column": 11
              },
              "text": "\"\"\"Factory to create a row associated with this table.\n\n        For example:\n\n        .. literalinclude:: snippets_table.py\n            :start-after: [START bigtable_table_row]\n            :end-before: [END bigtable_table_row]\n\n        .. warning::\n\n           At most one of ``filter_`` and ``append`` can be used in a\n           :class:`~google.cloud.bigtable.row.Row`.\n\n        :type row_key: bytes\n        :param row_key: The key for the row being created.\n\n        :type filter_: :class:`.RowFilter`\n        :param filter_: (Optional) Filter to be used for conditional mutations.\n                        See :class:`.ConditionalRow` for more details.\n\n        :type append: bool\n        :param append: (Optional) Flag to determine if the row should be used\n                       for append mutations.\n\n        :rtype: :class:`~google.cloud.bigtable.row.Row`\n        :returns: A row owned by this table.\n        :raises: :class:`ValueError <exceptions.ValueError>` if both\n                 ``filter_`` and ``append`` are used.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 29,
                    "column": 11
                  },
                  "text": "\"\"\"Factory to create a row associated with this table.\n\n        For example:\n\n        .. literalinclude:: snippets_table.py\n            :start-after: [START bigtable_table_row]\n            :end-before: [END bigtable_table_row]\n\n        .. warning::\n\n           At most one of ``filter_`` and ``append`` can be used in a\n           :class:`~google.cloud.bigtable.row.Row`.\n\n        :type row_key: bytes\n        :param row_key: The key for the row being created.\n\n        :type filter_: :class:`.RowFilter`\n        :param filter_: (Optional) Filter to be used for conditional mutations.\n                        See :class:`.ConditionalRow` for more details.\n\n        :type append: bool\n        :param append: (Optional) Flag to determine if the row should be used\n                       for append mutations.\n\n        :rtype: :class:`~google.cloud.bigtable.row.Row`\n        :returns: A row owned by this table.\n        :raises: :class:`ValueError <exceptions.ValueError>` if both\n                 ``filter_`` and ``append`` are used.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 29,
                        "column": 8
                      },
                      "text": "Factory to create a row associated with this table.\n\n        For example:\n\n        .. literalinclude:: snippets_table.py\n            :start-after: [START bigtable_table_row]\n            :end-before: [END bigtable_table_row]\n\n        .. warning::\n\n           At most one of ``filter_`` and ``append`` can be used in a\n           :class:`~google.cloud.bigtable.row.Row`.\n\n        :type row_key: bytes\n        :param row_key: The key for the row being created.\n\n        :type filter_: :class:`.RowFilter`\n        :param filter_: (Optional) Filter to be used for conditional mutations.\n                        See :class:`.ConditionalRow` for more details.\n\n        :type append: bool\n        :param append: (Optional) Flag to determine if the row should be used\n                       for append mutations.\n\n        :rtype: :class:`~google.cloud.bigtable.row.Row`\n        :returns: A row owned by this table.\n        :raises: :class:`ValueError <exceptions.ValueError>` if both\n                 ``filter_`` and ``append`` are used.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 29,
                        "column": 8
                      },
                      "end": {
                        "row": 29,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 30,
                "column": 8
              },
              "end": {
                "row": 31,
                "column": 76
              },
              "text": "if append and filter_ is not None:\n            raise ValueError(\"At most one of filter_ and append can be set\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 30,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 30,
                    "column": 11
                  },
                  "end": {
                    "row": 30,
                    "column": 41
                  },
                  "text": "append and filter_ is not None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 11
                      },
                      "end": {
                        "row": 30,
                        "column": 17
                      },
                      "text": "append"
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 30,
                        "column": 18
                      },
                      "end": {
                        "row": 30,
                        "column": 21
                      },
                      "text": "and"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 30,
                        "column": 22
                      },
                      "end": {
                        "row": 30,
                        "column": 41
                      },
                      "text": "filter_ is not None",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 30,
                            "column": 22
                          },
                          "end": {
                            "row": 30,
                            "column": 29
                          },
                          "text": "filter_"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 30,
                            "column": 30
                          },
                          "end": {
                            "row": 30,
                            "column": 32
                          },
                          "text": "is"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 30,
                            "column": 33
                          },
                          "end": {
                            "row": 30,
                            "column": 36
                          },
                          "text": "not"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 30,
                            "column": 37
                          },
                          "end": {
                            "row": 30,
                            "column": 41
                          },
                          "text": "None"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 30,
                    "column": 41
                  },
                  "end": {
                    "row": 30,
                    "column": 42
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 31,
                    "column": 12
                  },
                  "end": {
                    "row": 31,
                    "column": 76
                  },
                  "text": "raise ValueError(\"At most one of filter_ and append can be set\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 31,
                        "column": 12
                      },
                      "end": {
                        "row": 31,
                        "column": 76
                      },
                      "text": "raise ValueError(\"At most one of filter_ and append can be set\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 31,
                            "column": 12
                          },
                          "end": {
                            "row": 31,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 31,
                            "column": 18
                          },
                          "end": {
                            "row": 31,
                            "column": 76
                          },
                          "text": "ValueError(\"At most one of filter_ and append can be set\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 18
                              },
                              "end": {
                                "row": 31,
                                "column": 28
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 31,
                                "column": 28
                              },
                              "end": {
                                "row": 31,
                                "column": 76
                              },
                              "text": "(\"At most one of filter_ and append can be set\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 31,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 31,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 75
                                  },
                                  "text": "\"At most one of filter_ and append can be set\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 31,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 30
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 31,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 74
                                      },
                                      "text": "At most one of filter_ and append can be set"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 31,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 75
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 31,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 76
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 32,
                "column": 8
              },
              "end": {
                "row": 37,
                "column": 43
              },
              "text": "if append:\n            return AppendRow(row_key, self)\n        elif filter_ is not None:\n            return ConditionalRow(row_key, self, filter_=filter_)\n        else:\n            return DirectRow(row_key, self)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 32,
                    "column": 8
                  },
                  "end": {
                    "row": 32,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 32,
                    "column": 11
                  },
                  "end": {
                    "row": 32,
                    "column": 17
                  },
                  "text": "append"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 32,
                    "column": 17
                  },
                  "end": {
                    "row": 32,
                    "column": 18
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 33,
                    "column": 12
                  },
                  "end": {
                    "row": 33,
                    "column": 43
                  },
                  "text": "return AppendRow(row_key, self)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 33,
                        "column": 12
                      },
                      "end": {
                        "row": 33,
                        "column": 43
                      },
                      "text": "return AppendRow(row_key, self)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 33,
                            "column": 12
                          },
                          "end": {
                            "row": 33,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 33,
                            "column": 19
                          },
                          "end": {
                            "row": 33,
                            "column": 43
                          },
                          "text": "AppendRow(row_key, self)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 19
                              },
                              "end": {
                                "row": 33,
                                "column": 28
                              },
                              "text": "AppendRow"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 33,
                                "column": 28
                              },
                              "end": {
                                "row": 33,
                                "column": 43
                              },
                              "text": "(row_key, self)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 33,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 33,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 36
                                  },
                                  "text": "row_key"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 33,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 37
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 33,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 42
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 33,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 43
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "elif_clause",
                  "start": {
                    "row": 34,
                    "column": 8
                  },
                  "end": {
                    "row": 35,
                    "column": 65
                  },
                  "text": "elif filter_ is not None:\n            return ConditionalRow(row_key, self, filter_=filter_)",
                  "children": [
                    {
                      "type": "elif",
                      "start": {
                        "row": 34,
                        "column": 8
                      },
                      "end": {
                        "row": 34,
                        "column": 12
                      },
                      "text": "elif"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 34,
                        "column": 13
                      },
                      "end": {
                        "row": 34,
                        "column": 32
                      },
                      "text": "filter_ is not None",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 34,
                            "column": 13
                          },
                          "end": {
                            "row": 34,
                            "column": 20
                          },
                          "text": "filter_"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 34,
                            "column": 21
                          },
                          "end": {
                            "row": 34,
                            "column": 23
                          },
                          "text": "is"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 34,
                            "column": 24
                          },
                          "end": {
                            "row": 34,
                            "column": 27
                          },
                          "text": "not"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 34,
                            "column": 28
                          },
                          "end": {
                            "row": 34,
                            "column": 32
                          },
                          "text": "None"
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 34,
                        "column": 32
                      },
                      "end": {
                        "row": 34,
                        "column": 33
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 35,
                        "column": 12
                      },
                      "end": {
                        "row": 35,
                        "column": 65
                      },
                      "text": "return ConditionalRow(row_key, self, filter_=filter_)",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 35,
                            "column": 12
                          },
                          "end": {
                            "row": 35,
                            "column": 65
                          },
                          "text": "return ConditionalRow(row_key, self, filter_=filter_)",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 35,
                                "column": 12
                              },
                              "end": {
                                "row": 35,
                                "column": 18
                              },
                              "text": "return"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 35,
                                "column": 19
                              },
                              "end": {
                                "row": 35,
                                "column": 65
                              },
                              "text": "ConditionalRow(row_key, self, filter_=filter_)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 33
                                  },
                                  "text": "ConditionalRow"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 35,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 65
                                  },
                                  "text": "(row_key, self, filter_=filter_)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 35,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 34
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 41
                                      },
                                      "text": "row_key"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 35,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 42
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 47
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 35,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 48
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 35,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 64
                                      },
                                      "text": "filter_=filter_",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 35,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 56
                                          },
                                          "text": "filter_"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 35,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 57
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 35,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 64
                                          },
                                          "text": "filter_"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 35,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 65
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 36,
                    "column": 8
                  },
                  "end": {
                    "row": 37,
                    "column": 43
                  },
                  "text": "else:\n            return DirectRow(row_key, self)",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 36,
                        "column": 8
                      },
                      "end": {
                        "row": 36,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 36,
                        "column": 12
                      },
                      "end": {
                        "row": 36,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 37,
                        "column": 12
                      },
                      "end": {
                        "row": 37,
                        "column": 43
                      },
                      "text": "return DirectRow(row_key, self)",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 37,
                            "column": 12
                          },
                          "end": {
                            "row": 37,
                            "column": 43
                          },
                          "text": "return DirectRow(row_key, self)",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 37,
                                "column": 12
                              },
                              "end": {
                                "row": 37,
                                "column": 18
                              },
                              "text": "return"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 37,
                                "column": 19
                              },
                              "end": {
                                "row": 37,
                                "column": 43
                              },
                              "text": "DirectRow(row_key, self)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 28
                                  },
                                  "text": "DirectRow"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 37,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 43
                                  },
                                  "text": "(row_key, self)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 37,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 29
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 37,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 36
                                      },
                                      "text": "row_key"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 37,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 37
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 37,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 42
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 37,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 43
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}