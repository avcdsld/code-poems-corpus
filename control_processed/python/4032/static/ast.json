{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 76,
    "column": 16
  },
  "text": "def to_graphviz(booster, fmap='', num_trees=0, rankdir='UT',\n                yes_color='#0000FF', no_color='#FF0000',\n                condition_node_params=None, leaf_node_params=None, **kwargs):\n    \"\"\"Convert specified tree to graphviz instance. IPython can automatically plot the\n    returned graphiz instance. Otherwise, you should call .render() method\n    of the returned graphiz instance.\n\n    Parameters\n    ----------\n    booster : Booster, XGBModel\n        Booster or XGBModel instance\n    fmap: str (optional)\n       The name of feature map file\n    num_trees : int, default 0\n        Specify the ordinal number of target tree\n    rankdir : str, default \"UT\"\n        Passed to graphiz via graph_attr\n    yes_color : str, default '#0000FF'\n        Edge color when meets the node condition.\n    no_color : str, default '#FF0000'\n        Edge color when doesn't meet the node condition.\n    condition_node_params : dict (optional)\n        condition node configuration,\n        {'shape':'box',\n               'style':'filled,rounded',\n               'fillcolor':'#78bceb'\n        }\n    leaf_node_params : dict (optional)\n        leaf node configuration\n        {'shape':'box',\n               'style':'filled',\n               'fillcolor':'#e48038'\n        }\n    kwargs :\n        Other keywords passed to graphviz graph_attr\n\n    Returns\n    -------\n    ax : matplotlib Axes\n    \"\"\"\n\n    if condition_node_params is None:\n        condition_node_params = {}\n    if leaf_node_params is None:\n        leaf_node_params = {}\n\n    try:\n        from graphviz import Digraph\n    except ImportError:\n        raise ImportError('You must install graphviz to plot tree')\n\n    if not isinstance(booster, (Booster, XGBModel)):\n        raise ValueError('booster must be Booster or XGBModel instance')\n\n    if isinstance(booster, XGBModel):\n        booster = booster.get_booster()\n\n    tree = booster.get_dump(fmap=fmap)[num_trees]\n    tree = tree.split()\n\n    kwargs = kwargs.copy()\n    kwargs.update({'rankdir': rankdir})\n    graph = Digraph(graph_attr=kwargs)\n\n    for i, text in enumerate(tree):\n        if text[0].isdigit():\n            node = _parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)\n        else:\n            if i == 0:\n                # 1st string must be node\n                raise ValueError('Unable to parse given string as tree')\n            _parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)\n\n    return graph",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 76,
        "column": 16
      },
      "text": "def to_graphviz(booster, fmap='', num_trees=0, rankdir='UT',\n                yes_color='#0000FF', no_color='#FF0000',\n                condition_node_params=None, leaf_node_params=None, **kwargs):\n    \"\"\"Convert specified tree to graphviz instance. IPython can automatically plot the\n    returned graphiz instance. Otherwise, you should call .render() method\n    of the returned graphiz instance.\n\n    Parameters\n    ----------\n    booster : Booster, XGBModel\n        Booster or XGBModel instance\n    fmap: str (optional)\n       The name of feature map file\n    num_trees : int, default 0\n        Specify the ordinal number of target tree\n    rankdir : str, default \"UT\"\n        Passed to graphiz via graph_attr\n    yes_color : str, default '#0000FF'\n        Edge color when meets the node condition.\n    no_color : str, default '#FF0000'\n        Edge color when doesn't meet the node condition.\n    condition_node_params : dict (optional)\n        condition node configuration,\n        {'shape':'box',\n               'style':'filled,rounded',\n               'fillcolor':'#78bceb'\n        }\n    leaf_node_params : dict (optional)\n        leaf node configuration\n        {'shape':'box',\n               'style':'filled',\n               'fillcolor':'#e48038'\n        }\n    kwargs :\n        Other keywords passed to graphviz graph_attr\n\n    Returns\n    -------\n    ax : matplotlib Axes\n    \"\"\"\n\n    if condition_node_params is None:\n        condition_node_params = {}\n    if leaf_node_params is None:\n        leaf_node_params = {}\n\n    try:\n        from graphviz import Digraph\n    except ImportError:\n        raise ImportError('You must install graphviz to plot tree')\n\n    if not isinstance(booster, (Booster, XGBModel)):\n        raise ValueError('booster must be Booster or XGBModel instance')\n\n    if isinstance(booster, XGBModel):\n        booster = booster.get_booster()\n\n    tree = booster.get_dump(fmap=fmap)[num_trees]\n    tree = tree.split()\n\n    kwargs = kwargs.copy()\n    kwargs.update({'rankdir': rankdir})\n    graph = Digraph(graph_attr=kwargs)\n\n    for i, text in enumerate(tree):\n        if text[0].isdigit():\n            node = _parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)\n        else:\n            if i == 0:\n                # 1st string must be node\n                raise ValueError('Unable to parse given string as tree')\n            _parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)\n\n    return graph",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 15
          },
          "text": "to_graphviz"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 15
          },
          "end": {
            "row": 2,
            "column": 76
          },
          "text": "(booster, fmap='', num_trees=0, rankdir='UT',\n                yes_color='#0000FF', no_color='#FF0000',\n                condition_node_params=None, leaf_node_params=None, **kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "booster"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "fmap=''",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 25
                  },
                  "end": {
                    "row": 0,
                    "column": 29
                  },
                  "text": "fmap"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 29
                  },
                  "end": {
                    "row": 0,
                    "column": 30
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 32
                  },
                  "text": "''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 0,
                        "column": 30
                      },
                      "end": {
                        "row": 0,
                        "column": 31
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 0,
                        "column": 31
                      },
                      "end": {
                        "row": 0,
                        "column": 32
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": "num_trees=0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 34
                  },
                  "end": {
                    "row": 0,
                    "column": 43
                  },
                  "text": "num_trees"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 43
                  },
                  "end": {
                    "row": 0,
                    "column": 44
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 44
                  },
                  "end": {
                    "row": 0,
                    "column": 45
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 59
              },
              "text": "rankdir='UT'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 47
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "rankdir"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 54
                  },
                  "end": {
                    "row": 0,
                    "column": 55
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 0,
                    "column": 55
                  },
                  "end": {
                    "row": 0,
                    "column": 59
                  },
                  "text": "'UT'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 0,
                        "column": 55
                      },
                      "end": {
                        "row": 0,
                        "column": 56
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 0,
                        "column": 56
                      },
                      "end": {
                        "row": 0,
                        "column": 58
                      },
                      "text": "UT"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 0,
                        "column": 58
                      },
                      "end": {
                        "row": 0,
                        "column": 59
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 59
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 16
              },
              "end": {
                "row": 1,
                "column": 35
              },
              "text": "yes_color='#0000FF'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 16
                  },
                  "end": {
                    "row": 1,
                    "column": 25
                  },
                  "text": "yes_color"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 25
                  },
                  "end": {
                    "row": 1,
                    "column": 26
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 26
                  },
                  "end": {
                    "row": 1,
                    "column": 35
                  },
                  "text": "'#0000FF'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 26
                      },
                      "end": {
                        "row": 1,
                        "column": 27
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 27
                      },
                      "end": {
                        "row": 1,
                        "column": 34
                      },
                      "text": "#0000FF"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 1,
                        "column": 34
                      },
                      "end": {
                        "row": 1,
                        "column": 35
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 35
              },
              "end": {
                "row": 1,
                "column": 36
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 37
              },
              "end": {
                "row": 1,
                "column": 55
              },
              "text": "no_color='#FF0000'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 37
                  },
                  "end": {
                    "row": 1,
                    "column": 45
                  },
                  "text": "no_color"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 45
                  },
                  "end": {
                    "row": 1,
                    "column": 46
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 46
                  },
                  "end": {
                    "row": 1,
                    "column": 55
                  },
                  "text": "'#FF0000'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 46
                      },
                      "end": {
                        "row": 1,
                        "column": 47
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 47
                      },
                      "end": {
                        "row": 1,
                        "column": 54
                      },
                      "text": "#FF0000"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 1,
                        "column": 54
                      },
                      "end": {
                        "row": 1,
                        "column": 55
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 55
              },
              "end": {
                "row": 1,
                "column": 56
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 16
              },
              "end": {
                "row": 2,
                "column": 42
              },
              "text": "condition_node_params=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 16
                  },
                  "end": {
                    "row": 2,
                    "column": 37
                  },
                  "text": "condition_node_params"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 37
                  },
                  "end": {
                    "row": 2,
                    "column": 38
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 2,
                    "column": 38
                  },
                  "end": {
                    "row": 2,
                    "column": 42
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 42
              },
              "end": {
                "row": 2,
                "column": 43
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 44
              },
              "end": {
                "row": 2,
                "column": 65
              },
              "text": "leaf_node_params=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 44
                  },
                  "end": {
                    "row": 2,
                    "column": 60
                  },
                  "text": "leaf_node_params"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 60
                  },
                  "end": {
                    "row": 2,
                    "column": 61
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 2,
                    "column": 61
                  },
                  "end": {
                    "row": 2,
                    "column": 65
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 65
              },
              "end": {
                "row": 2,
                "column": 66
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 2,
                "column": 67
              },
              "end": {
                "row": 2,
                "column": 75
              },
              "text": "**kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 2,
                    "column": 67
                  },
                  "end": {
                    "row": 2,
                    "column": 69
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 69
                  },
                  "end": {
                    "row": 2,
                    "column": 75
                  },
                  "text": "kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 2,
                "column": 75
              },
              "end": {
                "row": 2,
                "column": 76
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 2,
            "column": 76
          },
          "end": {
            "row": 2,
            "column": 77
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 3,
            "column": 4
          },
          "end": {
            "row": 76,
            "column": 16
          },
          "text": "\"\"\"Convert specified tree to graphviz instance. IPython can automatically plot the\n    returned graphiz instance. Otherwise, you should call .render() method\n    of the returned graphiz instance.\n\n    Parameters\n    ----------\n    booster : Booster, XGBModel\n        Booster or XGBModel instance\n    fmap: str (optional)\n       The name of feature map file\n    num_trees : int, default 0\n        Specify the ordinal number of target tree\n    rankdir : str, default \"UT\"\n        Passed to graphiz via graph_attr\n    yes_color : str, default '#0000FF'\n        Edge color when meets the node condition.\n    no_color : str, default '#FF0000'\n        Edge color when doesn't meet the node condition.\n    condition_node_params : dict (optional)\n        condition node configuration,\n        {'shape':'box',\n               'style':'filled,rounded',\n               'fillcolor':'#78bceb'\n        }\n    leaf_node_params : dict (optional)\n        leaf node configuration\n        {'shape':'box',\n               'style':'filled',\n               'fillcolor':'#e48038'\n        }\n    kwargs :\n        Other keywords passed to graphviz graph_attr\n\n    Returns\n    -------\n    ax : matplotlib Axes\n    \"\"\"\n\n    if condition_node_params is None:\n        condition_node_params = {}\n    if leaf_node_params is None:\n        leaf_node_params = {}\n\n    try:\n        from graphviz import Digraph\n    except ImportError:\n        raise ImportError('You must install graphviz to plot tree')\n\n    if not isinstance(booster, (Booster, XGBModel)):\n        raise ValueError('booster must be Booster or XGBModel instance')\n\n    if isinstance(booster, XGBModel):\n        booster = booster.get_booster()\n\n    tree = booster.get_dump(fmap=fmap)[num_trees]\n    tree = tree.split()\n\n    kwargs = kwargs.copy()\n    kwargs.update({'rankdir': rankdir})\n    graph = Digraph(graph_attr=kwargs)\n\n    for i, text in enumerate(tree):\n        if text[0].isdigit():\n            node = _parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)\n        else:\n            if i == 0:\n                # 1st string must be node\n                raise ValueError('Unable to parse given string as tree')\n            _parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)\n\n    return graph",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 3,
                "column": 4
              },
              "end": {
                "row": 39,
                "column": 7
              },
              "text": "\"\"\"Convert specified tree to graphviz instance. IPython can automatically plot the\n    returned graphiz instance. Otherwise, you should call .render() method\n    of the returned graphiz instance.\n\n    Parameters\n    ----------\n    booster : Booster, XGBModel\n        Booster or XGBModel instance\n    fmap: str (optional)\n       The name of feature map file\n    num_trees : int, default 0\n        Specify the ordinal number of target tree\n    rankdir : str, default \"UT\"\n        Passed to graphiz via graph_attr\n    yes_color : str, default '#0000FF'\n        Edge color when meets the node condition.\n    no_color : str, default '#FF0000'\n        Edge color when doesn't meet the node condition.\n    condition_node_params : dict (optional)\n        condition node configuration,\n        {'shape':'box',\n               'style':'filled,rounded',\n               'fillcolor':'#78bceb'\n        }\n    leaf_node_params : dict (optional)\n        leaf node configuration\n        {'shape':'box',\n               'style':'filled',\n               'fillcolor':'#e48038'\n        }\n    kwargs :\n        Other keywords passed to graphviz graph_attr\n\n    Returns\n    -------\n    ax : matplotlib Axes\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 3,
                    "column": 4
                  },
                  "end": {
                    "row": 39,
                    "column": 7
                  },
                  "text": "\"\"\"Convert specified tree to graphviz instance. IPython can automatically plot the\n    returned graphiz instance. Otherwise, you should call .render() method\n    of the returned graphiz instance.\n\n    Parameters\n    ----------\n    booster : Booster, XGBModel\n        Booster or XGBModel instance\n    fmap: str (optional)\n       The name of feature map file\n    num_trees : int, default 0\n        Specify the ordinal number of target tree\n    rankdir : str, default \"UT\"\n        Passed to graphiz via graph_attr\n    yes_color : str, default '#0000FF'\n        Edge color when meets the node condition.\n    no_color : str, default '#FF0000'\n        Edge color when doesn't meet the node condition.\n    condition_node_params : dict (optional)\n        condition node configuration,\n        {'shape':'box',\n               'style':'filled,rounded',\n               'fillcolor':'#78bceb'\n        }\n    leaf_node_params : dict (optional)\n        leaf node configuration\n        {'shape':'box',\n               'style':'filled',\n               'fillcolor':'#e48038'\n        }\n    kwargs :\n        Other keywords passed to graphviz graph_attr\n\n    Returns\n    -------\n    ax : matplotlib Axes\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 3,
                        "column": 4
                      },
                      "end": {
                        "row": 3,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 3,
                        "column": 7
                      },
                      "end": {
                        "row": 39,
                        "column": 4
                      },
                      "text": "Convert specified tree to graphviz instance. IPython can automatically plot the\n    returned graphiz instance. Otherwise, you should call .render() method\n    of the returned graphiz instance.\n\n    Parameters\n    ----------\n    booster : Booster, XGBModel\n        Booster or XGBModel instance\n    fmap: str (optional)\n       The name of feature map file\n    num_trees : int, default 0\n        Specify the ordinal number of target tree\n    rankdir : str, default \"UT\"\n        Passed to graphiz via graph_attr\n    yes_color : str, default '#0000FF'\n        Edge color when meets the node condition.\n    no_color : str, default '#FF0000'\n        Edge color when doesn't meet the node condition.\n    condition_node_params : dict (optional)\n        condition node configuration,\n        {'shape':'box',\n               'style':'filled,rounded',\n               'fillcolor':'#78bceb'\n        }\n    leaf_node_params : dict (optional)\n        leaf node configuration\n        {'shape':'box',\n               'style':'filled',\n               'fillcolor':'#e48038'\n        }\n    kwargs :\n        Other keywords passed to graphviz graph_attr\n\n    Returns\n    -------\n    ax : matplotlib Axes\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 39,
                        "column": 4
                      },
                      "end": {
                        "row": 39,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 41,
                "column": 4
              },
              "end": {
                "row": 42,
                "column": 34
              },
              "text": "if condition_node_params is None:\n        condition_node_params = {}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 41,
                    "column": 4
                  },
                  "end": {
                    "row": 41,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 41,
                    "column": 7
                  },
                  "end": {
                    "row": 41,
                    "column": 36
                  },
                  "text": "condition_node_params is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 41,
                        "column": 7
                      },
                      "end": {
                        "row": 41,
                        "column": 28
                      },
                      "text": "condition_node_params"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 41,
                        "column": 29
                      },
                      "end": {
                        "row": 41,
                        "column": 31
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 41,
                        "column": 32
                      },
                      "end": {
                        "row": 41,
                        "column": 36
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 41,
                    "column": 36
                  },
                  "end": {
                    "row": 41,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 42,
                    "column": 8
                  },
                  "end": {
                    "row": 42,
                    "column": 34
                  },
                  "text": "condition_node_params = {}",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 42,
                        "column": 8
                      },
                      "end": {
                        "row": 42,
                        "column": 34
                      },
                      "text": "condition_node_params = {}",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 42,
                            "column": 8
                          },
                          "end": {
                            "row": 42,
                            "column": 34
                          },
                          "text": "condition_node_params = {}",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 8
                              },
                              "end": {
                                "row": 42,
                                "column": 29
                              },
                              "text": "condition_node_params"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 42,
                                "column": 30
                              },
                              "end": {
                                "row": 42,
                                "column": 31
                              },
                              "text": "="
                            },
                            {
                              "type": "dictionary",
                              "start": {
                                "row": 42,
                                "column": 32
                              },
                              "end": {
                                "row": 42,
                                "column": 34
                              },
                              "text": "{}",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 42,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 33
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 42,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 34
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 43,
                "column": 4
              },
              "end": {
                "row": 44,
                "column": 29
              },
              "text": "if leaf_node_params is None:\n        leaf_node_params = {}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 43,
                    "column": 4
                  },
                  "end": {
                    "row": 43,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 43,
                    "column": 7
                  },
                  "end": {
                    "row": 43,
                    "column": 31
                  },
                  "text": "leaf_node_params is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 43,
                        "column": 7
                      },
                      "end": {
                        "row": 43,
                        "column": 23
                      },
                      "text": "leaf_node_params"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 43,
                        "column": 24
                      },
                      "end": {
                        "row": 43,
                        "column": 26
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 43,
                        "column": 27
                      },
                      "end": {
                        "row": 43,
                        "column": 31
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 43,
                    "column": 31
                  },
                  "end": {
                    "row": 43,
                    "column": 32
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 44,
                    "column": 8
                  },
                  "end": {
                    "row": 44,
                    "column": 29
                  },
                  "text": "leaf_node_params = {}",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 44,
                        "column": 8
                      },
                      "end": {
                        "row": 44,
                        "column": 29
                      },
                      "text": "leaf_node_params = {}",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 44,
                            "column": 8
                          },
                          "end": {
                            "row": 44,
                            "column": 29
                          },
                          "text": "leaf_node_params = {}",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 44,
                                "column": 8
                              },
                              "end": {
                                "row": 44,
                                "column": 24
                              },
                              "text": "leaf_node_params"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 44,
                                "column": 25
                              },
                              "end": {
                                "row": 44,
                                "column": 26
                              },
                              "text": "="
                            },
                            {
                              "type": "dictionary",
                              "start": {
                                "row": 44,
                                "column": 27
                              },
                              "end": {
                                "row": 44,
                                "column": 29
                              },
                              "text": "{}",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 44,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 28
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 44,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 29
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 46,
                "column": 4
              },
              "end": {
                "row": 49,
                "column": 67
              },
              "text": "try:\n        from graphviz import Digraph\n    except ImportError:\n        raise ImportError('You must install graphviz to plot tree')",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 46,
                    "column": 4
                  },
                  "end": {
                    "row": 46,
                    "column": 7
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 46,
                    "column": 7
                  },
                  "end": {
                    "row": 46,
                    "column": 8
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 47,
                    "column": 8
                  },
                  "end": {
                    "row": 47,
                    "column": 36
                  },
                  "text": "from graphviz import Digraph",
                  "children": [
                    {
                      "type": "import_from_statement",
                      "start": {
                        "row": 47,
                        "column": 8
                      },
                      "end": {
                        "row": 47,
                        "column": 36
                      },
                      "text": "from graphviz import Digraph",
                      "children": [
                        {
                          "type": "from",
                          "start": {
                            "row": 47,
                            "column": 8
                          },
                          "end": {
                            "row": 47,
                            "column": 12
                          },
                          "text": "from"
                        },
                        {
                          "type": "dotted_name",
                          "start": {
                            "row": 47,
                            "column": 13
                          },
                          "end": {
                            "row": 47,
                            "column": 21
                          },
                          "text": "graphviz",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 47,
                                "column": 13
                              },
                              "end": {
                                "row": 47,
                                "column": 21
                              },
                              "text": "graphviz"
                            }
                          ]
                        },
                        {
                          "type": "import",
                          "start": {
                            "row": 47,
                            "column": 22
                          },
                          "end": {
                            "row": 47,
                            "column": 28
                          },
                          "text": "import"
                        },
                        {
                          "type": "dotted_name",
                          "start": {
                            "row": 47,
                            "column": 29
                          },
                          "end": {
                            "row": 47,
                            "column": 36
                          },
                          "text": "Digraph",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 47,
                                "column": 29
                              },
                              "end": {
                                "row": 47,
                                "column": 36
                              },
                              "text": "Digraph"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 48,
                    "column": 4
                  },
                  "end": {
                    "row": 49,
                    "column": 67
                  },
                  "text": "except ImportError:\n        raise ImportError('You must install graphviz to plot tree')",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 48,
                        "column": 4
                      },
                      "end": {
                        "row": 48,
                        "column": 10
                      },
                      "text": "except"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 48,
                        "column": 11
                      },
                      "end": {
                        "row": 48,
                        "column": 22
                      },
                      "text": "ImportError"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 48,
                        "column": 22
                      },
                      "end": {
                        "row": 48,
                        "column": 23
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 49,
                        "column": 8
                      },
                      "end": {
                        "row": 49,
                        "column": 67
                      },
                      "text": "raise ImportError('You must install graphviz to plot tree')",
                      "children": [
                        {
                          "type": "raise_statement",
                          "start": {
                            "row": 49,
                            "column": 8
                          },
                          "end": {
                            "row": 49,
                            "column": 67
                          },
                          "text": "raise ImportError('You must install graphviz to plot tree')",
                          "children": [
                            {
                              "type": "raise",
                              "start": {
                                "row": 49,
                                "column": 8
                              },
                              "end": {
                                "row": 49,
                                "column": 13
                              },
                              "text": "raise"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 49,
                                "column": 14
                              },
                              "end": {
                                "row": 49,
                                "column": 67
                              },
                              "text": "ImportError('You must install graphviz to plot tree')",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 49,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 25
                                  },
                                  "text": "ImportError"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 49,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 67
                                  },
                                  "text": "('You must install graphviz to plot tree')",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 49,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 26
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 49,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 66
                                      },
                                      "text": "'You must install graphviz to plot tree'",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 49,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 27
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 49,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 65
                                          },
                                          "text": "You must install graphviz to plot tree"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 49,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 66
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 49,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 67
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 51,
                "column": 4
              },
              "end": {
                "row": 52,
                "column": 72
              },
              "text": "if not isinstance(booster, (Booster, XGBModel)):\n        raise ValueError('booster must be Booster or XGBModel instance')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 51,
                    "column": 4
                  },
                  "end": {
                    "row": 51,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 51,
                    "column": 7
                  },
                  "end": {
                    "row": 51,
                    "column": 51
                  },
                  "text": "not isinstance(booster, (Booster, XGBModel))",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 51,
                        "column": 7
                      },
                      "end": {
                        "row": 51,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 51,
                        "column": 11
                      },
                      "end": {
                        "row": 51,
                        "column": 51
                      },
                      "text": "isinstance(booster, (Booster, XGBModel))",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 51,
                            "column": 11
                          },
                          "end": {
                            "row": 51,
                            "column": 21
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 51,
                            "column": 21
                          },
                          "end": {
                            "row": 51,
                            "column": 51
                          },
                          "text": "(booster, (Booster, XGBModel))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 51,
                                "column": 21
                              },
                              "end": {
                                "row": 51,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 51,
                                "column": 22
                              },
                              "end": {
                                "row": 51,
                                "column": 29
                              },
                              "text": "booster"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 51,
                                "column": 29
                              },
                              "end": {
                                "row": 51,
                                "column": 30
                              },
                              "text": ","
                            },
                            {
                              "type": "tuple",
                              "start": {
                                "row": 51,
                                "column": 31
                              },
                              "end": {
                                "row": 51,
                                "column": 50
                              },
                              "text": "(Booster, XGBModel)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 51,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 32
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 51,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 39
                                  },
                                  "text": "Booster"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 51,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 40
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 51,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 49
                                  },
                                  "text": "XGBModel"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 51,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 50
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 51,
                                "column": 50
                              },
                              "end": {
                                "row": 51,
                                "column": 51
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 51,
                    "column": 51
                  },
                  "end": {
                    "row": 51,
                    "column": 52
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 52,
                    "column": 8
                  },
                  "end": {
                    "row": 52,
                    "column": 72
                  },
                  "text": "raise ValueError('booster must be Booster or XGBModel instance')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 52,
                        "column": 8
                      },
                      "end": {
                        "row": 52,
                        "column": 72
                      },
                      "text": "raise ValueError('booster must be Booster or XGBModel instance')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 52,
                            "column": 8
                          },
                          "end": {
                            "row": 52,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 52,
                            "column": 14
                          },
                          "end": {
                            "row": 52,
                            "column": 72
                          },
                          "text": "ValueError('booster must be Booster or XGBModel instance')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 52,
                                "column": 14
                              },
                              "end": {
                                "row": 52,
                                "column": 24
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 52,
                                "column": 24
                              },
                              "end": {
                                "row": 52,
                                "column": 72
                              },
                              "text": "('booster must be Booster or XGBModel instance')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 52,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 52,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 71
                                  },
                                  "text": "'booster must be Booster or XGBModel instance'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 52,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 26
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 52,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 70
                                      },
                                      "text": "booster must be Booster or XGBModel instance"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 52,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 71
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 52,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 72
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 54,
                "column": 4
              },
              "end": {
                "row": 55,
                "column": 39
              },
              "text": "if isinstance(booster, XGBModel):\n        booster = booster.get_booster()",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 54,
                    "column": 4
                  },
                  "end": {
                    "row": 54,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 54,
                    "column": 7
                  },
                  "end": {
                    "row": 54,
                    "column": 36
                  },
                  "text": "isinstance(booster, XGBModel)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 54,
                        "column": 7
                      },
                      "end": {
                        "row": 54,
                        "column": 17
                      },
                      "text": "isinstance"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 54,
                        "column": 17
                      },
                      "end": {
                        "row": 54,
                        "column": 36
                      },
                      "text": "(booster, XGBModel)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 54,
                            "column": 17
                          },
                          "end": {
                            "row": 54,
                            "column": 18
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 54,
                            "column": 18
                          },
                          "end": {
                            "row": 54,
                            "column": 25
                          },
                          "text": "booster"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 54,
                            "column": 25
                          },
                          "end": {
                            "row": 54,
                            "column": 26
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 54,
                            "column": 27
                          },
                          "end": {
                            "row": 54,
                            "column": 35
                          },
                          "text": "XGBModel"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 54,
                            "column": 35
                          },
                          "end": {
                            "row": 54,
                            "column": 36
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 54,
                    "column": 36
                  },
                  "end": {
                    "row": 54,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 55,
                    "column": 8
                  },
                  "end": {
                    "row": 55,
                    "column": 39
                  },
                  "text": "booster = booster.get_booster()",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 55,
                        "column": 8
                      },
                      "end": {
                        "row": 55,
                        "column": 39
                      },
                      "text": "booster = booster.get_booster()",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 55,
                            "column": 8
                          },
                          "end": {
                            "row": 55,
                            "column": 39
                          },
                          "text": "booster = booster.get_booster()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 55,
                                "column": 8
                              },
                              "end": {
                                "row": 55,
                                "column": 15
                              },
                              "text": "booster"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 55,
                                "column": 16
                              },
                              "end": {
                                "row": 55,
                                "column": 17
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 55,
                                "column": 18
                              },
                              "end": {
                                "row": 55,
                                "column": 39
                              },
                              "text": "booster.get_booster()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 55,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 37
                                  },
                                  "text": "booster.get_booster",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 55,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 25
                                      },
                                      "text": "booster"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 55,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 26
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 55,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 37
                                      },
                                      "text": "get_booster"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 55,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 39
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 55,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 38
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 55,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 39
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 57,
                "column": 4
              },
              "end": {
                "row": 57,
                "column": 49
              },
              "text": "tree = booster.get_dump(fmap=fmap)[num_trees]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 57,
                    "column": 4
                  },
                  "end": {
                    "row": 57,
                    "column": 49
                  },
                  "text": "tree = booster.get_dump(fmap=fmap)[num_trees]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 57,
                        "column": 4
                      },
                      "end": {
                        "row": 57,
                        "column": 8
                      },
                      "text": "tree"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 57,
                        "column": 9
                      },
                      "end": {
                        "row": 57,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 57,
                        "column": 11
                      },
                      "end": {
                        "row": 57,
                        "column": 49
                      },
                      "text": "booster.get_dump(fmap=fmap)[num_trees]",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 57,
                            "column": 11
                          },
                          "end": {
                            "row": 57,
                            "column": 38
                          },
                          "text": "booster.get_dump(fmap=fmap)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 57,
                                "column": 11
                              },
                              "end": {
                                "row": 57,
                                "column": 27
                              },
                              "text": "booster.get_dump",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 57,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 18
                                  },
                                  "text": "booster"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 57,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 19
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 57,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 27
                                  },
                                  "text": "get_dump"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 57,
                                "column": 27
                              },
                              "end": {
                                "row": 57,
                                "column": 38
                              },
                              "text": "(fmap=fmap)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 57,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "keyword_argument",
                                  "start": {
                                    "row": 57,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 37
                                  },
                                  "text": "fmap=fmap",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 57,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 32
                                      },
                                      "text": "fmap"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 57,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 33
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 57,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 57,
                                        "column": 37
                                      },
                                      "text": "fmap"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 57,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 38
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 57,
                            "column": 38
                          },
                          "end": {
                            "row": 57,
                            "column": 39
                          },
                          "text": "["
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 57,
                            "column": 39
                          },
                          "end": {
                            "row": 57,
                            "column": 48
                          },
                          "text": "num_trees"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 57,
                            "column": 48
                          },
                          "end": {
                            "row": 57,
                            "column": 49
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 58,
                "column": 4
              },
              "end": {
                "row": 58,
                "column": 23
              },
              "text": "tree = tree.split()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 58,
                    "column": 4
                  },
                  "end": {
                    "row": 58,
                    "column": 23
                  },
                  "text": "tree = tree.split()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 58,
                        "column": 4
                      },
                      "end": {
                        "row": 58,
                        "column": 8
                      },
                      "text": "tree"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 58,
                        "column": 9
                      },
                      "end": {
                        "row": 58,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 58,
                        "column": 11
                      },
                      "end": {
                        "row": 58,
                        "column": 23
                      },
                      "text": "tree.split()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 58,
                            "column": 11
                          },
                          "end": {
                            "row": 58,
                            "column": 21
                          },
                          "text": "tree.split",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 58,
                                "column": 11
                              },
                              "end": {
                                "row": 58,
                                "column": 15
                              },
                              "text": "tree"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 58,
                                "column": 15
                              },
                              "end": {
                                "row": 58,
                                "column": 16
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 58,
                                "column": 16
                              },
                              "end": {
                                "row": 58,
                                "column": 21
                              },
                              "text": "split"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 58,
                            "column": 21
                          },
                          "end": {
                            "row": 58,
                            "column": 23
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 58,
                                "column": 21
                              },
                              "end": {
                                "row": 58,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 58,
                                "column": 22
                              },
                              "end": {
                                "row": 58,
                                "column": 23
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 60,
                "column": 4
              },
              "end": {
                "row": 60,
                "column": 26
              },
              "text": "kwargs = kwargs.copy()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 60,
                    "column": 4
                  },
                  "end": {
                    "row": 60,
                    "column": 26
                  },
                  "text": "kwargs = kwargs.copy()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 60,
                        "column": 4
                      },
                      "end": {
                        "row": 60,
                        "column": 10
                      },
                      "text": "kwargs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 60,
                        "column": 11
                      },
                      "end": {
                        "row": 60,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 60,
                        "column": 13
                      },
                      "end": {
                        "row": 60,
                        "column": 26
                      },
                      "text": "kwargs.copy()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 60,
                            "column": 13
                          },
                          "end": {
                            "row": 60,
                            "column": 24
                          },
                          "text": "kwargs.copy",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 60,
                                "column": 13
                              },
                              "end": {
                                "row": 60,
                                "column": 19
                              },
                              "text": "kwargs"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 60,
                                "column": 19
                              },
                              "end": {
                                "row": 60,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 60,
                                "column": 20
                              },
                              "end": {
                                "row": 60,
                                "column": 24
                              },
                              "text": "copy"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 60,
                            "column": 24
                          },
                          "end": {
                            "row": 60,
                            "column": 26
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 60,
                                "column": 24
                              },
                              "end": {
                                "row": 60,
                                "column": 25
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 60,
                                "column": 25
                              },
                              "end": {
                                "row": 60,
                                "column": 26
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 61,
                "column": 4
              },
              "end": {
                "row": 61,
                "column": 39
              },
              "text": "kwargs.update({'rankdir': rankdir})",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 61,
                    "column": 4
                  },
                  "end": {
                    "row": 61,
                    "column": 39
                  },
                  "text": "kwargs.update({'rankdir': rankdir})",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 61,
                        "column": 4
                      },
                      "end": {
                        "row": 61,
                        "column": 17
                      },
                      "text": "kwargs.update",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 61,
                            "column": 4
                          },
                          "end": {
                            "row": 61,
                            "column": 10
                          },
                          "text": "kwargs"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 61,
                            "column": 10
                          },
                          "end": {
                            "row": 61,
                            "column": 11
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 61,
                            "column": 11
                          },
                          "end": {
                            "row": 61,
                            "column": 17
                          },
                          "text": "update"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 61,
                        "column": 17
                      },
                      "end": {
                        "row": 61,
                        "column": 39
                      },
                      "text": "({'rankdir': rankdir})",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 61,
                            "column": 17
                          },
                          "end": {
                            "row": 61,
                            "column": 18
                          },
                          "text": "("
                        },
                        {
                          "type": "dictionary",
                          "start": {
                            "row": 61,
                            "column": 18
                          },
                          "end": {
                            "row": 61,
                            "column": 38
                          },
                          "text": "{'rankdir': rankdir}",
                          "children": [
                            {
                              "type": "{",
                              "start": {
                                "row": 61,
                                "column": 18
                              },
                              "end": {
                                "row": 61,
                                "column": 19
                              },
                              "text": "{"
                            },
                            {
                              "type": "pair",
                              "start": {
                                "row": 61,
                                "column": 19
                              },
                              "end": {
                                "row": 61,
                                "column": 37
                              },
                              "text": "'rankdir': rankdir",
                              "children": [
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 61,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 28
                                  },
                                  "text": "'rankdir'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 61,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 20
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 61,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 27
                                      },
                                      "text": "rankdir"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 61,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 28
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 61,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 29
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 61,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 37
                                  },
                                  "text": "rankdir"
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start": {
                                "row": 61,
                                "column": 37
                              },
                              "end": {
                                "row": 61,
                                "column": 38
                              },
                              "text": "}"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 61,
                            "column": 38
                          },
                          "end": {
                            "row": 61,
                            "column": 39
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 62,
                "column": 4
              },
              "end": {
                "row": 62,
                "column": 38
              },
              "text": "graph = Digraph(graph_attr=kwargs)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 62,
                    "column": 4
                  },
                  "end": {
                    "row": 62,
                    "column": 38
                  },
                  "text": "graph = Digraph(graph_attr=kwargs)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 62,
                        "column": 4
                      },
                      "end": {
                        "row": 62,
                        "column": 9
                      },
                      "text": "graph"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 62,
                        "column": 10
                      },
                      "end": {
                        "row": 62,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 62,
                        "column": 12
                      },
                      "end": {
                        "row": 62,
                        "column": 38
                      },
                      "text": "Digraph(graph_attr=kwargs)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 62,
                            "column": 12
                          },
                          "end": {
                            "row": 62,
                            "column": 19
                          },
                          "text": "Digraph"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 62,
                            "column": 19
                          },
                          "end": {
                            "row": 62,
                            "column": 38
                          },
                          "text": "(graph_attr=kwargs)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 62,
                                "column": 19
                              },
                              "end": {
                                "row": 62,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 62,
                                "column": 20
                              },
                              "end": {
                                "row": 62,
                                "column": 37
                              },
                              "text": "graph_attr=kwargs",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 30
                                  },
                                  "text": "graph_attr"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 62,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 31
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 37
                                  },
                                  "text": "kwargs"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 62,
                                "column": 37
                              },
                              "end": {
                                "row": 62,
                                "column": 38
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 64,
                "column": 4
              },
              "end": {
                "row": 74,
                "column": 42
              },
              "text": "for i, text in enumerate(tree):\n        if text[0].isdigit():\n            node = _parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)\n        else:\n            if i == 0:\n                # 1st string must be node\n                raise ValueError('Unable to parse given string as tree')\n            _parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 64,
                    "column": 4
                  },
                  "end": {
                    "row": 64,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "pattern_list",
                  "start": {
                    "row": 64,
                    "column": 8
                  },
                  "end": {
                    "row": 64,
                    "column": 15
                  },
                  "text": "i, text",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 64,
                        "column": 8
                      },
                      "end": {
                        "row": 64,
                        "column": 9
                      },
                      "text": "i"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 64,
                        "column": 9
                      },
                      "end": {
                        "row": 64,
                        "column": 10
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 64,
                        "column": 11
                      },
                      "end": {
                        "row": 64,
                        "column": 15
                      },
                      "text": "text"
                    }
                  ]
                },
                {
                  "type": "in",
                  "start": {
                    "row": 64,
                    "column": 16
                  },
                  "end": {
                    "row": 64,
                    "column": 18
                  },
                  "text": "in"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 64,
                    "column": 19
                  },
                  "end": {
                    "row": 64,
                    "column": 34
                  },
                  "text": "enumerate(tree)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 64,
                        "column": 19
                      },
                      "end": {
                        "row": 64,
                        "column": 28
                      },
                      "text": "enumerate"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 64,
                        "column": 28
                      },
                      "end": {
                        "row": 64,
                        "column": 34
                      },
                      "text": "(tree)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 64,
                            "column": 28
                          },
                          "end": {
                            "row": 64,
                            "column": 29
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 29
                          },
                          "end": {
                            "row": 64,
                            "column": 33
                          },
                          "text": "tree"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 64,
                            "column": 33
                          },
                          "end": {
                            "row": 64,
                            "column": 34
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 64,
                    "column": 34
                  },
                  "end": {
                    "row": 64,
                    "column": 35
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 65,
                    "column": 8
                  },
                  "end": {
                    "row": 74,
                    "column": 42
                  },
                  "text": "if text[0].isdigit():\n            node = _parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)\n        else:\n            if i == 0:\n                # 1st string must be node\n                raise ValueError('Unable to parse given string as tree')\n            _parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 65,
                        "column": 8
                      },
                      "end": {
                        "row": 74,
                        "column": 42
                      },
                      "text": "if text[0].isdigit():\n            node = _parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)\n        else:\n            if i == 0:\n                # 1st string must be node\n                raise ValueError('Unable to parse given string as tree')\n            _parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 65,
                            "column": 8
                          },
                          "end": {
                            "row": 65,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 65,
                            "column": 11
                          },
                          "end": {
                            "row": 65,
                            "column": 28
                          },
                          "text": "text[0].isdigit()",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 65,
                                "column": 11
                              },
                              "end": {
                                "row": 65,
                                "column": 26
                              },
                              "text": "text[0].isdigit",
                              "children": [
                                {
                                  "type": "subscript",
                                  "start": {
                                    "row": 65,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 18
                                  },
                                  "text": "text[0]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 65,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 15
                                      },
                                      "text": "text"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 65,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 16
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 65,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 17
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 65,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 18
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 65,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 19
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 65,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 26
                                  },
                                  "text": "isdigit"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 65,
                                "column": 26
                              },
                              "end": {
                                "row": 65,
                                "column": 28
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 65,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 27
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 65,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 28
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 65,
                            "column": 28
                          },
                          "end": {
                            "row": 65,
                            "column": 29
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 66,
                            "column": 12
                          },
                          "end": {
                            "row": 68,
                            "column": 50
                          },
                          "text": "node = _parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 66,
                                "column": 12
                              },
                              "end": {
                                "row": 68,
                                "column": 50
                              },
                              "text": "node = _parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 66,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 50
                                  },
                                  "text": "node = _parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 66,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 66,
                                        "column": 16
                                      },
                                      "text": "node"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 66,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 66,
                                        "column": 18
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 66,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 50
                                      },
                                      "text": "_parse_node(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 66,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 66,
                                            "column": 30
                                          },
                                          "text": "_parse_node"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 66,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 68,
                                            "column": 50
                                          },
                                          "text": "(\n                graph, text, condition_node_params=condition_node_params,\n                leaf_node_params=leaf_node_params)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 66,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 66,
                                                "column": 31
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 67,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 21
                                              },
                                              "text": "graph"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 67,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 22
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 67,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 27
                                              },
                                              "text": "text"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 67,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 28
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 67,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 72
                                              },
                                              "text": "condition_node_params=condition_node_params",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 50
                                                  },
                                                  "text": "condition_node_params"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 51
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 72
                                                  },
                                                  "text": "condition_node_params"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 67,
                                                "column": 72
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 73
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 68,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 49
                                              },
                                              "text": "leaf_node_params=leaf_node_params",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 32
                                                  },
                                                  "text": "leaf_node_params"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 33
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 49
                                                  },
                                                  "text": "leaf_node_params"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 68,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 50
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 69,
                            "column": 8
                          },
                          "end": {
                            "row": 74,
                            "column": 42
                          },
                          "text": "else:\n            if i == 0:\n                # 1st string must be node\n                raise ValueError('Unable to parse given string as tree')\n            _parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 69,
                                "column": 8
                              },
                              "end": {
                                "row": 69,
                                "column": 12
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 69,
                                "column": 12
                              },
                              "end": {
                                "row": 69,
                                "column": 13
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 70,
                                "column": 12
                              },
                              "end": {
                                "row": 74,
                                "column": 42
                              },
                              "text": "if i == 0:\n                # 1st string must be node\n                raise ValueError('Unable to parse given string as tree')\n            _parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)",
                              "children": [
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 70,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 72
                                  },
                                  "text": "if i == 0:\n                # 1st string must be node\n                raise ValueError('Unable to parse given string as tree')",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 70,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 14
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 70,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 21
                                      },
                                      "text": "i == 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 70,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 16
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": "==",
                                          "start": {
                                            "row": 70,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 19
                                          },
                                          "text": "=="
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 70,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 21
                                          },
                                          "text": "0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 70,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 22
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 71,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 71,
                                        "column": 41
                                      },
                                      "text": "# 1st string must be node"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 72,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 72,
                                        "column": 72
                                      },
                                      "text": "raise ValueError('Unable to parse given string as tree')",
                                      "children": [
                                        {
                                          "type": "raise_statement",
                                          "start": {
                                            "row": 72,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 72,
                                            "column": 72
                                          },
                                          "text": "raise ValueError('Unable to parse given string as tree')",
                                          "children": [
                                            {
                                              "type": "raise",
                                              "start": {
                                                "row": 72,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 72,
                                                "column": 21
                                              },
                                              "text": "raise"
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 72,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 72,
                                                "column": 72
                                              },
                                              "text": "ValueError('Unable to parse given string as tree')",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 32
                                                  },
                                                  "text": "ValueError"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 72
                                                  },
                                                  "text": "('Unable to parse given string as tree')",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 33
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 71
                                                      },
                                                      "text": "'Unable to parse given string as tree'",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 34
                                                          },
                                                          "text": "'"
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 70
                                                          },
                                                          "text": "Unable to parse given string as tree"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 70
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 71
                                                          },
                                                          "text": "'"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 71
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 72
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 73,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 42
                                  },
                                  "text": "_parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 73,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 42
                                      },
                                      "text": "_parse_edge(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 73,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 73,
                                            "column": 23
                                          },
                                          "text": "_parse_edge"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 73,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 42
                                          },
                                          "text": "(graph, node, text, yes_color=yes_color,\n                        no_color=no_color)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 73,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 24
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 73,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 29
                                              },
                                              "text": "graph"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 73,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 30
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 73,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 35
                                              },
                                              "text": "node"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 73,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 36
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 73,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 41
                                              },
                                              "text": "text"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 73,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 42
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 73,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 62
                                              },
                                              "text": "yes_color=yes_color",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 73,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 73,
                                                    "column": 52
                                                  },
                                                  "text": "yes_color"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 73,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 73,
                                                    "column": 53
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 73,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 73,
                                                    "column": 62
                                                  },
                                                  "text": "yes_color"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 73,
                                                "column": 62
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 63
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 74,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 74,
                                                "column": 41
                                              },
                                              "text": "no_color=no_color",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 32
                                                  },
                                                  "text": "no_color"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 33
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 41
                                                  },
                                                  "text": "no_color"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 74,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 74,
                                                "column": 42
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 76,
                "column": 4
              },
              "end": {
                "row": 76,
                "column": 16
              },
              "text": "return graph",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 76,
                    "column": 4
                  },
                  "end": {
                    "row": 76,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 76,
                    "column": 11
                  },
                  "end": {
                    "row": 76,
                    "column": 16
                  },
                  "text": "graph"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}