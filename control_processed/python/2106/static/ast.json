{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 27,
    "column": 54
  },
  "text": "def cumsum(self, axis=0, *args, **kwargs):\n        \"\"\"\n        Cumulative sum of non-NA/null values.\n\n        When performing the cumulative summation, any non-NA/null values will\n        be skipped. The resulting SparseArray will preserve the locations of\n        NaN values, but the fill value will be `np.nan` regardless.\n\n        Parameters\n        ----------\n        axis : int or None\n            Axis over which to perform the cumulative summation. If None,\n            perform cumulative summation over flattened array.\n\n        Returns\n        -------\n        cumsum : SparseArray\n        \"\"\"\n        nv.validate_cumsum(args, kwargs)\n\n        if axis is not None and axis >= self.ndim:  # Mimic ndarray behaviour.\n            raise ValueError(\"axis(={axis}) out of bounds\".format(axis=axis))\n\n        if not self._null_fill_value:\n            return SparseArray(self.to_dense()).cumsum()\n\n        return SparseArray(self.sp_values.cumsum(), sparse_index=self.sp_index,\n                           fill_value=self.fill_value)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 27,
        "column": 54
      },
      "text": "def cumsum(self, axis=0, *args, **kwargs):\n        \"\"\"\n        Cumulative sum of non-NA/null values.\n\n        When performing the cumulative summation, any non-NA/null values will\n        be skipped. The resulting SparseArray will preserve the locations of\n        NaN values, but the fill value will be `np.nan` regardless.\n\n        Parameters\n        ----------\n        axis : int or None\n            Axis over which to perform the cumulative summation. If None,\n            perform cumulative summation over flattened array.\n\n        Returns\n        -------\n        cumsum : SparseArray\n        \"\"\"\n        nv.validate_cumsum(args, kwargs)\n\n        if axis is not None and axis >= self.ndim:  # Mimic ndarray behaviour.\n            raise ValueError(\"axis(={axis}) out of bounds\".format(axis=axis))\n\n        if not self._null_fill_value:\n            return SparseArray(self.to_dense()).cumsum()\n\n        return SparseArray(self.sp_values.cumsum(), sparse_index=self.sp_index,\n                           fill_value=self.fill_value)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "cumsum"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": "(self, axis=0, *args, **kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "axis=0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 17
                  },
                  "end": {
                    "row": 0,
                    "column": 21
                  },
                  "text": "axis"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 21
                  },
                  "end": {
                    "row": 0,
                    "column": 22
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 22
                  },
                  "end": {
                    "row": 0,
                    "column": 23
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "list_splat_pattern",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "*args",
              "children": [
                {
                  "type": "*",
                  "start": {
                    "row": 0,
                    "column": 25
                  },
                  "end": {
                    "row": 0,
                    "column": 26
                  },
                  "text": "*"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 26
                  },
                  "end": {
                    "row": 0,
                    "column": 30
                  },
                  "text": "args"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "**kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 34
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 34
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 41
          },
          "end": {
            "row": 0,
            "column": 42
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 27,
            "column": 54
          },
          "text": "\"\"\"\n        Cumulative sum of non-NA/null values.\n\n        When performing the cumulative summation, any non-NA/null values will\n        be skipped. The resulting SparseArray will preserve the locations of\n        NaN values, but the fill value will be `np.nan` regardless.\n\n        Parameters\n        ----------\n        axis : int or None\n            Axis over which to perform the cumulative summation. If None,\n            perform cumulative summation over flattened array.\n\n        Returns\n        -------\n        cumsum : SparseArray\n        \"\"\"\n        nv.validate_cumsum(args, kwargs)\n\n        if axis is not None and axis >= self.ndim:  # Mimic ndarray behaviour.\n            raise ValueError(\"axis(={axis}) out of bounds\".format(axis=axis))\n\n        if not self._null_fill_value:\n            return SparseArray(self.to_dense()).cumsum()\n\n        return SparseArray(self.sp_values.cumsum(), sparse_index=self.sp_index,\n                           fill_value=self.fill_value)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 11
              },
              "text": "\"\"\"\n        Cumulative sum of non-NA/null values.\n\n        When performing the cumulative summation, any non-NA/null values will\n        be skipped. The resulting SparseArray will preserve the locations of\n        NaN values, but the fill value will be `np.nan` regardless.\n\n        Parameters\n        ----------\n        axis : int or None\n            Axis over which to perform the cumulative summation. If None,\n            perform cumulative summation over flattened array.\n\n        Returns\n        -------\n        cumsum : SparseArray\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Cumulative sum of non-NA/null values.\n\n        When performing the cumulative summation, any non-NA/null values will\n        be skipped. The resulting SparseArray will preserve the locations of\n        NaN values, but the fill value will be `np.nan` regardless.\n\n        Parameters\n        ----------\n        axis : int or None\n            Axis over which to perform the cumulative summation. If None,\n            perform cumulative summation over flattened array.\n\n        Returns\n        -------\n        cumsum : SparseArray\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 17,
                        "column": 8
                      },
                      "text": "\n        Cumulative sum of non-NA/null values.\n\n        When performing the cumulative summation, any non-NA/null values will\n        be skipped. The resulting SparseArray will preserve the locations of\n        NaN values, but the fill value will be `np.nan` regardless.\n\n        Parameters\n        ----------\n        axis : int or None\n            Axis over which to perform the cumulative summation. If None,\n            perform cumulative summation over flattened array.\n\n        Returns\n        -------\n        cumsum : SparseArray\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 40
              },
              "text": "nv.validate_cumsum(args, kwargs)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 40
                  },
                  "text": "nv.validate_cumsum(args, kwargs)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 18,
                        "column": 8
                      },
                      "end": {
                        "row": 18,
                        "column": 26
                      },
                      "text": "nv.validate_cumsum",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 8
                          },
                          "end": {
                            "row": 18,
                            "column": 10
                          },
                          "text": "nv"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 18,
                            "column": 10
                          },
                          "end": {
                            "row": 18,
                            "column": 11
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 11
                          },
                          "end": {
                            "row": 18,
                            "column": 26
                          },
                          "text": "validate_cumsum"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 18,
                        "column": 26
                      },
                      "end": {
                        "row": 18,
                        "column": 40
                      },
                      "text": "(args, kwargs)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 18,
                            "column": 26
                          },
                          "end": {
                            "row": 18,
                            "column": 27
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 27
                          },
                          "end": {
                            "row": 18,
                            "column": 31
                          },
                          "text": "args"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 18,
                            "column": 31
                          },
                          "end": {
                            "row": 18,
                            "column": 32
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 33
                          },
                          "end": {
                            "row": 18,
                            "column": 39
                          },
                          "text": "kwargs"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 18,
                            "column": 39
                          },
                          "end": {
                            "row": 18,
                            "column": 40
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 21,
                "column": 77
              },
              "text": "if axis is not None and axis >= self.ndim:  # Mimic ndarray behaviour.\n            raise ValueError(\"axis(={axis}) out of bounds\".format(axis=axis))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 20,
                    "column": 11
                  },
                  "end": {
                    "row": 20,
                    "column": 49
                  },
                  "text": "axis is not None and axis >= self.ndim",
                  "children": [
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 20,
                        "column": 11
                      },
                      "end": {
                        "row": 20,
                        "column": 27
                      },
                      "text": "axis is not None",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 11
                          },
                          "end": {
                            "row": 20,
                            "column": 15
                          },
                          "text": "axis"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 20,
                            "column": 16
                          },
                          "end": {
                            "row": 20,
                            "column": 18
                          },
                          "text": "is"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 20,
                            "column": 19
                          },
                          "end": {
                            "row": 20,
                            "column": 22
                          },
                          "text": "not"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 20,
                            "column": 23
                          },
                          "end": {
                            "row": 20,
                            "column": 27
                          },
                          "text": "None"
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 20,
                        "column": 28
                      },
                      "end": {
                        "row": 20,
                        "column": 31
                      },
                      "text": "and"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 20,
                        "column": 32
                      },
                      "end": {
                        "row": 20,
                        "column": 49
                      },
                      "text": "axis >= self.ndim",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 32
                          },
                          "end": {
                            "row": 20,
                            "column": 36
                          },
                          "text": "axis"
                        },
                        {
                          "type": ">=",
                          "start": {
                            "row": 20,
                            "column": 37
                          },
                          "end": {
                            "row": 20,
                            "column": 39
                          },
                          "text": ">="
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 20,
                            "column": 40
                          },
                          "end": {
                            "row": 20,
                            "column": 49
                          },
                          "text": "self.ndim",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 40
                              },
                              "end": {
                                "row": 20,
                                "column": 44
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 20,
                                "column": 44
                              },
                              "end": {
                                "row": 20,
                                "column": 45
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 45
                              },
                              "end": {
                                "row": 20,
                                "column": 49
                              },
                              "text": "ndim"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 20,
                    "column": 49
                  },
                  "end": {
                    "row": 20,
                    "column": 50
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 20,
                    "column": 52
                  },
                  "end": {
                    "row": 20,
                    "column": 78
                  },
                  "text": "# Mimic ndarray behaviour."
                },
                {
                  "type": "block",
                  "start": {
                    "row": 21,
                    "column": 12
                  },
                  "end": {
                    "row": 21,
                    "column": 77
                  },
                  "text": "raise ValueError(\"axis(={axis}) out of bounds\".format(axis=axis))",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 21,
                        "column": 12
                      },
                      "end": {
                        "row": 21,
                        "column": 77
                      },
                      "text": "raise ValueError(\"axis(={axis}) out of bounds\".format(axis=axis))",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 21,
                            "column": 12
                          },
                          "end": {
                            "row": 21,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 21,
                            "column": 18
                          },
                          "end": {
                            "row": 21,
                            "column": 77
                          },
                          "text": "ValueError(\"axis(={axis}) out of bounds\".format(axis=axis))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 18
                              },
                              "end": {
                                "row": 21,
                                "column": 28
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 21,
                                "column": 28
                              },
                              "end": {
                                "row": 21,
                                "column": 77
                              },
                              "text": "(\"axis(={axis}) out of bounds\".format(axis=axis))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 21,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 21,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 76
                                  },
                                  "text": "\"axis(={axis}) out of bounds\".format(axis=axis)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 21,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 65
                                      },
                                      "text": "\"axis(={axis}) out of bounds\".format",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 21,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 58
                                          },
                                          "text": "\"axis(={axis}) out of bounds\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 21,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 30
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 21,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 57
                                              },
                                              "text": "axis(={axis}) out of bounds"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 21,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 58
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 21,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 59
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 21,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 65
                                          },
                                          "text": "format"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 21,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 76
                                      },
                                      "text": "(axis=axis)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 21,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 66
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "keyword_argument",
                                          "start": {
                                            "row": 21,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 75
                                          },
                                          "text": "axis=axis",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 70
                                              },
                                              "text": "axis"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 21,
                                                "column": 70
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 71
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 21,
                                                "column": 71
                                              },
                                              "end": {
                                                "row": 21,
                                                "column": 75
                                              },
                                              "text": "axis"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 21,
                                            "column": 75
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 76
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 21,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 77
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 23,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 56
              },
              "text": "if not self._null_fill_value:\n            return SparseArray(self.to_dense()).cumsum()",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 23,
                    "column": 11
                  },
                  "end": {
                    "row": 23,
                    "column": 36
                  },
                  "text": "not self._null_fill_value",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 23,
                        "column": 11
                      },
                      "end": {
                        "row": 23,
                        "column": 14
                      },
                      "text": "not"
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 23,
                        "column": 15
                      },
                      "end": {
                        "row": 23,
                        "column": 36
                      },
                      "text": "self._null_fill_value",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 15
                          },
                          "end": {
                            "row": 23,
                            "column": 19
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 23,
                            "column": 19
                          },
                          "end": {
                            "row": 23,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 20
                          },
                          "end": {
                            "row": 23,
                            "column": 36
                          },
                          "text": "_null_fill_value"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 23,
                    "column": 36
                  },
                  "end": {
                    "row": 23,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 24,
                    "column": 12
                  },
                  "end": {
                    "row": 24,
                    "column": 56
                  },
                  "text": "return SparseArray(self.to_dense()).cumsum()",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 56
                      },
                      "text": "return SparseArray(self.to_dense()).cumsum()",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 24,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 24,
                            "column": 19
                          },
                          "end": {
                            "row": 24,
                            "column": 56
                          },
                          "text": "SparseArray(self.to_dense()).cumsum()",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 24,
                                "column": 19
                              },
                              "end": {
                                "row": 24,
                                "column": 54
                              },
                              "text": "SparseArray(self.to_dense()).cumsum",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 24,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 47
                                  },
                                  "text": "SparseArray(self.to_dense())",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 24,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 30
                                      },
                                      "text": "SparseArray"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 24,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 47
                                      },
                                      "text": "(self.to_dense())",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 24,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 31
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 24,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 46
                                          },
                                          "text": "self.to_dense()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 24,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 44
                                              },
                                              "text": "self.to_dense",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 35
                                                  },
                                                  "text": "self"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 36
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 44
                                                  },
                                                  "text": "to_dense"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 24,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 46
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 45
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 46
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 24,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 47
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 24,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 48
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 54
                                  },
                                  "text": "cumsum"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 24,
                                "column": 54
                              },
                              "end": {
                                "row": 24,
                                "column": 56
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 24,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 55
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 24,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 26,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 54
              },
              "text": "return SparseArray(self.sp_values.cumsum(), sparse_index=self.sp_index,\n                           fill_value=self.fill_value)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 26,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 26,
                    "column": 15
                  },
                  "end": {
                    "row": 27,
                    "column": 54
                  },
                  "text": "SparseArray(self.sp_values.cumsum(), sparse_index=self.sp_index,\n                           fill_value=self.fill_value)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 26,
                        "column": 15
                      },
                      "end": {
                        "row": 26,
                        "column": 26
                      },
                      "text": "SparseArray"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 26,
                        "column": 26
                      },
                      "end": {
                        "row": 27,
                        "column": 54
                      },
                      "text": "(self.sp_values.cumsum(), sparse_index=self.sp_index,\n                           fill_value=self.fill_value)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 26,
                            "column": 26
                          },
                          "end": {
                            "row": 26,
                            "column": 27
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 26,
                            "column": 27
                          },
                          "end": {
                            "row": 26,
                            "column": 50
                          },
                          "text": "self.sp_values.cumsum()",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 26,
                                "column": 27
                              },
                              "end": {
                                "row": 26,
                                "column": 48
                              },
                              "text": "self.sp_values.cumsum",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 26,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 41
                                  },
                                  "text": "self.sp_values",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 31
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 26,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 32
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 41
                                      },
                                      "text": "sp_values"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 26,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 42
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 48
                                  },
                                  "text": "cumsum"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 26,
                                "column": 48
                              },
                              "end": {
                                "row": 26,
                                "column": 50
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 26,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 49
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 26,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 50
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 26,
                            "column": 50
                          },
                          "end": {
                            "row": 26,
                            "column": 51
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 26,
                            "column": 52
                          },
                          "end": {
                            "row": 26,
                            "column": 78
                          },
                          "text": "sparse_index=self.sp_index",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 52
                              },
                              "end": {
                                "row": 26,
                                "column": 64
                              },
                              "text": "sparse_index"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 26,
                                "column": 64
                              },
                              "end": {
                                "row": 26,
                                "column": 65
                              },
                              "text": "="
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 26,
                                "column": 65
                              },
                              "end": {
                                "row": 26,
                                "column": 78
                              },
                              "text": "self.sp_index",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 69
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 26,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 70
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 70
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 78
                                  },
                                  "text": "sp_index"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 26,
                            "column": 78
                          },
                          "end": {
                            "row": 26,
                            "column": 79
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 27,
                            "column": 27
                          },
                          "end": {
                            "row": 27,
                            "column": 53
                          },
                          "text": "fill_value=self.fill_value",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 27
                              },
                              "end": {
                                "row": 27,
                                "column": 37
                              },
                              "text": "fill_value"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 27,
                                "column": 37
                              },
                              "end": {
                                "row": 27,
                                "column": 38
                              },
                              "text": "="
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 27,
                                "column": 38
                              },
                              "end": {
                                "row": 27,
                                "column": 53
                              },
                              "text": "self.fill_value",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 42
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 27,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 43
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 53
                                  },
                                  "text": "fill_value"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 27,
                            "column": 53
                          },
                          "end": {
                            "row": 27,
                            "column": 54
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}