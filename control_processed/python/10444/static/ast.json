{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 18,
    "column": 48
  },
  "text": "def same(*values):\n    \"\"\"\n    Check if all values in a sequence are equal.\n\n    Returns True on empty sequences.\n\n    Examples\n    --------\n    >>> same(1, 1, 1, 1)\n    True\n    >>> same(1, 2, 1)\n    False\n    >>> same()\n    True\n    \"\"\"\n    if not values:\n        return True\n    first, rest = values[0], values[1:]\n    return all(value == first for value in rest)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 18,
        "column": 48
      },
      "text": "def same(*values):\n    \"\"\"\n    Check if all values in a sequence are equal.\n\n    Returns True on empty sequences.\n\n    Examples\n    --------\n    >>> same(1, 1, 1, 1)\n    True\n    >>> same(1, 2, 1)\n    False\n    >>> same()\n    True\n    \"\"\"\n    if not values:\n        return True\n    first, rest = values[0], values[1:]\n    return all(value == first for value in rest)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "same"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "(*values)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "("
            },
            {
              "type": "list_splat_pattern",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "*values",
              "children": [
                {
                  "type": "*",
                  "start": {
                    "row": 0,
                    "column": 9
                  },
                  "end": {
                    "row": 0,
                    "column": 10
                  },
                  "text": "*"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 10
                  },
                  "end": {
                    "row": 0,
                    "column": 16
                  },
                  "text": "values"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 17
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 18,
            "column": 48
          },
          "text": "\"\"\"\n    Check if all values in a sequence are equal.\n\n    Returns True on empty sequences.\n\n    Examples\n    --------\n    >>> same(1, 1, 1, 1)\n    True\n    >>> same(1, 2, 1)\n    False\n    >>> same()\n    True\n    \"\"\"\n    if not values:\n        return True\n    first, rest = values[0], values[1:]\n    return all(value == first for value in rest)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 14,
                "column": 7
              },
              "text": "\"\"\"\n    Check if all values in a sequence are equal.\n\n    Returns True on empty sequences.\n\n    Examples\n    --------\n    >>> same(1, 1, 1, 1)\n    True\n    >>> same(1, 2, 1)\n    False\n    >>> same()\n    True\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 14,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Check if all values in a sequence are equal.\n\n    Returns True on empty sequences.\n\n    Examples\n    --------\n    >>> same(1, 1, 1, 1)\n    True\n    >>> same(1, 2, 1)\n    False\n    >>> same()\n    True\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 14,
                        "column": 4
                      },
                      "text": "\n    Check if all values in a sequence are equal.\n\n    Returns True on empty sequences.\n\n    Examples\n    --------\n    >>> same(1, 1, 1, 1)\n    True\n    >>> same(1, 2, 1)\n    False\n    >>> same()\n    True\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 14,
                        "column": 4
                      },
                      "end": {
                        "row": 14,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 15,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 19
              },
              "text": "if not values:\n        return True",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 15,
                    "column": 4
                  },
                  "end": {
                    "row": 15,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 15,
                    "column": 7
                  },
                  "end": {
                    "row": 15,
                    "column": 17
                  },
                  "text": "not values",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 15,
                        "column": 7
                      },
                      "end": {
                        "row": 15,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 15,
                        "column": 11
                      },
                      "end": {
                        "row": 15,
                        "column": 17
                      },
                      "text": "values"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 15,
                    "column": 17
                  },
                  "end": {
                    "row": 15,
                    "column": 18
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 19
                  },
                  "text": "return True",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 16,
                        "column": 19
                      },
                      "text": "return True",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 16,
                            "column": 8
                          },
                          "end": {
                            "row": 16,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "true",
                          "start": {
                            "row": 16,
                            "column": 15
                          },
                          "end": {
                            "row": 16,
                            "column": 19
                          },
                          "text": "True"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 17,
                "column": 39
              },
              "text": "first, rest = values[0], values[1:]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 39
                  },
                  "text": "first, rest = values[0], values[1:]",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 17,
                        "column": 4
                      },
                      "end": {
                        "row": 17,
                        "column": 15
                      },
                      "text": "first, rest",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 4
                          },
                          "end": {
                            "row": 17,
                            "column": 9
                          },
                          "text": "first"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 17,
                            "column": 9
                          },
                          "end": {
                            "row": 17,
                            "column": 10
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 11
                          },
                          "end": {
                            "row": 17,
                            "column": 15
                          },
                          "text": "rest"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 17,
                        "column": 16
                      },
                      "end": {
                        "row": 17,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "expression_list",
                      "start": {
                        "row": 17,
                        "column": 18
                      },
                      "end": {
                        "row": 17,
                        "column": 39
                      },
                      "text": "values[0], values[1:]",
                      "children": [
                        {
                          "type": "subscript",
                          "start": {
                            "row": 17,
                            "column": 18
                          },
                          "end": {
                            "row": 17,
                            "column": 27
                          },
                          "text": "values[0]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 18
                              },
                              "end": {
                                "row": 17,
                                "column": 24
                              },
                              "text": "values"
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 17,
                                "column": 24
                              },
                              "end": {
                                "row": 17,
                                "column": 25
                              },
                              "text": "["
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 17,
                                "column": 25
                              },
                              "end": {
                                "row": 17,
                                "column": 26
                              },
                              "text": "0"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 17,
                                "column": 26
                              },
                              "end": {
                                "row": 17,
                                "column": 27
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 17,
                            "column": 27
                          },
                          "end": {
                            "row": 17,
                            "column": 28
                          },
                          "text": ","
                        },
                        {
                          "type": "subscript",
                          "start": {
                            "row": 17,
                            "column": 29
                          },
                          "end": {
                            "row": 17,
                            "column": 39
                          },
                          "text": "values[1:]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 29
                              },
                              "end": {
                                "row": 17,
                                "column": 35
                              },
                              "text": "values"
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 17,
                                "column": 35
                              },
                              "end": {
                                "row": 17,
                                "column": 36
                              },
                              "text": "["
                            },
                            {
                              "type": "slice",
                              "start": {
                                "row": 17,
                                "column": 36
                              },
                              "end": {
                                "row": 17,
                                "column": 38
                              },
                              "text": "1:",
                              "children": [
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 17,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 37
                                  },
                                  "text": "1"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 17,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 38
                                  },
                                  "text": ":"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 17,
                                "column": 38
                              },
                              "end": {
                                "row": 17,
                                "column": 39
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 48
              },
              "text": "return all(value == first for value in rest)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 18,
                    "column": 4
                  },
                  "end": {
                    "row": 18,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 18,
                    "column": 11
                  },
                  "end": {
                    "row": 18,
                    "column": 48
                  },
                  "text": "all(value == first for value in rest)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 11
                      },
                      "end": {
                        "row": 18,
                        "column": 14
                      },
                      "text": "all"
                    },
                    {
                      "type": "generator_expression",
                      "start": {
                        "row": 18,
                        "column": 14
                      },
                      "end": {
                        "row": 18,
                        "column": 48
                      },
                      "text": "(value == first for value in rest)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 18,
                            "column": 14
                          },
                          "end": {
                            "row": 18,
                            "column": 15
                          },
                          "text": "("
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 18,
                            "column": 15
                          },
                          "end": {
                            "row": 18,
                            "column": 29
                          },
                          "text": "value == first",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 15
                              },
                              "end": {
                                "row": 18,
                                "column": 20
                              },
                              "text": "value"
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 18,
                                "column": 21
                              },
                              "end": {
                                "row": 18,
                                "column": 23
                              },
                              "text": "=="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 24
                              },
                              "end": {
                                "row": 18,
                                "column": 29
                              },
                              "text": "first"
                            }
                          ]
                        },
                        {
                          "type": "for_in_clause",
                          "start": {
                            "row": 18,
                            "column": 30
                          },
                          "end": {
                            "row": 18,
                            "column": 47
                          },
                          "text": "for value in rest",
                          "children": [
                            {
                              "type": "for",
                              "start": {
                                "row": 18,
                                "column": 30
                              },
                              "end": {
                                "row": 18,
                                "column": 33
                              },
                              "text": "for"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 34
                              },
                              "end": {
                                "row": 18,
                                "column": 39
                              },
                              "text": "value"
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 18,
                                "column": 40
                              },
                              "end": {
                                "row": 18,
                                "column": 42
                              },
                              "text": "in"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 43
                              },
                              "end": {
                                "row": 18,
                                "column": 47
                              },
                              "text": "rest"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 18,
                            "column": 47
                          },
                          "end": {
                            "row": 18,
                            "column": 48
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}