{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 38,
    "column": 26
  },
  "text": "def handle_split(self, asset, ratio):\n        \"\"\"\n        Update the position by the split ratio, and return the resulting\n        fractional share that will be converted into cash.\n\n        Returns the unused cash.\n        \"\"\"\n        if self.asset != asset:\n            raise Exception(\"updating split with the wrong asset!\")\n\n        # adjust the # of shares by the ratio\n        # (if we had 100 shares, and the ratio is 3,\n        #  we now have 33 shares)\n        # (old_share_count / ratio = new_share_count)\n        # (old_price * ratio = new_price)\n\n        # e.g., 33.333\n        raw_share_count = self.amount / float(ratio)\n\n        # e.g., 33\n        full_share_count = np.floor(raw_share_count)\n\n        # e.g., 0.333\n        fractional_share_count = raw_share_count - full_share_count\n\n        # adjust the cost basis to the nearest cent, e.g., 60.0\n        new_cost_basis = round(self.cost_basis * ratio, 2)\n\n        self.cost_basis = new_cost_basis\n        self.amount = full_share_count\n\n        return_cash = round(float(fractional_share_count * new_cost_basis), 2)\n\n        log.info(\"after split: \" + str(self))\n        log.info(\"returning cash: \" + str(return_cash))\n\n        # return the leftover cash, which will be converted into cash\n        # (rounded to the nearest cent)\n        return return_cash",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 38,
        "column": 26
      },
      "text": "def handle_split(self, asset, ratio):\n        \"\"\"\n        Update the position by the split ratio, and return the resulting\n        fractional share that will be converted into cash.\n\n        Returns the unused cash.\n        \"\"\"\n        if self.asset != asset:\n            raise Exception(\"updating split with the wrong asset!\")\n\n        # adjust the # of shares by the ratio\n        # (if we had 100 shares, and the ratio is 3,\n        #  we now have 33 shares)\n        # (old_share_count / ratio = new_share_count)\n        # (old_price * ratio = new_price)\n\n        # e.g., 33.333\n        raw_share_count = self.amount / float(ratio)\n\n        # e.g., 33\n        full_share_count = np.floor(raw_share_count)\n\n        # e.g., 0.333\n        fractional_share_count = raw_share_count - full_share_count\n\n        # adjust the cost basis to the nearest cent, e.g., 60.0\n        new_cost_basis = round(self.cost_basis * ratio, 2)\n\n        self.cost_basis = new_cost_basis\n        self.amount = full_share_count\n\n        return_cash = round(float(fractional_share_count * new_cost_basis), 2)\n\n        log.info(\"after split: \" + str(self))\n        log.info(\"returning cash: \" + str(return_cash))\n\n        # return the leftover cash, which will be converted into cash\n        # (rounded to the nearest cent)\n        return return_cash",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 16
          },
          "text": "handle_split"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 16
          },
          "end": {
            "row": 0,
            "column": 36
          },
          "text": "(self, asset, ratio)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "asset"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "ratio"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 36
          },
          "end": {
            "row": 0,
            "column": 37
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 38,
            "column": 26
          },
          "text": "\"\"\"\n        Update the position by the split ratio, and return the resulting\n        fractional share that will be converted into cash.\n\n        Returns the unused cash.\n        \"\"\"\n        if self.asset != asset:\n            raise Exception(\"updating split with the wrong asset!\")\n\n        # adjust the # of shares by the ratio\n        # (if we had 100 shares, and the ratio is 3,\n        #  we now have 33 shares)\n        # (old_share_count / ratio = new_share_count)\n        # (old_price * ratio = new_price)\n\n        # e.g., 33.333\n        raw_share_count = self.amount / float(ratio)\n\n        # e.g., 33\n        full_share_count = np.floor(raw_share_count)\n\n        # e.g., 0.333\n        fractional_share_count = raw_share_count - full_share_count\n\n        # adjust the cost basis to the nearest cent, e.g., 60.0\n        new_cost_basis = round(self.cost_basis * ratio, 2)\n\n        self.cost_basis = new_cost_basis\n        self.amount = full_share_count\n\n        return_cash = round(float(fractional_share_count * new_cost_basis), 2)\n\n        log.info(\"after split: \" + str(self))\n        log.info(\"returning cash: \" + str(return_cash))\n\n        # return the leftover cash, which will be converted into cash\n        # (rounded to the nearest cent)\n        return return_cash",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 6,
                "column": 11
              },
              "text": "\"\"\"\n        Update the position by the split ratio, and return the resulting\n        fractional share that will be converted into cash.\n\n        Returns the unused cash.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Update the position by the split ratio, and return the resulting\n        fractional share that will be converted into cash.\n\n        Returns the unused cash.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 6,
                        "column": 8
                      },
                      "text": "\n        Update the position by the split ratio, and return the resulting\n        fractional share that will be converted into cash.\n\n        Returns the unused cash.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 7,
                "column": 8
              },
              "end": {
                "row": 8,
                "column": 67
              },
              "text": "if self.asset != asset:\n            raise Exception(\"updating split with the wrong asset!\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 7,
                    "column": 11
                  },
                  "end": {
                    "row": 7,
                    "column": 30
                  },
                  "text": "self.asset != asset",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 7,
                        "column": 11
                      },
                      "end": {
                        "row": 7,
                        "column": 21
                      },
                      "text": "self.asset",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 11
                          },
                          "end": {
                            "row": 7,
                            "column": 15
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 7,
                            "column": 15
                          },
                          "end": {
                            "row": 7,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 16
                          },
                          "end": {
                            "row": 7,
                            "column": 21
                          },
                          "text": "asset"
                        }
                      ]
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 7,
                        "column": 22
                      },
                      "end": {
                        "row": 7,
                        "column": 24
                      },
                      "text": "!="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 25
                      },
                      "end": {
                        "row": 7,
                        "column": 30
                      },
                      "text": "asset"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 7,
                    "column": 30
                  },
                  "end": {
                    "row": 7,
                    "column": 31
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 8,
                    "column": 12
                  },
                  "end": {
                    "row": 8,
                    "column": 67
                  },
                  "text": "raise Exception(\"updating split with the wrong asset!\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 8,
                        "column": 12
                      },
                      "end": {
                        "row": 8,
                        "column": 67
                      },
                      "text": "raise Exception(\"updating split with the wrong asset!\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 8,
                            "column": 12
                          },
                          "end": {
                            "row": 8,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 8,
                            "column": 18
                          },
                          "end": {
                            "row": 8,
                            "column": 67
                          },
                          "text": "Exception(\"updating split with the wrong asset!\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 18
                              },
                              "end": {
                                "row": 8,
                                "column": 27
                              },
                              "text": "Exception"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 8,
                                "column": 27
                              },
                              "end": {
                                "row": 8,
                                "column": 67
                              },
                              "text": "(\"updating split with the wrong asset!\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 8,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 8,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 66
                                  },
                                  "text": "\"updating split with the wrong asset!\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 8,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 29
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 8,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 65
                                      },
                                      "text": "updating split with the wrong asset!"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 8,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 66
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 8,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 67
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 10,
                "column": 8
              },
              "end": {
                "row": 10,
                "column": 45
              },
              "text": "# adjust the # of shares by the ratio"
            },
            {
              "type": "comment",
              "start": {
                "row": 11,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 52
              },
              "text": "# (if we had 100 shares, and the ratio is 3,"
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 33
              },
              "text": "#  we now have 33 shares)"
            },
            {
              "type": "comment",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 53
              },
              "text": "# (old_share_count / ratio = new_share_count)"
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 41
              },
              "text": "# (old_price * ratio = new_price)"
            },
            {
              "type": "comment",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 22
              },
              "text": "# e.g., 33.333"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 17,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 52
              },
              "text": "raw_share_count = self.amount / float(ratio)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 17,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 52
                  },
                  "text": "raw_share_count = self.amount / float(ratio)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 23
                      },
                      "text": "raw_share_count"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 17,
                        "column": 24
                      },
                      "end": {
                        "row": 17,
                        "column": 25
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 17,
                        "column": 26
                      },
                      "end": {
                        "row": 17,
                        "column": 52
                      },
                      "text": "self.amount / float(ratio)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 17,
                            "column": 26
                          },
                          "end": {
                            "row": 17,
                            "column": 37
                          },
                          "text": "self.amount",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 26
                              },
                              "end": {
                                "row": 17,
                                "column": 30
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 17,
                                "column": 30
                              },
                              "end": {
                                "row": 17,
                                "column": 31
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 31
                              },
                              "end": {
                                "row": 17,
                                "column": 37
                              },
                              "text": "amount"
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start": {
                            "row": 17,
                            "column": 38
                          },
                          "end": {
                            "row": 17,
                            "column": 39
                          },
                          "text": "/"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 17,
                            "column": 40
                          },
                          "end": {
                            "row": 17,
                            "column": 52
                          },
                          "text": "float(ratio)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 40
                              },
                              "end": {
                                "row": 17,
                                "column": 45
                              },
                              "text": "float"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 17,
                                "column": 45
                              },
                              "end": {
                                "row": 17,
                                "column": 52
                              },
                              "text": "(ratio)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 17,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 46
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 51
                                  },
                                  "text": "ratio"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 17,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 52
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 18
              },
              "text": "# e.g., 33"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 52
              },
              "text": "full_share_count = np.floor(raw_share_count)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 52
                  },
                  "text": "full_share_count = np.floor(raw_share_count)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 24
                      },
                      "text": "full_share_count"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 25
                      },
                      "end": {
                        "row": 20,
                        "column": 26
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 20,
                        "column": 27
                      },
                      "end": {
                        "row": 20,
                        "column": 52
                      },
                      "text": "np.floor(raw_share_count)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 20,
                            "column": 27
                          },
                          "end": {
                            "row": 20,
                            "column": 35
                          },
                          "text": "np.floor",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 27
                              },
                              "end": {
                                "row": 20,
                                "column": 29
                              },
                              "text": "np"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 20,
                                "column": 29
                              },
                              "end": {
                                "row": 20,
                                "column": 30
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 30
                              },
                              "end": {
                                "row": 20,
                                "column": 35
                              },
                              "text": "floor"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 20,
                            "column": 35
                          },
                          "end": {
                            "row": 20,
                            "column": 52
                          },
                          "text": "(raw_share_count)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 20,
                                "column": 35
                              },
                              "end": {
                                "row": 20,
                                "column": 36
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 36
                              },
                              "end": {
                                "row": 20,
                                "column": 51
                              },
                              "text": "raw_share_count"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 20,
                                "column": 51
                              },
                              "end": {
                                "row": 20,
                                "column": 52
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 22,
                "column": 8
              },
              "end": {
                "row": 22,
                "column": 21
              },
              "text": "# e.g., 0.333"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 23,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 67
              },
              "text": "fractional_share_count = raw_share_count - full_share_count",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 67
                  },
                  "text": "fractional_share_count = raw_share_count - full_share_count",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 30
                      },
                      "text": "fractional_share_count"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 23,
                        "column": 31
                      },
                      "end": {
                        "row": 23,
                        "column": 32
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 23,
                        "column": 33
                      },
                      "end": {
                        "row": 23,
                        "column": 67
                      },
                      "text": "raw_share_count - full_share_count",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 33
                          },
                          "end": {
                            "row": 23,
                            "column": 48
                          },
                          "text": "raw_share_count"
                        },
                        {
                          "type": "-",
                          "start": {
                            "row": 23,
                            "column": 49
                          },
                          "end": {
                            "row": 23,
                            "column": 50
                          },
                          "text": "-"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 51
                          },
                          "end": {
                            "row": 23,
                            "column": 67
                          },
                          "text": "full_share_count"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 63
              },
              "text": "# adjust the cost basis to the nearest cent, e.g., 60.0"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 26,
                "column": 8
              },
              "end": {
                "row": 26,
                "column": 58
              },
              "text": "new_cost_basis = round(self.cost_basis * ratio, 2)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 26,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 58
                  },
                  "text": "new_cost_basis = round(self.cost_basis * ratio, 2)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 26,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 22
                      },
                      "text": "new_cost_basis"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 26,
                        "column": 23
                      },
                      "end": {
                        "row": 26,
                        "column": 24
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 26,
                        "column": 25
                      },
                      "end": {
                        "row": 26,
                        "column": 58
                      },
                      "text": "round(self.cost_basis * ratio, 2)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 26,
                            "column": 25
                          },
                          "end": {
                            "row": 26,
                            "column": 30
                          },
                          "text": "round"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 26,
                            "column": 30
                          },
                          "end": {
                            "row": 26,
                            "column": 58
                          },
                          "text": "(self.cost_basis * ratio, 2)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 26,
                                "column": 30
                              },
                              "end": {
                                "row": 26,
                                "column": 31
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 26,
                                "column": 31
                              },
                              "end": {
                                "row": 26,
                                "column": 54
                              },
                              "text": "self.cost_basis * ratio",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 26,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 46
                                  },
                                  "text": "self.cost_basis",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 35
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 26,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 36
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 46
                                      },
                                      "text": "cost_basis"
                                    }
                                  ]
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 26,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 48
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 54
                                  },
                                  "text": "ratio"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 26,
                                "column": 54
                              },
                              "end": {
                                "row": 26,
                                "column": 55
                              },
                              "text": ","
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 26,
                                "column": 56
                              },
                              "end": {
                                "row": 26,
                                "column": 57
                              },
                              "text": "2"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 26,
                                "column": 57
                              },
                              "end": {
                                "row": 26,
                                "column": 58
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 28,
                "column": 8
              },
              "end": {
                "row": 28,
                "column": 40
              },
              "text": "self.cost_basis = new_cost_basis",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 28,
                    "column": 8
                  },
                  "end": {
                    "row": 28,
                    "column": 40
                  },
                  "text": "self.cost_basis = new_cost_basis",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 28,
                        "column": 8
                      },
                      "end": {
                        "row": 28,
                        "column": 23
                      },
                      "text": "self.cost_basis",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 28,
                            "column": 8
                          },
                          "end": {
                            "row": 28,
                            "column": 12
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 28,
                            "column": 12
                          },
                          "end": {
                            "row": 28,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 28,
                            "column": 13
                          },
                          "end": {
                            "row": 28,
                            "column": 23
                          },
                          "text": "cost_basis"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 28,
                        "column": 24
                      },
                      "end": {
                        "row": 28,
                        "column": 25
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 28,
                        "column": 26
                      },
                      "end": {
                        "row": 28,
                        "column": 40
                      },
                      "text": "new_cost_basis"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 29,
                "column": 8
              },
              "end": {
                "row": 29,
                "column": 38
              },
              "text": "self.amount = full_share_count",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 29,
                    "column": 8
                  },
                  "end": {
                    "row": 29,
                    "column": 38
                  },
                  "text": "self.amount = full_share_count",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 29,
                        "column": 8
                      },
                      "end": {
                        "row": 29,
                        "column": 19
                      },
                      "text": "self.amount",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 29,
                            "column": 8
                          },
                          "end": {
                            "row": 29,
                            "column": 12
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 29,
                            "column": 12
                          },
                          "end": {
                            "row": 29,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 29,
                            "column": 13
                          },
                          "end": {
                            "row": 29,
                            "column": 19
                          },
                          "text": "amount"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 29,
                        "column": 20
                      },
                      "end": {
                        "row": 29,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 29,
                        "column": 22
                      },
                      "end": {
                        "row": 29,
                        "column": 38
                      },
                      "text": "full_share_count"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 31,
                "column": 8
              },
              "end": {
                "row": 31,
                "column": 78
              },
              "text": "return_cash = round(float(fractional_share_count * new_cost_basis), 2)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 31,
                    "column": 8
                  },
                  "end": {
                    "row": 31,
                    "column": 78
                  },
                  "text": "return_cash = round(float(fractional_share_count * new_cost_basis), 2)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 31,
                        "column": 8
                      },
                      "end": {
                        "row": 31,
                        "column": 19
                      },
                      "text": "return_cash"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 31,
                        "column": 20
                      },
                      "end": {
                        "row": 31,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 31,
                        "column": 22
                      },
                      "end": {
                        "row": 31,
                        "column": 78
                      },
                      "text": "round(float(fractional_share_count * new_cost_basis), 2)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 31,
                            "column": 22
                          },
                          "end": {
                            "row": 31,
                            "column": 27
                          },
                          "text": "round"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 31,
                            "column": 27
                          },
                          "end": {
                            "row": 31,
                            "column": 78
                          },
                          "text": "(float(fractional_share_count * new_cost_basis), 2)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 31,
                                "column": 27
                              },
                              "end": {
                                "row": 31,
                                "column": 28
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 31,
                                "column": 28
                              },
                              "end": {
                                "row": 31,
                                "column": 74
                              },
                              "text": "float(fractional_share_count * new_cost_basis)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 31,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 33
                                  },
                                  "text": "float"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 31,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 74
                                  },
                                  "text": "(fractional_share_count * new_cost_basis)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 31,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 34
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 31,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 73
                                      },
                                      "text": "fractional_share_count * new_cost_basis",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 31,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 56
                                          },
                                          "text": "fractional_share_count"
                                        },
                                        {
                                          "type": "*",
                                          "start": {
                                            "row": 31,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 58
                                          },
                                          "text": "*"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 31,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 73
                                          },
                                          "text": "new_cost_basis"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 31,
                                        "column": 73
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 74
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 31,
                                "column": 74
                              },
                              "end": {
                                "row": 31,
                                "column": 75
                              },
                              "text": ","
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 31,
                                "column": 76
                              },
                              "end": {
                                "row": 31,
                                "column": 77
                              },
                              "text": "2"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 31,
                                "column": 77
                              },
                              "end": {
                                "row": 31,
                                "column": 78
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 33,
                "column": 8
              },
              "end": {
                "row": 33,
                "column": 45
              },
              "text": "log.info(\"after split: \" + str(self))",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 33,
                    "column": 8
                  },
                  "end": {
                    "row": 33,
                    "column": 45
                  },
                  "text": "log.info(\"after split: \" + str(self))",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 33,
                        "column": 8
                      },
                      "end": {
                        "row": 33,
                        "column": 16
                      },
                      "text": "log.info",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 33,
                            "column": 8
                          },
                          "end": {
                            "row": 33,
                            "column": 11
                          },
                          "text": "log"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 33,
                            "column": 11
                          },
                          "end": {
                            "row": 33,
                            "column": 12
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 33,
                            "column": 12
                          },
                          "end": {
                            "row": 33,
                            "column": 16
                          },
                          "text": "info"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 33,
                        "column": 16
                      },
                      "end": {
                        "row": 33,
                        "column": 45
                      },
                      "text": "(\"after split: \" + str(self))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 33,
                            "column": 16
                          },
                          "end": {
                            "row": 33,
                            "column": 17
                          },
                          "text": "("
                        },
                        {
                          "type": "binary_operator",
                          "start": {
                            "row": 33,
                            "column": 17
                          },
                          "end": {
                            "row": 33,
                            "column": 44
                          },
                          "text": "\"after split: \" + str(self)",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 33,
                                "column": 17
                              },
                              "end": {
                                "row": 33,
                                "column": 32
                              },
                              "text": "\"after split: \"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 33,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 18
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 33,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 31
                                  },
                                  "text": "after split: "
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 33,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 32
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 33,
                                "column": 33
                              },
                              "end": {
                                "row": 33,
                                "column": 34
                              },
                              "text": "+"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 33,
                                "column": 35
                              },
                              "end": {
                                "row": 33,
                                "column": 44
                              },
                              "text": "str(self)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 33,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 38
                                  },
                                  "text": "str"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 33,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 44
                                  },
                                  "text": "(self)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 33,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 39
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 43
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 33,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 44
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 33,
                            "column": 44
                          },
                          "end": {
                            "row": 33,
                            "column": 45
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 34,
                "column": 8
              },
              "end": {
                "row": 34,
                "column": 55
              },
              "text": "log.info(\"returning cash: \" + str(return_cash))",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 34,
                    "column": 8
                  },
                  "end": {
                    "row": 34,
                    "column": 55
                  },
                  "text": "log.info(\"returning cash: \" + str(return_cash))",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 34,
                        "column": 8
                      },
                      "end": {
                        "row": 34,
                        "column": 16
                      },
                      "text": "log.info",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 34,
                            "column": 8
                          },
                          "end": {
                            "row": 34,
                            "column": 11
                          },
                          "text": "log"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 34,
                            "column": 11
                          },
                          "end": {
                            "row": 34,
                            "column": 12
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 34,
                            "column": 12
                          },
                          "end": {
                            "row": 34,
                            "column": 16
                          },
                          "text": "info"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 34,
                        "column": 16
                      },
                      "end": {
                        "row": 34,
                        "column": 55
                      },
                      "text": "(\"returning cash: \" + str(return_cash))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 34,
                            "column": 16
                          },
                          "end": {
                            "row": 34,
                            "column": 17
                          },
                          "text": "("
                        },
                        {
                          "type": "binary_operator",
                          "start": {
                            "row": 34,
                            "column": 17
                          },
                          "end": {
                            "row": 34,
                            "column": 54
                          },
                          "text": "\"returning cash: \" + str(return_cash)",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 34,
                                "column": 17
                              },
                              "end": {
                                "row": 34,
                                "column": 35
                              },
                              "text": "\"returning cash: \"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 34,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 18
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 34,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 34
                                  },
                                  "text": "returning cash: "
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 34,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 35
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 34,
                                "column": 36
                              },
                              "end": {
                                "row": 34,
                                "column": 37
                              },
                              "text": "+"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 34,
                                "column": 38
                              },
                              "end": {
                                "row": 34,
                                "column": 54
                              },
                              "text": "str(return_cash)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 34,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 41
                                  },
                                  "text": "str"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 34,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 54
                                  },
                                  "text": "(return_cash)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 34,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 42
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 34,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 53
                                      },
                                      "text": "return_cash"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 34,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 54
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 34,
                            "column": 54
                          },
                          "end": {
                            "row": 34,
                            "column": 55
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 36,
                "column": 8
              },
              "end": {
                "row": 36,
                "column": 69
              },
              "text": "# return the leftover cash, which will be converted into cash"
            },
            {
              "type": "comment",
              "start": {
                "row": 37,
                "column": 8
              },
              "end": {
                "row": 37,
                "column": 39
              },
              "text": "# (rounded to the nearest cent)"
            },
            {
              "type": "return_statement",
              "start": {
                "row": 38,
                "column": 8
              },
              "end": {
                "row": 38,
                "column": 26
              },
              "text": "return return_cash",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 38,
                    "column": 8
                  },
                  "end": {
                    "row": 38,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 38,
                    "column": 15
                  },
                  "end": {
                    "row": 38,
                    "column": 26
                  },
                  "text": "return_cash"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}