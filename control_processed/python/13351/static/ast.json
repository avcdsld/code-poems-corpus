{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 15,
    "column": 71
  },
  "text": "def fit(self, validation_data=None, **kwargs):\n        \"\"\"\n        Args:\n            validation_data (DataFlow or InputSource): to be used for inference.\n                The inference callback is added as the first in the callback list.\n                If you need to use it in a different order, please write it in the callback list manually.\n            kwargs: same arguments as :meth:`Trainer.train_with_defaults`.\n        \"\"\"\n        callbacks = kwargs.pop('callbacks', [])\n        if validation_data is not None:\n            # There is no way to guess where users want this callback. So we have to choose one.\n            # MinSaver may need results from this callback,\n            # so we put this callback at first.\n            callbacks.insert(0, InferenceRunner(\n                validation_data, ScalarStats(self._stats_to_inference)))\n        self.trainer.train_with_defaults(callbacks=callbacks, **kwargs)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 15,
        "column": 71
      },
      "text": "def fit(self, validation_data=None, **kwargs):\n        \"\"\"\n        Args:\n            validation_data (DataFlow or InputSource): to be used for inference.\n                The inference callback is added as the first in the callback list.\n                If you need to use it in a different order, please write it in the callback list manually.\n            kwargs: same arguments as :meth:`Trainer.train_with_defaults`.\n        \"\"\"\n        callbacks = kwargs.pop('callbacks', [])\n        if validation_data is not None:\n            # There is no way to guess where users want this callback. So we have to choose one.\n            # MinSaver may need results from this callback,\n            # so we put this callback at first.\n            callbacks.insert(0, InferenceRunner(\n                validation_data, ScalarStats(self._stats_to_inference)))\n        self.trainer.train_with_defaults(callbacks=callbacks, **kwargs)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 7
          },
          "text": "fit"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 45
          },
          "text": "(self, validation_data=None, **kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 8
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": "validation_data=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 14
                  },
                  "end": {
                    "row": 0,
                    "column": 29
                  },
                  "text": "validation_data"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 29
                  },
                  "end": {
                    "row": 0,
                    "column": 30
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 34
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": "**kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 0,
                    "column": 36
                  },
                  "end": {
                    "row": 0,
                    "column": 38
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 38
                  },
                  "end": {
                    "row": 0,
                    "column": 44
                  },
                  "text": "kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 45
          },
          "end": {
            "row": 0,
            "column": 46
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 15,
            "column": 71
          },
          "text": "\"\"\"\n        Args:\n            validation_data (DataFlow or InputSource): to be used for inference.\n                The inference callback is added as the first in the callback list.\n                If you need to use it in a different order, please write it in the callback list manually.\n            kwargs: same arguments as :meth:`Trainer.train_with_defaults`.\n        \"\"\"\n        callbacks = kwargs.pop('callbacks', [])\n        if validation_data is not None:\n            # There is no way to guess where users want this callback. So we have to choose one.\n            # MinSaver may need results from this callback,\n            # so we put this callback at first.\n            callbacks.insert(0, InferenceRunner(\n                validation_data, ScalarStats(self._stats_to_inference)))\n        self.trainer.train_with_defaults(callbacks=callbacks, **kwargs)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 7,
                "column": 11
              },
              "text": "\"\"\"\n        Args:\n            validation_data (DataFlow or InputSource): to be used for inference.\n                The inference callback is added as the first in the callback list.\n                If you need to use it in a different order, please write it in the callback list manually.\n            kwargs: same arguments as :meth:`Trainer.train_with_defaults`.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Args:\n            validation_data (DataFlow or InputSource): to be used for inference.\n                The inference callback is added as the first in the callback list.\n                If you need to use it in a different order, please write it in the callback list manually.\n            kwargs: same arguments as :meth:`Trainer.train_with_defaults`.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 7,
                        "column": 8
                      },
                      "text": "\n        Args:\n            validation_data (DataFlow or InputSource): to be used for inference.\n                The inference callback is added as the first in the callback list.\n                If you need to use it in a different order, please write it in the callback list manually.\n            kwargs: same arguments as :meth:`Trainer.train_with_defaults`.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 8,
                "column": 8
              },
              "end": {
                "row": 8,
                "column": 47
              },
              "text": "callbacks = kwargs.pop('callbacks', [])",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 8,
                    "column": 8
                  },
                  "end": {
                    "row": 8,
                    "column": 47
                  },
                  "text": "callbacks = kwargs.pop('callbacks', [])",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 17
                      },
                      "text": "callbacks"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 8,
                        "column": 18
                      },
                      "end": {
                        "row": 8,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 8,
                        "column": 20
                      },
                      "end": {
                        "row": 8,
                        "column": 47
                      },
                      "text": "kwargs.pop('callbacks', [])",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 8,
                            "column": 20
                          },
                          "end": {
                            "row": 8,
                            "column": 30
                          },
                          "text": "kwargs.pop",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 20
                              },
                              "end": {
                                "row": 8,
                                "column": 26
                              },
                              "text": "kwargs"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 8,
                                "column": 26
                              },
                              "end": {
                                "row": 8,
                                "column": 27
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 27
                              },
                              "end": {
                                "row": 8,
                                "column": 30
                              },
                              "text": "pop"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 8,
                            "column": 30
                          },
                          "end": {
                            "row": 8,
                            "column": 47
                          },
                          "text": "('callbacks', [])",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 8,
                                "column": 30
                              },
                              "end": {
                                "row": 8,
                                "column": 31
                              },
                              "text": "("
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 8,
                                "column": 31
                              },
                              "end": {
                                "row": 8,
                                "column": 42
                              },
                              "text": "'callbacks'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 8,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 32
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 8,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 41
                                  },
                                  "text": "callbacks"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 8,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 42
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 8,
                                "column": 42
                              },
                              "end": {
                                "row": 8,
                                "column": 43
                              },
                              "text": ","
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 8,
                                "column": 44
                              },
                              "end": {
                                "row": 8,
                                "column": 46
                              },
                              "text": "[]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 8,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 45
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 8,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 46
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 8,
                                "column": 46
                              },
                              "end": {
                                "row": 8,
                                "column": 47
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 72
              },
              "text": "if validation_data is not None:\n            # There is no way to guess where users want this callback. So we have to choose one.\n            # MinSaver may need results from this callback,\n            # so we put this callback at first.\n            callbacks.insert(0, InferenceRunner(\n                validation_data, ScalarStats(self._stats_to_inference)))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 9,
                    "column": 11
                  },
                  "end": {
                    "row": 9,
                    "column": 38
                  },
                  "text": "validation_data is not None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 11
                      },
                      "end": {
                        "row": 9,
                        "column": 26
                      },
                      "text": "validation_data"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 9,
                        "column": 27
                      },
                      "end": {
                        "row": 9,
                        "column": 29
                      },
                      "text": "is"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 9,
                        "column": 30
                      },
                      "end": {
                        "row": 9,
                        "column": 33
                      },
                      "text": "not"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 9,
                        "column": 34
                      },
                      "end": {
                        "row": 9,
                        "column": 38
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 9,
                    "column": 38
                  },
                  "end": {
                    "row": 9,
                    "column": 39
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 10,
                    "column": 12
                  },
                  "end": {
                    "row": 10,
                    "column": 96
                  },
                  "text": "# There is no way to guess where users want this callback. So we have to choose one."
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 11,
                    "column": 12
                  },
                  "end": {
                    "row": 11,
                    "column": 59
                  },
                  "text": "# MinSaver may need results from this callback,"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 12,
                    "column": 12
                  },
                  "end": {
                    "row": 12,
                    "column": 47
                  },
                  "text": "# so we put this callback at first."
                },
                {
                  "type": "block",
                  "start": {
                    "row": 13,
                    "column": 12
                  },
                  "end": {
                    "row": 14,
                    "column": 72
                  },
                  "text": "callbacks.insert(0, InferenceRunner(\n                validation_data, ScalarStats(self._stats_to_inference)))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 13,
                        "column": 12
                      },
                      "end": {
                        "row": 14,
                        "column": 72
                      },
                      "text": "callbacks.insert(0, InferenceRunner(\n                validation_data, ScalarStats(self._stats_to_inference)))",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 13,
                            "column": 12
                          },
                          "end": {
                            "row": 14,
                            "column": 72
                          },
                          "text": "callbacks.insert(0, InferenceRunner(\n                validation_data, ScalarStats(self._stats_to_inference)))",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 13,
                                "column": 12
                              },
                              "end": {
                                "row": 13,
                                "column": 28
                              },
                              "text": "callbacks.insert",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 21
                                  },
                                  "text": "callbacks"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 22
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 28
                                  },
                                  "text": "insert"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 13,
                                "column": 28
                              },
                              "end": {
                                "row": 14,
                                "column": 72
                              },
                              "text": "(0, InferenceRunner(\n                validation_data, ScalarStats(self._stats_to_inference)))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 13,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 13,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 30
                                  },
                                  "text": "0"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 13,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 31
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 13,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 71
                                  },
                                  "text": "InferenceRunner(\n                validation_data, ScalarStats(self._stats_to_inference))",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 47
                                      },
                                      "text": "InferenceRunner"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 13,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 71
                                      },
                                      "text": "(\n                validation_data, ScalarStats(self._stats_to_inference))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 13,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 48
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 31
                                          },
                                          "text": "validation_data"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 14,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 32
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 14,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 70
                                          },
                                          "text": "ScalarStats(self._stats_to_inference)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 44
                                              },
                                              "text": "ScalarStats"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 14,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 70
                                              },
                                              "text": "(self._stats_to_inference)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 45
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 69
                                                  },
                                                  "text": "self._stats_to_inference",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 49
                                                      },
                                                      "text": "self"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 49
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 50
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 14,
                                                        "column": 50
                                                      },
                                                      "end": {
                                                        "row": 14,
                                                        "column": 69
                                                      },
                                                      "text": "_stats_to_inference"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 69
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 70
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 14,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 71
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 14,
                                    "column": 71
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 72
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 71
              },
              "text": "self.trainer.train_with_defaults(callbacks=callbacks, **kwargs)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 71
                  },
                  "text": "self.trainer.train_with_defaults(callbacks=callbacks, **kwargs)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 40
                      },
                      "text": "self.trainer.train_with_defaults",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 20
                          },
                          "text": "self.trainer",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 15,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 13
                              },
                              "end": {
                                "row": 15,
                                "column": 20
                              },
                              "text": "trainer"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 15,
                            "column": 20
                          },
                          "end": {
                            "row": 15,
                            "column": 21
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 21
                          },
                          "end": {
                            "row": 15,
                            "column": 40
                          },
                          "text": "train_with_defaults"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 15,
                        "column": 40
                      },
                      "end": {
                        "row": 15,
                        "column": 71
                      },
                      "text": "(callbacks=callbacks, **kwargs)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 15,
                            "column": 40
                          },
                          "end": {
                            "row": 15,
                            "column": 41
                          },
                          "text": "("
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 15,
                            "column": 41
                          },
                          "end": {
                            "row": 15,
                            "column": 60
                          },
                          "text": "callbacks=callbacks",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 41
                              },
                              "end": {
                                "row": 15,
                                "column": 50
                              },
                              "text": "callbacks"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 15,
                                "column": 50
                              },
                              "end": {
                                "row": 15,
                                "column": 51
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 51
                              },
                              "end": {
                                "row": 15,
                                "column": 60
                              },
                              "text": "callbacks"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 15,
                            "column": 60
                          },
                          "end": {
                            "row": 15,
                            "column": 61
                          },
                          "text": ","
                        },
                        {
                          "type": "dictionary_splat",
                          "start": {
                            "row": 15,
                            "column": 62
                          },
                          "end": {
                            "row": 15,
                            "column": 70
                          },
                          "text": "**kwargs",
                          "children": [
                            {
                              "type": "**",
                              "start": {
                                "row": 15,
                                "column": 62
                              },
                              "end": {
                                "row": 15,
                                "column": 64
                              },
                              "text": "**"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 64
                              },
                              "end": {
                                "row": 15,
                                "column": 70
                              },
                              "text": "kwargs"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 15,
                            "column": 70
                          },
                          "end": {
                            "row": 15,
                            "column": 71
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}