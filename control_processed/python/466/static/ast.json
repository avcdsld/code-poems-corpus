{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 14,
    "column": 88
  },
  "text": "def transpose(self):\n        \"\"\"\n        Transpose this BlockMatrix. Returns a new BlockMatrix\n        instance sharing the same underlying data. Is a lazy operation.\n\n        >>> blocks = sc.parallelize([((0, 0), Matrices.dense(3, 2, [1, 2, 3, 4, 5, 6])),\n        ...                          ((1, 0), Matrices.dense(3, 2, [7, 8, 9, 10, 11, 12]))])\n        >>> mat = BlockMatrix(blocks, 3, 2)\n\n        >>> mat_transposed = mat.transpose()\n        >>> mat_transposed.toLocalMatrix()\n        DenseMatrix(2, 6, [1.0, 4.0, 2.0, 5.0, 3.0, 6.0, 7.0, 10.0, 8.0, 11.0, 9.0, 12.0], 0)\n        \"\"\"\n        java_transposed_matrix = self._java_matrix_wrapper.call(\"transpose\")\n        return BlockMatrix(java_transposed_matrix, self.colsPerBlock, self.rowsPerBlock)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 14,
        "column": 88
      },
      "text": "def transpose(self):\n        \"\"\"\n        Transpose this BlockMatrix. Returns a new BlockMatrix\n        instance sharing the same underlying data. Is a lazy operation.\n\n        >>> blocks = sc.parallelize([((0, 0), Matrices.dense(3, 2, [1, 2, 3, 4, 5, 6])),\n        ...                          ((1, 0), Matrices.dense(3, 2, [7, 8, 9, 10, 11, 12]))])\n        >>> mat = BlockMatrix(blocks, 3, 2)\n\n        >>> mat_transposed = mat.transpose()\n        >>> mat_transposed.toLocalMatrix()\n        DenseMatrix(2, 6, [1.0, 4.0, 2.0, 5.0, 3.0, 6.0, 7.0, 10.0, 8.0, 11.0, 9.0, 12.0], 0)\n        \"\"\"\n        java_transposed_matrix = self._java_matrix_wrapper.call(\"transpose\")\n        return BlockMatrix(java_transposed_matrix, self.colsPerBlock, self.rowsPerBlock)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 13
          },
          "text": "transpose"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 13
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "(self)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "self"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 14,
            "column": 88
          },
          "text": "\"\"\"\n        Transpose this BlockMatrix. Returns a new BlockMatrix\n        instance sharing the same underlying data. Is a lazy operation.\n\n        >>> blocks = sc.parallelize([((0, 0), Matrices.dense(3, 2, [1, 2, 3, 4, 5, 6])),\n        ...                          ((1, 0), Matrices.dense(3, 2, [7, 8, 9, 10, 11, 12]))])\n        >>> mat = BlockMatrix(blocks, 3, 2)\n\n        >>> mat_transposed = mat.transpose()\n        >>> mat_transposed.toLocalMatrix()\n        DenseMatrix(2, 6, [1.0, 4.0, 2.0, 5.0, 3.0, 6.0, 7.0, 10.0, 8.0, 11.0, 9.0, 12.0], 0)\n        \"\"\"\n        java_transposed_matrix = self._java_matrix_wrapper.call(\"transpose\")\n        return BlockMatrix(java_transposed_matrix, self.colsPerBlock, self.rowsPerBlock)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 11
              },
              "text": "\"\"\"\n        Transpose this BlockMatrix. Returns a new BlockMatrix\n        instance sharing the same underlying data. Is a lazy operation.\n\n        >>> blocks = sc.parallelize([((0, 0), Matrices.dense(3, 2, [1, 2, 3, 4, 5, 6])),\n        ...                          ((1, 0), Matrices.dense(3, 2, [7, 8, 9, 10, 11, 12]))])\n        >>> mat = BlockMatrix(blocks, 3, 2)\n\n        >>> mat_transposed = mat.transpose()\n        >>> mat_transposed.toLocalMatrix()\n        DenseMatrix(2, 6, [1.0, 4.0, 2.0, 5.0, 3.0, 6.0, 7.0, 10.0, 8.0, 11.0, 9.0, 12.0], 0)\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Transpose this BlockMatrix. Returns a new BlockMatrix\n        instance sharing the same underlying data. Is a lazy operation.\n\n        >>> blocks = sc.parallelize([((0, 0), Matrices.dense(3, 2, [1, 2, 3, 4, 5, 6])),\n        ...                          ((1, 0), Matrices.dense(3, 2, [7, 8, 9, 10, 11, 12]))])\n        >>> mat = BlockMatrix(blocks, 3, 2)\n\n        >>> mat_transposed = mat.transpose()\n        >>> mat_transposed.toLocalMatrix()\n        DenseMatrix(2, 6, [1.0, 4.0, 2.0, 5.0, 3.0, 6.0, 7.0, 10.0, 8.0, 11.0, 9.0, 12.0], 0)\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 12,
                        "column": 8
                      },
                      "text": "\n        Transpose this BlockMatrix. Returns a new BlockMatrix\n        instance sharing the same underlying data. Is a lazy operation.\n\n        >>> blocks = sc.parallelize([((0, 0), Matrices.dense(3, 2, [1, 2, 3, 4, 5, 6])),\n        ...                          ((1, 0), Matrices.dense(3, 2, [7, 8, 9, 10, 11, 12]))])\n        >>> mat = BlockMatrix(blocks, 3, 2)\n\n        >>> mat_transposed = mat.transpose()\n        >>> mat_transposed.toLocalMatrix()\n        DenseMatrix(2, 6, [1.0, 4.0, 2.0, 5.0, 3.0, 6.0, 7.0, 10.0, 8.0, 11.0, 9.0, 12.0], 0)\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 76
              },
              "text": "java_transposed_matrix = self._java_matrix_wrapper.call(\"transpose\")",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 76
                  },
                  "text": "java_transposed_matrix = self._java_matrix_wrapper.call(\"transpose\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 30
                      },
                      "text": "java_transposed_matrix"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 31
                      },
                      "end": {
                        "row": 13,
                        "column": 32
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 13,
                        "column": 33
                      },
                      "end": {
                        "row": 13,
                        "column": 76
                      },
                      "text": "self._java_matrix_wrapper.call(\"transpose\")",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 13,
                            "column": 33
                          },
                          "end": {
                            "row": 13,
                            "column": 63
                          },
                          "text": "self._java_matrix_wrapper.call",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 13,
                                "column": 33
                              },
                              "end": {
                                "row": 13,
                                "column": 58
                              },
                              "text": "self._java_matrix_wrapper",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 37
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 38
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 58
                                  },
                                  "text": "_java_matrix_wrapper"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 13,
                                "column": 58
                              },
                              "end": {
                                "row": 13,
                                "column": 59
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 59
                              },
                              "end": {
                                "row": 13,
                                "column": 63
                              },
                              "text": "call"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 63
                          },
                          "end": {
                            "row": 13,
                            "column": 76
                          },
                          "text": "(\"transpose\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 63
                              },
                              "end": {
                                "row": 13,
                                "column": 64
                              },
                              "text": "("
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 13,
                                "column": 64
                              },
                              "end": {
                                "row": 13,
                                "column": 75
                              },
                              "text": "\"transpose\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 13,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 65
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 13,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 74
                                  },
                                  "text": "transpose"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 13,
                                    "column": 74
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 75
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 75
                              },
                              "end": {
                                "row": 13,
                                "column": 76
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 88
              },
              "text": "return BlockMatrix(java_transposed_matrix, self.colsPerBlock, self.rowsPerBlock)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 14,
                    "column": 8
                  },
                  "end": {
                    "row": 14,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 14,
                    "column": 15
                  },
                  "end": {
                    "row": 14,
                    "column": 88
                  },
                  "text": "BlockMatrix(java_transposed_matrix, self.colsPerBlock, self.rowsPerBlock)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 15
                      },
                      "end": {
                        "row": 14,
                        "column": 26
                      },
                      "text": "BlockMatrix"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 14,
                        "column": 26
                      },
                      "end": {
                        "row": 14,
                        "column": 88
                      },
                      "text": "(java_transposed_matrix, self.colsPerBlock, self.rowsPerBlock)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 14,
                            "column": 26
                          },
                          "end": {
                            "row": 14,
                            "column": 27
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 27
                          },
                          "end": {
                            "row": 14,
                            "column": 49
                          },
                          "text": "java_transposed_matrix"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 14,
                            "column": 49
                          },
                          "end": {
                            "row": 14,
                            "column": 50
                          },
                          "text": ","
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 14,
                            "column": 51
                          },
                          "end": {
                            "row": 14,
                            "column": 68
                          },
                          "text": "self.colsPerBlock",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 51
                              },
                              "end": {
                                "row": 14,
                                "column": 55
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 14,
                                "column": 55
                              },
                              "end": {
                                "row": 14,
                                "column": 56
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 56
                              },
                              "end": {
                                "row": 14,
                                "column": 68
                              },
                              "text": "colsPerBlock"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 14,
                            "column": 68
                          },
                          "end": {
                            "row": 14,
                            "column": 69
                          },
                          "text": ","
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 14,
                            "column": 70
                          },
                          "end": {
                            "row": 14,
                            "column": 87
                          },
                          "text": "self.rowsPerBlock",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 70
                              },
                              "end": {
                                "row": 14,
                                "column": 74
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 14,
                                "column": 74
                              },
                              "end": {
                                "row": 14,
                                "column": 75
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 75
                              },
                              "end": {
                                "row": 14,
                                "column": 87
                              },
                              "text": "rowsPerBlock"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 14,
                            "column": 87
                          },
                          "end": {
                            "row": 14,
                            "column": 88
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}