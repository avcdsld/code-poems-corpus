{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 40,
    "column": 27
  },
  "text": "def has_any_role(*items):\n    r\"\"\"A :func:`.check` that is added that checks if the member invoking the\n    command has **any** of the roles specified. This means that if they have\n    one out of the three roles specified, then this check will return `True`.\n\n    Similar to :func:`.has_role`\\, the names or IDs passed in must be exact.\n\n    This check raises one of two special exceptions, :exc:`.MissingAnyRole` if the user\n    is missing all roles, or :exc:`.NoPrivateMessage` if it is used in a private message.\n    Both inherit from :exc:`.CheckFailure`.\n\n    .. versionchanged:: 1.1.0\n\n        Raise :exc:`.MissingAnyRole` or :exc:`.NoPrivateMessage`\n        instead of generic :exc:`.CheckFailure`\n\n    Parameters\n    -----------\n    items: List[Union[:class:`str`, :class:`int`]]\n        An argument list of names or IDs to check that the member has roles wise.\n\n    Example\n    --------\n\n    .. code-block:: python3\n\n        @bot.command()\n        @commands.has_any_role('Library Devs', 'Moderators', 492212595072434186)\n        async def cool(ctx):\n            await ctx.send('You are cool indeed')\n    \"\"\"\n    def predicate(ctx):\n        if not isinstance(ctx.channel, discord.abc.GuildChannel):\n            raise NoPrivateMessage()\n\n        getter = functools.partial(discord.utils.get, ctx.author.roles)\n        if any(getter(id=item) is not None if isinstance(item, int) else getter(name=item) is not None for item in items):\n            return True\n        raise MissingAnyRole(items)\n\n    return check(predicate)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 40,
        "column": 27
      },
      "text": "def has_any_role(*items):\n    r\"\"\"A :func:`.check` that is added that checks if the member invoking the\n    command has **any** of the roles specified. This means that if they have\n    one out of the three roles specified, then this check will return `True`.\n\n    Similar to :func:`.has_role`\\, the names or IDs passed in must be exact.\n\n    This check raises one of two special exceptions, :exc:`.MissingAnyRole` if the user\n    is missing all roles, or :exc:`.NoPrivateMessage` if it is used in a private message.\n    Both inherit from :exc:`.CheckFailure`.\n\n    .. versionchanged:: 1.1.0\n\n        Raise :exc:`.MissingAnyRole` or :exc:`.NoPrivateMessage`\n        instead of generic :exc:`.CheckFailure`\n\n    Parameters\n    -----------\n    items: List[Union[:class:`str`, :class:`int`]]\n        An argument list of names or IDs to check that the member has roles wise.\n\n    Example\n    --------\n\n    .. code-block:: python3\n\n        @bot.command()\n        @commands.has_any_role('Library Devs', 'Moderators', 492212595072434186)\n        async def cool(ctx):\n            await ctx.send('You are cool indeed')\n    \"\"\"\n    def predicate(ctx):\n        if not isinstance(ctx.channel, discord.abc.GuildChannel):\n            raise NoPrivateMessage()\n\n        getter = functools.partial(discord.utils.get, ctx.author.roles)\n        if any(getter(id=item) is not None if isinstance(item, int) else getter(name=item) is not None for item in items):\n            return True\n        raise MissingAnyRole(items)\n\n    return check(predicate)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 16
          },
          "text": "has_any_role"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 16
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "(*items)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "("
            },
            {
              "type": "list_splat_pattern",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "*items",
              "children": [
                {
                  "type": "*",
                  "start": {
                    "row": 0,
                    "column": 17
                  },
                  "end": {
                    "row": 0,
                    "column": 18
                  },
                  "text": "*"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 18
                  },
                  "end": {
                    "row": 0,
                    "column": 23
                  },
                  "text": "items"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 0,
            "column": 25
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 40,
            "column": 27
          },
          "text": "r\"\"\"A :func:`.check` that is added that checks if the member invoking the\n    command has **any** of the roles specified. This means that if they have\n    one out of the three roles specified, then this check will return `True`.\n\n    Similar to :func:`.has_role`\\, the names or IDs passed in must be exact.\n\n    This check raises one of two special exceptions, :exc:`.MissingAnyRole` if the user\n    is missing all roles, or :exc:`.NoPrivateMessage` if it is used in a private message.\n    Both inherit from :exc:`.CheckFailure`.\n\n    .. versionchanged:: 1.1.0\n\n        Raise :exc:`.MissingAnyRole` or :exc:`.NoPrivateMessage`\n        instead of generic :exc:`.CheckFailure`\n\n    Parameters\n    -----------\n    items: List[Union[:class:`str`, :class:`int`]]\n        An argument list of names or IDs to check that the member has roles wise.\n\n    Example\n    --------\n\n    .. code-block:: python3\n\n        @bot.command()\n        @commands.has_any_role('Library Devs', 'Moderators', 492212595072434186)\n        async def cool(ctx):\n            await ctx.send('You are cool indeed')\n    \"\"\"\n    def predicate(ctx):\n        if not isinstance(ctx.channel, discord.abc.GuildChannel):\n            raise NoPrivateMessage()\n\n        getter = functools.partial(discord.utils.get, ctx.author.roles)\n        if any(getter(id=item) is not None if isinstance(item, int) else getter(name=item) is not None for item in items):\n            return True\n        raise MissingAnyRole(items)\n\n    return check(predicate)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 30,
                "column": 7
              },
              "text": "r\"\"\"A :func:`.check` that is added that checks if the member invoking the\n    command has **any** of the roles specified. This means that if they have\n    one out of the three roles specified, then this check will return `True`.\n\n    Similar to :func:`.has_role`\\, the names or IDs passed in must be exact.\n\n    This check raises one of two special exceptions, :exc:`.MissingAnyRole` if the user\n    is missing all roles, or :exc:`.NoPrivateMessage` if it is used in a private message.\n    Both inherit from :exc:`.CheckFailure`.\n\n    .. versionchanged:: 1.1.0\n\n        Raise :exc:`.MissingAnyRole` or :exc:`.NoPrivateMessage`\n        instead of generic :exc:`.CheckFailure`\n\n    Parameters\n    -----------\n    items: List[Union[:class:`str`, :class:`int`]]\n        An argument list of names or IDs to check that the member has roles wise.\n\n    Example\n    --------\n\n    .. code-block:: python3\n\n        @bot.command()\n        @commands.has_any_role('Library Devs', 'Moderators', 492212595072434186)\n        async def cool(ctx):\n            await ctx.send('You are cool indeed')\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 30,
                    "column": 7
                  },
                  "text": "r\"\"\"A :func:`.check` that is added that checks if the member invoking the\n    command has **any** of the roles specified. This means that if they have\n    one out of the three roles specified, then this check will return `True`.\n\n    Similar to :func:`.has_role`\\, the names or IDs passed in must be exact.\n\n    This check raises one of two special exceptions, :exc:`.MissingAnyRole` if the user\n    is missing all roles, or :exc:`.NoPrivateMessage` if it is used in a private message.\n    Both inherit from :exc:`.CheckFailure`.\n\n    .. versionchanged:: 1.1.0\n\n        Raise :exc:`.MissingAnyRole` or :exc:`.NoPrivateMessage`\n        instead of generic :exc:`.CheckFailure`\n\n    Parameters\n    -----------\n    items: List[Union[:class:`str`, :class:`int`]]\n        An argument list of names or IDs to check that the member has roles wise.\n\n    Example\n    --------\n\n    .. code-block:: python3\n\n        @bot.command()\n        @commands.has_any_role('Library Devs', 'Moderators', 492212595072434186)\n        async def cool(ctx):\n            await ctx.send('You are cool indeed')\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 8
                      },
                      "text": "r\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 30,
                        "column": 4
                      },
                      "text": "A :func:`.check` that is added that checks if the member invoking the\n    command has **any** of the roles specified. This means that if they have\n    one out of the three roles specified, then this check will return `True`.\n\n    Similar to :func:`.has_role`\\, the names or IDs passed in must be exact.\n\n    This check raises one of two special exceptions, :exc:`.MissingAnyRole` if the user\n    is missing all roles, or :exc:`.NoPrivateMessage` if it is used in a private message.\n    Both inherit from :exc:`.CheckFailure`.\n\n    .. versionchanged:: 1.1.0\n\n        Raise :exc:`.MissingAnyRole` or :exc:`.NoPrivateMessage`\n        instead of generic :exc:`.CheckFailure`\n\n    Parameters\n    -----------\n    items: List[Union[:class:`str`, :class:`int`]]\n        An argument list of names or IDs to check that the member has roles wise.\n\n    Example\n    --------\n\n    .. code-block:: python3\n\n        @bot.command()\n        @commands.has_any_role('Library Devs', 'Moderators', 492212595072434186)\n        async def cool(ctx):\n            await ctx.send('You are cool indeed')\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 30,
                        "column": 4
                      },
                      "end": {
                        "row": 30,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 31,
                "column": 4
              },
              "end": {
                "row": 38,
                "column": 35
              },
              "text": "def predicate(ctx):\n        if not isinstance(ctx.channel, discord.abc.GuildChannel):\n            raise NoPrivateMessage()\n\n        getter = functools.partial(discord.utils.get, ctx.author.roles)\n        if any(getter(id=item) is not None if isinstance(item, int) else getter(name=item) is not None for item in items):\n            return True\n        raise MissingAnyRole(items)",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 31,
                    "column": 4
                  },
                  "end": {
                    "row": 31,
                    "column": 7
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 31,
                    "column": 8
                  },
                  "end": {
                    "row": 31,
                    "column": 17
                  },
                  "text": "predicate"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 31,
                    "column": 17
                  },
                  "end": {
                    "row": 31,
                    "column": 22
                  },
                  "text": "(ctx)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 31,
                        "column": 17
                      },
                      "end": {
                        "row": 31,
                        "column": 18
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 31,
                        "column": 18
                      },
                      "end": {
                        "row": 31,
                        "column": 21
                      },
                      "text": "ctx"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 31,
                        "column": 21
                      },
                      "end": {
                        "row": 31,
                        "column": 22
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 31,
                    "column": 22
                  },
                  "end": {
                    "row": 31,
                    "column": 23
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 32,
                    "column": 8
                  },
                  "end": {
                    "row": 38,
                    "column": 35
                  },
                  "text": "if not isinstance(ctx.channel, discord.abc.GuildChannel):\n            raise NoPrivateMessage()\n\n        getter = functools.partial(discord.utils.get, ctx.author.roles)\n        if any(getter(id=item) is not None if isinstance(item, int) else getter(name=item) is not None for item in items):\n            return True\n        raise MissingAnyRole(items)",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 32,
                        "column": 8
                      },
                      "end": {
                        "row": 33,
                        "column": 36
                      },
                      "text": "if not isinstance(ctx.channel, discord.abc.GuildChannel):\n            raise NoPrivateMessage()",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 32,
                            "column": 8
                          },
                          "end": {
                            "row": 32,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 32,
                            "column": 11
                          },
                          "end": {
                            "row": 32,
                            "column": 64
                          },
                          "text": "not isinstance(ctx.channel, discord.abc.GuildChannel)",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 32,
                                "column": 11
                              },
                              "end": {
                                "row": 32,
                                "column": 14
                              },
                              "text": "not"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 32,
                                "column": 15
                              },
                              "end": {
                                "row": 32,
                                "column": 64
                              },
                              "text": "isinstance(ctx.channel, discord.abc.GuildChannel)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 32,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 25
                                  },
                                  "text": "isinstance"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 32,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 32,
                                    "column": 64
                                  },
                                  "text": "(ctx.channel, discord.abc.GuildChannel)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 32,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 26
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 32,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 37
                                      },
                                      "text": "ctx.channel",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 32,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 29
                                          },
                                          "text": "ctx"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 32,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 30
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 32,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 37
                                          },
                                          "text": "channel"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 32,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 38
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 32,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 63
                                      },
                                      "text": "discord.abc.GuildChannel",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 32,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 50
                                          },
                                          "text": "discord.abc",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 46
                                              },
                                              "text": "discord"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 32,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 47
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 50
                                              },
                                              "text": "abc"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 32,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 51
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 32,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 63
                                          },
                                          "text": "GuildChannel"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 32,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 64
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 32,
                            "column": 64
                          },
                          "end": {
                            "row": 32,
                            "column": 65
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 33,
                            "column": 12
                          },
                          "end": {
                            "row": 33,
                            "column": 36
                          },
                          "text": "raise NoPrivateMessage()",
                          "children": [
                            {
                              "type": "raise_statement",
                              "start": {
                                "row": 33,
                                "column": 12
                              },
                              "end": {
                                "row": 33,
                                "column": 36
                              },
                              "text": "raise NoPrivateMessage()",
                              "children": [
                                {
                                  "type": "raise",
                                  "start": {
                                    "row": 33,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 17
                                  },
                                  "text": "raise"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 33,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 36
                                  },
                                  "text": "NoPrivateMessage()",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 34
                                      },
                                      "text": "NoPrivateMessage"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 33,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 36
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 33,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 35
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 33,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 36
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 35,
                        "column": 8
                      },
                      "end": {
                        "row": 35,
                        "column": 71
                      },
                      "text": "getter = functools.partial(discord.utils.get, ctx.author.roles)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 35,
                            "column": 8
                          },
                          "end": {
                            "row": 35,
                            "column": 71
                          },
                          "text": "getter = functools.partial(discord.utils.get, ctx.author.roles)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 35,
                                "column": 8
                              },
                              "end": {
                                "row": 35,
                                "column": 14
                              },
                              "text": "getter"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 35,
                                "column": 15
                              },
                              "end": {
                                "row": 35,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 35,
                                "column": 17
                              },
                              "end": {
                                "row": 35,
                                "column": 71
                              },
                              "text": "functools.partial(discord.utils.get, ctx.author.roles)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 35,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 34
                                  },
                                  "text": "functools.partial",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 26
                                      },
                                      "text": "functools"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 35,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 27
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 34
                                      },
                                      "text": "partial"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 35,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 71
                                  },
                                  "text": "(discord.utils.get, ctx.author.roles)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 35,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 35
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 35,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 52
                                      },
                                      "text": "discord.utils.get",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 35,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 48
                                          },
                                          "text": "discord.utils",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 35,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 42
                                              },
                                              "text": "discord"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 35,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 43
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 35,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 48
                                              },
                                              "text": "utils"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 35,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 49
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 35,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 52
                                          },
                                          "text": "get"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 35,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 53
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 35,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 70
                                      },
                                      "text": "ctx.author.roles",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 35,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 64
                                          },
                                          "text": "ctx.author",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 35,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 57
                                              },
                                              "text": "ctx"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 35,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 58
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 35,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 64
                                              },
                                              "text": "author"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 35,
                                            "column": 64
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 65
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 35,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 70
                                          },
                                          "text": "roles"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 35,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 71
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 36,
                        "column": 8
                      },
                      "end": {
                        "row": 37,
                        "column": 23
                      },
                      "text": "if any(getter(id=item) is not None if isinstance(item, int) else getter(name=item) is not None for item in items):\n            return True",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 36,
                            "column": 8
                          },
                          "end": {
                            "row": 36,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 36,
                            "column": 11
                          },
                          "end": {
                            "row": 36,
                            "column": 121
                          },
                          "text": "any(getter(id=item) is not None if isinstance(item, int) else getter(name=item) is not None for item in items)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 11
                              },
                              "end": {
                                "row": 36,
                                "column": 14
                              },
                              "text": "any"
                            },
                            {
                              "type": "generator_expression",
                              "start": {
                                "row": 36,
                                "column": 14
                              },
                              "end": {
                                "row": 36,
                                "column": 121
                              },
                              "text": "(getter(id=item) is not None if isinstance(item, int) else getter(name=item) is not None for item in items)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 36,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 15
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "conditional_expression",
                                  "start": {
                                    "row": 36,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 102
                                  },
                                  "text": "getter(id=item) is not None if isinstance(item, int) else getter(name=item) is not None",
                                  "children": [
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 36,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 42
                                      },
                                      "text": "getter(id=item) is not None",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 36,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 30
                                          },
                                          "text": "getter(id=item)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 36,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 21
                                              },
                                              "text": "getter"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 36,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 30
                                              },
                                              "text": "(id=item)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 36,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 36,
                                                    "column": 22
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "keyword_argument",
                                                  "start": {
                                                    "row": 36,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 36,
                                                    "column": 29
                                                  },
                                                  "text": "id=item",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 22
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 24
                                                      },
                                                      "text": "id"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 25
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 29
                                                      },
                                                      "text": "item"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 36,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 36,
                                                    "column": 30
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "is not",
                                          "start": {
                                            "row": 36,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 33
                                          },
                                          "text": "is"
                                        },
                                        {
                                          "type": "is not",
                                          "start": {
                                            "row": 36,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 37
                                          },
                                          "text": "not"
                                        },
                                        {
                                          "type": "none",
                                          "start": {
                                            "row": 36,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 42
                                          },
                                          "text": "None"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 36,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 45
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 36,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 67
                                      },
                                      "text": "isinstance(item, int)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 36,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 56
                                          },
                                          "text": "isinstance"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 36,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 67
                                          },
                                          "text": "(item, int)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 36,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 57
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 36,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 61
                                              },
                                              "text": "item"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 36,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 62
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 36,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 66
                                              },
                                              "text": "int"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 36,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 67
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 36,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 72
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 36,
                                        "column": 73
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 102
                                      },
                                      "text": "getter(name=item) is not None",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 36,
                                            "column": 73
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 90
                                          },
                                          "text": "getter(name=item)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 36,
                                                "column": 73
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 79
                                              },
                                              "text": "getter"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 36,
                                                "column": 79
                                              },
                                              "end": {
                                                "row": 36,
                                                "column": 90
                                              },
                                              "text": "(name=item)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 36,
                                                    "column": 79
                                                  },
                                                  "end": {
                                                    "row": 36,
                                                    "column": 80
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "keyword_argument",
                                                  "start": {
                                                    "row": 36,
                                                    "column": 80
                                                  },
                                                  "end": {
                                                    "row": 36,
                                                    "column": 89
                                                  },
                                                  "text": "name=item",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 80
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 84
                                                      },
                                                      "text": "name"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 84
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 85
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 36,
                                                        "column": 85
                                                      },
                                                      "end": {
                                                        "row": 36,
                                                        "column": 89
                                                      },
                                                      "text": "item"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 36,
                                                    "column": 89
                                                  },
                                                  "end": {
                                                    "row": 36,
                                                    "column": 90
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "is not",
                                          "start": {
                                            "row": 36,
                                            "column": 91
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 93
                                          },
                                          "text": "is"
                                        },
                                        {
                                          "type": "is not",
                                          "start": {
                                            "row": 36,
                                            "column": 94
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 97
                                          },
                                          "text": "not"
                                        },
                                        {
                                          "type": "none",
                                          "start": {
                                            "row": 36,
                                            "column": 98
                                          },
                                          "end": {
                                            "row": 36,
                                            "column": 102
                                          },
                                          "text": "None"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "for_in_clause",
                                  "start": {
                                    "row": 36,
                                    "column": 103
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 120
                                  },
                                  "text": "for item in items",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start": {
                                        "row": 36,
                                        "column": 103
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 106
                                      },
                                      "text": "for"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 36,
                                        "column": 107
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 111
                                      },
                                      "text": "item"
                                    },
                                    {
                                      "type": "in",
                                      "start": {
                                        "row": 36,
                                        "column": 112
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 114
                                      },
                                      "text": "in"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 36,
                                        "column": 115
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 120
                                      },
                                      "text": "items"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 36,
                                    "column": 120
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 121
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 36,
                            "column": 121
                          },
                          "end": {
                            "row": 36,
                            "column": 122
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 37,
                            "column": 12
                          },
                          "end": {
                            "row": 37,
                            "column": 23
                          },
                          "text": "return True",
                          "children": [
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 37,
                                "column": 12
                              },
                              "end": {
                                "row": 37,
                                "column": 23
                              },
                              "text": "return True",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 37,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 18
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "true",
                                  "start": {
                                    "row": 37,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 23
                                  },
                                  "text": "True"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 38,
                        "column": 8
                      },
                      "end": {
                        "row": 38,
                        "column": 35
                      },
                      "text": "raise MissingAnyRole(items)",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 38,
                            "column": 8
                          },
                          "end": {
                            "row": 38,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 38,
                            "column": 14
                          },
                          "end": {
                            "row": 38,
                            "column": 35
                          },
                          "text": "MissingAnyRole(items)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 14
                              },
                              "end": {
                                "row": 38,
                                "column": 28
                              },
                              "text": "MissingAnyRole"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 38,
                                "column": 28
                              },
                              "end": {
                                "row": 38,
                                "column": 35
                              },
                              "text": "(items)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 38,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 34
                                  },
                                  "text": "items"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 38,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 35
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 40,
                "column": 4
              },
              "end": {
                "row": 40,
                "column": 27
              },
              "text": "return check(predicate)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 40,
                    "column": 4
                  },
                  "end": {
                    "row": 40,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 40,
                    "column": 11
                  },
                  "end": {
                    "row": 40,
                    "column": 27
                  },
                  "text": "check(predicate)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 40,
                        "column": 11
                      },
                      "end": {
                        "row": 40,
                        "column": 16
                      },
                      "text": "check"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 40,
                        "column": 16
                      },
                      "end": {
                        "row": 40,
                        "column": 27
                      },
                      "text": "(predicate)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 40,
                            "column": 16
                          },
                          "end": {
                            "row": 40,
                            "column": 17
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 40,
                            "column": 17
                          },
                          "end": {
                            "row": 40,
                            "column": 26
                          },
                          "text": "predicate"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 40,
                            "column": 26
                          },
                          "end": {
                            "row": 40,
                            "column": 27
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}