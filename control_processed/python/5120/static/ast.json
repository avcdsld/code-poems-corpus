{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 135,
    "column": 12
  },
  "text": "def multihead_mpnn_attention(node_states,\n                             total_key_depth,\n                             total_value_depth,\n                             output_depth,\n                             num_heads,\n                             adjacency_matrix=None,\n                             num_edge_types=5,\n                             num_transforms=None,\n                             use_weighted_sum=False,\n                             name=\"mpnn_attention\"):\n  \"\"\"Multihead scaled-dot-product attention with input/output transformations.\n\n  Let B be the number of batches.\n  Let N be the number of nodes in the graph.\n  Let D be the size of the node hidden states.\n  Let K be the size of the attention keys/queries (total_key_depth).\n  Let V be the size of the attention values (total_value_depth).\n  Let O be the size of the attention output (output_depth).\n  Let H be the number of heads (num_heads).\n  Let T be the total number of transforms (num_transforms).\n\n  The key and value depths are split across all of the heads. For example, if\n  the key depth is 6 and there are three heads, then the key for each head has\n  depth 2.\n\n  Args:\n    node_states: A Tensor with shape [B, N, D]\n    total_key_depth: An integer (K).\n    total_value_depth: An integer (V).\n    output_depth: An integer (O).\n    num_heads: An integer (H).\n    adjacency_matrix: An Tensor of ints with shape [B, T, N, N]. If there is an\n      edge from node j to node i in batch b, then adjacency_matrix[b, i, j]\n      contains the type of that edge as an integer. Otherwise, it contains 0.\n    num_edge_types: An integer indicating number of edge types.\n    num_transforms: An integer indicating number of transforms (T). If None,\n      then num_transforms will be equal to num_edge_types.\n    use_weighted_sum: If False, will only use a single transform per edge type.\n      Otherwise, use a learned weighted sum of transforms per edge type.\n    name: A string.\n\n  Returns:\n    The result of the attention transformation. The output shape is [B, N, O].\n\n  Raises:\n    ValueError: if the key depth or value depth are not divisible by the\n      number of attention heads.\n  \"\"\"\n  if total_key_depth % num_heads != 0:\n    raise ValueError(\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_key_depth, num_heads))\n  if total_value_depth % num_heads != 0:\n    raise ValueError(\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_value_depth, num_heads))\n  with tf.variable_scope(\n      name, default_name=\"multihead_mpnn_attention\", values=[node_states]):\n    # If not explicitly set, use num_transforms set to num_edge_types.\n    num_transforms = (\n        num_edge_types if num_transforms is None else num_transforms)\n\n    # Create the query for each node's incoming edges.\n    # Create the keys/values for each node for each possible outgoing edge type.\n    q, k, v = compute_mpnn_qkv(\n        node_states,\n        total_key_depth,\n        total_value_depth,\n        num_transforms)\n\n    q_shape = tf.shape(q)  # As above, q_shape is [B, N, K].\n\n    # Divides each query/key/value into separate heads. Specifically, the\n    # query/key/value for each (batch, node) pair (i.e., the third dimensions\n    # of q, k, and v) are broken into H separate pieces. These pieces are used\n    # as the separate attention heads. The resulting tensors have shape\n    # [B, H, N, ?/H], where ? = K, K*T or V*T as appropriate.\n    q = common_attention.split_heads(q, num_heads)  # Shape [B, H, N, K/H].\n    k = common_attention.split_heads(k, num_heads)  # Shape [B, H, N, K*T/H].\n    v = common_attention.split_heads(v, num_heads)  # Shape [B, H, N, V*T/H].\n    key_depth_per_head = total_key_depth // num_heads\n\n    # Ensures that the logits don't have too large of a magnitude.\n    q *= key_depth_per_head**-0.5\n\n    # Rearrange the dimensions so that the head is first. This will make\n    # subsequent steps easier (we loop over the head).\n    q = tf.transpose(q, [1, 0, 2, 3])  # Shape [H, B, N, K/H].\n    k = tf.transpose(k, [1, 0, 2, 3])  # Shape [H, B, N, K*T/H].\n    v = tf.transpose(v, [1, 0, 2, 3])  # Shape [H, B, N, V*T/H].\n\n    # Split the keys and values into separate per-edge-type keys and values.\n    k = tf.reshape(k, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ])  # Shape [H, B, N, T, K/H].\n    k = tf.transpose(k, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, K/H].\n\n    v = tf.reshape(v, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ])  # Shape [H, B, N, T, V/H].\n    v = tf.transpose(v, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, V/H].\n\n    # Perform attention for each head and combine the results into a list.\n    # head_outputs stores a list of tensors, each with shape [1, B, N, V/H].\n    # The last dimension contains the values computed for each attention head.\n    # Each value was determined by computing attention over all of the\n    # incoming edges for node n, weighting the incoming values accordingly,\n    # and adding those weighted values together.\n    head_outputs = []\n    for head_id in range(num_heads):\n      output = dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)\n\n      # Store this result in the list of attention results for each head.\n      # The call to expand_dims gives output shape [1, B, N, V/H], which will\n      # come in handy when we combine the heads together.\n      head_outputs.append(tf.expand_dims(output, axis=0))\n\n    # Combine the heads together into one tensor and rearrange the dimensions.\n    x = tf.concat(head_outputs, axis=0)  # Shape [H, B, N, V/H].\n    x = tf.transpose(x, [1, 0, 2, 3])  # Shape [B, H, N, V/H].\n\n    # Concatenate the values produced by each head together into one vector.\n    x = common_attention.combine_heads(x)  # Shape [B, N, V].\n\n    # A fully-connected linear layer to convert from the value vectors of size V\n    # to output vectors of length O (the appropriate output length).\n    x = common_layers.dense(\n        x, output_depth, use_bias=False, name=\"output_transform\")\n    return x",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 135,
        "column": 12
      },
      "text": "def multihead_mpnn_attention(node_states,\n                             total_key_depth,\n                             total_value_depth,\n                             output_depth,\n                             num_heads,\n                             adjacency_matrix=None,\n                             num_edge_types=5,\n                             num_transforms=None,\n                             use_weighted_sum=False,\n                             name=\"mpnn_attention\"):\n  \"\"\"Multihead scaled-dot-product attention with input/output transformations.\n\n  Let B be the number of batches.\n  Let N be the number of nodes in the graph.\n  Let D be the size of the node hidden states.\n  Let K be the size of the attention keys/queries (total_key_depth).\n  Let V be the size of the attention values (total_value_depth).\n  Let O be the size of the attention output (output_depth).\n  Let H be the number of heads (num_heads).\n  Let T be the total number of transforms (num_transforms).\n\n  The key and value depths are split across all of the heads. For example, if\n  the key depth is 6 and there are three heads, then the key for each head has\n  depth 2.\n\n  Args:\n    node_states: A Tensor with shape [B, N, D]\n    total_key_depth: An integer (K).\n    total_value_depth: An integer (V).\n    output_depth: An integer (O).\n    num_heads: An integer (H).\n    adjacency_matrix: An Tensor of ints with shape [B, T, N, N]. If there is an\n      edge from node j to node i in batch b, then adjacency_matrix[b, i, j]\n      contains the type of that edge as an integer. Otherwise, it contains 0.\n    num_edge_types: An integer indicating number of edge types.\n    num_transforms: An integer indicating number of transforms (T). If None,\n      then num_transforms will be equal to num_edge_types.\n    use_weighted_sum: If False, will only use a single transform per edge type.\n      Otherwise, use a learned weighted sum of transforms per edge type.\n    name: A string.\n\n  Returns:\n    The result of the attention transformation. The output shape is [B, N, O].\n\n  Raises:\n    ValueError: if the key depth or value depth are not divisible by the\n      number of attention heads.\n  \"\"\"\n  if total_key_depth % num_heads != 0:\n    raise ValueError(\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_key_depth, num_heads))\n  if total_value_depth % num_heads != 0:\n    raise ValueError(\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_value_depth, num_heads))\n  with tf.variable_scope(\n      name, default_name=\"multihead_mpnn_attention\", values=[node_states]):\n    # If not explicitly set, use num_transforms set to num_edge_types.\n    num_transforms = (\n        num_edge_types if num_transforms is None else num_transforms)\n\n    # Create the query for each node's incoming edges.\n    # Create the keys/values for each node for each possible outgoing edge type.\n    q, k, v = compute_mpnn_qkv(\n        node_states,\n        total_key_depth,\n        total_value_depth,\n        num_transforms)\n\n    q_shape = tf.shape(q)  # As above, q_shape is [B, N, K].\n\n    # Divides each query/key/value into separate heads. Specifically, the\n    # query/key/value for each (batch, node) pair (i.e., the third dimensions\n    # of q, k, and v) are broken into H separate pieces. These pieces are used\n    # as the separate attention heads. The resulting tensors have shape\n    # [B, H, N, ?/H], where ? = K, K*T or V*T as appropriate.\n    q = common_attention.split_heads(q, num_heads)  # Shape [B, H, N, K/H].\n    k = common_attention.split_heads(k, num_heads)  # Shape [B, H, N, K*T/H].\n    v = common_attention.split_heads(v, num_heads)  # Shape [B, H, N, V*T/H].\n    key_depth_per_head = total_key_depth // num_heads\n\n    # Ensures that the logits don't have too large of a magnitude.\n    q *= key_depth_per_head**-0.5\n\n    # Rearrange the dimensions so that the head is first. This will make\n    # subsequent steps easier (we loop over the head).\n    q = tf.transpose(q, [1, 0, 2, 3])  # Shape [H, B, N, K/H].\n    k = tf.transpose(k, [1, 0, 2, 3])  # Shape [H, B, N, K*T/H].\n    v = tf.transpose(v, [1, 0, 2, 3])  # Shape [H, B, N, V*T/H].\n\n    # Split the keys and values into separate per-edge-type keys and values.\n    k = tf.reshape(k, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ])  # Shape [H, B, N, T, K/H].\n    k = tf.transpose(k, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, K/H].\n\n    v = tf.reshape(v, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ])  # Shape [H, B, N, T, V/H].\n    v = tf.transpose(v, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, V/H].\n\n    # Perform attention for each head and combine the results into a list.\n    # head_outputs stores a list of tensors, each with shape [1, B, N, V/H].\n    # The last dimension contains the values computed for each attention head.\n    # Each value was determined by computing attention over all of the\n    # incoming edges for node n, weighting the incoming values accordingly,\n    # and adding those weighted values together.\n    head_outputs = []\n    for head_id in range(num_heads):\n      output = dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)\n\n      # Store this result in the list of attention results for each head.\n      # The call to expand_dims gives output shape [1, B, N, V/H], which will\n      # come in handy when we combine the heads together.\n      head_outputs.append(tf.expand_dims(output, axis=0))\n\n    # Combine the heads together into one tensor and rearrange the dimensions.\n    x = tf.concat(head_outputs, axis=0)  # Shape [H, B, N, V/H].\n    x = tf.transpose(x, [1, 0, 2, 3])  # Shape [B, H, N, V/H].\n\n    # Concatenate the values produced by each head together into one vector.\n    x = common_attention.combine_heads(x)  # Shape [B, N, V].\n\n    # A fully-connected linear layer to convert from the value vectors of size V\n    # to output vectors of length O (the appropriate output length).\n    x = common_layers.dense(\n        x, output_depth, use_bias=False, name=\"output_transform\")\n    return x",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 28
          },
          "text": "multihead_mpnn_attention"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 28
          },
          "end": {
            "row": 9,
            "column": 51
          },
          "text": "(node_states,\n                             total_key_depth,\n                             total_value_depth,\n                             output_depth,\n                             num_heads,\n                             adjacency_matrix=None,\n                             num_edge_types=5,\n                             num_transforms=None,\n                             use_weighted_sum=False,\n                             name=\"mpnn_attention\")",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "node_states"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 29
              },
              "end": {
                "row": 1,
                "column": 44
              },
              "text": "total_key_depth"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 44
              },
              "end": {
                "row": 1,
                "column": 45
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 2,
                "column": 29
              },
              "end": {
                "row": 2,
                "column": 46
              },
              "text": "total_value_depth"
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 46
              },
              "end": {
                "row": 2,
                "column": 47
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 3,
                "column": 29
              },
              "end": {
                "row": 3,
                "column": 41
              },
              "text": "output_depth"
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 41
              },
              "end": {
                "row": 3,
                "column": 42
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 4,
                "column": 29
              },
              "end": {
                "row": 4,
                "column": 38
              },
              "text": "num_heads"
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 38
              },
              "end": {
                "row": 4,
                "column": 39
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 5,
                "column": 29
              },
              "end": {
                "row": 5,
                "column": 50
              },
              "text": "adjacency_matrix=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 29
                  },
                  "end": {
                    "row": 5,
                    "column": 45
                  },
                  "text": "adjacency_matrix"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 45
                  },
                  "end": {
                    "row": 5,
                    "column": 46
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 5,
                    "column": 46
                  },
                  "end": {
                    "row": 5,
                    "column": 50
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 5,
                "column": 50
              },
              "end": {
                "row": 5,
                "column": 51
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 6,
                "column": 29
              },
              "end": {
                "row": 6,
                "column": 45
              },
              "text": "num_edge_types=5",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 29
                  },
                  "end": {
                    "row": 6,
                    "column": 43
                  },
                  "text": "num_edge_types"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 6,
                    "column": 43
                  },
                  "end": {
                    "row": 6,
                    "column": 44
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 6,
                    "column": 44
                  },
                  "end": {
                    "row": 6,
                    "column": 45
                  },
                  "text": "5"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 6,
                "column": 45
              },
              "end": {
                "row": 6,
                "column": 46
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 7,
                "column": 29
              },
              "end": {
                "row": 7,
                "column": 48
              },
              "text": "num_transforms=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 7,
                    "column": 29
                  },
                  "end": {
                    "row": 7,
                    "column": 43
                  },
                  "text": "num_transforms"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 7,
                    "column": 43
                  },
                  "end": {
                    "row": 7,
                    "column": 44
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 7,
                    "column": 44
                  },
                  "end": {
                    "row": 7,
                    "column": 48
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 7,
                "column": 48
              },
              "end": {
                "row": 7,
                "column": 49
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 8,
                "column": 29
              },
              "end": {
                "row": 8,
                "column": 51
              },
              "text": "use_weighted_sum=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 8,
                    "column": 29
                  },
                  "end": {
                    "row": 8,
                    "column": 45
                  },
                  "text": "use_weighted_sum"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 8,
                    "column": 45
                  },
                  "end": {
                    "row": 8,
                    "column": 46
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 8,
                    "column": 46
                  },
                  "end": {
                    "row": 8,
                    "column": 51
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 8,
                "column": 51
              },
              "end": {
                "row": 8,
                "column": 52
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 9,
                "column": 29
              },
              "end": {
                "row": 9,
                "column": 50
              },
              "text": "name=\"mpnn_attention\"",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 9,
                    "column": 29
                  },
                  "end": {
                    "row": 9,
                    "column": 33
                  },
                  "text": "name"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 9,
                    "column": 33
                  },
                  "end": {
                    "row": 9,
                    "column": 34
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 9,
                    "column": 34
                  },
                  "end": {
                    "row": 9,
                    "column": 50
                  },
                  "text": "\"mpnn_attention\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 9,
                        "column": 34
                      },
                      "end": {
                        "row": 9,
                        "column": 35
                      },
                      "text": "\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 9,
                        "column": 35
                      },
                      "end": {
                        "row": 9,
                        "column": 49
                      },
                      "text": "mpnn_attention"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 9,
                        "column": 49
                      },
                      "end": {
                        "row": 9,
                        "column": 50
                      },
                      "text": "\""
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 9,
                "column": 50
              },
              "end": {
                "row": 9,
                "column": 51
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 9,
            "column": 51
          },
          "end": {
            "row": 9,
            "column": 52
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 10,
            "column": 2
          },
          "end": {
            "row": 135,
            "column": 12
          },
          "text": "\"\"\"Multihead scaled-dot-product attention with input/output transformations.\n\n  Let B be the number of batches.\n  Let N be the number of nodes in the graph.\n  Let D be the size of the node hidden states.\n  Let K be the size of the attention keys/queries (total_key_depth).\n  Let V be the size of the attention values (total_value_depth).\n  Let O be the size of the attention output (output_depth).\n  Let H be the number of heads (num_heads).\n  Let T be the total number of transforms (num_transforms).\n\n  The key and value depths are split across all of the heads. For example, if\n  the key depth is 6 and there are three heads, then the key for each head has\n  depth 2.\n\n  Args:\n    node_states: A Tensor with shape [B, N, D]\n    total_key_depth: An integer (K).\n    total_value_depth: An integer (V).\n    output_depth: An integer (O).\n    num_heads: An integer (H).\n    adjacency_matrix: An Tensor of ints with shape [B, T, N, N]. If there is an\n      edge from node j to node i in batch b, then adjacency_matrix[b, i, j]\n      contains the type of that edge as an integer. Otherwise, it contains 0.\n    num_edge_types: An integer indicating number of edge types.\n    num_transforms: An integer indicating number of transforms (T). If None,\n      then num_transforms will be equal to num_edge_types.\n    use_weighted_sum: If False, will only use a single transform per edge type.\n      Otherwise, use a learned weighted sum of transforms per edge type.\n    name: A string.\n\n  Returns:\n    The result of the attention transformation. The output shape is [B, N, O].\n\n  Raises:\n    ValueError: if the key depth or value depth are not divisible by the\n      number of attention heads.\n  \"\"\"\n  if total_key_depth % num_heads != 0:\n    raise ValueError(\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_key_depth, num_heads))\n  if total_value_depth % num_heads != 0:\n    raise ValueError(\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_value_depth, num_heads))\n  with tf.variable_scope(\n      name, default_name=\"multihead_mpnn_attention\", values=[node_states]):\n    # If not explicitly set, use num_transforms set to num_edge_types.\n    num_transforms = (\n        num_edge_types if num_transforms is None else num_transforms)\n\n    # Create the query for each node's incoming edges.\n    # Create the keys/values for each node for each possible outgoing edge type.\n    q, k, v = compute_mpnn_qkv(\n        node_states,\n        total_key_depth,\n        total_value_depth,\n        num_transforms)\n\n    q_shape = tf.shape(q)  # As above, q_shape is [B, N, K].\n\n    # Divides each query/key/value into separate heads. Specifically, the\n    # query/key/value for each (batch, node) pair (i.e., the third dimensions\n    # of q, k, and v) are broken into H separate pieces. These pieces are used\n    # as the separate attention heads. The resulting tensors have shape\n    # [B, H, N, ?/H], where ? = K, K*T or V*T as appropriate.\n    q = common_attention.split_heads(q, num_heads)  # Shape [B, H, N, K/H].\n    k = common_attention.split_heads(k, num_heads)  # Shape [B, H, N, K*T/H].\n    v = common_attention.split_heads(v, num_heads)  # Shape [B, H, N, V*T/H].\n    key_depth_per_head = total_key_depth // num_heads\n\n    # Ensures that the logits don't have too large of a magnitude.\n    q *= key_depth_per_head**-0.5\n\n    # Rearrange the dimensions so that the head is first. This will make\n    # subsequent steps easier (we loop over the head).\n    q = tf.transpose(q, [1, 0, 2, 3])  # Shape [H, B, N, K/H].\n    k = tf.transpose(k, [1, 0, 2, 3])  # Shape [H, B, N, K*T/H].\n    v = tf.transpose(v, [1, 0, 2, 3])  # Shape [H, B, N, V*T/H].\n\n    # Split the keys and values into separate per-edge-type keys and values.\n    k = tf.reshape(k, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ])  # Shape [H, B, N, T, K/H].\n    k = tf.transpose(k, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, K/H].\n\n    v = tf.reshape(v, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ])  # Shape [H, B, N, T, V/H].\n    v = tf.transpose(v, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, V/H].\n\n    # Perform attention for each head and combine the results into a list.\n    # head_outputs stores a list of tensors, each with shape [1, B, N, V/H].\n    # The last dimension contains the values computed for each attention head.\n    # Each value was determined by computing attention over all of the\n    # incoming edges for node n, weighting the incoming values accordingly,\n    # and adding those weighted values together.\n    head_outputs = []\n    for head_id in range(num_heads):\n      output = dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)\n\n      # Store this result in the list of attention results for each head.\n      # The call to expand_dims gives output shape [1, B, N, V/H], which will\n      # come in handy when we combine the heads together.\n      head_outputs.append(tf.expand_dims(output, axis=0))\n\n    # Combine the heads together into one tensor and rearrange the dimensions.\n    x = tf.concat(head_outputs, axis=0)  # Shape [H, B, N, V/H].\n    x = tf.transpose(x, [1, 0, 2, 3])  # Shape [B, H, N, V/H].\n\n    # Concatenate the values produced by each head together into one vector.\n    x = common_attention.combine_heads(x)  # Shape [B, N, V].\n\n    # A fully-connected linear layer to convert from the value vectors of size V\n    # to output vectors of length O (the appropriate output length).\n    x = common_layers.dense(\n        x, output_depth, use_bias=False, name=\"output_transform\")\n    return x",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 10,
                "column": 2
              },
              "end": {
                "row": 47,
                "column": 5
              },
              "text": "\"\"\"Multihead scaled-dot-product attention with input/output transformations.\n\n  Let B be the number of batches.\n  Let N be the number of nodes in the graph.\n  Let D be the size of the node hidden states.\n  Let K be the size of the attention keys/queries (total_key_depth).\n  Let V be the size of the attention values (total_value_depth).\n  Let O be the size of the attention output (output_depth).\n  Let H be the number of heads (num_heads).\n  Let T be the total number of transforms (num_transforms).\n\n  The key and value depths are split across all of the heads. For example, if\n  the key depth is 6 and there are three heads, then the key for each head has\n  depth 2.\n\n  Args:\n    node_states: A Tensor with shape [B, N, D]\n    total_key_depth: An integer (K).\n    total_value_depth: An integer (V).\n    output_depth: An integer (O).\n    num_heads: An integer (H).\n    adjacency_matrix: An Tensor of ints with shape [B, T, N, N]. If there is an\n      edge from node j to node i in batch b, then adjacency_matrix[b, i, j]\n      contains the type of that edge as an integer. Otherwise, it contains 0.\n    num_edge_types: An integer indicating number of edge types.\n    num_transforms: An integer indicating number of transforms (T). If None,\n      then num_transforms will be equal to num_edge_types.\n    use_weighted_sum: If False, will only use a single transform per edge type.\n      Otherwise, use a learned weighted sum of transforms per edge type.\n    name: A string.\n\n  Returns:\n    The result of the attention transformation. The output shape is [B, N, O].\n\n  Raises:\n    ValueError: if the key depth or value depth are not divisible by the\n      number of attention heads.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 10,
                    "column": 2
                  },
                  "end": {
                    "row": 47,
                    "column": 5
                  },
                  "text": "\"\"\"Multihead scaled-dot-product attention with input/output transformations.\n\n  Let B be the number of batches.\n  Let N be the number of nodes in the graph.\n  Let D be the size of the node hidden states.\n  Let K be the size of the attention keys/queries (total_key_depth).\n  Let V be the size of the attention values (total_value_depth).\n  Let O be the size of the attention output (output_depth).\n  Let H be the number of heads (num_heads).\n  Let T be the total number of transforms (num_transforms).\n\n  The key and value depths are split across all of the heads. For example, if\n  the key depth is 6 and there are three heads, then the key for each head has\n  depth 2.\n\n  Args:\n    node_states: A Tensor with shape [B, N, D]\n    total_key_depth: An integer (K).\n    total_value_depth: An integer (V).\n    output_depth: An integer (O).\n    num_heads: An integer (H).\n    adjacency_matrix: An Tensor of ints with shape [B, T, N, N]. If there is an\n      edge from node j to node i in batch b, then adjacency_matrix[b, i, j]\n      contains the type of that edge as an integer. Otherwise, it contains 0.\n    num_edge_types: An integer indicating number of edge types.\n    num_transforms: An integer indicating number of transforms (T). If None,\n      then num_transforms will be equal to num_edge_types.\n    use_weighted_sum: If False, will only use a single transform per edge type.\n      Otherwise, use a learned weighted sum of transforms per edge type.\n    name: A string.\n\n  Returns:\n    The result of the attention transformation. The output shape is [B, N, O].\n\n  Raises:\n    ValueError: if the key depth or value depth are not divisible by the\n      number of attention heads.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 10,
                        "column": 2
                      },
                      "end": {
                        "row": 10,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 10,
                        "column": 5
                      },
                      "end": {
                        "row": 47,
                        "column": 2
                      },
                      "text": "Multihead scaled-dot-product attention with input/output transformations.\n\n  Let B be the number of batches.\n  Let N be the number of nodes in the graph.\n  Let D be the size of the node hidden states.\n  Let K be the size of the attention keys/queries (total_key_depth).\n  Let V be the size of the attention values (total_value_depth).\n  Let O be the size of the attention output (output_depth).\n  Let H be the number of heads (num_heads).\n  Let T be the total number of transforms (num_transforms).\n\n  The key and value depths are split across all of the heads. For example, if\n  the key depth is 6 and there are three heads, then the key for each head has\n  depth 2.\n\n  Args:\n    node_states: A Tensor with shape [B, N, D]\n    total_key_depth: An integer (K).\n    total_value_depth: An integer (V).\n    output_depth: An integer (O).\n    num_heads: An integer (H).\n    adjacency_matrix: An Tensor of ints with shape [B, T, N, N]. If there is an\n      edge from node j to node i in batch b, then adjacency_matrix[b, i, j]\n      contains the type of that edge as an integer. Otherwise, it contains 0.\n    num_edge_types: An integer indicating number of edge types.\n    num_transforms: An integer indicating number of transforms (T). If None,\n      then num_transforms will be equal to num_edge_types.\n    use_weighted_sum: If False, will only use a single transform per edge type.\n      Otherwise, use a learned weighted sum of transforms per edge type.\n    name: A string.\n\n  Returns:\n    The result of the attention transformation. The output shape is [B, N, O].\n\n  Raises:\n    ValueError: if the key depth or value depth are not divisible by the\n      number of attention heads.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 47,
                        "column": 2
                      },
                      "end": {
                        "row": 47,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 48,
                "column": 2
              },
              "end": {
                "row": 50,
                "column": 76
              },
              "text": "if total_key_depth % num_heads != 0:\n    raise ValueError(\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_key_depth, num_heads))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 48,
                    "column": 2
                  },
                  "end": {
                    "row": 48,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 48,
                    "column": 5
                  },
                  "end": {
                    "row": 48,
                    "column": 37
                  },
                  "text": "total_key_depth % num_heads != 0",
                  "children": [
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 48,
                        "column": 5
                      },
                      "end": {
                        "row": 48,
                        "column": 32
                      },
                      "text": "total_key_depth % num_heads",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 48,
                            "column": 5
                          },
                          "end": {
                            "row": 48,
                            "column": 20
                          },
                          "text": "total_key_depth"
                        },
                        {
                          "type": "%",
                          "start": {
                            "row": 48,
                            "column": 21
                          },
                          "end": {
                            "row": 48,
                            "column": 22
                          },
                          "text": "%"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 48,
                            "column": 23
                          },
                          "end": {
                            "row": 48,
                            "column": 32
                          },
                          "text": "num_heads"
                        }
                      ]
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 48,
                        "column": 33
                      },
                      "end": {
                        "row": 48,
                        "column": 35
                      },
                      "text": "!="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 48,
                        "column": 36
                      },
                      "end": {
                        "row": 48,
                        "column": 37
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 48,
                    "column": 37
                  },
                  "end": {
                    "row": 48,
                    "column": 38
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 49,
                    "column": 4
                  },
                  "end": {
                    "row": 50,
                    "column": 76
                  },
                  "text": "raise ValueError(\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_key_depth, num_heads))",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 49,
                        "column": 4
                      },
                      "end": {
                        "row": 50,
                        "column": 76
                      },
                      "text": "raise ValueError(\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_key_depth, num_heads))",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 49,
                            "column": 4
                          },
                          "end": {
                            "row": 49,
                            "column": 9
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 49,
                            "column": 10
                          },
                          "end": {
                            "row": 50,
                            "column": 76
                          },
                          "text": "ValueError(\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_key_depth, num_heads))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 49,
                                "column": 10
                              },
                              "end": {
                                "row": 49,
                                "column": 20
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 49,
                                "column": 20
                              },
                              "end": {
                                "row": 50,
                                "column": 76
                              },
                              "text": "(\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_key_depth, num_heads))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 49,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 49,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 75
                                  },
                                  "text": "\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_key_depth, num_heads)",
                                  "children": [
                                    {
                                      "type": "concatenated_string",
                                      "start": {
                                        "row": 49,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 44
                                      },
                                      "text": "\"Key depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\"",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 49,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 73
                                          },
                                          "text": "\"Key depth (%d) must be divisible by the number of \"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 49,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 22
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 49,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 72
                                              },
                                              "text": "Key depth (%d) must be divisible by the number of "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 49,
                                                "column": 72
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 73
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 50,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 44
                                          },
                                          "text": "\"attention heads (%d).\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 50,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 22
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 50,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 43
                                              },
                                              "text": "attention heads (%d)."
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 50,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 44
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "%",
                                      "start": {
                                        "row": 50,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 46
                                      },
                                      "text": "%"
                                    },
                                    {
                                      "type": "tuple",
                                      "start": {
                                        "row": 50,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 75
                                      },
                                      "text": "(total_key_depth, num_heads)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 50,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 48
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 50,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 63
                                          },
                                          "text": "total_key_depth"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 50,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 64
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 50,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 74
                                          },
                                          "text": "num_heads"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 50,
                                            "column": 74
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 75
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 50,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 76
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 51,
                "column": 2
              },
              "end": {
                "row": 53,
                "column": 78
              },
              "text": "if total_value_depth % num_heads != 0:\n    raise ValueError(\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_value_depth, num_heads))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 51,
                    "column": 2
                  },
                  "end": {
                    "row": 51,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 51,
                    "column": 5
                  },
                  "end": {
                    "row": 51,
                    "column": 39
                  },
                  "text": "total_value_depth % num_heads != 0",
                  "children": [
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 51,
                        "column": 5
                      },
                      "end": {
                        "row": 51,
                        "column": 34
                      },
                      "text": "total_value_depth % num_heads",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 51,
                            "column": 5
                          },
                          "end": {
                            "row": 51,
                            "column": 22
                          },
                          "text": "total_value_depth"
                        },
                        {
                          "type": "%",
                          "start": {
                            "row": 51,
                            "column": 23
                          },
                          "end": {
                            "row": 51,
                            "column": 24
                          },
                          "text": "%"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 51,
                            "column": 25
                          },
                          "end": {
                            "row": 51,
                            "column": 34
                          },
                          "text": "num_heads"
                        }
                      ]
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 51,
                        "column": 35
                      },
                      "end": {
                        "row": 51,
                        "column": 37
                      },
                      "text": "!="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 51,
                        "column": 38
                      },
                      "end": {
                        "row": 51,
                        "column": 39
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 51,
                    "column": 39
                  },
                  "end": {
                    "row": 51,
                    "column": 40
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 52,
                    "column": 4
                  },
                  "end": {
                    "row": 53,
                    "column": 78
                  },
                  "text": "raise ValueError(\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_value_depth, num_heads))",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 52,
                        "column": 4
                      },
                      "end": {
                        "row": 53,
                        "column": 78
                      },
                      "text": "raise ValueError(\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_value_depth, num_heads))",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 52,
                            "column": 4
                          },
                          "end": {
                            "row": 52,
                            "column": 9
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 52,
                            "column": 10
                          },
                          "end": {
                            "row": 53,
                            "column": 78
                          },
                          "text": "ValueError(\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_value_depth, num_heads))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 52,
                                "column": 10
                              },
                              "end": {
                                "row": 52,
                                "column": 20
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 52,
                                "column": 20
                              },
                              "end": {
                                "row": 53,
                                "column": 78
                              },
                              "text": "(\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_value_depth, num_heads))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 52,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 52,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 77
                                  },
                                  "text": "\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\" % (total_value_depth, num_heads)",
                                  "children": [
                                    {
                                      "type": "concatenated_string",
                                      "start": {
                                        "row": 52,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 53,
                                        "column": 44
                                      },
                                      "text": "\"Value depth (%d) must be divisible by the number of \"\n                     \"attention heads (%d).\"",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 52,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 75
                                          },
                                          "text": "\"Value depth (%d) must be divisible by the number of \"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 52,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 22
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 52,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 74
                                              },
                                              "text": "Value depth (%d) must be divisible by the number of "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 52,
                                                "column": 74
                                              },
                                              "end": {
                                                "row": 52,
                                                "column": 75
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 53,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 44
                                          },
                                          "text": "\"attention heads (%d).\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 53,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 22
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 53,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 43
                                              },
                                              "text": "attention heads (%d)."
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 53,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 53,
                                                "column": 44
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "%",
                                      "start": {
                                        "row": 53,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 53,
                                        "column": 46
                                      },
                                      "text": "%"
                                    },
                                    {
                                      "type": "tuple",
                                      "start": {
                                        "row": 53,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 53,
                                        "column": 77
                                      },
                                      "text": "(total_value_depth, num_heads)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 53,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 48
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 53,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 65
                                          },
                                          "text": "total_value_depth"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 53,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 66
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 53,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 76
                                          },
                                          "text": "num_heads"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 53,
                                            "column": 76
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 77
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 53,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 78
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "with_statement",
              "start": {
                "row": 54,
                "column": 2
              },
              "end": {
                "row": 135,
                "column": 12
              },
              "text": "with tf.variable_scope(\n      name, default_name=\"multihead_mpnn_attention\", values=[node_states]):\n    # If not explicitly set, use num_transforms set to num_edge_types.\n    num_transforms = (\n        num_edge_types if num_transforms is None else num_transforms)\n\n    # Create the query for each node's incoming edges.\n    # Create the keys/values for each node for each possible outgoing edge type.\n    q, k, v = compute_mpnn_qkv(\n        node_states,\n        total_key_depth,\n        total_value_depth,\n        num_transforms)\n\n    q_shape = tf.shape(q)  # As above, q_shape is [B, N, K].\n\n    # Divides each query/key/value into separate heads. Specifically, the\n    # query/key/value for each (batch, node) pair (i.e., the third dimensions\n    # of q, k, and v) are broken into H separate pieces. These pieces are used\n    # as the separate attention heads. The resulting tensors have shape\n    # [B, H, N, ?/H], where ? = K, K*T or V*T as appropriate.\n    q = common_attention.split_heads(q, num_heads)  # Shape [B, H, N, K/H].\n    k = common_attention.split_heads(k, num_heads)  # Shape [B, H, N, K*T/H].\n    v = common_attention.split_heads(v, num_heads)  # Shape [B, H, N, V*T/H].\n    key_depth_per_head = total_key_depth // num_heads\n\n    # Ensures that the logits don't have too large of a magnitude.\n    q *= key_depth_per_head**-0.5\n\n    # Rearrange the dimensions so that the head is first. This will make\n    # subsequent steps easier (we loop over the head).\n    q = tf.transpose(q, [1, 0, 2, 3])  # Shape [H, B, N, K/H].\n    k = tf.transpose(k, [1, 0, 2, 3])  # Shape [H, B, N, K*T/H].\n    v = tf.transpose(v, [1, 0, 2, 3])  # Shape [H, B, N, V*T/H].\n\n    # Split the keys and values into separate per-edge-type keys and values.\n    k = tf.reshape(k, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ])  # Shape [H, B, N, T, K/H].\n    k = tf.transpose(k, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, K/H].\n\n    v = tf.reshape(v, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ])  # Shape [H, B, N, T, V/H].\n    v = tf.transpose(v, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, V/H].\n\n    # Perform attention for each head and combine the results into a list.\n    # head_outputs stores a list of tensors, each with shape [1, B, N, V/H].\n    # The last dimension contains the values computed for each attention head.\n    # Each value was determined by computing attention over all of the\n    # incoming edges for node n, weighting the incoming values accordingly,\n    # and adding those weighted values together.\n    head_outputs = []\n    for head_id in range(num_heads):\n      output = dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)\n\n      # Store this result in the list of attention results for each head.\n      # The call to expand_dims gives output shape [1, B, N, V/H], which will\n      # come in handy when we combine the heads together.\n      head_outputs.append(tf.expand_dims(output, axis=0))\n\n    # Combine the heads together into one tensor and rearrange the dimensions.\n    x = tf.concat(head_outputs, axis=0)  # Shape [H, B, N, V/H].\n    x = tf.transpose(x, [1, 0, 2, 3])  # Shape [B, H, N, V/H].\n\n    # Concatenate the values produced by each head together into one vector.\n    x = common_attention.combine_heads(x)  # Shape [B, N, V].\n\n    # A fully-connected linear layer to convert from the value vectors of size V\n    # to output vectors of length O (the appropriate output length).\n    x = common_layers.dense(\n        x, output_depth, use_bias=False, name=\"output_transform\")\n    return x",
              "children": [
                {
                  "type": "with",
                  "start": {
                    "row": 54,
                    "column": 2
                  },
                  "end": {
                    "row": 54,
                    "column": 6
                  },
                  "text": "with"
                },
                {
                  "type": "with_clause",
                  "start": {
                    "row": 54,
                    "column": 7
                  },
                  "end": {
                    "row": 55,
                    "column": 74
                  },
                  "text": "tf.variable_scope(\n      name, default_name=\"multihead_mpnn_attention\", values=[node_states])",
                  "children": [
                    {
                      "type": "with_item",
                      "start": {
                        "row": 54,
                        "column": 7
                      },
                      "end": {
                        "row": 55,
                        "column": 74
                      },
                      "text": "tf.variable_scope(\n      name, default_name=\"multihead_mpnn_attention\", values=[node_states])",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 54,
                            "column": 7
                          },
                          "end": {
                            "row": 55,
                            "column": 74
                          },
                          "text": "tf.variable_scope(\n      name, default_name=\"multihead_mpnn_attention\", values=[node_states])",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 54,
                                "column": 7
                              },
                              "end": {
                                "row": 54,
                                "column": 24
                              },
                              "text": "tf.variable_scope",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 9
                                  },
                                  "text": "tf"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 54,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 10
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 24
                                  },
                                  "text": "variable_scope"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 54,
                                "column": 24
                              },
                              "end": {
                                "row": 55,
                                "column": 74
                              },
                              "text": "(\n      name, default_name=\"multihead_mpnn_attention\", values=[node_states])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 54,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 55,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 10
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 55,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 11
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "keyword_argument",
                                  "start": {
                                    "row": 55,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 51
                                  },
                                  "text": "default_name=\"multihead_mpnn_attention\"",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 55,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 24
                                      },
                                      "text": "default_name"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 55,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 25
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 55,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 51
                                      },
                                      "text": "\"multihead_mpnn_attention\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 55,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 26
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 55,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 50
                                          },
                                          "text": "multihead_mpnn_attention"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 55,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 51
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 55,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 52
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "keyword_argument",
                                  "start": {
                                    "row": 55,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 73
                                  },
                                  "text": "values=[node_states]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 55,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 59
                                      },
                                      "text": "values"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 55,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 60
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 55,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 73
                                      },
                                      "text": "[node_states]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 55,
                                            "column": 60
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 61
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 55,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 72
                                          },
                                          "text": "node_states"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 55,
                                            "column": 72
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 73
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 55,
                                    "column": 73
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 74
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 55,
                    "column": 74
                  },
                  "end": {
                    "row": 55,
                    "column": 75
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 56,
                    "column": 4
                  },
                  "end": {
                    "row": 56,
                    "column": 70
                  },
                  "text": "# If not explicitly set, use num_transforms set to num_edge_types."
                },
                {
                  "type": "block",
                  "start": {
                    "row": 57,
                    "column": 4
                  },
                  "end": {
                    "row": 135,
                    "column": 12
                  },
                  "text": "num_transforms = (\n        num_edge_types if num_transforms is None else num_transforms)\n\n    # Create the query for each node's incoming edges.\n    # Create the keys/values for each node for each possible outgoing edge type.\n    q, k, v = compute_mpnn_qkv(\n        node_states,\n        total_key_depth,\n        total_value_depth,\n        num_transforms)\n\n    q_shape = tf.shape(q)  # As above, q_shape is [B, N, K].\n\n    # Divides each query/key/value into separate heads. Specifically, the\n    # query/key/value for each (batch, node) pair (i.e., the third dimensions\n    # of q, k, and v) are broken into H separate pieces. These pieces are used\n    # as the separate attention heads. The resulting tensors have shape\n    # [B, H, N, ?/H], where ? = K, K*T or V*T as appropriate.\n    q = common_attention.split_heads(q, num_heads)  # Shape [B, H, N, K/H].\n    k = common_attention.split_heads(k, num_heads)  # Shape [B, H, N, K*T/H].\n    v = common_attention.split_heads(v, num_heads)  # Shape [B, H, N, V*T/H].\n    key_depth_per_head = total_key_depth // num_heads\n\n    # Ensures that the logits don't have too large of a magnitude.\n    q *= key_depth_per_head**-0.5\n\n    # Rearrange the dimensions so that the head is first. This will make\n    # subsequent steps easier (we loop over the head).\n    q = tf.transpose(q, [1, 0, 2, 3])  # Shape [H, B, N, K/H].\n    k = tf.transpose(k, [1, 0, 2, 3])  # Shape [H, B, N, K*T/H].\n    v = tf.transpose(v, [1, 0, 2, 3])  # Shape [H, B, N, V*T/H].\n\n    # Split the keys and values into separate per-edge-type keys and values.\n    k = tf.reshape(k, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ])  # Shape [H, B, N, T, K/H].\n    k = tf.transpose(k, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, K/H].\n\n    v = tf.reshape(v, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ])  # Shape [H, B, N, T, V/H].\n    v = tf.transpose(v, [0, 1, 3, 2, 4])  # Shape [H, B, T, N, V/H].\n\n    # Perform attention for each head and combine the results into a list.\n    # head_outputs stores a list of tensors, each with shape [1, B, N, V/H].\n    # The last dimension contains the values computed for each attention head.\n    # Each value was determined by computing attention over all of the\n    # incoming edges for node n, weighting the incoming values accordingly,\n    # and adding those weighted values together.\n    head_outputs = []\n    for head_id in range(num_heads):\n      output = dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)\n\n      # Store this result in the list of attention results for each head.\n      # The call to expand_dims gives output shape [1, B, N, V/H], which will\n      # come in handy when we combine the heads together.\n      head_outputs.append(tf.expand_dims(output, axis=0))\n\n    # Combine the heads together into one tensor and rearrange the dimensions.\n    x = tf.concat(head_outputs, axis=0)  # Shape [H, B, N, V/H].\n    x = tf.transpose(x, [1, 0, 2, 3])  # Shape [B, H, N, V/H].\n\n    # Concatenate the values produced by each head together into one vector.\n    x = common_attention.combine_heads(x)  # Shape [B, N, V].\n\n    # A fully-connected linear layer to convert from the value vectors of size V\n    # to output vectors of length O (the appropriate output length).\n    x = common_layers.dense(\n        x, output_depth, use_bias=False, name=\"output_transform\")\n    return x",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 57,
                        "column": 4
                      },
                      "end": {
                        "row": 58,
                        "column": 69
                      },
                      "text": "num_transforms = (\n        num_edge_types if num_transforms is None else num_transforms)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 57,
                            "column": 4
                          },
                          "end": {
                            "row": 58,
                            "column": 69
                          },
                          "text": "num_transforms = (\n        num_edge_types if num_transforms is None else num_transforms)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 57,
                                "column": 4
                              },
                              "end": {
                                "row": 57,
                                "column": 18
                              },
                              "text": "num_transforms"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 57,
                                "column": 19
                              },
                              "end": {
                                "row": 57,
                                "column": 20
                              },
                              "text": "="
                            },
                            {
                              "type": "parenthesized_expression",
                              "start": {
                                "row": 57,
                                "column": 21
                              },
                              "end": {
                                "row": 58,
                                "column": 69
                              },
                              "text": "(\n        num_edge_types if num_transforms is None else num_transforms)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 57,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 57,
                                    "column": 22
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "conditional_expression",
                                  "start": {
                                    "row": 58,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 68
                                  },
                                  "text": "num_edge_types if num_transforms is None else num_transforms",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 58,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 22
                                      },
                                      "text": "num_edge_types"
                                    },
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 58,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 25
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 58,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 48
                                      },
                                      "text": "num_transforms is None",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 58,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 40
                                          },
                                          "text": "num_transforms"
                                        },
                                        {
                                          "type": "is",
                                          "start": {
                                            "row": 58,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 43
                                          },
                                          "text": "is"
                                        },
                                        {
                                          "type": "none",
                                          "start": {
                                            "row": 58,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 58,
                                            "column": 48
                                          },
                                          "text": "None"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "else",
                                      "start": {
                                        "row": 58,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 53
                                      },
                                      "text": "else"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 58,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 58,
                                        "column": 68
                                      },
                                      "text": "num_transforms"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 58,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 58,
                                    "column": 69
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 60,
                        "column": 4
                      },
                      "end": {
                        "row": 60,
                        "column": 54
                      },
                      "text": "# Create the query for each node's incoming edges."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 61,
                        "column": 4
                      },
                      "end": {
                        "row": 61,
                        "column": 80
                      },
                      "text": "# Create the keys/values for each node for each possible outgoing edge type."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 62,
                        "column": 4
                      },
                      "end": {
                        "row": 66,
                        "column": 23
                      },
                      "text": "q, k, v = compute_mpnn_qkv(\n        node_states,\n        total_key_depth,\n        total_value_depth,\n        num_transforms)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 62,
                            "column": 4
                          },
                          "end": {
                            "row": 66,
                            "column": 23
                          },
                          "text": "q, k, v = compute_mpnn_qkv(\n        node_states,\n        total_key_depth,\n        total_value_depth,\n        num_transforms)",
                          "children": [
                            {
                              "type": "pattern_list",
                              "start": {
                                "row": 62,
                                "column": 4
                              },
                              "end": {
                                "row": 62,
                                "column": 11
                              },
                              "text": "q, k, v",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 5
                                  },
                                  "text": "q"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 62,
                                    "column": 5
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 6
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 8
                                  },
                                  "text": "k"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 62,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 9
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 11
                                  },
                                  "text": "v"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 62,
                                "column": 12
                              },
                              "end": {
                                "row": 62,
                                "column": 13
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 62,
                                "column": 14
                              },
                              "end": {
                                "row": 66,
                                "column": 23
                              },
                              "text": "compute_mpnn_qkv(\n        node_states,\n        total_key_depth,\n        total_value_depth,\n        num_transforms)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 62,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 30
                                  },
                                  "text": "compute_mpnn_qkv"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 62,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 66,
                                    "column": 23
                                  },
                                  "text": "(\n        node_states,\n        total_key_depth,\n        total_value_depth,\n        num_transforms)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 62,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 31
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 63,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 19
                                      },
                                      "text": "node_states"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 63,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 20
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 64,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 64,
                                        "column": 23
                                      },
                                      "text": "total_key_depth"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 64,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 64,
                                        "column": 24
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 65,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 25
                                      },
                                      "text": "total_value_depth"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 65,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 26
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 66,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 66,
                                        "column": 22
                                      },
                                      "text": "num_transforms"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 66,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 66,
                                        "column": 23
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 68,
                        "column": 4
                      },
                      "end": {
                        "row": 68,
                        "column": 25
                      },
                      "text": "q_shape = tf.shape(q)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 68,
                            "column": 4
                          },
                          "end": {
                            "row": 68,
                            "column": 25
                          },
                          "text": "q_shape = tf.shape(q)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 68,
                                "column": 4
                              },
                              "end": {
                                "row": 68,
                                "column": 11
                              },
                              "text": "q_shape"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 68,
                                "column": 12
                              },
                              "end": {
                                "row": 68,
                                "column": 13
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 68,
                                "column": 14
                              },
                              "end": {
                                "row": 68,
                                "column": 25
                              },
                              "text": "tf.shape(q)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 68,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 22
                                  },
                                  "text": "tf.shape",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 68,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 16
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 68,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 17
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 68,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 22
                                      },
                                      "text": "shape"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 68,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 25
                                  },
                                  "text": "(q)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 68,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 23
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 68,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 24
                                      },
                                      "text": "q"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 68,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 25
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 68,
                        "column": 27
                      },
                      "end": {
                        "row": 68,
                        "column": 60
                      },
                      "text": "# As above, q_shape is [B, N, K]."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 70,
                        "column": 4
                      },
                      "end": {
                        "row": 70,
                        "column": 73
                      },
                      "text": "# Divides each query/key/value into separate heads. Specifically, the"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 71,
                        "column": 4
                      },
                      "end": {
                        "row": 71,
                        "column": 77
                      },
                      "text": "# query/key/value for each (batch, node) pair (i.e., the third dimensions"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 72,
                        "column": 4
                      },
                      "end": {
                        "row": 72,
                        "column": 78
                      },
                      "text": "# of q, k, and v) are broken into H separate pieces. These pieces are used"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 73,
                        "column": 4
                      },
                      "end": {
                        "row": 73,
                        "column": 71
                      },
                      "text": "# as the separate attention heads. The resulting tensors have shape"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 74,
                        "column": 4
                      },
                      "end": {
                        "row": 74,
                        "column": 61
                      },
                      "text": "# [B, H, N, ?/H], where ? = K, K*T or V*T as appropriate."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 75,
                        "column": 4
                      },
                      "end": {
                        "row": 75,
                        "column": 50
                      },
                      "text": "q = common_attention.split_heads(q, num_heads)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 75,
                            "column": 4
                          },
                          "end": {
                            "row": 75,
                            "column": 50
                          },
                          "text": "q = common_attention.split_heads(q, num_heads)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 75,
                                "column": 4
                              },
                              "end": {
                                "row": 75,
                                "column": 5
                              },
                              "text": "q"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 75,
                                "column": 6
                              },
                              "end": {
                                "row": 75,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 75,
                                "column": 8
                              },
                              "end": {
                                "row": 75,
                                "column": 50
                              },
                              "text": "common_attention.split_heads(q, num_heads)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 75,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 36
                                  },
                                  "text": "common_attention.split_heads",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 75,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 24
                                      },
                                      "text": "common_attention"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 75,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 25
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 75,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 36
                                      },
                                      "text": "split_heads"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 75,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 50
                                  },
                                  "text": "(q, num_heads)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 75,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 37
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 75,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 38
                                      },
                                      "text": "q"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 75,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 39
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 75,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 49
                                      },
                                      "text": "num_heads"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 75,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 50
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 75,
                        "column": 52
                      },
                      "end": {
                        "row": 75,
                        "column": 75
                      },
                      "text": "# Shape [B, H, N, K/H]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 76,
                        "column": 4
                      },
                      "end": {
                        "row": 76,
                        "column": 50
                      },
                      "text": "k = common_attention.split_heads(k, num_heads)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 76,
                            "column": 4
                          },
                          "end": {
                            "row": 76,
                            "column": 50
                          },
                          "text": "k = common_attention.split_heads(k, num_heads)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 76,
                                "column": 4
                              },
                              "end": {
                                "row": 76,
                                "column": 5
                              },
                              "text": "k"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 76,
                                "column": 6
                              },
                              "end": {
                                "row": 76,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 76,
                                "column": 8
                              },
                              "end": {
                                "row": 76,
                                "column": 50
                              },
                              "text": "common_attention.split_heads(k, num_heads)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 76,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 76,
                                    "column": 36
                                  },
                                  "text": "common_attention.split_heads",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 76,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 24
                                      },
                                      "text": "common_attention"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 76,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 25
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 76,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 36
                                      },
                                      "text": "split_heads"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 76,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 76,
                                    "column": 50
                                  },
                                  "text": "(k, num_heads)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 76,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 37
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 76,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 38
                                      },
                                      "text": "k"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 76,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 39
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 76,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 49
                                      },
                                      "text": "num_heads"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 76,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 50
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 76,
                        "column": 52
                      },
                      "end": {
                        "row": 76,
                        "column": 77
                      },
                      "text": "# Shape [B, H, N, K*T/H]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 77,
                        "column": 4
                      },
                      "end": {
                        "row": 77,
                        "column": 50
                      },
                      "text": "v = common_attention.split_heads(v, num_heads)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 77,
                            "column": 4
                          },
                          "end": {
                            "row": 77,
                            "column": 50
                          },
                          "text": "v = common_attention.split_heads(v, num_heads)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 77,
                                "column": 4
                              },
                              "end": {
                                "row": 77,
                                "column": 5
                              },
                              "text": "v"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 77,
                                "column": 6
                              },
                              "end": {
                                "row": 77,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 77,
                                "column": 8
                              },
                              "end": {
                                "row": 77,
                                "column": 50
                              },
                              "text": "common_attention.split_heads(v, num_heads)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 77,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 36
                                  },
                                  "text": "common_attention.split_heads",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 77,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 24
                                      },
                                      "text": "common_attention"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 77,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 25
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 77,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 36
                                      },
                                      "text": "split_heads"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 77,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 77,
                                    "column": 50
                                  },
                                  "text": "(v, num_heads)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 77,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 37
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 77,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 38
                                      },
                                      "text": "v"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 77,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 39
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 77,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 49
                                      },
                                      "text": "num_heads"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 77,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 77,
                                        "column": 50
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 77,
                        "column": 52
                      },
                      "end": {
                        "row": 77,
                        "column": 77
                      },
                      "text": "# Shape [B, H, N, V*T/H]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 78,
                        "column": 4
                      },
                      "end": {
                        "row": 78,
                        "column": 53
                      },
                      "text": "key_depth_per_head = total_key_depth // num_heads",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 78,
                            "column": 4
                          },
                          "end": {
                            "row": 78,
                            "column": 53
                          },
                          "text": "key_depth_per_head = total_key_depth // num_heads",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 78,
                                "column": 4
                              },
                              "end": {
                                "row": 78,
                                "column": 22
                              },
                              "text": "key_depth_per_head"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 78,
                                "column": 23
                              },
                              "end": {
                                "row": 78,
                                "column": 24
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 78,
                                "column": 25
                              },
                              "end": {
                                "row": 78,
                                "column": 53
                              },
                              "text": "total_key_depth // num_heads",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 78,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 40
                                  },
                                  "text": "total_key_depth"
                                },
                                {
                                  "type": "//",
                                  "start": {
                                    "row": 78,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 43
                                  },
                                  "text": "//"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 78,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 53
                                  },
                                  "text": "num_heads"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 80,
                        "column": 4
                      },
                      "end": {
                        "row": 80,
                        "column": 66
                      },
                      "text": "# Ensures that the logits don't have too large of a magnitude."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 81,
                        "column": 4
                      },
                      "end": {
                        "row": 81,
                        "column": 33
                      },
                      "text": "q *= key_depth_per_head**-0.5",
                      "children": [
                        {
                          "type": "augmented_assignment",
                          "start": {
                            "row": 81,
                            "column": 4
                          },
                          "end": {
                            "row": 81,
                            "column": 33
                          },
                          "text": "q *= key_depth_per_head**-0.5",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 81,
                                "column": 4
                              },
                              "end": {
                                "row": 81,
                                "column": 5
                              },
                              "text": "q"
                            },
                            {
                              "type": "*=",
                              "start": {
                                "row": 81,
                                "column": 6
                              },
                              "end": {
                                "row": 81,
                                "column": 8
                              },
                              "text": "*="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 81,
                                "column": 9
                              },
                              "end": {
                                "row": 81,
                                "column": 33
                              },
                              "text": "key_depth_per_head**-0.5",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 81,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 27
                                  },
                                  "text": "key_depth_per_head"
                                },
                                {
                                  "type": "**",
                                  "start": {
                                    "row": 81,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 29
                                  },
                                  "text": "**"
                                },
                                {
                                  "type": "unary_operator",
                                  "start": {
                                    "row": 81,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 33
                                  },
                                  "text": "-0.5",
                                  "children": [
                                    {
                                      "type": "-",
                                      "start": {
                                        "row": 81,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 30
                                      },
                                      "text": "-"
                                    },
                                    {
                                      "type": "float",
                                      "start": {
                                        "row": 81,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 33
                                      },
                                      "text": "0.5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 83,
                        "column": 4
                      },
                      "end": {
                        "row": 83,
                        "column": 72
                      },
                      "text": "# Rearrange the dimensions so that the head is first. This will make"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 84,
                        "column": 4
                      },
                      "end": {
                        "row": 84,
                        "column": 54
                      },
                      "text": "# subsequent steps easier (we loop over the head)."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 85,
                        "column": 4
                      },
                      "end": {
                        "row": 85,
                        "column": 37
                      },
                      "text": "q = tf.transpose(q, [1, 0, 2, 3])",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 85,
                            "column": 4
                          },
                          "end": {
                            "row": 85,
                            "column": 37
                          },
                          "text": "q = tf.transpose(q, [1, 0, 2, 3])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 85,
                                "column": 4
                              },
                              "end": {
                                "row": 85,
                                "column": 5
                              },
                              "text": "q"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 85,
                                "column": 6
                              },
                              "end": {
                                "row": 85,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 85,
                                "column": 8
                              },
                              "end": {
                                "row": 85,
                                "column": 37
                              },
                              "text": "tf.transpose(q, [1, 0, 2, 3])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 85,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 85,
                                    "column": 20
                                  },
                                  "text": "tf.transpose",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 85,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 85,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 85,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 20
                                      },
                                      "text": "transpose"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 85,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 85,
                                    "column": 37
                                  },
                                  "text": "(q, [1, 0, 2, 3])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 85,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 21
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 85,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 22
                                      },
                                      "text": "q"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 85,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 23
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 85,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 36
                                      },
                                      "text": "[1, 0, 2, 3]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 85,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 25
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 85,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 26
                                          },
                                          "text": "1"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 85,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 27
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 85,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 29
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 85,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 30
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 85,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 32
                                          },
                                          "text": "2"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 85,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 33
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 85,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 35
                                          },
                                          "text": "3"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 85,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 85,
                                            "column": 36
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 85,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 85,
                                        "column": 37
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 85,
                        "column": 39
                      },
                      "end": {
                        "row": 85,
                        "column": 62
                      },
                      "text": "# Shape [H, B, N, K/H]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 86,
                        "column": 4
                      },
                      "end": {
                        "row": 86,
                        "column": 37
                      },
                      "text": "k = tf.transpose(k, [1, 0, 2, 3])",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 86,
                            "column": 4
                          },
                          "end": {
                            "row": 86,
                            "column": 37
                          },
                          "text": "k = tf.transpose(k, [1, 0, 2, 3])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 86,
                                "column": 4
                              },
                              "end": {
                                "row": 86,
                                "column": 5
                              },
                              "text": "k"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 86,
                                "column": 6
                              },
                              "end": {
                                "row": 86,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 86,
                                "column": 8
                              },
                              "end": {
                                "row": 86,
                                "column": 37
                              },
                              "text": "tf.transpose(k, [1, 0, 2, 3])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 86,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 20
                                  },
                                  "text": "tf.transpose",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 86,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 86,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 86,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 20
                                      },
                                      "text": "transpose"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 86,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 37
                                  },
                                  "text": "(k, [1, 0, 2, 3])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 86,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 21
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 86,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 22
                                      },
                                      "text": "k"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 86,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 23
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 86,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 36
                                      },
                                      "text": "[1, 0, 2, 3]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 86,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 25
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 86,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 26
                                          },
                                          "text": "1"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 86,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 27
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 86,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 29
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 86,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 30
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 86,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 32
                                          },
                                          "text": "2"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 86,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 33
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 86,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 35
                                          },
                                          "text": "3"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 86,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 86,
                                            "column": 36
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 86,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 86,
                                        "column": 37
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 86,
                        "column": 39
                      },
                      "end": {
                        "row": 86,
                        "column": 64
                      },
                      "text": "# Shape [H, B, N, K*T/H]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 87,
                        "column": 4
                      },
                      "end": {
                        "row": 87,
                        "column": 37
                      },
                      "text": "v = tf.transpose(v, [1, 0, 2, 3])",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 87,
                            "column": 4
                          },
                          "end": {
                            "row": 87,
                            "column": 37
                          },
                          "text": "v = tf.transpose(v, [1, 0, 2, 3])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 87,
                                "column": 4
                              },
                              "end": {
                                "row": 87,
                                "column": 5
                              },
                              "text": "v"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 87,
                                "column": 6
                              },
                              "end": {
                                "row": 87,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 87,
                                "column": 8
                              },
                              "end": {
                                "row": 87,
                                "column": 37
                              },
                              "text": "tf.transpose(v, [1, 0, 2, 3])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 87,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 87,
                                    "column": 20
                                  },
                                  "text": "tf.transpose",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 87,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 87,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 87,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 20
                                      },
                                      "text": "transpose"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 87,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 87,
                                    "column": 37
                                  },
                                  "text": "(v, [1, 0, 2, 3])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 87,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 21
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 87,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 22
                                      },
                                      "text": "v"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 87,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 23
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 87,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 36
                                      },
                                      "text": "[1, 0, 2, 3]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 87,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 25
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 87,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 26
                                          },
                                          "text": "1"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 87,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 27
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 87,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 29
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 87,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 30
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 87,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 32
                                          },
                                          "text": "2"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 87,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 33
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 87,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 35
                                          },
                                          "text": "3"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 87,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 36
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 87,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 37
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 87,
                        "column": 39
                      },
                      "end": {
                        "row": 87,
                        "column": 64
                      },
                      "text": "# Shape [H, B, N, V*T/H]."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 89,
                        "column": 4
                      },
                      "end": {
                        "row": 89,
                        "column": 76
                      },
                      "text": "# Split the keys and values into separate per-edge-type keys and values."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 90,
                        "column": 4
                      },
                      "end": {
                        "row": 93,
                        "column": 6
                      },
                      "text": "k = tf.reshape(k, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ])",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 90,
                            "column": 4
                          },
                          "end": {
                            "row": 93,
                            "column": 6
                          },
                          "text": "k = tf.reshape(k, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 90,
                                "column": 4
                              },
                              "end": {
                                "row": 90,
                                "column": 5
                              },
                              "text": "k"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 90,
                                "column": 6
                              },
                              "end": {
                                "row": 90,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 90,
                                "column": 8
                              },
                              "end": {
                                "row": 93,
                                "column": 6
                              },
                              "text": "tf.reshape(k, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 90,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 90,
                                    "column": 18
                                  },
                                  "text": "tf.reshape",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 90,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 90,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 90,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 90,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 90,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 90,
                                        "column": 18
                                      },
                                      "text": "reshape"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 90,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 93,
                                    "column": 6
                                  },
                                  "text": "(k, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 90,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 90,
                                        "column": 19
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 90,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 90,
                                        "column": 20
                                      },
                                      "text": "k"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 90,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 90,
                                        "column": 21
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 90,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 93,
                                        "column": 5
                                      },
                                      "text": "[\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_key_depth // num_heads\n    ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 90,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 90,
                                            "column": 23
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 91,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 17
                                          },
                                          "text": "num_heads"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 91,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 18
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 91,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 29
                                          },
                                          "text": "q_shape[0]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 91,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 26
                                              },
                                              "text": "q_shape"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 91,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 27
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 91,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 28
                                              },
                                              "text": "0"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 91,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 29
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 91,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 30
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 91,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 41
                                          },
                                          "text": "q_shape[1]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 91,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 38
                                              },
                                              "text": "q_shape"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 91,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 39
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 91,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 40
                                              },
                                              "text": "1"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 91,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 91,
                                                "column": 41
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 91,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 42
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 91,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 57
                                          },
                                          "text": "num_transforms"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 91,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 91,
                                            "column": 58
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "binary_operator",
                                          "start": {
                                            "row": 92,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 92,
                                            "column": 36
                                          },
                                          "text": "total_key_depth // num_heads",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 92,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 23
                                              },
                                              "text": "total_key_depth"
                                            },
                                            {
                                              "type": "//",
                                              "start": {
                                                "row": 92,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 26
                                              },
                                              "text": "//"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 92,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 92,
                                                "column": 36
                                              },
                                              "text": "num_heads"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 93,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 93,
                                            "column": 5
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 93,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 93,
                                        "column": 6
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 93,
                        "column": 8
                      },
                      "end": {
                        "row": 93,
                        "column": 34
                      },
                      "text": "# Shape [H, B, N, T, K/H]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 94,
                        "column": 4
                      },
                      "end": {
                        "row": 94,
                        "column": 40
                      },
                      "text": "k = tf.transpose(k, [0, 1, 3, 2, 4])",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 94,
                            "column": 4
                          },
                          "end": {
                            "row": 94,
                            "column": 40
                          },
                          "text": "k = tf.transpose(k, [0, 1, 3, 2, 4])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 94,
                                "column": 4
                              },
                              "end": {
                                "row": 94,
                                "column": 5
                              },
                              "text": "k"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 94,
                                "column": 6
                              },
                              "end": {
                                "row": 94,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 94,
                                "column": 8
                              },
                              "end": {
                                "row": 94,
                                "column": 40
                              },
                              "text": "tf.transpose(k, [0, 1, 3, 2, 4])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 94,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 94,
                                    "column": 20
                                  },
                                  "text": "tf.transpose",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 94,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 94,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 94,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 94,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 94,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 94,
                                        "column": 20
                                      },
                                      "text": "transpose"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 94,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 94,
                                    "column": 40
                                  },
                                  "text": "(k, [0, 1, 3, 2, 4])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 94,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 94,
                                        "column": 21
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 94,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 94,
                                        "column": 22
                                      },
                                      "text": "k"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 94,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 94,
                                        "column": 23
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 94,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 94,
                                        "column": 39
                                      },
                                      "text": "[0, 1, 3, 2, 4]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 94,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 25
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 94,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 26
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 94,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 27
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 94,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 29
                                          },
                                          "text": "1"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 94,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 30
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 94,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 32
                                          },
                                          "text": "3"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 94,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 33
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 94,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 35
                                          },
                                          "text": "2"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 94,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 36
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 94,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 38
                                          },
                                          "text": "4"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 94,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 94,
                                            "column": 39
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 94,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 94,
                                        "column": 40
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 94,
                        "column": 42
                      },
                      "end": {
                        "row": 94,
                        "column": 68
                      },
                      "text": "# Shape [H, B, T, N, K/H]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 96,
                        "column": 4
                      },
                      "end": {
                        "row": 99,
                        "column": 6
                      },
                      "text": "v = tf.reshape(v, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ])",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 96,
                            "column": 4
                          },
                          "end": {
                            "row": 99,
                            "column": 6
                          },
                          "text": "v = tf.reshape(v, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 96,
                                "column": 4
                              },
                              "end": {
                                "row": 96,
                                "column": 5
                              },
                              "text": "v"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 96,
                                "column": 6
                              },
                              "end": {
                                "row": 96,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 96,
                                "column": 8
                              },
                              "end": {
                                "row": 99,
                                "column": 6
                              },
                              "text": "tf.reshape(v, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 96,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 96,
                                    "column": 18
                                  },
                                  "text": "tf.reshape",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 96,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 96,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 96,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 96,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 96,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 96,
                                        "column": 18
                                      },
                                      "text": "reshape"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 96,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 99,
                                    "column": 6
                                  },
                                  "text": "(v, [\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 96,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 96,
                                        "column": 19
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 96,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 96,
                                        "column": 20
                                      },
                                      "text": "v"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 96,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 96,
                                        "column": 21
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 96,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 99,
                                        "column": 5
                                      },
                                      "text": "[\n        num_heads, q_shape[0], q_shape[1], num_transforms,\n        total_value_depth // num_heads\n    ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 96,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 96,
                                            "column": 23
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 97,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 97,
                                            "column": 17
                                          },
                                          "text": "num_heads"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 97,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 97,
                                            "column": 18
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 97,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 97,
                                            "column": 29
                                          },
                                          "text": "q_shape[0]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 97,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 97,
                                                "column": 26
                                              },
                                              "text": "q_shape"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 97,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 97,
                                                "column": 27
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 97,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 97,
                                                "column": 28
                                              },
                                              "text": "0"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 97,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 97,
                                                "column": 29
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 97,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 97,
                                            "column": 30
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 97,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 97,
                                            "column": 41
                                          },
                                          "text": "q_shape[1]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 97,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 97,
                                                "column": 38
                                              },
                                              "text": "q_shape"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 97,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 97,
                                                "column": 39
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 97,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 97,
                                                "column": 40
                                              },
                                              "text": "1"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 97,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 97,
                                                "column": 41
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 97,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 97,
                                            "column": 42
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 97,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 97,
                                            "column": 57
                                          },
                                          "text": "num_transforms"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 97,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 97,
                                            "column": 58
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "binary_operator",
                                          "start": {
                                            "row": 98,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 98,
                                            "column": 38
                                          },
                                          "text": "total_value_depth // num_heads",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 98,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 98,
                                                "column": 25
                                              },
                                              "text": "total_value_depth"
                                            },
                                            {
                                              "type": "//",
                                              "start": {
                                                "row": 98,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 98,
                                                "column": 28
                                              },
                                              "text": "//"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 98,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 98,
                                                "column": 38
                                              },
                                              "text": "num_heads"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 99,
                                            "column": 4
                                          },
                                          "end": {
                                            "row": 99,
                                            "column": 5
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 99,
                                        "column": 5
                                      },
                                      "end": {
                                        "row": 99,
                                        "column": 6
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 99,
                        "column": 8
                      },
                      "end": {
                        "row": 99,
                        "column": 34
                      },
                      "text": "# Shape [H, B, N, T, V/H]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 100,
                        "column": 4
                      },
                      "end": {
                        "row": 100,
                        "column": 40
                      },
                      "text": "v = tf.transpose(v, [0, 1, 3, 2, 4])",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 100,
                            "column": 4
                          },
                          "end": {
                            "row": 100,
                            "column": 40
                          },
                          "text": "v = tf.transpose(v, [0, 1, 3, 2, 4])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 100,
                                "column": 4
                              },
                              "end": {
                                "row": 100,
                                "column": 5
                              },
                              "text": "v"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 100,
                                "column": 6
                              },
                              "end": {
                                "row": 100,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 100,
                                "column": 8
                              },
                              "end": {
                                "row": 100,
                                "column": 40
                              },
                              "text": "tf.transpose(v, [0, 1, 3, 2, 4])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 100,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 100,
                                    "column": 20
                                  },
                                  "text": "tf.transpose",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 100,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 100,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 100,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 20
                                      },
                                      "text": "transpose"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 100,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 100,
                                    "column": 40
                                  },
                                  "text": "(v, [0, 1, 3, 2, 4])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 100,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 21
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 100,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 22
                                      },
                                      "text": "v"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 100,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 23
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 100,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 39
                                      },
                                      "text": "[0, 1, 3, 2, 4]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 100,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 25
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 100,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 26
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 100,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 27
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 100,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 29
                                          },
                                          "text": "1"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 100,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 30
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 100,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 32
                                          },
                                          "text": "3"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 100,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 33
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 100,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 35
                                          },
                                          "text": "2"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 100,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 36
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 100,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 38
                                          },
                                          "text": "4"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 100,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 100,
                                            "column": 39
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 100,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 100,
                                        "column": 40
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 100,
                        "column": 42
                      },
                      "end": {
                        "row": 100,
                        "column": 68
                      },
                      "text": "# Shape [H, B, T, N, V/H]."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 102,
                        "column": 4
                      },
                      "end": {
                        "row": 102,
                        "column": 74
                      },
                      "text": "# Perform attention for each head and combine the results into a list."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 103,
                        "column": 4
                      },
                      "end": {
                        "row": 103,
                        "column": 76
                      },
                      "text": "# head_outputs stores a list of tensors, each with shape [1, B, N, V/H]."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 104,
                        "column": 4
                      },
                      "end": {
                        "row": 104,
                        "column": 78
                      },
                      "text": "# The last dimension contains the values computed for each attention head."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 105,
                        "column": 4
                      },
                      "end": {
                        "row": 105,
                        "column": 70
                      },
                      "text": "# Each value was determined by computing attention over all of the"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 106,
                        "column": 4
                      },
                      "end": {
                        "row": 106,
                        "column": 75
                      },
                      "text": "# incoming edges for node n, weighting the incoming values accordingly,"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 107,
                        "column": 4
                      },
                      "end": {
                        "row": 107,
                        "column": 48
                      },
                      "text": "# and adding those weighted values together."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 108,
                        "column": 4
                      },
                      "end": {
                        "row": 108,
                        "column": 21
                      },
                      "text": "head_outputs = []",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 108,
                            "column": 4
                          },
                          "end": {
                            "row": 108,
                            "column": 21
                          },
                          "text": "head_outputs = []",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 108,
                                "column": 4
                              },
                              "end": {
                                "row": 108,
                                "column": 16
                              },
                              "text": "head_outputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 108,
                                "column": 17
                              },
                              "end": {
                                "row": 108,
                                "column": 18
                              },
                              "text": "="
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 108,
                                "column": 19
                              },
                              "end": {
                                "row": 108,
                                "column": 21
                              },
                              "text": "[]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 108,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 108,
                                    "column": 20
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 108,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 108,
                                    "column": 21
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 109,
                        "column": 4
                      },
                      "end": {
                        "row": 122,
                        "column": 57
                      },
                      "text": "for head_id in range(num_heads):\n      output = dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)\n\n      # Store this result in the list of attention results for each head.\n      # The call to expand_dims gives output shape [1, B, N, V/H], which will\n      # come in handy when we combine the heads together.\n      head_outputs.append(tf.expand_dims(output, axis=0))",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 109,
                            "column": 4
                          },
                          "end": {
                            "row": 109,
                            "column": 7
                          },
                          "text": "for"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 109,
                            "column": 8
                          },
                          "end": {
                            "row": 109,
                            "column": 15
                          },
                          "text": "head_id"
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 109,
                            "column": 16
                          },
                          "end": {
                            "row": 109,
                            "column": 18
                          },
                          "text": "in"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 109,
                            "column": 19
                          },
                          "end": {
                            "row": 109,
                            "column": 35
                          },
                          "text": "range(num_heads)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 109,
                                "column": 19
                              },
                              "end": {
                                "row": 109,
                                "column": 24
                              },
                              "text": "range"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 109,
                                "column": 24
                              },
                              "end": {
                                "row": 109,
                                "column": 35
                              },
                              "text": "(num_heads)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 109,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 25
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 109,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 34
                                  },
                                  "text": "num_heads"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 109,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 35
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 109,
                            "column": 35
                          },
                          "end": {
                            "row": 109,
                            "column": 36
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 110,
                            "column": 6
                          },
                          "end": {
                            "row": 122,
                            "column": 57
                          },
                          "text": "output = dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)\n\n      # Store this result in the list of attention results for each head.\n      # The call to expand_dims gives output shape [1, B, N, V/H], which will\n      # come in handy when we combine the heads together.\n      head_outputs.append(tf.expand_dims(output, axis=0))",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 110,
                                "column": 6
                              },
                              "end": {
                                "row": 117,
                                "column": 44
                              },
                              "text": "output = dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 110,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 117,
                                    "column": 44
                                  },
                                  "text": "output = dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 110,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 110,
                                        "column": 12
                                      },
                                      "text": "output"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 110,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 110,
                                        "column": 14
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 110,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 117,
                                        "column": 44
                                      },
                                      "text": "dot_product_mpnn_attention(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 110,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 110,
                                            "column": 41
                                          },
                                          "text": "dot_product_mpnn_attention"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 110,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 117,
                                            "column": 44
                                          },
                                          "text": "(\n          q[head_id],\n          k[head_id],\n          v[head_id],\n          adjacency_matrix,\n          num_edge_types,\n          num_transforms=num_transforms,\n          use_weighted_sum=use_weighted_sum)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 110,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 110,
                                                "column": 42
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "subscript",
                                              "start": {
                                                "row": 111,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 111,
                                                "column": 20
                                              },
                                              "text": "q[head_id]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 111,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 111,
                                                    "column": 11
                                                  },
                                                  "text": "q"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 111,
                                                    "column": 11
                                                  },
                                                  "end": {
                                                    "row": 111,
                                                    "column": 12
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 111,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 111,
                                                    "column": 19
                                                  },
                                                  "text": "head_id"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 111,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 111,
                                                    "column": 20
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 111,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 111,
                                                "column": 21
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "subscript",
                                              "start": {
                                                "row": 112,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 20
                                              },
                                              "text": "k[head_id]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 112,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 112,
                                                    "column": 11
                                                  },
                                                  "text": "k"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 112,
                                                    "column": 11
                                                  },
                                                  "end": {
                                                    "row": 112,
                                                    "column": 12
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 112,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 112,
                                                    "column": 19
                                                  },
                                                  "text": "head_id"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 112,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 112,
                                                    "column": 20
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 112,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 112,
                                                "column": 21
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "subscript",
                                              "start": {
                                                "row": 113,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 113,
                                                "column": 20
                                              },
                                              "text": "v[head_id]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 113,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 113,
                                                    "column": 11
                                                  },
                                                  "text": "v"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 113,
                                                    "column": 11
                                                  },
                                                  "end": {
                                                    "row": 113,
                                                    "column": 12
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 113,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 113,
                                                    "column": 19
                                                  },
                                                  "text": "head_id"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 113,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 113,
                                                    "column": 20
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 113,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 113,
                                                "column": 21
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 114,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 114,
                                                "column": 26
                                              },
                                              "text": "adjacency_matrix"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 114,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 114,
                                                "column": 27
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 115,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 115,
                                                "column": 24
                                              },
                                              "text": "num_edge_types"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 115,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 115,
                                                "column": 25
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 116,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 116,
                                                "column": 39
                                              },
                                              "text": "num_transforms=num_transforms",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 116,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 116,
                                                    "column": 24
                                                  },
                                                  "text": "num_transforms"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 116,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 116,
                                                    "column": 25
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 116,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 116,
                                                    "column": 39
                                                  },
                                                  "text": "num_transforms"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 116,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 116,
                                                "column": 40
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 117,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 117,
                                                "column": 43
                                              },
                                              "text": "use_weighted_sum=use_weighted_sum",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 117,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 117,
                                                    "column": 26
                                                  },
                                                  "text": "use_weighted_sum"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 117,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 117,
                                                    "column": 27
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 117,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 117,
                                                    "column": 43
                                                  },
                                                  "text": "use_weighted_sum"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 117,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 117,
                                                "column": 44
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 119,
                                "column": 6
                              },
                              "end": {
                                "row": 119,
                                "column": 73
                              },
                              "text": "# Store this result in the list of attention results for each head."
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 120,
                                "column": 6
                              },
                              "end": {
                                "row": 120,
                                "column": 77
                              },
                              "text": "# The call to expand_dims gives output shape [1, B, N, V/H], which will"
                            },
                            {
                              "type": "comment",
                              "start": {
                                "row": 121,
                                "column": 6
                              },
                              "end": {
                                "row": 121,
                                "column": 57
                              },
                              "text": "# come in handy when we combine the heads together."
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 122,
                                "column": 6
                              },
                              "end": {
                                "row": 122,
                                "column": 57
                              },
                              "text": "head_outputs.append(tf.expand_dims(output, axis=0))",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 122,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 122,
                                    "column": 57
                                  },
                                  "text": "head_outputs.append(tf.expand_dims(output, axis=0))",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 122,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 122,
                                        "column": 25
                                      },
                                      "text": "head_outputs.append",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 122,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 122,
                                            "column": 18
                                          },
                                          "text": "head_outputs"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 122,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 122,
                                            "column": 19
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 122,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 122,
                                            "column": 25
                                          },
                                          "text": "append"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 122,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 122,
                                        "column": 57
                                      },
                                      "text": "(tf.expand_dims(output, axis=0))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 122,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 122,
                                            "column": 26
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 122,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 122,
                                            "column": 56
                                          },
                                          "text": "tf.expand_dims(output, axis=0)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 122,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 122,
                                                "column": 40
                                              },
                                              "text": "tf.expand_dims",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 122,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 122,
                                                    "column": 28
                                                  },
                                                  "text": "tf"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 122,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 122,
                                                    "column": 29
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 122,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 122,
                                                    "column": 40
                                                  },
                                                  "text": "expand_dims"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 122,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 122,
                                                "column": 56
                                              },
                                              "text": "(output, axis=0)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 122,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 122,
                                                    "column": 41
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 122,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 122,
                                                    "column": 47
                                                  },
                                                  "text": "output"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 122,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 122,
                                                    "column": 48
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "keyword_argument",
                                                  "start": {
                                                    "row": 122,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 122,
                                                    "column": 55
                                                  },
                                                  "text": "axis=0",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 122,
                                                        "column": 49
                                                      },
                                                      "end": {
                                                        "row": 122,
                                                        "column": 53
                                                      },
                                                      "text": "axis"
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start": {
                                                        "row": 122,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 122,
                                                        "column": 54
                                                      },
                                                      "text": "="
                                                    },
                                                    {
                                                      "type": "integer",
                                                      "start": {
                                                        "row": 122,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 122,
                                                        "column": 55
                                                      },
                                                      "text": "0"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 122,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 122,
                                                    "column": 56
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 122,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 122,
                                            "column": 57
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 124,
                        "column": 4
                      },
                      "end": {
                        "row": 124,
                        "column": 78
                      },
                      "text": "# Combine the heads together into one tensor and rearrange the dimensions."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 125,
                        "column": 4
                      },
                      "end": {
                        "row": 125,
                        "column": 39
                      },
                      "text": "x = tf.concat(head_outputs, axis=0)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 125,
                            "column": 4
                          },
                          "end": {
                            "row": 125,
                            "column": 39
                          },
                          "text": "x = tf.concat(head_outputs, axis=0)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 125,
                                "column": 4
                              },
                              "end": {
                                "row": 125,
                                "column": 5
                              },
                              "text": "x"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 125,
                                "column": 6
                              },
                              "end": {
                                "row": 125,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 125,
                                "column": 8
                              },
                              "end": {
                                "row": 125,
                                "column": 39
                              },
                              "text": "tf.concat(head_outputs, axis=0)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 125,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 125,
                                    "column": 17
                                  },
                                  "text": "tf.concat",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 125,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 125,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 125,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 17
                                      },
                                      "text": "concat"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 125,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 125,
                                    "column": 39
                                  },
                                  "text": "(head_outputs, axis=0)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 125,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 18
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 125,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 30
                                      },
                                      "text": "head_outputs"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 125,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 31
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 125,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 38
                                      },
                                      "text": "axis=0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 125,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 125,
                                            "column": 36
                                          },
                                          "text": "axis"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 125,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 125,
                                            "column": 37
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 125,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 125,
                                            "column": 38
                                          },
                                          "text": "0"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 125,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 39
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 125,
                        "column": 41
                      },
                      "end": {
                        "row": 125,
                        "column": 64
                      },
                      "text": "# Shape [H, B, N, V/H]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 126,
                        "column": 4
                      },
                      "end": {
                        "row": 126,
                        "column": 37
                      },
                      "text": "x = tf.transpose(x, [1, 0, 2, 3])",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 126,
                            "column": 4
                          },
                          "end": {
                            "row": 126,
                            "column": 37
                          },
                          "text": "x = tf.transpose(x, [1, 0, 2, 3])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 126,
                                "column": 4
                              },
                              "end": {
                                "row": 126,
                                "column": 5
                              },
                              "text": "x"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 126,
                                "column": 6
                              },
                              "end": {
                                "row": 126,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 126,
                                "column": 8
                              },
                              "end": {
                                "row": 126,
                                "column": 37
                              },
                              "text": "tf.transpose(x, [1, 0, 2, 3])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 126,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 126,
                                    "column": 20
                                  },
                                  "text": "tf.transpose",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 126,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 126,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 126,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 20
                                      },
                                      "text": "transpose"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 126,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 126,
                                    "column": 37
                                  },
                                  "text": "(x, [1, 0, 2, 3])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 126,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 21
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 126,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 22
                                      },
                                      "text": "x"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 126,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 23
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 126,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 36
                                      },
                                      "text": "[1, 0, 2, 3]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 126,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 126,
                                            "column": 25
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 126,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 126,
                                            "column": 26
                                          },
                                          "text": "1"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 126,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 126,
                                            "column": 27
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 126,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 126,
                                            "column": 29
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 126,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 126,
                                            "column": 30
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 126,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 126,
                                            "column": 32
                                          },
                                          "text": "2"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 126,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 126,
                                            "column": 33
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 126,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 126,
                                            "column": 35
                                          },
                                          "text": "3"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 126,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 126,
                                            "column": 36
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 126,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 126,
                                        "column": 37
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 126,
                        "column": 39
                      },
                      "end": {
                        "row": 126,
                        "column": 62
                      },
                      "text": "# Shape [B, H, N, V/H]."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 128,
                        "column": 4
                      },
                      "end": {
                        "row": 128,
                        "column": 76
                      },
                      "text": "# Concatenate the values produced by each head together into one vector."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 129,
                        "column": 4
                      },
                      "end": {
                        "row": 129,
                        "column": 41
                      },
                      "text": "x = common_attention.combine_heads(x)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 129,
                            "column": 4
                          },
                          "end": {
                            "row": 129,
                            "column": 41
                          },
                          "text": "x = common_attention.combine_heads(x)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 129,
                                "column": 4
                              },
                              "end": {
                                "row": 129,
                                "column": 5
                              },
                              "text": "x"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 129,
                                "column": 6
                              },
                              "end": {
                                "row": 129,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 129,
                                "column": 8
                              },
                              "end": {
                                "row": 129,
                                "column": 41
                              },
                              "text": "common_attention.combine_heads(x)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 129,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 129,
                                    "column": 38
                                  },
                                  "text": "common_attention.combine_heads",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 129,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 129,
                                        "column": 24
                                      },
                                      "text": "common_attention"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 129,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 129,
                                        "column": 25
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 129,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 129,
                                        "column": 38
                                      },
                                      "text": "combine_heads"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 129,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 129,
                                    "column": 41
                                  },
                                  "text": "(x)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 129,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 129,
                                        "column": 39
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 129,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 129,
                                        "column": 40
                                      },
                                      "text": "x"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 129,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 129,
                                        "column": 41
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 129,
                        "column": 43
                      },
                      "end": {
                        "row": 129,
                        "column": 61
                      },
                      "text": "# Shape [B, N, V]."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 131,
                        "column": 4
                      },
                      "end": {
                        "row": 131,
                        "column": 80
                      },
                      "text": "# A fully-connected linear layer to convert from the value vectors of size V"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 132,
                        "column": 4
                      },
                      "end": {
                        "row": 132,
                        "column": 68
                      },
                      "text": "# to output vectors of length O (the appropriate output length)."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 133,
                        "column": 4
                      },
                      "end": {
                        "row": 134,
                        "column": 65
                      },
                      "text": "x = common_layers.dense(\n        x, output_depth, use_bias=False, name=\"output_transform\")",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 133,
                            "column": 4
                          },
                          "end": {
                            "row": 134,
                            "column": 65
                          },
                          "text": "x = common_layers.dense(\n        x, output_depth, use_bias=False, name=\"output_transform\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 133,
                                "column": 4
                              },
                              "end": {
                                "row": 133,
                                "column": 5
                              },
                              "text": "x"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 133,
                                "column": 6
                              },
                              "end": {
                                "row": 133,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 133,
                                "column": 8
                              },
                              "end": {
                                "row": 134,
                                "column": 65
                              },
                              "text": "common_layers.dense(\n        x, output_depth, use_bias=False, name=\"output_transform\")",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 133,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 133,
                                    "column": 27
                                  },
                                  "text": "common_layers.dense",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 133,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 133,
                                        "column": 21
                                      },
                                      "text": "common_layers"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 133,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 133,
                                        "column": 22
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 133,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 133,
                                        "column": 27
                                      },
                                      "text": "dense"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 133,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 134,
                                    "column": 65
                                  },
                                  "text": "(\n        x, output_depth, use_bias=False, name=\"output_transform\")",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 133,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 133,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 134,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 9
                                      },
                                      "text": "x"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 134,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 10
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 134,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 23
                                      },
                                      "text": "output_depth"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 134,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 24
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 134,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 39
                                      },
                                      "text": "use_bias=False",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 134,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 33
                                          },
                                          "text": "use_bias"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 134,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 34
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "false",
                                          "start": {
                                            "row": 134,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 39
                                          },
                                          "text": "False"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 134,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 40
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 134,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 64
                                      },
                                      "text": "name=\"output_transform\"",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 134,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 45
                                          },
                                          "text": "name"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 134,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 46
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 134,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 134,
                                            "column": 64
                                          },
                                          "text": "\"output_transform\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 134,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 134,
                                                "column": 47
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 134,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 134,
                                                "column": 63
                                              },
                                              "text": "output_transform"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 134,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 134,
                                                "column": 64
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 134,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 134,
                                        "column": 65
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 135,
                        "column": 4
                      },
                      "end": {
                        "row": 135,
                        "column": 12
                      },
                      "text": "return x",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 135,
                            "column": 4
                          },
                          "end": {
                            "row": 135,
                            "column": 10
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 135,
                            "column": 11
                          },
                          "end": {
                            "row": 135,
                            "column": 12
                          },
                          "text": "x"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}