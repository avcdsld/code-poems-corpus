{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 55,
    "column": 31
  },
  "text": "def encoder_decoder_attention_loss(expected_attention_logits,\n                                   actual_attentions,\n                                   loss_type=\"kl_divergence\",\n                                   loss_multiplier=1.0):\n  \"\"\"Computes encdec attention loss between expected and actual attentions.\n\n  Args:\n    expected_attention_logits: Tensor storing the expected encoder-decoder\n      attention logits with shape [batch_size, target_length, input_length].\n    actual_attentions: Dictionary with actual attention logits for different\n      attention types and hidden layers.\n    loss_type: type of the loss function.\n    loss_multiplier: multiplier for the attention loss.\n\n  Returns:\n    KL_divergence loss between the actual and expected attention logits.\n  \"\"\"\n\n  def combine_attentions(attention_list):\n    \"\"\"Combine different layer attentions and then average over layers/heads.\"\"\"\n    # Stack all hidden layer attention tensors to get a tensor with shape\n    # [num_hidden_layers, batch_size, num_heads, target_length, input_length].\n    attentions = tf.stack(attention_list)\n    # Reduce mean across all layers (axis=0) and all heads (axis=2) to get a\n    # tensor with shape [batch_size, target_length, input_length].\n    return tf.reduce_mean(attentions, [0, 2])\n\n  def kl_divergence_loss(expected_logits, actual_logits):\n    p = tfp.distributions.Categorical(logits=expected_logits)\n    q = tfp.distributions.Categorical(logits=actual_logits)\n    return tfp.distributions.kl_divergence(p, q)\n\n  def mse_loss(expected_logits, actual_weights):\n    expected_weights = tf.nn.softmax(expected_logits)\n    return tf.losses.mean_squared_error(expected_weights, actual_weights)\n\n  # For each hidden layer, we have attention-logit and attention-weight tensors\n  # with shape [batch_size, num_heads, target_length, input_length].\n  loss = 0.0\n  if loss_type == \"mse\":\n    actual_encdec_attention_weights = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_weights = combine_attentions(\n        actual_encdec_attention_weights)\n    loss = mse_loss(expected_attention_logits, actual_attention_weights)\n  else:\n    actual_encdec_attention_logits = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_logits = combine_attentions(actual_encdec_attention_logits)\n    loss = kl_divergence_loss(expected_attention_logits,\n                              actual_attention_logits)\n  return loss * loss_multiplier",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 55,
        "column": 31
      },
      "text": "def encoder_decoder_attention_loss(expected_attention_logits,\n                                   actual_attentions,\n                                   loss_type=\"kl_divergence\",\n                                   loss_multiplier=1.0):\n  \"\"\"Computes encdec attention loss between expected and actual attentions.\n\n  Args:\n    expected_attention_logits: Tensor storing the expected encoder-decoder\n      attention logits with shape [batch_size, target_length, input_length].\n    actual_attentions: Dictionary with actual attention logits for different\n      attention types and hidden layers.\n    loss_type: type of the loss function.\n    loss_multiplier: multiplier for the attention loss.\n\n  Returns:\n    KL_divergence loss between the actual and expected attention logits.\n  \"\"\"\n\n  def combine_attentions(attention_list):\n    \"\"\"Combine different layer attentions and then average over layers/heads.\"\"\"\n    # Stack all hidden layer attention tensors to get a tensor with shape\n    # [num_hidden_layers, batch_size, num_heads, target_length, input_length].\n    attentions = tf.stack(attention_list)\n    # Reduce mean across all layers (axis=0) and all heads (axis=2) to get a\n    # tensor with shape [batch_size, target_length, input_length].\n    return tf.reduce_mean(attentions, [0, 2])\n\n  def kl_divergence_loss(expected_logits, actual_logits):\n    p = tfp.distributions.Categorical(logits=expected_logits)\n    q = tfp.distributions.Categorical(logits=actual_logits)\n    return tfp.distributions.kl_divergence(p, q)\n\n  def mse_loss(expected_logits, actual_weights):\n    expected_weights = tf.nn.softmax(expected_logits)\n    return tf.losses.mean_squared_error(expected_weights, actual_weights)\n\n  # For each hidden layer, we have attention-logit and attention-weight tensors\n  # with shape [batch_size, num_heads, target_length, input_length].\n  loss = 0.0\n  if loss_type == \"mse\":\n    actual_encdec_attention_weights = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_weights = combine_attentions(\n        actual_encdec_attention_weights)\n    loss = mse_loss(expected_attention_logits, actual_attention_weights)\n  else:\n    actual_encdec_attention_logits = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_logits = combine_attentions(actual_encdec_attention_logits)\n    loss = kl_divergence_loss(expected_attention_logits,\n                              actual_attention_logits)\n  return loss * loss_multiplier",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 34
          },
          "text": "encoder_decoder_attention_loss"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 34
          },
          "end": {
            "row": 3,
            "column": 55
          },
          "text": "(expected_attention_logits,\n                                   actual_attentions,\n                                   loss_type=\"kl_divergence\",\n                                   loss_multiplier=1.0)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": "expected_attention_logits"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 60
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 35
              },
              "end": {
                "row": 1,
                "column": 52
              },
              "text": "actual_attentions"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 52
              },
              "end": {
                "row": 1,
                "column": 53
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 35
              },
              "end": {
                "row": 2,
                "column": 60
              },
              "text": "loss_type=\"kl_divergence\"",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 35
                  },
                  "end": {
                    "row": 2,
                    "column": 44
                  },
                  "text": "loss_type"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 44
                  },
                  "end": {
                    "row": 2,
                    "column": 45
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 45
                  },
                  "end": {
                    "row": 2,
                    "column": 60
                  },
                  "text": "\"kl_divergence\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 45
                      },
                      "end": {
                        "row": 2,
                        "column": 46
                      },
                      "text": "\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 2,
                        "column": 46
                      },
                      "end": {
                        "row": 2,
                        "column": 59
                      },
                      "text": "kl_divergence"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 2,
                        "column": 59
                      },
                      "end": {
                        "row": 2,
                        "column": 60
                      },
                      "text": "\""
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 60
              },
              "end": {
                "row": 2,
                "column": 61
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 35
              },
              "end": {
                "row": 3,
                "column": 54
              },
              "text": "loss_multiplier=1.0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 35
                  },
                  "end": {
                    "row": 3,
                    "column": 50
                  },
                  "text": "loss_multiplier"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 50
                  },
                  "end": {
                    "row": 3,
                    "column": 51
                  },
                  "text": "="
                },
                {
                  "type": "float",
                  "start": {
                    "row": 3,
                    "column": 51
                  },
                  "end": {
                    "row": 3,
                    "column": 54
                  },
                  "text": "1.0"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 3,
                "column": 54
              },
              "end": {
                "row": 3,
                "column": 55
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 3,
            "column": 55
          },
          "end": {
            "row": 3,
            "column": 56
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 4,
            "column": 2
          },
          "end": {
            "row": 55,
            "column": 31
          },
          "text": "\"\"\"Computes encdec attention loss between expected and actual attentions.\n\n  Args:\n    expected_attention_logits: Tensor storing the expected encoder-decoder\n      attention logits with shape [batch_size, target_length, input_length].\n    actual_attentions: Dictionary with actual attention logits for different\n      attention types and hidden layers.\n    loss_type: type of the loss function.\n    loss_multiplier: multiplier for the attention loss.\n\n  Returns:\n    KL_divergence loss between the actual and expected attention logits.\n  \"\"\"\n\n  def combine_attentions(attention_list):\n    \"\"\"Combine different layer attentions and then average over layers/heads.\"\"\"\n    # Stack all hidden layer attention tensors to get a tensor with shape\n    # [num_hidden_layers, batch_size, num_heads, target_length, input_length].\n    attentions = tf.stack(attention_list)\n    # Reduce mean across all layers (axis=0) and all heads (axis=2) to get a\n    # tensor with shape [batch_size, target_length, input_length].\n    return tf.reduce_mean(attentions, [0, 2])\n\n  def kl_divergence_loss(expected_logits, actual_logits):\n    p = tfp.distributions.Categorical(logits=expected_logits)\n    q = tfp.distributions.Categorical(logits=actual_logits)\n    return tfp.distributions.kl_divergence(p, q)\n\n  def mse_loss(expected_logits, actual_weights):\n    expected_weights = tf.nn.softmax(expected_logits)\n    return tf.losses.mean_squared_error(expected_weights, actual_weights)\n\n  # For each hidden layer, we have attention-logit and attention-weight tensors\n  # with shape [batch_size, num_heads, target_length, input_length].\n  loss = 0.0\n  if loss_type == \"mse\":\n    actual_encdec_attention_weights = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_weights = combine_attentions(\n        actual_encdec_attention_weights)\n    loss = mse_loss(expected_attention_logits, actual_attention_weights)\n  else:\n    actual_encdec_attention_logits = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_logits = combine_attentions(actual_encdec_attention_logits)\n    loss = kl_divergence_loss(expected_attention_logits,\n                              actual_attention_logits)\n  return loss * loss_multiplier",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 4,
                "column": 2
              },
              "end": {
                "row": 16,
                "column": 5
              },
              "text": "\"\"\"Computes encdec attention loss between expected and actual attentions.\n\n  Args:\n    expected_attention_logits: Tensor storing the expected encoder-decoder\n      attention logits with shape [batch_size, target_length, input_length].\n    actual_attentions: Dictionary with actual attention logits for different\n      attention types and hidden layers.\n    loss_type: type of the loss function.\n    loss_multiplier: multiplier for the attention loss.\n\n  Returns:\n    KL_divergence loss between the actual and expected attention logits.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 4,
                    "column": 2
                  },
                  "end": {
                    "row": 16,
                    "column": 5
                  },
                  "text": "\"\"\"Computes encdec attention loss between expected and actual attentions.\n\n  Args:\n    expected_attention_logits: Tensor storing the expected encoder-decoder\n      attention logits with shape [batch_size, target_length, input_length].\n    actual_attentions: Dictionary with actual attention logits for different\n      attention types and hidden layers.\n    loss_type: type of the loss function.\n    loss_multiplier: multiplier for the attention loss.\n\n  Returns:\n    KL_divergence loss between the actual and expected attention logits.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 4,
                        "column": 2
                      },
                      "end": {
                        "row": 4,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 4,
                        "column": 5
                      },
                      "end": {
                        "row": 16,
                        "column": 2
                      },
                      "text": "Computes encdec attention loss between expected and actual attentions.\n\n  Args:\n    expected_attention_logits: Tensor storing the expected encoder-decoder\n      attention logits with shape [batch_size, target_length, input_length].\n    actual_attentions: Dictionary with actual attention logits for different\n      attention types and hidden layers.\n    loss_type: type of the loss function.\n    loss_multiplier: multiplier for the attention loss.\n\n  Returns:\n    KL_divergence loss between the actual and expected attention logits.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 16,
                        "column": 2
                      },
                      "end": {
                        "row": 16,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 18,
                "column": 2
              },
              "end": {
                "row": 25,
                "column": 45
              },
              "text": "def combine_attentions(attention_list):\n    \"\"\"Combine different layer attentions and then average over layers/heads.\"\"\"\n    # Stack all hidden layer attention tensors to get a tensor with shape\n    # [num_hidden_layers, batch_size, num_heads, target_length, input_length].\n    attentions = tf.stack(attention_list)\n    # Reduce mean across all layers (axis=0) and all heads (axis=2) to get a\n    # tensor with shape [batch_size, target_length, input_length].\n    return tf.reduce_mean(attentions, [0, 2])",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 18,
                    "column": 2
                  },
                  "end": {
                    "row": 18,
                    "column": 5
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 18,
                    "column": 6
                  },
                  "end": {
                    "row": 18,
                    "column": 24
                  },
                  "text": "combine_attentions"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 18,
                    "column": 24
                  },
                  "end": {
                    "row": 18,
                    "column": 40
                  },
                  "text": "(attention_list)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 18,
                        "column": 24
                      },
                      "end": {
                        "row": 18,
                        "column": 25
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 25
                      },
                      "end": {
                        "row": 18,
                        "column": 39
                      },
                      "text": "attention_list"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 18,
                        "column": 39
                      },
                      "end": {
                        "row": 18,
                        "column": 40
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 18,
                    "column": 40
                  },
                  "end": {
                    "row": 18,
                    "column": 41
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 19,
                    "column": 4
                  },
                  "end": {
                    "row": 25,
                    "column": 45
                  },
                  "text": "\"\"\"Combine different layer attentions and then average over layers/heads.\"\"\"\n    # Stack all hidden layer attention tensors to get a tensor with shape\n    # [num_hidden_layers, batch_size, num_heads, target_length, input_length].\n    attentions = tf.stack(attention_list)\n    # Reduce mean across all layers (axis=0) and all heads (axis=2) to get a\n    # tensor with shape [batch_size, target_length, input_length].\n    return tf.reduce_mean(attentions, [0, 2])",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 19,
                        "column": 4
                      },
                      "end": {
                        "row": 19,
                        "column": 80
                      },
                      "text": "\"\"\"Combine different layer attentions and then average over layers/heads.\"\"\"",
                      "children": [
                        {
                          "type": "string",
                          "start": {
                            "row": 19,
                            "column": 4
                          },
                          "end": {
                            "row": 19,
                            "column": 80
                          },
                          "text": "\"\"\"Combine different layer attentions and then average over layers/heads.\"\"\"",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 19,
                                "column": 4
                              },
                              "end": {
                                "row": 19,
                                "column": 7
                              },
                              "text": "\"\"\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 19,
                                "column": 7
                              },
                              "end": {
                                "row": 19,
                                "column": 77
                              },
                              "text": "Combine different layer attentions and then average over layers/heads."
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 19,
                                "column": 77
                              },
                              "end": {
                                "row": 19,
                                "column": 80
                              },
                              "text": "\"\"\""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 20,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 73
                      },
                      "text": "# Stack all hidden layer attention tensors to get a tensor with shape"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 21,
                        "column": 4
                      },
                      "end": {
                        "row": 21,
                        "column": 78
                      },
                      "text": "# [num_hidden_layers, batch_size, num_heads, target_length, input_length]."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 41
                      },
                      "text": "attentions = tf.stack(attention_list)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 22,
                            "column": 4
                          },
                          "end": {
                            "row": 22,
                            "column": 41
                          },
                          "text": "attentions = tf.stack(attention_list)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 4
                              },
                              "end": {
                                "row": 22,
                                "column": 14
                              },
                              "text": "attentions"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 22,
                                "column": 15
                              },
                              "end": {
                                "row": 22,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 22,
                                "column": 17
                              },
                              "end": {
                                "row": 22,
                                "column": 41
                              },
                              "text": "tf.stack(attention_list)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 22,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 25
                                  },
                                  "text": "tf.stack",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 19
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 22,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 20
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 25
                                      },
                                      "text": "stack"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 22,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 41
                                  },
                                  "text": "(attention_list)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 22,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 26
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 40
                                      },
                                      "text": "attention_list"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 22,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 41
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 23,
                        "column": 4
                      },
                      "end": {
                        "row": 23,
                        "column": 76
                      },
                      "text": "# Reduce mean across all layers (axis=0) and all heads (axis=2) to get a"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 24,
                        "column": 4
                      },
                      "end": {
                        "row": 24,
                        "column": 66
                      },
                      "text": "# tensor with shape [batch_size, target_length, input_length]."
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 25,
                        "column": 4
                      },
                      "end": {
                        "row": 25,
                        "column": 45
                      },
                      "text": "return tf.reduce_mean(attentions, [0, 2])",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 25,
                            "column": 4
                          },
                          "end": {
                            "row": 25,
                            "column": 10
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 25,
                            "column": 11
                          },
                          "end": {
                            "row": 25,
                            "column": 45
                          },
                          "text": "tf.reduce_mean(attentions, [0, 2])",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 25,
                                "column": 11
                              },
                              "end": {
                                "row": 25,
                                "column": 25
                              },
                              "text": "tf.reduce_mean",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 13
                                  },
                                  "text": "tf"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 25,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 14
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 25
                                  },
                                  "text": "reduce_mean"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 25,
                                "column": 25
                              },
                              "end": {
                                "row": 25,
                                "column": 45
                              },
                              "text": "(attentions, [0, 2])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 25,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 26
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 36
                                  },
                                  "text": "attentions"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 25,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 37
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "list",
                                  "start": {
                                    "row": 25,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 44
                                  },
                                  "text": "[0, 2]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 25,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 39
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 25,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 40
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 25,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 41
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 25,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 43
                                      },
                                      "text": "2"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 25,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 44
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 25,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 45
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 27,
                "column": 2
              },
              "end": {
                "row": 30,
                "column": 48
              },
              "text": "def kl_divergence_loss(expected_logits, actual_logits):\n    p = tfp.distributions.Categorical(logits=expected_logits)\n    q = tfp.distributions.Categorical(logits=actual_logits)\n    return tfp.distributions.kl_divergence(p, q)",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 27,
                    "column": 2
                  },
                  "end": {
                    "row": 27,
                    "column": 5
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 27,
                    "column": 6
                  },
                  "end": {
                    "row": 27,
                    "column": 24
                  },
                  "text": "kl_divergence_loss"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 27,
                    "column": 24
                  },
                  "end": {
                    "row": 27,
                    "column": 56
                  },
                  "text": "(expected_logits, actual_logits)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 27,
                        "column": 24
                      },
                      "end": {
                        "row": 27,
                        "column": 25
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 27,
                        "column": 25
                      },
                      "end": {
                        "row": 27,
                        "column": 40
                      },
                      "text": "expected_logits"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 27,
                        "column": 40
                      },
                      "end": {
                        "row": 27,
                        "column": 41
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 27,
                        "column": 42
                      },
                      "end": {
                        "row": 27,
                        "column": 55
                      },
                      "text": "actual_logits"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 27,
                        "column": 55
                      },
                      "end": {
                        "row": 27,
                        "column": 56
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 27,
                    "column": 56
                  },
                  "end": {
                    "row": 27,
                    "column": 57
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 28,
                    "column": 4
                  },
                  "end": {
                    "row": 30,
                    "column": 48
                  },
                  "text": "p = tfp.distributions.Categorical(logits=expected_logits)\n    q = tfp.distributions.Categorical(logits=actual_logits)\n    return tfp.distributions.kl_divergence(p, q)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 28,
                        "column": 4
                      },
                      "end": {
                        "row": 28,
                        "column": 61
                      },
                      "text": "p = tfp.distributions.Categorical(logits=expected_logits)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 28,
                            "column": 4
                          },
                          "end": {
                            "row": 28,
                            "column": 61
                          },
                          "text": "p = tfp.distributions.Categorical(logits=expected_logits)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 28,
                                "column": 4
                              },
                              "end": {
                                "row": 28,
                                "column": 5
                              },
                              "text": "p"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 28,
                                "column": 6
                              },
                              "end": {
                                "row": 28,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 28,
                                "column": 8
                              },
                              "end": {
                                "row": 28,
                                "column": 61
                              },
                              "text": "tfp.distributions.Categorical(logits=expected_logits)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 28,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 37
                                  },
                                  "text": "tfp.distributions.Categorical",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 28,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 25
                                      },
                                      "text": "tfp.distributions",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 28,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 11
                                          },
                                          "text": "tfp"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 28,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 12
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 28,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 25
                                          },
                                          "text": "distributions"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 28,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 26
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 28,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 37
                                      },
                                      "text": "Categorical"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 28,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 61
                                  },
                                  "text": "(logits=expected_logits)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 28,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 38
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 28,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 60
                                      },
                                      "text": "logits=expected_logits",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 28,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 44
                                          },
                                          "text": "logits"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 28,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 45
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 28,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 60
                                          },
                                          "text": "expected_logits"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 28,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 61
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 29,
                        "column": 4
                      },
                      "end": {
                        "row": 29,
                        "column": 59
                      },
                      "text": "q = tfp.distributions.Categorical(logits=actual_logits)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 29,
                            "column": 4
                          },
                          "end": {
                            "row": 29,
                            "column": 59
                          },
                          "text": "q = tfp.distributions.Categorical(logits=actual_logits)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 29,
                                "column": 4
                              },
                              "end": {
                                "row": 29,
                                "column": 5
                              },
                              "text": "q"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 29,
                                "column": 6
                              },
                              "end": {
                                "row": 29,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 29,
                                "column": 8
                              },
                              "end": {
                                "row": 29,
                                "column": 59
                              },
                              "text": "tfp.distributions.Categorical(logits=actual_logits)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 29,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 37
                                  },
                                  "text": "tfp.distributions.Categorical",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 29,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 25
                                      },
                                      "text": "tfp.distributions",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 11
                                          },
                                          "text": "tfp"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 29,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 12
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 25
                                          },
                                          "text": "distributions"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 29,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 26
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 29,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 37
                                      },
                                      "text": "Categorical"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 29,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 59
                                  },
                                  "text": "(logits=actual_logits)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 29,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 38
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 29,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 58
                                      },
                                      "text": "logits=actual_logits",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 44
                                          },
                                          "text": "logits"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 29,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 45
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 29,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 58
                                          },
                                          "text": "actual_logits"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 29,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 59
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 30,
                        "column": 4
                      },
                      "end": {
                        "row": 30,
                        "column": 48
                      },
                      "text": "return tfp.distributions.kl_divergence(p, q)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 30,
                            "column": 4
                          },
                          "end": {
                            "row": 30,
                            "column": 10
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 30,
                            "column": 11
                          },
                          "end": {
                            "row": 30,
                            "column": 48
                          },
                          "text": "tfp.distributions.kl_divergence(p, q)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 30,
                                "column": 11
                              },
                              "end": {
                                "row": 30,
                                "column": 42
                              },
                              "text": "tfp.distributions.kl_divergence",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 30,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 28
                                  },
                                  "text": "tfp.distributions",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 30,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 14
                                      },
                                      "text": "tfp"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 30,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 15
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 30,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 28
                                      },
                                      "text": "distributions"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 30,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 29
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 30,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 42
                                  },
                                  "text": "kl_divergence"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 30,
                                "column": 42
                              },
                              "end": {
                                "row": 30,
                                "column": 48
                              },
                              "text": "(p, q)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 30,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 43
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 30,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 44
                                  },
                                  "text": "p"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 30,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 45
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 30,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 47
                                  },
                                  "text": "q"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 30,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 48
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 32,
                "column": 2
              },
              "end": {
                "row": 34,
                "column": 73
              },
              "text": "def mse_loss(expected_logits, actual_weights):\n    expected_weights = tf.nn.softmax(expected_logits)\n    return tf.losses.mean_squared_error(expected_weights, actual_weights)",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 32,
                    "column": 2
                  },
                  "end": {
                    "row": 32,
                    "column": 5
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 32,
                    "column": 6
                  },
                  "end": {
                    "row": 32,
                    "column": 14
                  },
                  "text": "mse_loss"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 32,
                    "column": 14
                  },
                  "end": {
                    "row": 32,
                    "column": 47
                  },
                  "text": "(expected_logits, actual_weights)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 32,
                        "column": 14
                      },
                      "end": {
                        "row": 32,
                        "column": 15
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 32,
                        "column": 15
                      },
                      "end": {
                        "row": 32,
                        "column": 30
                      },
                      "text": "expected_logits"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 32,
                        "column": 30
                      },
                      "end": {
                        "row": 32,
                        "column": 31
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 32,
                        "column": 32
                      },
                      "end": {
                        "row": 32,
                        "column": 46
                      },
                      "text": "actual_weights"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 32,
                        "column": 46
                      },
                      "end": {
                        "row": 32,
                        "column": 47
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 32,
                    "column": 47
                  },
                  "end": {
                    "row": 32,
                    "column": 48
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 33,
                    "column": 4
                  },
                  "end": {
                    "row": 34,
                    "column": 73
                  },
                  "text": "expected_weights = tf.nn.softmax(expected_logits)\n    return tf.losses.mean_squared_error(expected_weights, actual_weights)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 33,
                        "column": 4
                      },
                      "end": {
                        "row": 33,
                        "column": 53
                      },
                      "text": "expected_weights = tf.nn.softmax(expected_logits)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 33,
                            "column": 4
                          },
                          "end": {
                            "row": 33,
                            "column": 53
                          },
                          "text": "expected_weights = tf.nn.softmax(expected_logits)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 4
                              },
                              "end": {
                                "row": 33,
                                "column": 20
                              },
                              "text": "expected_weights"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 33,
                                "column": 21
                              },
                              "end": {
                                "row": 33,
                                "column": 22
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 33,
                                "column": 23
                              },
                              "end": {
                                "row": 33,
                                "column": 53
                              },
                              "text": "tf.nn.softmax(expected_logits)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 33,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 36
                                  },
                                  "text": "tf.nn.softmax",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 33,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 28
                                      },
                                      "text": "tf.nn",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 33,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 25
                                          },
                                          "text": "tf"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 33,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 26
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 33,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 28
                                          },
                                          "text": "nn"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 33,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 29
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 36
                                      },
                                      "text": "softmax"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 33,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 53
                                  },
                                  "text": "(expected_logits)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 33,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 37
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 33,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 52
                                      },
                                      "text": "expected_logits"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 33,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 53
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 34,
                        "column": 4
                      },
                      "end": {
                        "row": 34,
                        "column": 73
                      },
                      "text": "return tf.losses.mean_squared_error(expected_weights, actual_weights)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 34,
                            "column": 4
                          },
                          "end": {
                            "row": 34,
                            "column": 10
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 34,
                            "column": 11
                          },
                          "end": {
                            "row": 34,
                            "column": 73
                          },
                          "text": "tf.losses.mean_squared_error(expected_weights, actual_weights)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 34,
                                "column": 11
                              },
                              "end": {
                                "row": 34,
                                "column": 39
                              },
                              "text": "tf.losses.mean_squared_error",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 34,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 20
                                  },
                                  "text": "tf.losses",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 34,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 13
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 34,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 14
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 34,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 20
                                      },
                                      "text": "losses"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 34,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 34,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 39
                                  },
                                  "text": "mean_squared_error"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 34,
                                "column": 39
                              },
                              "end": {
                                "row": 34,
                                "column": 73
                              },
                              "text": "(expected_weights, actual_weights)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 34,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 40
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 34,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 56
                                  },
                                  "text": "expected_weights"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 34,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 57
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 34,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 72
                                  },
                                  "text": "actual_weights"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 34,
                                    "column": 72
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 73
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 36,
                "column": 2
              },
              "end": {
                "row": 36,
                "column": 79
              },
              "text": "# For each hidden layer, we have attention-logit and attention-weight tensors"
            },
            {
              "type": "comment",
              "start": {
                "row": 37,
                "column": 2
              },
              "end": {
                "row": 37,
                "column": 68
              },
              "text": "# with shape [batch_size, num_heads, target_length, input_length]."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 38,
                "column": 2
              },
              "end": {
                "row": 38,
                "column": 12
              },
              "text": "loss = 0.0",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 38,
                    "column": 2
                  },
                  "end": {
                    "row": 38,
                    "column": 12
                  },
                  "text": "loss = 0.0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 38,
                        "column": 2
                      },
                      "end": {
                        "row": 38,
                        "column": 6
                      },
                      "text": "loss"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 38,
                        "column": 7
                      },
                      "end": {
                        "row": 38,
                        "column": 8
                      },
                      "text": "="
                    },
                    {
                      "type": "float",
                      "start": {
                        "row": 38,
                        "column": 9
                      },
                      "end": {
                        "row": 38,
                        "column": 12
                      },
                      "text": "0.0"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 39,
                "column": 2
              },
              "end": {
                "row": 54,
                "column": 54
              },
              "text": "if loss_type == \"mse\":\n    actual_encdec_attention_weights = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_weights = combine_attentions(\n        actual_encdec_attention_weights)\n    loss = mse_loss(expected_attention_logits, actual_attention_weights)\n  else:\n    actual_encdec_attention_logits = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_logits = combine_attentions(actual_encdec_attention_logits)\n    loss = kl_divergence_loss(expected_attention_logits,\n                              actual_attention_logits)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 39,
                    "column": 2
                  },
                  "end": {
                    "row": 39,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 39,
                    "column": 5
                  },
                  "end": {
                    "row": 39,
                    "column": 23
                  },
                  "text": "loss_type == \"mse\"",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 39,
                        "column": 5
                      },
                      "end": {
                        "row": 39,
                        "column": 14
                      },
                      "text": "loss_type"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 39,
                        "column": 15
                      },
                      "end": {
                        "row": 39,
                        "column": 17
                      },
                      "text": "=="
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 39,
                        "column": 18
                      },
                      "end": {
                        "row": 39,
                        "column": 23
                      },
                      "text": "\"mse\"",
                      "children": [
                        {
                          "type": "string_start",
                          "start": {
                            "row": 39,
                            "column": 18
                          },
                          "end": {
                            "row": 39,
                            "column": 19
                          },
                          "text": "\""
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 39,
                            "column": 19
                          },
                          "end": {
                            "row": 39,
                            "column": 22
                          },
                          "text": "mse"
                        },
                        {
                          "type": "string_end",
                          "start": {
                            "row": 39,
                            "column": 22
                          },
                          "end": {
                            "row": 39,
                            "column": 23
                          },
                          "text": "\""
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 39,
                    "column": 23
                  },
                  "end": {
                    "row": 39,
                    "column": 24
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 40,
                    "column": 4
                  },
                  "end": {
                    "row": 46,
                    "column": 72
                  },
                  "text": "actual_encdec_attention_weights = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_weights = combine_attentions(\n        actual_encdec_attention_weights)\n    loss = mse_loss(expected_attention_logits, actual_attention_weights)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 40,
                        "column": 4
                      },
                      "end": {
                        "row": 43,
                        "column": 5
                      },
                      "text": "actual_encdec_attention_weights = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")\n    ]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 40,
                            "column": 4
                          },
                          "end": {
                            "row": 43,
                            "column": 5
                          },
                          "text": "actual_encdec_attention_weights = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")\n    ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 4
                              },
                              "end": {
                                "row": 40,
                                "column": 35
                              },
                              "text": "actual_encdec_attention_weights"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 40,
                                "column": 36
                              },
                              "end": {
                                "row": 40,
                                "column": 37
                              },
                              "text": "="
                            },
                            {
                              "type": "list_comprehension",
                              "start": {
                                "row": 40,
                                "column": 38
                              },
                              "end": {
                                "row": 43,
                                "column": 5
                              },
                              "text": "[\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")\n    ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 40,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 39
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 9
                                  },
                                  "text": "t"
                                },
                                {
                                  "type": "for_in_clause",
                                  "start": {
                                    "row": 41,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 55
                                  },
                                  "text": "for layer_key, t in actual_attentions.items()",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start": {
                                        "row": 41,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 13
                                      },
                                      "text": "for"
                                    },
                                    {
                                      "type": "pattern_list",
                                      "start": {
                                        "row": 41,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 26
                                      },
                                      "text": "layer_key, t",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 41,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 23
                                          },
                                          "text": "layer_key"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 41,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 24
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 41,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 26
                                          },
                                          "text": "t"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "in",
                                      "start": {
                                        "row": 41,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 29
                                      },
                                      "text": "in"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 41,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 55
                                      },
                                      "text": "actual_attentions.items()",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 41,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 53
                                          },
                                          "text": "actual_attentions.items",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 41,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 47
                                              },
                                              "text": "actual_attentions"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 41,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 48
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 41,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 53
                                              },
                                              "text": "items"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 41,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 55
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 41,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 54
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 41,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 55
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "if_clause",
                                  "start": {
                                    "row": 42,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 80
                                  },
                                  "text": "if \"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 42,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 10
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "boolean_operator",
                                      "start": {
                                        "row": 42,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 80
                                      },
                                      "text": "\"encdec_attention\" in layer_key and not layer_key.endswith(\"/logits\")",
                                      "children": [
                                        {
                                          "type": "comparison_operator",
                                          "start": {
                                            "row": 42,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 42
                                          },
                                          "text": "\"encdec_attention\" in layer_key",
                                          "children": [
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 42,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 29
                                              },
                                              "text": "\"encdec_attention\"",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 11
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 12
                                                  },
                                                  "text": "\""
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 28
                                                  },
                                                  "text": "encdec_attention"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 29
                                                  },
                                                  "text": "\""
                                                }
                                              ]
                                            },
                                            {
                                              "type": "in",
                                              "start": {
                                                "row": 42,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 32
                                              },
                                              "text": "in"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 42,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 42
                                              },
                                              "text": "layer_key"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "and",
                                          "start": {
                                            "row": 42,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 46
                                          },
                                          "text": "and"
                                        },
                                        {
                                          "type": "not_operator",
                                          "start": {
                                            "row": 42,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 80
                                          },
                                          "text": "not layer_key.endswith(\"/logits\")",
                                          "children": [
                                            {
                                              "type": "not",
                                              "start": {
                                                "row": 42,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 50
                                              },
                                              "text": "not"
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 42,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 80
                                              },
                                              "text": "layer_key.endswith(\"/logits\")",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 69
                                                  },
                                                  "text": "layer_key.endswith",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 51
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 60
                                                      },
                                                      "text": "layer_key"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 60
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 61
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 61
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 69
                                                      },
                                                      "text": "endswith"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 69
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 80
                                                  },
                                                  "text": "(\"/logits\")",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 69
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 70
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 70
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 79
                                                      },
                                                      "text": "\"/logits\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 70
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 71
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 71
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 78
                                                          },
                                                          "text": "/logits"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 78
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 79
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 79
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 80
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 43,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 5
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 44,
                        "column": 4
                      },
                      "end": {
                        "row": 45,
                        "column": 40
                      },
                      "text": "actual_attention_weights = combine_attentions(\n        actual_encdec_attention_weights)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 44,
                            "column": 4
                          },
                          "end": {
                            "row": 45,
                            "column": 40
                          },
                          "text": "actual_attention_weights = combine_attentions(\n        actual_encdec_attention_weights)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 44,
                                "column": 4
                              },
                              "end": {
                                "row": 44,
                                "column": 28
                              },
                              "text": "actual_attention_weights"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 44,
                                "column": 29
                              },
                              "end": {
                                "row": 44,
                                "column": 30
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 44,
                                "column": 31
                              },
                              "end": {
                                "row": 45,
                                "column": 40
                              },
                              "text": "combine_attentions(\n        actual_encdec_attention_weights)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 44,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 49
                                  },
                                  "text": "combine_attentions"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 44,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 40
                                  },
                                  "text": "(\n        actual_encdec_attention_weights)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 44,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 50
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 45,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 39
                                      },
                                      "text": "actual_encdec_attention_weights"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 45,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 40
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 46,
                        "column": 4
                      },
                      "end": {
                        "row": 46,
                        "column": 72
                      },
                      "text": "loss = mse_loss(expected_attention_logits, actual_attention_weights)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 46,
                            "column": 4
                          },
                          "end": {
                            "row": 46,
                            "column": 72
                          },
                          "text": "loss = mse_loss(expected_attention_logits, actual_attention_weights)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 46,
                                "column": 4
                              },
                              "end": {
                                "row": 46,
                                "column": 8
                              },
                              "text": "loss"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 46,
                                "column": 9
                              },
                              "end": {
                                "row": 46,
                                "column": 10
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 46,
                                "column": 11
                              },
                              "end": {
                                "row": 46,
                                "column": 72
                              },
                              "text": "mse_loss(expected_attention_logits, actual_attention_weights)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 46,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 19
                                  },
                                  "text": "mse_loss"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 46,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 72
                                  },
                                  "text": "(expected_attention_logits, actual_attention_weights)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 46,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 20
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 46,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 45
                                      },
                                      "text": "expected_attention_logits"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 46,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 46
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 46,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 71
                                      },
                                      "text": "actual_attention_weights"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 46,
                                        "column": 71
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 72
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 47,
                    "column": 2
                  },
                  "end": {
                    "row": 54,
                    "column": 54
                  },
                  "text": "else:\n    actual_encdec_attention_logits = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_logits = combine_attentions(actual_encdec_attention_logits)\n    loss = kl_divergence_loss(expected_attention_logits,\n                              actual_attention_logits)",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 47,
                        "column": 2
                      },
                      "end": {
                        "row": 47,
                        "column": 6
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 47,
                        "column": 6
                      },
                      "end": {
                        "row": 47,
                        "column": 7
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 48,
                        "column": 4
                      },
                      "end": {
                        "row": 54,
                        "column": 54
                      },
                      "text": "actual_encdec_attention_logits = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")\n    ]\n    actual_attention_logits = combine_attentions(actual_encdec_attention_logits)\n    loss = kl_divergence_loss(expected_attention_logits,\n                              actual_attention_logits)",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 48,
                            "column": 4
                          },
                          "end": {
                            "row": 51,
                            "column": 5
                          },
                          "text": "actual_encdec_attention_logits = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")\n    ]",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 48,
                                "column": 4
                              },
                              "end": {
                                "row": 51,
                                "column": 5
                              },
                              "text": "actual_encdec_attention_logits = [\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")\n    ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 48,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 34
                                  },
                                  "text": "actual_encdec_attention_logits"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 48,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 36
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "list_comprehension",
                                  "start": {
                                    "row": 48,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 5
                                  },
                                  "text": "[\n        t for layer_key, t in actual_attentions.items()\n        if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")\n    ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 48,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 38
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 9
                                      },
                                      "text": "t"
                                    },
                                    {
                                      "type": "for_in_clause",
                                      "start": {
                                        "row": 49,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 55
                                      },
                                      "text": "for layer_key, t in actual_attentions.items()",
                                      "children": [
                                        {
                                          "type": "for",
                                          "start": {
                                            "row": 49,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 13
                                          },
                                          "text": "for"
                                        },
                                        {
                                          "type": "pattern_list",
                                          "start": {
                                            "row": 49,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 26
                                          },
                                          "text": "layer_key, t",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 49,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 23
                                              },
                                              "text": "layer_key"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 49,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 24
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 49,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 26
                                              },
                                              "text": "t"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "in",
                                          "start": {
                                            "row": 49,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 29
                                          },
                                          "text": "in"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 49,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 55
                                          },
                                          "text": "actual_attentions.items()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 49,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 53
                                              },
                                              "text": "actual_attentions.items",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 49,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 49,
                                                    "column": 47
                                                  },
                                                  "text": "actual_attentions"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 49,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 49,
                                                    "column": 48
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 49,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 49,
                                                    "column": 53
                                                  },
                                                  "text": "items"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 49,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 55
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 49,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 49,
                                                    "column": 54
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 49,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 49,
                                                    "column": 55
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_clause",
                                      "start": {
                                        "row": 50,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 76
                                      },
                                      "text": "if \"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 50,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 10
                                          },
                                          "text": "if"
                                        },
                                        {
                                          "type": "boolean_operator",
                                          "start": {
                                            "row": 50,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 50,
                                            "column": 76
                                          },
                                          "text": "\"encdec_attention\" in layer_key and layer_key.endswith(\"/logits\")",
                                          "children": [
                                            {
                                              "type": "comparison_operator",
                                              "start": {
                                                "row": 50,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 42
                                              },
                                              "text": "\"encdec_attention\" in layer_key",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 50,
                                                    "column": 11
                                                  },
                                                  "end": {
                                                    "row": 50,
                                                    "column": 29
                                                  },
                                                  "text": "\"encdec_attention\"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 11
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 12
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 12
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 28
                                                      },
                                                      "text": "encdec_attention"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 29
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "in",
                                                  "start": {
                                                    "row": 50,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 50,
                                                    "column": 32
                                                  },
                                                  "text": "in"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 50,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 50,
                                                    "column": 42
                                                  },
                                                  "text": "layer_key"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "and",
                                              "start": {
                                                "row": 50,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 46
                                              },
                                              "text": "and"
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 50,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 50,
                                                "column": 76
                                              },
                                              "text": "layer_key.endswith(\"/logits\")",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 50,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 50,
                                                    "column": 65
                                                  },
                                                  "text": "layer_key.endswith",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 56
                                                      },
                                                      "text": "layer_key"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 56
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 57
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 57
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 65
                                                      },
                                                      "text": "endswith"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 50,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 50,
                                                    "column": 76
                                                  },
                                                  "text": "(\"/logits\")",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 66
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 66
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 75
                                                      },
                                                      "text": "\"/logits\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 50,
                                                            "column": 66
                                                          },
                                                          "end": {
                                                            "row": 50,
                                                            "column": 67
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 50,
                                                            "column": 67
                                                          },
                                                          "end": {
                                                            "row": 50,
                                                            "column": 74
                                                          },
                                                          "text": "/logits"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 50,
                                                            "column": 74
                                                          },
                                                          "end": {
                                                            "row": 50,
                                                            "column": 75
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 50,
                                                        "column": 75
                                                      },
                                                      "end": {
                                                        "row": 50,
                                                        "column": 76
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 51,
                                        "column": 4
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 5
                                      },
                                      "text": "]"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 52,
                            "column": 4
                          },
                          "end": {
                            "row": 52,
                            "column": 80
                          },
                          "text": "actual_attention_logits = combine_attentions(actual_encdec_attention_logits)",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 52,
                                "column": 4
                              },
                              "end": {
                                "row": 52,
                                "column": 80
                              },
                              "text": "actual_attention_logits = combine_attentions(actual_encdec_attention_logits)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 52,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 27
                                  },
                                  "text": "actual_attention_logits"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 52,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 29
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 52,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 80
                                  },
                                  "text": "combine_attentions(actual_encdec_attention_logits)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 48
                                      },
                                      "text": "combine_attentions"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 52,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 80
                                      },
                                      "text": "(actual_encdec_attention_logits)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 52,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 49
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 52,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 79
                                          },
                                          "text": "actual_encdec_attention_logits"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 52,
                                            "column": 79
                                          },
                                          "end": {
                                            "row": 52,
                                            "column": 80
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 53,
                            "column": 4
                          },
                          "end": {
                            "row": 54,
                            "column": 54
                          },
                          "text": "loss = kl_divergence_loss(expected_attention_logits,\n                              actual_attention_logits)",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 53,
                                "column": 4
                              },
                              "end": {
                                "row": 54,
                                "column": 54
                              },
                              "text": "loss = kl_divergence_loss(expected_attention_logits,\n                              actual_attention_logits)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 53,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 8
                                  },
                                  "text": "loss"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 53,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 10
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 53,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 54
                                  },
                                  "text": "kl_divergence_loss(expected_attention_logits,\n                              actual_attention_logits)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 53,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 53,
                                        "column": 29
                                      },
                                      "text": "kl_divergence_loss"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 53,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 54,
                                        "column": 54
                                      },
                                      "text": "(expected_attention_logits,\n                              actual_attention_logits)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 53,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 30
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 53,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 55
                                          },
                                          "text": "expected_attention_logits"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 53,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 53,
                                            "column": 56
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 54,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 53
                                          },
                                          "text": "actual_attention_logits"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 54,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 54,
                                            "column": 54
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 55,
                "column": 2
              },
              "end": {
                "row": 55,
                "column": 31
              },
              "text": "return loss * loss_multiplier",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 55,
                    "column": 2
                  },
                  "end": {
                    "row": 55,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "binary_operator",
                  "start": {
                    "row": 55,
                    "column": 9
                  },
                  "end": {
                    "row": 55,
                    "column": 31
                  },
                  "text": "loss * loss_multiplier",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 55,
                        "column": 9
                      },
                      "end": {
                        "row": 55,
                        "column": 13
                      },
                      "text": "loss"
                    },
                    {
                      "type": "*",
                      "start": {
                        "row": 55,
                        "column": 14
                      },
                      "end": {
                        "row": 55,
                        "column": 15
                      },
                      "text": "*"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 55,
                        "column": 16
                      },
                      "end": {
                        "row": 55,
                        "column": 31
                      },
                      "text": "loss_multiplier"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}