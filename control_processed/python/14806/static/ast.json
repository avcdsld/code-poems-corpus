{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 41,
    "column": 62
  },
  "text": "def add_filter(self, property_name, operator, value):\n        \"\"\"Filter the query based on a property name, operator and a value.\n\n        Expressions take the form of::\n\n          .add_filter('<property>', '<operator>', <value>)\n\n        where property is a property stored on the entity in the datastore\n        and operator is one of ``OPERATORS``\n        (ie, ``=``, ``<``, ``<=``, ``>``, ``>=``)::\n\n          >>> from google.cloud import datastore\n          >>> client = datastore.Client()\n          >>> query = client.query(kind='Person')\n          >>> query.add_filter('name', '=', 'James')\n          >>> query.add_filter('age', '>', 50)\n\n        :type property_name: str\n        :param property_name: A property name.\n\n        :type operator: str\n        :param operator: One of ``=``, ``<``, ``<=``, ``>``, ``>=``.\n\n        :type value: :class:`int`, :class:`str`, :class:`bool`,\n                     :class:`float`, :class:`NoneType`,\n                     :class:`datetime.datetime`,\n                     :class:`google.cloud.datastore.key.Key`\n        :param value: The value to filter on.\n\n        :raises: :class:`ValueError` if ``operation`` is not one of the\n                 specified values, or if a filter names ``'__key__'`` but\n                 passes an invalid value (a key is required).\n        \"\"\"\n        if self.OPERATORS.get(operator) is None:\n            error_message = 'Invalid expression: \"%s\"' % (operator,)\n            choices_message = \"Please use one of: =, <, <=, >, >=.\"\n            raise ValueError(error_message, choices_message)\n\n        if property_name == \"__key__\" and not isinstance(value, Key):\n            raise ValueError('Invalid key: \"%s\"' % value)\n\n        self._filters.append((property_name, operator, value))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 41,
        "column": 62
      },
      "text": "def add_filter(self, property_name, operator, value):\n        \"\"\"Filter the query based on a property name, operator and a value.\n\n        Expressions take the form of::\n\n          .add_filter('<property>', '<operator>', <value>)\n\n        where property is a property stored on the entity in the datastore\n        and operator is one of ``OPERATORS``\n        (ie, ``=``, ``<``, ``<=``, ``>``, ``>=``)::\n\n          >>> from google.cloud import datastore\n          >>> client = datastore.Client()\n          >>> query = client.query(kind='Person')\n          >>> query.add_filter('name', '=', 'James')\n          >>> query.add_filter('age', '>', 50)\n\n        :type property_name: str\n        :param property_name: A property name.\n\n        :type operator: str\n        :param operator: One of ``=``, ``<``, ``<=``, ``>``, ``>=``.\n\n        :type value: :class:`int`, :class:`str`, :class:`bool`,\n                     :class:`float`, :class:`NoneType`,\n                     :class:`datetime.datetime`,\n                     :class:`google.cloud.datastore.key.Key`\n        :param value: The value to filter on.\n\n        :raises: :class:`ValueError` if ``operation`` is not one of the\n                 specified values, or if a filter names ``'__key__'`` but\n                 passes an invalid value (a key is required).\n        \"\"\"\n        if self.OPERATORS.get(operator) is None:\n            error_message = 'Invalid expression: \"%s\"' % (operator,)\n            choices_message = \"Please use one of: =, <, <=, >, >=.\"\n            raise ValueError(error_message, choices_message)\n\n        if property_name == \"__key__\" and not isinstance(value, Key):\n            raise ValueError('Invalid key: \"%s\"' % value)\n\n        self._filters.append((property_name, operator, value))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 14
          },
          "text": "add_filter"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 14
          },
          "end": {
            "row": 0,
            "column": 52
          },
          "text": "(self, property_name, operator, value)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": "property_name"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": "operator"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 51
              },
              "text": "value"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 51
              },
              "end": {
                "row": 0,
                "column": 52
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 52
          },
          "end": {
            "row": 0,
            "column": 53
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 41,
            "column": 62
          },
          "text": "\"\"\"Filter the query based on a property name, operator and a value.\n\n        Expressions take the form of::\n\n          .add_filter('<property>', '<operator>', <value>)\n\n        where property is a property stored on the entity in the datastore\n        and operator is one of ``OPERATORS``\n        (ie, ``=``, ``<``, ``<=``, ``>``, ``>=``)::\n\n          >>> from google.cloud import datastore\n          >>> client = datastore.Client()\n          >>> query = client.query(kind='Person')\n          >>> query.add_filter('name', '=', 'James')\n          >>> query.add_filter('age', '>', 50)\n\n        :type property_name: str\n        :param property_name: A property name.\n\n        :type operator: str\n        :param operator: One of ``=``, ``<``, ``<=``, ``>``, ``>=``.\n\n        :type value: :class:`int`, :class:`str`, :class:`bool`,\n                     :class:`float`, :class:`NoneType`,\n                     :class:`datetime.datetime`,\n                     :class:`google.cloud.datastore.key.Key`\n        :param value: The value to filter on.\n\n        :raises: :class:`ValueError` if ``operation`` is not one of the\n                 specified values, or if a filter names ``'__key__'`` but\n                 passes an invalid value (a key is required).\n        \"\"\"\n        if self.OPERATORS.get(operator) is None:\n            error_message = 'Invalid expression: \"%s\"' % (operator,)\n            choices_message = \"Please use one of: =, <, <=, >, >=.\"\n            raise ValueError(error_message, choices_message)\n\n        if property_name == \"__key__\" and not isinstance(value, Key):\n            raise ValueError('Invalid key: \"%s\"' % value)\n\n        self._filters.append((property_name, operator, value))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 32,
                "column": 11
              },
              "text": "\"\"\"Filter the query based on a property name, operator and a value.\n\n        Expressions take the form of::\n\n          .add_filter('<property>', '<operator>', <value>)\n\n        where property is a property stored on the entity in the datastore\n        and operator is one of ``OPERATORS``\n        (ie, ``=``, ``<``, ``<=``, ``>``, ``>=``)::\n\n          >>> from google.cloud import datastore\n          >>> client = datastore.Client()\n          >>> query = client.query(kind='Person')\n          >>> query.add_filter('name', '=', 'James')\n          >>> query.add_filter('age', '>', 50)\n\n        :type property_name: str\n        :param property_name: A property name.\n\n        :type operator: str\n        :param operator: One of ``=``, ``<``, ``<=``, ``>``, ``>=``.\n\n        :type value: :class:`int`, :class:`str`, :class:`bool`,\n                     :class:`float`, :class:`NoneType`,\n                     :class:`datetime.datetime`,\n                     :class:`google.cloud.datastore.key.Key`\n        :param value: The value to filter on.\n\n        :raises: :class:`ValueError` if ``operation`` is not one of the\n                 specified values, or if a filter names ``'__key__'`` but\n                 passes an invalid value (a key is required).\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 32,
                    "column": 11
                  },
                  "text": "\"\"\"Filter the query based on a property name, operator and a value.\n\n        Expressions take the form of::\n\n          .add_filter('<property>', '<operator>', <value>)\n\n        where property is a property stored on the entity in the datastore\n        and operator is one of ``OPERATORS``\n        (ie, ``=``, ``<``, ``<=``, ``>``, ``>=``)::\n\n          >>> from google.cloud import datastore\n          >>> client = datastore.Client()\n          >>> query = client.query(kind='Person')\n          >>> query.add_filter('name', '=', 'James')\n          >>> query.add_filter('age', '>', 50)\n\n        :type property_name: str\n        :param property_name: A property name.\n\n        :type operator: str\n        :param operator: One of ``=``, ``<``, ``<=``, ``>``, ``>=``.\n\n        :type value: :class:`int`, :class:`str`, :class:`bool`,\n                     :class:`float`, :class:`NoneType`,\n                     :class:`datetime.datetime`,\n                     :class:`google.cloud.datastore.key.Key`\n        :param value: The value to filter on.\n\n        :raises: :class:`ValueError` if ``operation`` is not one of the\n                 specified values, or if a filter names ``'__key__'`` but\n                 passes an invalid value (a key is required).\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 32,
                        "column": 8
                      },
                      "text": "Filter the query based on a property name, operator and a value.\n\n        Expressions take the form of::\n\n          .add_filter('<property>', '<operator>', <value>)\n\n        where property is a property stored on the entity in the datastore\n        and operator is one of ``OPERATORS``\n        (ie, ``=``, ``<``, ``<=``, ``>``, ``>=``)::\n\n          >>> from google.cloud import datastore\n          >>> client = datastore.Client()\n          >>> query = client.query(kind='Person')\n          >>> query.add_filter('name', '=', 'James')\n          >>> query.add_filter('age', '>', 50)\n\n        :type property_name: str\n        :param property_name: A property name.\n\n        :type operator: str\n        :param operator: One of ``=``, ``<``, ``<=``, ``>``, ``>=``.\n\n        :type value: :class:`int`, :class:`str`, :class:`bool`,\n                     :class:`float`, :class:`NoneType`,\n                     :class:`datetime.datetime`,\n                     :class:`google.cloud.datastore.key.Key`\n        :param value: The value to filter on.\n\n        :raises: :class:`ValueError` if ``operation`` is not one of the\n                 specified values, or if a filter names ``'__key__'`` but\n                 passes an invalid value (a key is required).\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 32,
                        "column": 8
                      },
                      "end": {
                        "row": 32,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 33,
                "column": 8
              },
              "end": {
                "row": 36,
                "column": 60
              },
              "text": "if self.OPERATORS.get(operator) is None:\n            error_message = 'Invalid expression: \"%s\"' % (operator,)\n            choices_message = \"Please use one of: =, <, <=, >, >=.\"\n            raise ValueError(error_message, choices_message)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 33,
                    "column": 8
                  },
                  "end": {
                    "row": 33,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 33,
                    "column": 11
                  },
                  "end": {
                    "row": 33,
                    "column": 47
                  },
                  "text": "self.OPERATORS.get(operator) is None",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 33,
                        "column": 11
                      },
                      "end": {
                        "row": 33,
                        "column": 39
                      },
                      "text": "self.OPERATORS.get(operator)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 33,
                            "column": 11
                          },
                          "end": {
                            "row": 33,
                            "column": 29
                          },
                          "text": "self.OPERATORS.get",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 33,
                                "column": 11
                              },
                              "end": {
                                "row": 33,
                                "column": 25
                              },
                              "text": "self.OPERATORS",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 33,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 15
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 33,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 16
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 33,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 25
                                  },
                                  "text": "OPERATORS"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 33,
                                "column": 25
                              },
                              "end": {
                                "row": 33,
                                "column": 26
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 26
                              },
                              "end": {
                                "row": 33,
                                "column": 29
                              },
                              "text": "get"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 33,
                            "column": 29
                          },
                          "end": {
                            "row": 33,
                            "column": 39
                          },
                          "text": "(operator)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 33,
                                "column": 29
                              },
                              "end": {
                                "row": 33,
                                "column": 30
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 30
                              },
                              "end": {
                                "row": 33,
                                "column": 38
                              },
                              "text": "operator"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 33,
                                "column": 38
                              },
                              "end": {
                                "row": 33,
                                "column": 39
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 33,
                        "column": 40
                      },
                      "end": {
                        "row": 33,
                        "column": 42
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 33,
                        "column": 43
                      },
                      "end": {
                        "row": 33,
                        "column": 47
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 33,
                    "column": 47
                  },
                  "end": {
                    "row": 33,
                    "column": 48
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 34,
                    "column": 12
                  },
                  "end": {
                    "row": 36,
                    "column": 60
                  },
                  "text": "error_message = 'Invalid expression: \"%s\"' % (operator,)\n            choices_message = \"Please use one of: =, <, <=, >, >=.\"\n            raise ValueError(error_message, choices_message)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 34,
                        "column": 12
                      },
                      "end": {
                        "row": 34,
                        "column": 68
                      },
                      "text": "error_message = 'Invalid expression: \"%s\"' % (operator,)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 34,
                            "column": 12
                          },
                          "end": {
                            "row": 34,
                            "column": 68
                          },
                          "text": "error_message = 'Invalid expression: \"%s\"' % (operator,)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 12
                              },
                              "end": {
                                "row": 34,
                                "column": 25
                              },
                              "text": "error_message"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 34,
                                "column": 26
                              },
                              "end": {
                                "row": 34,
                                "column": 27
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 34,
                                "column": 28
                              },
                              "end": {
                                "row": 34,
                                "column": 68
                              },
                              "text": "'Invalid expression: \"%s\"' % (operator,)",
                              "children": [
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 34,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 54
                                  },
                                  "text": "'Invalid expression: \"%s\"'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 34,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 29
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 34,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 53
                                      },
                                      "text": "Invalid expression: \"%s\""
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 34,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 54
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": "%",
                                  "start": {
                                    "row": 34,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 56
                                  },
                                  "text": "%"
                                },
                                {
                                  "type": "tuple",
                                  "start": {
                                    "row": 34,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 68
                                  },
                                  "text": "(operator,)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 34,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 58
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 34,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 66
                                      },
                                      "text": "operator"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 34,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 67
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 34,
                                        "column": 67
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 68
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 35,
                        "column": 12
                      },
                      "end": {
                        "row": 35,
                        "column": 67
                      },
                      "text": "choices_message = \"Please use one of: =, <, <=, >, >=.\"",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 35,
                            "column": 12
                          },
                          "end": {
                            "row": 35,
                            "column": 67
                          },
                          "text": "choices_message = \"Please use one of: =, <, <=, >, >=.\"",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 35,
                                "column": 12
                              },
                              "end": {
                                "row": 35,
                                "column": 27
                              },
                              "text": "choices_message"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 35,
                                "column": 28
                              },
                              "end": {
                                "row": 35,
                                "column": 29
                              },
                              "text": "="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 35,
                                "column": 30
                              },
                              "end": {
                                "row": 35,
                                "column": 67
                              },
                              "text": "\"Please use one of: =, <, <=, >, >=.\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 35,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 31
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 35,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 66
                                  },
                                  "text": "Please use one of: =, <, <=, >, >=."
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 35,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 67
                                  },
                                  "text": "\""
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 36,
                        "column": 12
                      },
                      "end": {
                        "row": 36,
                        "column": 60
                      },
                      "text": "raise ValueError(error_message, choices_message)",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 36,
                            "column": 12
                          },
                          "end": {
                            "row": 36,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 36,
                            "column": 18
                          },
                          "end": {
                            "row": 36,
                            "column": 60
                          },
                          "text": "ValueError(error_message, choices_message)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 18
                              },
                              "end": {
                                "row": 36,
                                "column": 28
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 36,
                                "column": 28
                              },
                              "end": {
                                "row": 36,
                                "column": 60
                              },
                              "text": "(error_message, choices_message)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 36,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 36,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 42
                                  },
                                  "text": "error_message"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 36,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 43
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 36,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 59
                                  },
                                  "text": "choices_message"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 36,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 60
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 38,
                "column": 8
              },
              "end": {
                "row": 39,
                "column": 57
              },
              "text": "if property_name == \"__key__\" and not isinstance(value, Key):\n            raise ValueError('Invalid key: \"%s\"' % value)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 38,
                    "column": 8
                  },
                  "end": {
                    "row": 38,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 38,
                    "column": 11
                  },
                  "end": {
                    "row": 38,
                    "column": 68
                  },
                  "text": "property_name == \"__key__\" and not isinstance(value, Key)",
                  "children": [
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 38,
                        "column": 11
                      },
                      "end": {
                        "row": 38,
                        "column": 37
                      },
                      "text": "property_name == \"__key__\"",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 38,
                            "column": 11
                          },
                          "end": {
                            "row": 38,
                            "column": 24
                          },
                          "text": "property_name"
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 38,
                            "column": 25
                          },
                          "end": {
                            "row": 38,
                            "column": 27
                          },
                          "text": "=="
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 38,
                            "column": 28
                          },
                          "end": {
                            "row": 38,
                            "column": 37
                          },
                          "text": "\"__key__\"",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 38,
                                "column": 28
                              },
                              "end": {
                                "row": 38,
                                "column": 29
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 38,
                                "column": 29
                              },
                              "end": {
                                "row": 38,
                                "column": 36
                              },
                              "text": "__key__"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 38,
                                "column": 36
                              },
                              "end": {
                                "row": 38,
                                "column": 37
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 38,
                        "column": 38
                      },
                      "end": {
                        "row": 38,
                        "column": 41
                      },
                      "text": "and"
                    },
                    {
                      "type": "not_operator",
                      "start": {
                        "row": 38,
                        "column": 42
                      },
                      "end": {
                        "row": 38,
                        "column": 68
                      },
                      "text": "not isinstance(value, Key)",
                      "children": [
                        {
                          "type": "not",
                          "start": {
                            "row": 38,
                            "column": 42
                          },
                          "end": {
                            "row": 38,
                            "column": 45
                          },
                          "text": "not"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 38,
                            "column": 46
                          },
                          "end": {
                            "row": 38,
                            "column": 68
                          },
                          "text": "isinstance(value, Key)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 46
                              },
                              "end": {
                                "row": 38,
                                "column": 56
                              },
                              "text": "isinstance"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 38,
                                "column": 56
                              },
                              "end": {
                                "row": 38,
                                "column": 68
                              },
                              "text": "(value, Key)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 38,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 57
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 62
                                  },
                                  "text": "value"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 38,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 63
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 67
                                  },
                                  "text": "Key"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 38,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 68
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 38,
                    "column": 68
                  },
                  "end": {
                    "row": 38,
                    "column": 69
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 39,
                    "column": 12
                  },
                  "end": {
                    "row": 39,
                    "column": 57
                  },
                  "text": "raise ValueError('Invalid key: \"%s\"' % value)",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 39,
                        "column": 12
                      },
                      "end": {
                        "row": 39,
                        "column": 57
                      },
                      "text": "raise ValueError('Invalid key: \"%s\"' % value)",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 39,
                            "column": 12
                          },
                          "end": {
                            "row": 39,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 39,
                            "column": 18
                          },
                          "end": {
                            "row": 39,
                            "column": 57
                          },
                          "text": "ValueError('Invalid key: \"%s\"' % value)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 18
                              },
                              "end": {
                                "row": 39,
                                "column": 28
                              },
                              "text": "ValueError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 39,
                                "column": 28
                              },
                              "end": {
                                "row": 39,
                                "column": 57
                              },
                              "text": "('Invalid key: \"%s\"' % value)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 39,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 29
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 39,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 56
                                  },
                                  "text": "'Invalid key: \"%s\"' % value",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 39,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 48
                                      },
                                      "text": "'Invalid key: \"%s\"'",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 39,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 30
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 39,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 47
                                          },
                                          "text": "Invalid key: \"%s\""
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 39,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 48
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "%",
                                      "start": {
                                        "row": 39,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 50
                                      },
                                      "text": "%"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 39,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 56
                                      },
                                      "text": "value"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 39,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 57
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 41,
                "column": 8
              },
              "end": {
                "row": 41,
                "column": 62
              },
              "text": "self._filters.append((property_name, operator, value))",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 41,
                    "column": 8
                  },
                  "end": {
                    "row": 41,
                    "column": 62
                  },
                  "text": "self._filters.append((property_name, operator, value))",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 41,
                        "column": 8
                      },
                      "end": {
                        "row": 41,
                        "column": 28
                      },
                      "text": "self._filters.append",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 41,
                            "column": 8
                          },
                          "end": {
                            "row": 41,
                            "column": 21
                          },
                          "text": "self._filters",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 8
                              },
                              "end": {
                                "row": 41,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 41,
                                "column": 12
                              },
                              "end": {
                                "row": 41,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 13
                              },
                              "end": {
                                "row": 41,
                                "column": 21
                              },
                              "text": "_filters"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 41,
                            "column": 21
                          },
                          "end": {
                            "row": 41,
                            "column": 22
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 41,
                            "column": 22
                          },
                          "end": {
                            "row": 41,
                            "column": 28
                          },
                          "text": "append"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 41,
                        "column": 28
                      },
                      "end": {
                        "row": 41,
                        "column": 62
                      },
                      "text": "((property_name, operator, value))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 41,
                            "column": 28
                          },
                          "end": {
                            "row": 41,
                            "column": 29
                          },
                          "text": "("
                        },
                        {
                          "type": "tuple",
                          "start": {
                            "row": 41,
                            "column": 29
                          },
                          "end": {
                            "row": 41,
                            "column": 61
                          },
                          "text": "(property_name, operator, value)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 41,
                                "column": 29
                              },
                              "end": {
                                "row": 41,
                                "column": 30
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 30
                              },
                              "end": {
                                "row": 41,
                                "column": 43
                              },
                              "text": "property_name"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 41,
                                "column": 43
                              },
                              "end": {
                                "row": 41,
                                "column": 44
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 45
                              },
                              "end": {
                                "row": 41,
                                "column": 53
                              },
                              "text": "operator"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 41,
                                "column": 53
                              },
                              "end": {
                                "row": 41,
                                "column": 54
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 55
                              },
                              "end": {
                                "row": 41,
                                "column": 60
                              },
                              "text": "value"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 41,
                                "column": 60
                              },
                              "end": {
                                "row": 41,
                                "column": 61
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 41,
                            "column": 61
                          },
                          "end": {
                            "row": 41,
                            "column": 62
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}