{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 27,
    "column": 52
  },
  "text": "def Parse(text,\n          message,\n          allow_unknown_extension=False,\n          allow_field_number=False,\n          descriptor_pool=None):\n  \"\"\"Parses a text representation of a protocol message into a message.\n\n  Args:\n    text: Message text representation.\n    message: A protocol buffer message to merge into.\n    allow_unknown_extension: if True, skip over missing extensions and keep\n      parsing\n    allow_field_number: if True, both field number and field name are allowed.\n    descriptor_pool: A DescriptorPool used to resolve Any types.\n\n  Returns:\n    The same message passed as argument.\n\n  Raises:\n    ParseError: On text parsing problems.\n  \"\"\"\n  if not isinstance(text, str):\n    text = text.decode('utf-8')\n  return ParseLines(text.split('\\n'),\n                    message,\n                    allow_unknown_extension,\n                    allow_field_number,\n                    descriptor_pool=descriptor_pool)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 27,
        "column": 52
      },
      "text": "def Parse(text,\n          message,\n          allow_unknown_extension=False,\n          allow_field_number=False,\n          descriptor_pool=None):\n  \"\"\"Parses a text representation of a protocol message into a message.\n\n  Args:\n    text: Message text representation.\n    message: A protocol buffer message to merge into.\n    allow_unknown_extension: if True, skip over missing extensions and keep\n      parsing\n    allow_field_number: if True, both field number and field name are allowed.\n    descriptor_pool: A DescriptorPool used to resolve Any types.\n\n  Returns:\n    The same message passed as argument.\n\n  Raises:\n    ParseError: On text parsing problems.\n  \"\"\"\n  if not isinstance(text, str):\n    text = text.decode('utf-8')\n  return ParseLines(text.split('\\n'),\n                    message,\n                    allow_unknown_extension,\n                    allow_field_number,\n                    descriptor_pool=descriptor_pool)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 9
          },
          "text": "Parse"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 4,
            "column": 31
          },
          "text": "(text,\n          message,\n          allow_unknown_extension=False,\n          allow_field_number=False,\n          descriptor_pool=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 10
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "text"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 10
              },
              "end": {
                "row": 1,
                "column": 17
              },
              "text": "message"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 17
              },
              "end": {
                "row": 1,
                "column": 18
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 10
              },
              "end": {
                "row": 2,
                "column": 39
              },
              "text": "allow_unknown_extension=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 10
                  },
                  "end": {
                    "row": 2,
                    "column": 33
                  },
                  "text": "allow_unknown_extension"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 33
                  },
                  "end": {
                    "row": 2,
                    "column": 34
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 2,
                    "column": 34
                  },
                  "end": {
                    "row": 2,
                    "column": 39
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 39
              },
              "end": {
                "row": 2,
                "column": 40
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 10
              },
              "end": {
                "row": 3,
                "column": 34
              },
              "text": "allow_field_number=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 10
                  },
                  "end": {
                    "row": 3,
                    "column": 28
                  },
                  "text": "allow_field_number"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 28
                  },
                  "end": {
                    "row": 3,
                    "column": 29
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 3,
                    "column": 29
                  },
                  "end": {
                    "row": 3,
                    "column": 34
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 34
              },
              "end": {
                "row": 3,
                "column": 35
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 4,
                "column": 10
              },
              "end": {
                "row": 4,
                "column": 30
              },
              "text": "descriptor_pool=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 10
                  },
                  "end": {
                    "row": 4,
                    "column": 25
                  },
                  "text": "descriptor_pool"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 25
                  },
                  "end": {
                    "row": 4,
                    "column": 26
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 4,
                    "column": 26
                  },
                  "end": {
                    "row": 4,
                    "column": 30
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 4,
                "column": 30
              },
              "end": {
                "row": 4,
                "column": 31
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 4,
            "column": 31
          },
          "end": {
            "row": 4,
            "column": 32
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 5,
            "column": 2
          },
          "end": {
            "row": 27,
            "column": 52
          },
          "text": "\"\"\"Parses a text representation of a protocol message into a message.\n\n  Args:\n    text: Message text representation.\n    message: A protocol buffer message to merge into.\n    allow_unknown_extension: if True, skip over missing extensions and keep\n      parsing\n    allow_field_number: if True, both field number and field name are allowed.\n    descriptor_pool: A DescriptorPool used to resolve Any types.\n\n  Returns:\n    The same message passed as argument.\n\n  Raises:\n    ParseError: On text parsing problems.\n  \"\"\"\n  if not isinstance(text, str):\n    text = text.decode('utf-8')\n  return ParseLines(text.split('\\n'),\n                    message,\n                    allow_unknown_extension,\n                    allow_field_number,\n                    descriptor_pool=descriptor_pool)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 5,
                "column": 2
              },
              "end": {
                "row": 20,
                "column": 5
              },
              "text": "\"\"\"Parses a text representation of a protocol message into a message.\n\n  Args:\n    text: Message text representation.\n    message: A protocol buffer message to merge into.\n    allow_unknown_extension: if True, skip over missing extensions and keep\n      parsing\n    allow_field_number: if True, both field number and field name are allowed.\n    descriptor_pool: A DescriptorPool used to resolve Any types.\n\n  Returns:\n    The same message passed as argument.\n\n  Raises:\n    ParseError: On text parsing problems.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 5,
                    "column": 2
                  },
                  "end": {
                    "row": 20,
                    "column": 5
                  },
                  "text": "\"\"\"Parses a text representation of a protocol message into a message.\n\n  Args:\n    text: Message text representation.\n    message: A protocol buffer message to merge into.\n    allow_unknown_extension: if True, skip over missing extensions and keep\n      parsing\n    allow_field_number: if True, both field number and field name are allowed.\n    descriptor_pool: A DescriptorPool used to resolve Any types.\n\n  Returns:\n    The same message passed as argument.\n\n  Raises:\n    ParseError: On text parsing problems.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 5,
                        "column": 2
                      },
                      "end": {
                        "row": 5,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 5,
                        "column": 5
                      },
                      "end": {
                        "row": 20,
                        "column": 2
                      },
                      "text": "Parses a text representation of a protocol message into a message.\n\n  Args:\n    text: Message text representation.\n    message: A protocol buffer message to merge into.\n    allow_unknown_extension: if True, skip over missing extensions and keep\n      parsing\n    allow_field_number: if True, both field number and field name are allowed.\n    descriptor_pool: A DescriptorPool used to resolve Any types.\n\n  Returns:\n    The same message passed as argument.\n\n  Raises:\n    ParseError: On text parsing problems.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 20,
                        "column": 2
                      },
                      "end": {
                        "row": 20,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 21,
                "column": 2
              },
              "end": {
                "row": 22,
                "column": 31
              },
              "text": "if not isinstance(text, str):\n    text = text.decode('utf-8')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 21,
                    "column": 2
                  },
                  "end": {
                    "row": 21,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 21,
                    "column": 5
                  },
                  "end": {
                    "row": 21,
                    "column": 30
                  },
                  "text": "not isinstance(text, str)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 21,
                        "column": 5
                      },
                      "end": {
                        "row": 21,
                        "column": 8
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 21,
                        "column": 9
                      },
                      "end": {
                        "row": 21,
                        "column": 30
                      },
                      "text": "isinstance(text, str)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 9
                          },
                          "end": {
                            "row": 21,
                            "column": 19
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 21,
                            "column": 19
                          },
                          "end": {
                            "row": 21,
                            "column": 30
                          },
                          "text": "(text, str)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 21,
                                "column": 19
                              },
                              "end": {
                                "row": 21,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 20
                              },
                              "end": {
                                "row": 21,
                                "column": 24
                              },
                              "text": "text"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 21,
                                "column": 24
                              },
                              "end": {
                                "row": 21,
                                "column": 25
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 26
                              },
                              "end": {
                                "row": 21,
                                "column": 29
                              },
                              "text": "str"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 21,
                                "column": 29
                              },
                              "end": {
                                "row": 21,
                                "column": 30
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 21,
                    "column": 30
                  },
                  "end": {
                    "row": 21,
                    "column": 31
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 31
                  },
                  "text": "text = text.decode('utf-8')",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 31
                      },
                      "text": "text = text.decode('utf-8')",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 22,
                            "column": 4
                          },
                          "end": {
                            "row": 22,
                            "column": 31
                          },
                          "text": "text = text.decode('utf-8')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 4
                              },
                              "end": {
                                "row": 22,
                                "column": 8
                              },
                              "text": "text"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 22,
                                "column": 9
                              },
                              "end": {
                                "row": 22,
                                "column": 10
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 22,
                                "column": 11
                              },
                              "end": {
                                "row": 22,
                                "column": 31
                              },
                              "text": "text.decode('utf-8')",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 22,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 22
                                  },
                                  "text": "text.decode",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 15
                                      },
                                      "text": "text"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 22,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 16
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 22
                                      },
                                      "text": "decode"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 22,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 31
                                  },
                                  "text": "('utf-8')",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 22,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 23
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 22,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 30
                                      },
                                      "text": "'utf-8'",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 22,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 24
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 22,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 29
                                          },
                                          "text": "utf-8"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 22,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 30
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 22,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 31
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 23,
                "column": 2
              },
              "end": {
                "row": 27,
                "column": 52
              },
              "text": "return ParseLines(text.split('\\n'),\n                    message,\n                    allow_unknown_extension,\n                    allow_field_number,\n                    descriptor_pool=descriptor_pool)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 23,
                    "column": 2
                  },
                  "end": {
                    "row": 23,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 23,
                    "column": 9
                  },
                  "end": {
                    "row": 27,
                    "column": 52
                  },
                  "text": "ParseLines(text.split('\\n'),\n                    message,\n                    allow_unknown_extension,\n                    allow_field_number,\n                    descriptor_pool=descriptor_pool)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 9
                      },
                      "end": {
                        "row": 23,
                        "column": 19
                      },
                      "text": "ParseLines"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 23,
                        "column": 19
                      },
                      "end": {
                        "row": 27,
                        "column": 52
                      },
                      "text": "(text.split('\\n'),\n                    message,\n                    allow_unknown_extension,\n                    allow_field_number,\n                    descriptor_pool=descriptor_pool)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 23,
                            "column": 19
                          },
                          "end": {
                            "row": 23,
                            "column": 20
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 23,
                            "column": 20
                          },
                          "end": {
                            "row": 23,
                            "column": 36
                          },
                          "text": "text.split('\\n')",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 23,
                                "column": 20
                              },
                              "end": {
                                "row": 23,
                                "column": 30
                              },
                              "text": "text.split",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 24
                                  },
                                  "text": "text"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 23,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 30
                                  },
                                  "text": "split"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 23,
                                "column": 30
                              },
                              "end": {
                                "row": 23,
                                "column": 36
                              },
                              "text": "('\\n')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 23,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 23,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 35
                                  },
                                  "text": "'\\n'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 23,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 32
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 23,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 34
                                      },
                                      "text": "\\n",
                                      "children": [
                                        {
                                          "type": "escape_sequence",
                                          "start": {
                                            "row": 23,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 34
                                          },
                                          "text": "\\n"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 23,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 35
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 23,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 36
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 23,
                            "column": 36
                          },
                          "end": {
                            "row": 23,
                            "column": 37
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 24,
                            "column": 20
                          },
                          "end": {
                            "row": 24,
                            "column": 27
                          },
                          "text": "message"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 24,
                            "column": 27
                          },
                          "end": {
                            "row": 24,
                            "column": 28
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 25,
                            "column": 20
                          },
                          "end": {
                            "row": 25,
                            "column": 43
                          },
                          "text": "allow_unknown_extension"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 25,
                            "column": 43
                          },
                          "end": {
                            "row": 25,
                            "column": 44
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 26,
                            "column": 20
                          },
                          "end": {
                            "row": 26,
                            "column": 38
                          },
                          "text": "allow_field_number"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 26,
                            "column": 38
                          },
                          "end": {
                            "row": 26,
                            "column": 39
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 27,
                            "column": 20
                          },
                          "end": {
                            "row": 27,
                            "column": 51
                          },
                          "text": "descriptor_pool=descriptor_pool",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 20
                              },
                              "end": {
                                "row": 27,
                                "column": 35
                              },
                              "text": "descriptor_pool"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 27,
                                "column": 35
                              },
                              "end": {
                                "row": 27,
                                "column": 36
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 36
                              },
                              "end": {
                                "row": 27,
                                "column": 51
                              },
                              "text": "descriptor_pool"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 27,
                            "column": 51
                          },
                          "end": {
                            "row": 27,
                            "column": 52
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}