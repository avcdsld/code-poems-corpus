{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 41,
    "column": 17
  },
  "text": "def targeted_dropout(inputs,\n                     k,\n                     keep_prob,\n                     targeting_fn,\n                     is_training,\n                     do_prune=False):\n  \"\"\"Applies targeted dropout.\n\n  Applies dropout at a rate of `1 - keep_prob` to only those elements of\n  `inputs` marked by `targeting_fn`. See below and paper for more detail:\n\n  \"Targeted Dropout for Posthoc Pruning\" Aidan N. Gomez, Ivan Zhang,\n    Kevin Swersky, Yarin Gal, and Geoffrey E. Hinton.\n\n  Args:\n    inputs: Tensor, inputs to apply targeted dropout to.\n    k: Scalar Tensor or python scalar, sets the number of elements to target in\n      `inputs`. Must be within `[0, tf.shape(x)[-1]]` and compatible with\n      second argument of `targeting_fn`.\n    keep_prob: Scalar Tensor, passed as `tf.nn.dropout`'s `keep_prob` argument.\n    targeting_fn: callable `fn(inputs, k) -> Boolean Tensor`, produces a\n      boolean mask the same shape as `inputs` where True indicates an element\n      will be dropped, and False not.\n    is_training: bool, indicates whether currently training.\n    do_prune: bool, indicates whether to prune the `k * (1 - keep_prob)`\n      elements of `inputs` expected to be dropped each forwards pass.\n\n  Returns:\n    Tensor, same shape and dtype as `inputs`.\n  \"\"\"\n  if not is_training and do_prune:\n    k = tf.round(to_float(k) * to_float(1. - keep_prob))\n\n  mask = targeting_fn(inputs, k)\n  mask = tf.cast(mask, inputs.dtype)\n\n  if is_training:\n    return inputs * (1 - mask) + tf.nn.dropout(inputs, keep_prob) * mask\n  elif do_prune:\n    return inputs * (1 - mask)\n  else:\n    return inputs",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 41,
        "column": 17
      },
      "text": "def targeted_dropout(inputs,\n                     k,\n                     keep_prob,\n                     targeting_fn,\n                     is_training,\n                     do_prune=False):\n  \"\"\"Applies targeted dropout.\n\n  Applies dropout at a rate of `1 - keep_prob` to only those elements of\n  `inputs` marked by `targeting_fn`. See below and paper for more detail:\n\n  \"Targeted Dropout for Posthoc Pruning\" Aidan N. Gomez, Ivan Zhang,\n    Kevin Swersky, Yarin Gal, and Geoffrey E. Hinton.\n\n  Args:\n    inputs: Tensor, inputs to apply targeted dropout to.\n    k: Scalar Tensor or python scalar, sets the number of elements to target in\n      `inputs`. Must be within `[0, tf.shape(x)[-1]]` and compatible with\n      second argument of `targeting_fn`.\n    keep_prob: Scalar Tensor, passed as `tf.nn.dropout`'s `keep_prob` argument.\n    targeting_fn: callable `fn(inputs, k) -> Boolean Tensor`, produces a\n      boolean mask the same shape as `inputs` where True indicates an element\n      will be dropped, and False not.\n    is_training: bool, indicates whether currently training.\n    do_prune: bool, indicates whether to prune the `k * (1 - keep_prob)`\n      elements of `inputs` expected to be dropped each forwards pass.\n\n  Returns:\n    Tensor, same shape and dtype as `inputs`.\n  \"\"\"\n  if not is_training and do_prune:\n    k = tf.round(to_float(k) * to_float(1. - keep_prob))\n\n  mask = targeting_fn(inputs, k)\n  mask = tf.cast(mask, inputs.dtype)\n\n  if is_training:\n    return inputs * (1 - mask) + tf.nn.dropout(inputs, keep_prob) * mask\n  elif do_prune:\n    return inputs * (1 - mask)\n  else:\n    return inputs",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "targeted_dropout"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 5,
            "column": 36
          },
          "text": "(inputs,\n                     k,\n                     keep_prob,\n                     targeting_fn,\n                     is_training,\n                     do_prune=False)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "inputs"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 21
              },
              "end": {
                "row": 1,
                "column": 22
              },
              "text": "k"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 22
              },
              "end": {
                "row": 1,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 2,
                "column": 21
              },
              "end": {
                "row": 2,
                "column": 30
              },
              "text": "keep_prob"
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 30
              },
              "end": {
                "row": 2,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 3,
                "column": 21
              },
              "end": {
                "row": 3,
                "column": 33
              },
              "text": "targeting_fn"
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 33
              },
              "end": {
                "row": 3,
                "column": 34
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 4,
                "column": 21
              },
              "end": {
                "row": 4,
                "column": 32
              },
              "text": "is_training"
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 32
              },
              "end": {
                "row": 4,
                "column": 33
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 5,
                "column": 21
              },
              "end": {
                "row": 5,
                "column": 35
              },
              "text": "do_prune=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 21
                  },
                  "end": {
                    "row": 5,
                    "column": 29
                  },
                  "text": "do_prune"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 29
                  },
                  "end": {
                    "row": 5,
                    "column": 30
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 5,
                    "column": 30
                  },
                  "end": {
                    "row": 5,
                    "column": 35
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 5,
                "column": 35
              },
              "end": {
                "row": 5,
                "column": 36
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 5,
            "column": 36
          },
          "end": {
            "row": 5,
            "column": 37
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 6,
            "column": 2
          },
          "end": {
            "row": 41,
            "column": 17
          },
          "text": "\"\"\"Applies targeted dropout.\n\n  Applies dropout at a rate of `1 - keep_prob` to only those elements of\n  `inputs` marked by `targeting_fn`. See below and paper for more detail:\n\n  \"Targeted Dropout for Posthoc Pruning\" Aidan N. Gomez, Ivan Zhang,\n    Kevin Swersky, Yarin Gal, and Geoffrey E. Hinton.\n\n  Args:\n    inputs: Tensor, inputs to apply targeted dropout to.\n    k: Scalar Tensor or python scalar, sets the number of elements to target in\n      `inputs`. Must be within `[0, tf.shape(x)[-1]]` and compatible with\n      second argument of `targeting_fn`.\n    keep_prob: Scalar Tensor, passed as `tf.nn.dropout`'s `keep_prob` argument.\n    targeting_fn: callable `fn(inputs, k) -> Boolean Tensor`, produces a\n      boolean mask the same shape as `inputs` where True indicates an element\n      will be dropped, and False not.\n    is_training: bool, indicates whether currently training.\n    do_prune: bool, indicates whether to prune the `k * (1 - keep_prob)`\n      elements of `inputs` expected to be dropped each forwards pass.\n\n  Returns:\n    Tensor, same shape and dtype as `inputs`.\n  \"\"\"\n  if not is_training and do_prune:\n    k = tf.round(to_float(k) * to_float(1. - keep_prob))\n\n  mask = targeting_fn(inputs, k)\n  mask = tf.cast(mask, inputs.dtype)\n\n  if is_training:\n    return inputs * (1 - mask) + tf.nn.dropout(inputs, keep_prob) * mask\n  elif do_prune:\n    return inputs * (1 - mask)\n  else:\n    return inputs",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 6,
                "column": 2
              },
              "end": {
                "row": 29,
                "column": 5
              },
              "text": "\"\"\"Applies targeted dropout.\n\n  Applies dropout at a rate of `1 - keep_prob` to only those elements of\n  `inputs` marked by `targeting_fn`. See below and paper for more detail:\n\n  \"Targeted Dropout for Posthoc Pruning\" Aidan N. Gomez, Ivan Zhang,\n    Kevin Swersky, Yarin Gal, and Geoffrey E. Hinton.\n\n  Args:\n    inputs: Tensor, inputs to apply targeted dropout to.\n    k: Scalar Tensor or python scalar, sets the number of elements to target in\n      `inputs`. Must be within `[0, tf.shape(x)[-1]]` and compatible with\n      second argument of `targeting_fn`.\n    keep_prob: Scalar Tensor, passed as `tf.nn.dropout`'s `keep_prob` argument.\n    targeting_fn: callable `fn(inputs, k) -> Boolean Tensor`, produces a\n      boolean mask the same shape as `inputs` where True indicates an element\n      will be dropped, and False not.\n    is_training: bool, indicates whether currently training.\n    do_prune: bool, indicates whether to prune the `k * (1 - keep_prob)`\n      elements of `inputs` expected to be dropped each forwards pass.\n\n  Returns:\n    Tensor, same shape and dtype as `inputs`.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 6,
                    "column": 2
                  },
                  "end": {
                    "row": 29,
                    "column": 5
                  },
                  "text": "\"\"\"Applies targeted dropout.\n\n  Applies dropout at a rate of `1 - keep_prob` to only those elements of\n  `inputs` marked by `targeting_fn`. See below and paper for more detail:\n\n  \"Targeted Dropout for Posthoc Pruning\" Aidan N. Gomez, Ivan Zhang,\n    Kevin Swersky, Yarin Gal, and Geoffrey E. Hinton.\n\n  Args:\n    inputs: Tensor, inputs to apply targeted dropout to.\n    k: Scalar Tensor or python scalar, sets the number of elements to target in\n      `inputs`. Must be within `[0, tf.shape(x)[-1]]` and compatible with\n      second argument of `targeting_fn`.\n    keep_prob: Scalar Tensor, passed as `tf.nn.dropout`'s `keep_prob` argument.\n    targeting_fn: callable `fn(inputs, k) -> Boolean Tensor`, produces a\n      boolean mask the same shape as `inputs` where True indicates an element\n      will be dropped, and False not.\n    is_training: bool, indicates whether currently training.\n    do_prune: bool, indicates whether to prune the `k * (1 - keep_prob)`\n      elements of `inputs` expected to be dropped each forwards pass.\n\n  Returns:\n    Tensor, same shape and dtype as `inputs`.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 6,
                        "column": 2
                      },
                      "end": {
                        "row": 6,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 6,
                        "column": 5
                      },
                      "end": {
                        "row": 29,
                        "column": 2
                      },
                      "text": "Applies targeted dropout.\n\n  Applies dropout at a rate of `1 - keep_prob` to only those elements of\n  `inputs` marked by `targeting_fn`. See below and paper for more detail:\n\n  \"Targeted Dropout for Posthoc Pruning\" Aidan N. Gomez, Ivan Zhang,\n    Kevin Swersky, Yarin Gal, and Geoffrey E. Hinton.\n\n  Args:\n    inputs: Tensor, inputs to apply targeted dropout to.\n    k: Scalar Tensor or python scalar, sets the number of elements to target in\n      `inputs`. Must be within `[0, tf.shape(x)[-1]]` and compatible with\n      second argument of `targeting_fn`.\n    keep_prob: Scalar Tensor, passed as `tf.nn.dropout`'s `keep_prob` argument.\n    targeting_fn: callable `fn(inputs, k) -> Boolean Tensor`, produces a\n      boolean mask the same shape as `inputs` where True indicates an element\n      will be dropped, and False not.\n    is_training: bool, indicates whether currently training.\n    do_prune: bool, indicates whether to prune the `k * (1 - keep_prob)`\n      elements of `inputs` expected to be dropped each forwards pass.\n\n  Returns:\n    Tensor, same shape and dtype as `inputs`.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 29,
                        "column": 2
                      },
                      "end": {
                        "row": 29,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 30,
                "column": 2
              },
              "end": {
                "row": 31,
                "column": 56
              },
              "text": "if not is_training and do_prune:\n    k = tf.round(to_float(k) * to_float(1. - keep_prob))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 30,
                    "column": 2
                  },
                  "end": {
                    "row": 30,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 30,
                    "column": 5
                  },
                  "end": {
                    "row": 30,
                    "column": 33
                  },
                  "text": "not is_training and do_prune",
                  "children": [
                    {
                      "type": "not_operator",
                      "start": {
                        "row": 30,
                        "column": 5
                      },
                      "end": {
                        "row": 30,
                        "column": 20
                      },
                      "text": "not is_training",
                      "children": [
                        {
                          "type": "not",
                          "start": {
                            "row": 30,
                            "column": 5
                          },
                          "end": {
                            "row": 30,
                            "column": 8
                          },
                          "text": "not"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 30,
                            "column": 9
                          },
                          "end": {
                            "row": 30,
                            "column": 20
                          },
                          "text": "is_training"
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 30,
                        "column": 21
                      },
                      "end": {
                        "row": 30,
                        "column": 24
                      },
                      "text": "and"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 25
                      },
                      "end": {
                        "row": 30,
                        "column": 33
                      },
                      "text": "do_prune"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 30,
                    "column": 33
                  },
                  "end": {
                    "row": 30,
                    "column": 34
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 31,
                    "column": 4
                  },
                  "end": {
                    "row": 31,
                    "column": 56
                  },
                  "text": "k = tf.round(to_float(k) * to_float(1. - keep_prob))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 31,
                        "column": 4
                      },
                      "end": {
                        "row": 31,
                        "column": 56
                      },
                      "text": "k = tf.round(to_float(k) * to_float(1. - keep_prob))",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 31,
                            "column": 4
                          },
                          "end": {
                            "row": 31,
                            "column": 56
                          },
                          "text": "k = tf.round(to_float(k) * to_float(1. - keep_prob))",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 4
                              },
                              "end": {
                                "row": 31,
                                "column": 5
                              },
                              "text": "k"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 31,
                                "column": 6
                              },
                              "end": {
                                "row": 31,
                                "column": 7
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 31,
                                "column": 8
                              },
                              "end": {
                                "row": 31,
                                "column": 56
                              },
                              "text": "tf.round(to_float(k) * to_float(1. - keep_prob))",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 31,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 16
                                  },
                                  "text": "tf.round",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 31,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 10
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 31,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 11
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 31,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 16
                                      },
                                      "text": "round"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 31,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 56
                                  },
                                  "text": "(to_float(k) * to_float(1. - keep_prob))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 31,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 17
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 31,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 55
                                      },
                                      "text": "to_float(k) * to_float(1. - keep_prob)",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 31,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 28
                                          },
                                          "text": "to_float(k)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 31,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 25
                                              },
                                              "text": "to_float"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 31,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 28
                                              },
                                              "text": "(k)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 26
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 27
                                                  },
                                                  "text": "k"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 28
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "*",
                                          "start": {
                                            "row": 31,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 30
                                          },
                                          "text": "*"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 31,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 55
                                          },
                                          "text": "to_float(1. - keep_prob)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 31,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 39
                                              },
                                              "text": "to_float"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 31,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 55
                                              },
                                              "text": "(1. - keep_prob)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 40
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "binary_operator",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 54
                                                  },
                                                  "text": "1. - keep_prob",
                                                  "children": [
                                                    {
                                                      "type": "float",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 42
                                                      },
                                                      "text": "1."
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 44
                                                      },
                                                      "text": "-"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 54
                                                      },
                                                      "text": "keep_prob"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 55
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 31,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 56
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 33,
                "column": 2
              },
              "end": {
                "row": 33,
                "column": 32
              },
              "text": "mask = targeting_fn(inputs, k)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 33,
                    "column": 2
                  },
                  "end": {
                    "row": 33,
                    "column": 32
                  },
                  "text": "mask = targeting_fn(inputs, k)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 33,
                        "column": 2
                      },
                      "end": {
                        "row": 33,
                        "column": 6
                      },
                      "text": "mask"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 33,
                        "column": 7
                      },
                      "end": {
                        "row": 33,
                        "column": 8
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 33,
                        "column": 9
                      },
                      "end": {
                        "row": 33,
                        "column": 32
                      },
                      "text": "targeting_fn(inputs, k)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 33,
                            "column": 9
                          },
                          "end": {
                            "row": 33,
                            "column": 21
                          },
                          "text": "targeting_fn"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 33,
                            "column": 21
                          },
                          "end": {
                            "row": 33,
                            "column": 32
                          },
                          "text": "(inputs, k)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 33,
                                "column": 21
                              },
                              "end": {
                                "row": 33,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 22
                              },
                              "end": {
                                "row": 33,
                                "column": 28
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 33,
                                "column": 28
                              },
                              "end": {
                                "row": 33,
                                "column": 29
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 30
                              },
                              "end": {
                                "row": 33,
                                "column": 31
                              },
                              "text": "k"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 33,
                                "column": 31
                              },
                              "end": {
                                "row": 33,
                                "column": 32
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 34,
                "column": 2
              },
              "end": {
                "row": 34,
                "column": 36
              },
              "text": "mask = tf.cast(mask, inputs.dtype)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 34,
                    "column": 2
                  },
                  "end": {
                    "row": 34,
                    "column": 36
                  },
                  "text": "mask = tf.cast(mask, inputs.dtype)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 34,
                        "column": 2
                      },
                      "end": {
                        "row": 34,
                        "column": 6
                      },
                      "text": "mask"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 34,
                        "column": 7
                      },
                      "end": {
                        "row": 34,
                        "column": 8
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 34,
                        "column": 9
                      },
                      "end": {
                        "row": 34,
                        "column": 36
                      },
                      "text": "tf.cast(mask, inputs.dtype)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 34,
                            "column": 9
                          },
                          "end": {
                            "row": 34,
                            "column": 16
                          },
                          "text": "tf.cast",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 9
                              },
                              "end": {
                                "row": 34,
                                "column": 11
                              },
                              "text": "tf"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 34,
                                "column": 11
                              },
                              "end": {
                                "row": 34,
                                "column": 12
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 12
                              },
                              "end": {
                                "row": 34,
                                "column": 16
                              },
                              "text": "cast"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 34,
                            "column": 16
                          },
                          "end": {
                            "row": 34,
                            "column": 36
                          },
                          "text": "(mask, inputs.dtype)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 34,
                                "column": 16
                              },
                              "end": {
                                "row": 34,
                                "column": 17
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 17
                              },
                              "end": {
                                "row": 34,
                                "column": 21
                              },
                              "text": "mask"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 34,
                                "column": 21
                              },
                              "end": {
                                "row": 34,
                                "column": 22
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 34,
                                "column": 23
                              },
                              "end": {
                                "row": 34,
                                "column": 35
                              },
                              "text": "inputs.dtype",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 34,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 29
                                  },
                                  "text": "inputs"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 34,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 30
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 34,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 35
                                  },
                                  "text": "dtype"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 34,
                                "column": 35
                              },
                              "end": {
                                "row": 34,
                                "column": 36
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 36,
                "column": 2
              },
              "end": {
                "row": 41,
                "column": 17
              },
              "text": "if is_training:\n    return inputs * (1 - mask) + tf.nn.dropout(inputs, keep_prob) * mask\n  elif do_prune:\n    return inputs * (1 - mask)\n  else:\n    return inputs",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 36,
                    "column": 2
                  },
                  "end": {
                    "row": 36,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 36,
                    "column": 5
                  },
                  "end": {
                    "row": 36,
                    "column": 16
                  },
                  "text": "is_training"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 36,
                    "column": 16
                  },
                  "end": {
                    "row": 36,
                    "column": 17
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 37,
                    "column": 4
                  },
                  "end": {
                    "row": 37,
                    "column": 72
                  },
                  "text": "return inputs * (1 - mask) + tf.nn.dropout(inputs, keep_prob) * mask",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 37,
                        "column": 4
                      },
                      "end": {
                        "row": 37,
                        "column": 72
                      },
                      "text": "return inputs * (1 - mask) + tf.nn.dropout(inputs, keep_prob) * mask",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 37,
                            "column": 4
                          },
                          "end": {
                            "row": 37,
                            "column": 10
                          },
                          "text": "return"
                        },
                        {
                          "type": "binary_operator",
                          "start": {
                            "row": 37,
                            "column": 11
                          },
                          "end": {
                            "row": 37,
                            "column": 72
                          },
                          "text": "inputs * (1 - mask) + tf.nn.dropout(inputs, keep_prob) * mask",
                          "children": [
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 37,
                                "column": 11
                              },
                              "end": {
                                "row": 37,
                                "column": 30
                              },
                              "text": "inputs * (1 - mask)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 17
                                  },
                                  "text": "inputs"
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 37,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 19
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start": {
                                    "row": 37,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 30
                                  },
                                  "text": "(1 - mask)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 37,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 21
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 37,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 29
                                      },
                                      "text": "1 - mask",
                                      "children": [
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 37,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 22
                                          },
                                          "text": "1"
                                        },
                                        {
                                          "type": "-",
                                          "start": {
                                            "row": 37,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 24
                                          },
                                          "text": "-"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 37,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 29
                                          },
                                          "text": "mask"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 37,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 30
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start": {
                                "row": 37,
                                "column": 31
                              },
                              "end": {
                                "row": 37,
                                "column": 32
                              },
                              "text": "+"
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 37,
                                "column": 33
                              },
                              "end": {
                                "row": 37,
                                "column": 72
                              },
                              "text": "tf.nn.dropout(inputs, keep_prob) * mask",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 37,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 65
                                  },
                                  "text": "tf.nn.dropout(inputs, keep_prob)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 37,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 46
                                      },
                                      "text": "tf.nn.dropout",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 37,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 38
                                          },
                                          "text": "tf.nn",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 35
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 37,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 36
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 38
                                              },
                                              "text": "nn"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 37,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 39
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 37,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 46
                                          },
                                          "text": "dropout"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 37,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 65
                                      },
                                      "text": "(inputs, keep_prob)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 37,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 47
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 37,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 53
                                          },
                                          "text": "inputs"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 37,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 54
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 37,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 64
                                          },
                                          "text": "keep_prob"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 37,
                                            "column": 64
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 65
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 37,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 67
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 72
                                  },
                                  "text": "mask"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "elif_clause",
                  "start": {
                    "row": 38,
                    "column": 2
                  },
                  "end": {
                    "row": 39,
                    "column": 30
                  },
                  "text": "elif do_prune:\n    return inputs * (1 - mask)",
                  "children": [
                    {
                      "type": "elif",
                      "start": {
                        "row": 38,
                        "column": 2
                      },
                      "end": {
                        "row": 38,
                        "column": 6
                      },
                      "text": "elif"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 38,
                        "column": 7
                      },
                      "end": {
                        "row": 38,
                        "column": 15
                      },
                      "text": "do_prune"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 38,
                        "column": 15
                      },
                      "end": {
                        "row": 38,
                        "column": 16
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 39,
                        "column": 4
                      },
                      "end": {
                        "row": 39,
                        "column": 30
                      },
                      "text": "return inputs * (1 - mask)",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 39,
                            "column": 4
                          },
                          "end": {
                            "row": 39,
                            "column": 30
                          },
                          "text": "return inputs * (1 - mask)",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 39,
                                "column": 4
                              },
                              "end": {
                                "row": 39,
                                "column": 10
                              },
                              "text": "return"
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 39,
                                "column": 11
                              },
                              "end": {
                                "row": 39,
                                "column": 30
                              },
                              "text": "inputs * (1 - mask)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 17
                                  },
                                  "text": "inputs"
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 39,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 19
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start": {
                                    "row": 39,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 30
                                  },
                                  "text": "(1 - mask)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 39,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 21
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 39,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 29
                                      },
                                      "text": "1 - mask",
                                      "children": [
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 39,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 22
                                          },
                                          "text": "1"
                                        },
                                        {
                                          "type": "-",
                                          "start": {
                                            "row": 39,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 24
                                          },
                                          "text": "-"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 39,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 29
                                          },
                                          "text": "mask"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 39,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 30
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 40,
                    "column": 2
                  },
                  "end": {
                    "row": 41,
                    "column": 17
                  },
                  "text": "else:\n    return inputs",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 40,
                        "column": 2
                      },
                      "end": {
                        "row": 40,
                        "column": 6
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 40,
                        "column": 6
                      },
                      "end": {
                        "row": 40,
                        "column": 7
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 41,
                        "column": 4
                      },
                      "end": {
                        "row": 41,
                        "column": 17
                      },
                      "text": "return inputs",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 41,
                            "column": 4
                          },
                          "end": {
                            "row": 41,
                            "column": 17
                          },
                          "text": "return inputs",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 41,
                                "column": 4
                              },
                              "end": {
                                "row": 41,
                                "column": 10
                              },
                              "text": "return"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 11
                              },
                              "end": {
                                "row": 41,
                                "column": 17
                              },
                              "text": "inputs"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}