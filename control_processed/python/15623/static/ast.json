{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 44,
    "column": 39
  },
  "text": "def draw_strokes(stroke_based_drawings):\n    \"\"\"\n    Visualizes drawings (ground truth or predictions) by\n    returning images to represent the stroke-based data from \n    the user.\n\n    Parameters\n    ----------\n    stroke_based_drawings: SArray or list\n        An `SArray` of type `list`. Each element in the SArray \n        should be a list of strokes, where each stroke is a list\n        of points, and each point is represented as a dictionary\n        with two keys, \"x\" and \"y\". A single stroke-based drawing\n        is also supported, in which case, the type of the input\n        would be list.\n        \n    Returns\n    -------\n    drawings: SArray or _tc.Image\n        Each stroke-based drawing is converted into a 28x28 \n        grayscale drawing for the user to visualize what their\n        strokes traced.\n\n    \"\"\"\n    single_input = False\n    if (not isinstance(stroke_based_drawings, _tc.SArray) \n        and not isinstance(stroke_based_drawings, list)):\n        raise _ToolkitError(\"Input to draw_strokes must be of type \" \n            + \"turicreate.SArray or list (for a single stroke-based drawing)\")\n    if (isinstance(stroke_based_drawings, _tc.SArray) \n        and stroke_based_drawings.dtype != list):\n        raise _ToolkitError(\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \" \n            + \"with two keys, \\\"x\\\" and \\\"y\\\".\")\n    if isinstance(stroke_based_drawings, list):\n        single_input = True\n        stroke_based_drawings = _tc.SArray([stroke_based_drawings])\n    sf = _tc.SFrame({\"drawings\": stroke_based_drawings})\n    sf_with_drawings = _extensions._drawing_classifier_prepare_data(\n        sf, \"drawings\")\n    if single_input:\n        return sf_with_drawings[\"drawings\"][0]\n    return sf_with_drawings[\"drawings\"]",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 44,
        "column": 39
      },
      "text": "def draw_strokes(stroke_based_drawings):\n    \"\"\"\n    Visualizes drawings (ground truth or predictions) by\n    returning images to represent the stroke-based data from \n    the user.\n\n    Parameters\n    ----------\n    stroke_based_drawings: SArray or list\n        An `SArray` of type `list`. Each element in the SArray \n        should be a list of strokes, where each stroke is a list\n        of points, and each point is represented as a dictionary\n        with two keys, \"x\" and \"y\". A single stroke-based drawing\n        is also supported, in which case, the type of the input\n        would be list.\n        \n    Returns\n    -------\n    drawings: SArray or _tc.Image\n        Each stroke-based drawing is converted into a 28x28 \n        grayscale drawing for the user to visualize what their\n        strokes traced.\n\n    \"\"\"\n    single_input = False\n    if (not isinstance(stroke_based_drawings, _tc.SArray) \n        and not isinstance(stroke_based_drawings, list)):\n        raise _ToolkitError(\"Input to draw_strokes must be of type \" \n            + \"turicreate.SArray or list (for a single stroke-based drawing)\")\n    if (isinstance(stroke_based_drawings, _tc.SArray) \n        and stroke_based_drawings.dtype != list):\n        raise _ToolkitError(\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \" \n            + \"with two keys, \\\"x\\\" and \\\"y\\\".\")\n    if isinstance(stroke_based_drawings, list):\n        single_input = True\n        stroke_based_drawings = _tc.SArray([stroke_based_drawings])\n    sf = _tc.SFrame({\"drawings\": stroke_based_drawings})\n    sf_with_drawings = _extensions._drawing_classifier_prepare_data(\n        sf, \"drawings\")\n    if single_input:\n        return sf_with_drawings[\"drawings\"][0]\n    return sf_with_drawings[\"drawings\"]",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 16
          },
          "text": "draw_strokes"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 16
          },
          "end": {
            "row": 0,
            "column": 39
          },
          "text": "(stroke_based_drawings)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": "stroke_based_drawings"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 39
          },
          "end": {
            "row": 0,
            "column": 40
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 44,
            "column": 39
          },
          "text": "\"\"\"\n    Visualizes drawings (ground truth or predictions) by\n    returning images to represent the stroke-based data from \n    the user.\n\n    Parameters\n    ----------\n    stroke_based_drawings: SArray or list\n        An `SArray` of type `list`. Each element in the SArray \n        should be a list of strokes, where each stroke is a list\n        of points, and each point is represented as a dictionary\n        with two keys, \"x\" and \"y\". A single stroke-based drawing\n        is also supported, in which case, the type of the input\n        would be list.\n        \n    Returns\n    -------\n    drawings: SArray or _tc.Image\n        Each stroke-based drawing is converted into a 28x28 \n        grayscale drawing for the user to visualize what their\n        strokes traced.\n\n    \"\"\"\n    single_input = False\n    if (not isinstance(stroke_based_drawings, _tc.SArray) \n        and not isinstance(stroke_based_drawings, list)):\n        raise _ToolkitError(\"Input to draw_strokes must be of type \" \n            + \"turicreate.SArray or list (for a single stroke-based drawing)\")\n    if (isinstance(stroke_based_drawings, _tc.SArray) \n        and stroke_based_drawings.dtype != list):\n        raise _ToolkitError(\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \" \n            + \"with two keys, \\\"x\\\" and \\\"y\\\".\")\n    if isinstance(stroke_based_drawings, list):\n        single_input = True\n        stroke_based_drawings = _tc.SArray([stroke_based_drawings])\n    sf = _tc.SFrame({\"drawings\": stroke_based_drawings})\n    sf_with_drawings = _extensions._drawing_classifier_prepare_data(\n        sf, \"drawings\")\n    if single_input:\n        return sf_with_drawings[\"drawings\"][0]\n    return sf_with_drawings[\"drawings\"]",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 7
              },
              "text": "\"\"\"\n    Visualizes drawings (ground truth or predictions) by\n    returning images to represent the stroke-based data from \n    the user.\n\n    Parameters\n    ----------\n    stroke_based_drawings: SArray or list\n        An `SArray` of type `list`. Each element in the SArray \n        should be a list of strokes, where each stroke is a list\n        of points, and each point is represented as a dictionary\n        with two keys, \"x\" and \"y\". A single stroke-based drawing\n        is also supported, in which case, the type of the input\n        would be list.\n        \n    Returns\n    -------\n    drawings: SArray or _tc.Image\n        Each stroke-based drawing is converted into a 28x28 \n        grayscale drawing for the user to visualize what their\n        strokes traced.\n\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 23,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Visualizes drawings (ground truth or predictions) by\n    returning images to represent the stroke-based data from \n    the user.\n\n    Parameters\n    ----------\n    stroke_based_drawings: SArray or list\n        An `SArray` of type `list`. Each element in the SArray \n        should be a list of strokes, where each stroke is a list\n        of points, and each point is represented as a dictionary\n        with two keys, \"x\" and \"y\". A single stroke-based drawing\n        is also supported, in which case, the type of the input\n        would be list.\n        \n    Returns\n    -------\n    drawings: SArray or _tc.Image\n        Each stroke-based drawing is converted into a 28x28 \n        grayscale drawing for the user to visualize what their\n        strokes traced.\n\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 23,
                        "column": 4
                      },
                      "text": "\n    Visualizes drawings (ground truth or predictions) by\n    returning images to represent the stroke-based data from \n    the user.\n\n    Parameters\n    ----------\n    stroke_based_drawings: SArray or list\n        An `SArray` of type `list`. Each element in the SArray \n        should be a list of strokes, where each stroke is a list\n        of points, and each point is represented as a dictionary\n        with two keys, \"x\" and \"y\". A single stroke-based drawing\n        is also supported, in which case, the type of the input\n        would be list.\n        \n    Returns\n    -------\n    drawings: SArray or _tc.Image\n        Each stroke-based drawing is converted into a 28x28 \n        grayscale drawing for the user to visualize what their\n        strokes traced.\n\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 23,
                        "column": 4
                      },
                      "end": {
                        "row": 23,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 24,
                "column": 4
              },
              "end": {
                "row": 24,
                "column": 24
              },
              "text": "single_input = False",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 24,
                    "column": 4
                  },
                  "end": {
                    "row": 24,
                    "column": 24
                  },
                  "text": "single_input = False",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 4
                      },
                      "end": {
                        "row": 24,
                        "column": 16
                      },
                      "text": "single_input"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 24,
                        "column": 17
                      },
                      "end": {
                        "row": 24,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "false",
                      "start": {
                        "row": 24,
                        "column": 19
                      },
                      "end": {
                        "row": 24,
                        "column": 24
                      },
                      "text": "False"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 25,
                "column": 4
              },
              "end": {
                "row": 28,
                "column": 78
              },
              "text": "if (not isinstance(stroke_based_drawings, _tc.SArray) \n        and not isinstance(stroke_based_drawings, list)):\n        raise _ToolkitError(\"Input to draw_strokes must be of type \" \n            + \"turicreate.SArray or list (for a single stroke-based drawing)\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 25,
                    "column": 4
                  },
                  "end": {
                    "row": 25,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 25,
                    "column": 7
                  },
                  "end": {
                    "row": 26,
                    "column": 56
                  },
                  "text": "(not isinstance(stroke_based_drawings, _tc.SArray) \n        and not isinstance(stroke_based_drawings, list))",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 25,
                        "column": 7
                      },
                      "end": {
                        "row": 25,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "boolean_operator",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 55
                      },
                      "text": "not isinstance(stroke_based_drawings, _tc.SArray) \n        and not isinstance(stroke_based_drawings, list)",
                      "children": [
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 25,
                            "column": 8
                          },
                          "end": {
                            "row": 25,
                            "column": 57
                          },
                          "text": "not isinstance(stroke_based_drawings, _tc.SArray)",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 25,
                                "column": 8
                              },
                              "end": {
                                "row": 25,
                                "column": 11
                              },
                              "text": "not"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 25,
                                "column": 12
                              },
                              "end": {
                                "row": 25,
                                "column": 57
                              },
                              "text": "isinstance(stroke_based_drawings, _tc.SArray)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 22
                                  },
                                  "text": "isinstance"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 25,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 57
                                  },
                                  "text": "(stroke_based_drawings, _tc.SArray)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 25,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 23
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 44
                                      },
                                      "text": "stroke_based_drawings"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 25,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 45
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 25,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 56
                                      },
                                      "text": "_tc.SArray",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 49
                                          },
                                          "text": "_tc"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 25,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 50
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 56
                                          },
                                          "text": "SArray"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 25,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 57
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "start": {
                            "row": 26,
                            "column": 8
                          },
                          "end": {
                            "row": 26,
                            "column": 11
                          },
                          "text": "and"
                        },
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 26,
                            "column": 12
                          },
                          "end": {
                            "row": 26,
                            "column": 55
                          },
                          "text": "not isinstance(stroke_based_drawings, list)",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 26,
                                "column": 12
                              },
                              "end": {
                                "row": 26,
                                "column": 15
                              },
                              "text": "not"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 26,
                                "column": 16
                              },
                              "end": {
                                "row": 26,
                                "column": 55
                              },
                              "text": "isinstance(stroke_based_drawings, list)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 26
                                  },
                                  "text": "isinstance"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 26,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 55
                                  },
                                  "text": "(stroke_based_drawings, list)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 26,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 27
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 48
                                      },
                                      "text": "stroke_based_drawings"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 26,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 49
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 54
                                      },
                                      "text": "list"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 26,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 55
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 26,
                        "column": 55
                      },
                      "end": {
                        "row": 26,
                        "column": 56
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 26,
                    "column": 56
                  },
                  "end": {
                    "row": 26,
                    "column": 57
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 28,
                    "column": 78
                  },
                  "text": "raise _ToolkitError(\"Input to draw_strokes must be of type \" \n            + \"turicreate.SArray or list (for a single stroke-based drawing)\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 27,
                        "column": 8
                      },
                      "end": {
                        "row": 28,
                        "column": 78
                      },
                      "text": "raise _ToolkitError(\"Input to draw_strokes must be of type \" \n            + \"turicreate.SArray or list (for a single stroke-based drawing)\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 27,
                            "column": 8
                          },
                          "end": {
                            "row": 27,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 27,
                            "column": 14
                          },
                          "end": {
                            "row": 28,
                            "column": 78
                          },
                          "text": "_ToolkitError(\"Input to draw_strokes must be of type \" \n            + \"turicreate.SArray or list (for a single stroke-based drawing)\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 14
                              },
                              "end": {
                                "row": 27,
                                "column": 27
                              },
                              "text": "_ToolkitError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 27,
                                "column": 27
                              },
                              "end": {
                                "row": 28,
                                "column": 78
                              },
                              "text": "(\"Input to draw_strokes must be of type \" \n            + \"turicreate.SArray or list (for a single stroke-based drawing)\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 27,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 27,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 77
                                  },
                                  "text": "\"Input to draw_strokes must be of type \" \n            + \"turicreate.SArray or list (for a single stroke-based drawing)\"",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 27,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 68
                                      },
                                      "text": "\"Input to draw_strokes must be of type \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 27,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 29
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 27,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 67
                                          },
                                          "text": "Input to draw_strokes must be of type "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 27,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 68
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 28,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 13
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 28,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 28,
                                        "column": 77
                                      },
                                      "text": "\"turicreate.SArray or list (for a single stroke-based drawing)\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 28,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 15
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 28,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 76
                                          },
                                          "text": "turicreate.SArray or list (for a single stroke-based drawing)"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 28,
                                            "column": 76
                                          },
                                          "end": {
                                            "row": 28,
                                            "column": 77
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 28,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 78
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 29,
                "column": 4
              },
              "end": {
                "row": 35,
                "column": 48
              },
              "text": "if (isinstance(stroke_based_drawings, _tc.SArray) \n        and stroke_based_drawings.dtype != list):\n        raise _ToolkitError(\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \" \n            + \"with two keys, \\\"x\\\" and \\\"y\\\".\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 29,
                    "column": 4
                  },
                  "end": {
                    "row": 29,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "parenthesized_expression",
                  "start": {
                    "row": 29,
                    "column": 7
                  },
                  "end": {
                    "row": 30,
                    "column": 48
                  },
                  "text": "(isinstance(stroke_based_drawings, _tc.SArray) \n        and stroke_based_drawings.dtype != list)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 29,
                        "column": 7
                      },
                      "end": {
                        "row": 29,
                        "column": 8
                      },
                      "text": "("
                    },
                    {
                      "type": "boolean_operator",
                      "start": {
                        "row": 29,
                        "column": 8
                      },
                      "end": {
                        "row": 30,
                        "column": 47
                      },
                      "text": "isinstance(stroke_based_drawings, _tc.SArray) \n        and stroke_based_drawings.dtype != list",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 29,
                            "column": 8
                          },
                          "end": {
                            "row": 29,
                            "column": 53
                          },
                          "text": "isinstance(stroke_based_drawings, _tc.SArray)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 29,
                                "column": 8
                              },
                              "end": {
                                "row": 29,
                                "column": 18
                              },
                              "text": "isinstance"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 29,
                                "column": 18
                              },
                              "end": {
                                "row": 29,
                                "column": 53
                              },
                              "text": "(stroke_based_drawings, _tc.SArray)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 29,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 19
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 40
                                  },
                                  "text": "stroke_based_drawings"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 29,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 41
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 29,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 52
                                  },
                                  "text": "_tc.SArray",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 29,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 45
                                      },
                                      "text": "_tc"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 29,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 46
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 29,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 52
                                      },
                                      "text": "SArray"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 29,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 53
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "start": {
                            "row": 30,
                            "column": 8
                          },
                          "end": {
                            "row": 30,
                            "column": 11
                          },
                          "text": "and"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 30,
                            "column": 12
                          },
                          "end": {
                            "row": 30,
                            "column": 47
                          },
                          "text": "stroke_based_drawings.dtype != list",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 30,
                                "column": 12
                              },
                              "end": {
                                "row": 30,
                                "column": 39
                              },
                              "text": "stroke_based_drawings.dtype",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 30,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 33
                                  },
                                  "text": "stroke_based_drawings"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 30,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 34
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 30,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 39
                                  },
                                  "text": "dtype"
                                }
                              ]
                            },
                            {
                              "type": "!=",
                              "start": {
                                "row": 30,
                                "column": 40
                              },
                              "end": {
                                "row": 30,
                                "column": 42
                              },
                              "text": "!="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 43
                              },
                              "end": {
                                "row": 30,
                                "column": 47
                              },
                              "text": "list"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 30,
                        "column": 47
                      },
                      "end": {
                        "row": 30,
                        "column": 48
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 30,
                    "column": 48
                  },
                  "end": {
                    "row": 30,
                    "column": 49
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 31,
                    "column": 8
                  },
                  "end": {
                    "row": 35,
                    "column": 48
                  },
                  "text": "raise _ToolkitError(\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \" \n            + \"with two keys, \\\"x\\\" and \\\"y\\\".\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 31,
                        "column": 8
                      },
                      "end": {
                        "row": 35,
                        "column": 48
                      },
                      "text": "raise _ToolkitError(\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \" \n            + \"with two keys, \\\"x\\\" and \\\"y\\\".\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 31,
                            "column": 8
                          },
                          "end": {
                            "row": 31,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 31,
                            "column": 14
                          },
                          "end": {
                            "row": 35,
                            "column": 48
                          },
                          "text": "_ToolkitError(\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \" \n            + \"with two keys, \\\"x\\\" and \\\"y\\\".\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 14
                              },
                              "end": {
                                "row": 31,
                                "column": 27
                              },
                              "text": "_ToolkitError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 31,
                                "column": 27
                              },
                              "end": {
                                "row": 35,
                                "column": 48
                              },
                              "text": "(\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \" \n            + \"with two keys, \\\"x\\\" and \\\"y\\\".\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 31,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 31,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 47
                                  },
                                  "text": "\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \" \n            + \"with two keys, \\\"x\\\" and \\\"y\\\".\"",
                                  "children": [
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 31,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 62
                                      },
                                      "text": "\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \" \n            + \"and each point is represented as a dictionary \"",
                                      "children": [
                                        {
                                          "type": "binary_operator",
                                          "start": {
                                            "row": 31,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 55
                                          },
                                          "text": "\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \" \n            + \"where each stroke is a list of points, \"",
                                          "children": [
                                            {
                                              "type": "binary_operator",
                                              "start": {
                                                "row": 31,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 78
                                              },
                                              "text": "\"SArray input to draw_strokes must have dtype \" \n            + \"list. Each element in the SArray should be a list of strokes, \"",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 31,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 31,
                                                    "column": 75
                                                  },
                                                  "text": "\"SArray input to draw_strokes must have dtype \"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 29
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 74
                                                      },
                                                      "text": "SArray input to draw_strokes must have dtype "
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 31,
                                                        "column": 74
                                                      },
                                                      "end": {
                                                        "row": 31,
                                                        "column": 75
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 13
                                                  },
                                                  "text": "+"
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 78
                                                  },
                                                  "text": "\"list. Each element in the SArray should be a list of strokes, \"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 14
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 15
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 15
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 77
                                                      },
                                                      "text": "list. Each element in the SArray should be a list of strokes, "
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 77
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 78
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 33,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 13
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 33,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 55
                                              },
                                              "text": "\"where each stroke is a list of points, \"",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 14
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 15
                                                  },
                                                  "text": "\""
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 15
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 54
                                                  },
                                                  "text": "where each stroke is a list of points, "
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 33,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 33,
                                                    "column": 55
                                                  },
                                                  "text": "\""
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 34,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 13
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 34,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 62
                                          },
                                          "text": "\"and each point is represented as a dictionary \"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 34,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 15
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 34,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 61
                                              },
                                              "text": "and each point is represented as a dictionary "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 34,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 62
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 35,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 13
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 35,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 47
                                      },
                                      "text": "\"with two keys, \\\"x\\\" and \\\"y\\\".\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 35,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 15
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 35,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 46
                                          },
                                          "text": "with two keys, \\\"x\\\" and \\\"y\\\".",
                                          "children": [
                                            {
                                              "type": "escape_sequence",
                                              "start": {
                                                "row": 35,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 32
                                              },
                                              "text": "\\\""
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start": {
                                                "row": 35,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 35
                                              },
                                              "text": "\\\""
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start": {
                                                "row": 35,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 42
                                              },
                                              "text": "\\\""
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start": {
                                                "row": 35,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 45
                                              },
                                              "text": "\\\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 35,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 47
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 35,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 48
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 36,
                "column": 4
              },
              "end": {
                "row": 38,
                "column": 67
              },
              "text": "if isinstance(stroke_based_drawings, list):\n        single_input = True\n        stroke_based_drawings = _tc.SArray([stroke_based_drawings])",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 36,
                    "column": 4
                  },
                  "end": {
                    "row": 36,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 36,
                    "column": 7
                  },
                  "end": {
                    "row": 36,
                    "column": 46
                  },
                  "text": "isinstance(stroke_based_drawings, list)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 36,
                        "column": 7
                      },
                      "end": {
                        "row": 36,
                        "column": 17
                      },
                      "text": "isinstance"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 36,
                        "column": 17
                      },
                      "end": {
                        "row": 36,
                        "column": 46
                      },
                      "text": "(stroke_based_drawings, list)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 36,
                            "column": 17
                          },
                          "end": {
                            "row": 36,
                            "column": 18
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 36,
                            "column": 18
                          },
                          "end": {
                            "row": 36,
                            "column": 39
                          },
                          "text": "stroke_based_drawings"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 36,
                            "column": 39
                          },
                          "end": {
                            "row": 36,
                            "column": 40
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 36,
                            "column": 41
                          },
                          "end": {
                            "row": 36,
                            "column": 45
                          },
                          "text": "list"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 36,
                            "column": 45
                          },
                          "end": {
                            "row": 36,
                            "column": 46
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 36,
                    "column": 46
                  },
                  "end": {
                    "row": 36,
                    "column": 47
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 37,
                    "column": 8
                  },
                  "end": {
                    "row": 38,
                    "column": 67
                  },
                  "text": "single_input = True\n        stroke_based_drawings = _tc.SArray([stroke_based_drawings])",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 37,
                        "column": 8
                      },
                      "end": {
                        "row": 37,
                        "column": 27
                      },
                      "text": "single_input = True",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 37,
                            "column": 8
                          },
                          "end": {
                            "row": 37,
                            "column": 27
                          },
                          "text": "single_input = True",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 37,
                                "column": 8
                              },
                              "end": {
                                "row": 37,
                                "column": 20
                              },
                              "text": "single_input"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 37,
                                "column": 21
                              },
                              "end": {
                                "row": 37,
                                "column": 22
                              },
                              "text": "="
                            },
                            {
                              "type": "true",
                              "start": {
                                "row": 37,
                                "column": 23
                              },
                              "end": {
                                "row": 37,
                                "column": 27
                              },
                              "text": "True"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 38,
                        "column": 8
                      },
                      "end": {
                        "row": 38,
                        "column": 67
                      },
                      "text": "stroke_based_drawings = _tc.SArray([stroke_based_drawings])",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 38,
                            "column": 8
                          },
                          "end": {
                            "row": 38,
                            "column": 67
                          },
                          "text": "stroke_based_drawings = _tc.SArray([stroke_based_drawings])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 8
                              },
                              "end": {
                                "row": 38,
                                "column": 29
                              },
                              "text": "stroke_based_drawings"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 38,
                                "column": 30
                              },
                              "end": {
                                "row": 38,
                                "column": 31
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 38,
                                "column": 32
                              },
                              "end": {
                                "row": 38,
                                "column": 67
                              },
                              "text": "_tc.SArray([stroke_based_drawings])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 38,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 42
                                  },
                                  "text": "_tc.SArray",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 38,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 35
                                      },
                                      "text": "_tc"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 38,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 36
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 38,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 42
                                      },
                                      "text": "SArray"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 38,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 67
                                  },
                                  "text": "([stroke_based_drawings])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 38,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 43
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 38,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 66
                                      },
                                      "text": "[stroke_based_drawings]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 38,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 38,
                                            "column": 44
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 38,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 38,
                                            "column": 65
                                          },
                                          "text": "stroke_based_drawings"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 38,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 38,
                                            "column": 66
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 38,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 67
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 39,
                "column": 4
              },
              "end": {
                "row": 39,
                "column": 56
              },
              "text": "sf = _tc.SFrame({\"drawings\": stroke_based_drawings})",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 39,
                    "column": 4
                  },
                  "end": {
                    "row": 39,
                    "column": 56
                  },
                  "text": "sf = _tc.SFrame({\"drawings\": stroke_based_drawings})",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 39,
                        "column": 4
                      },
                      "end": {
                        "row": 39,
                        "column": 6
                      },
                      "text": "sf"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 39,
                        "column": 7
                      },
                      "end": {
                        "row": 39,
                        "column": 8
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 39,
                        "column": 9
                      },
                      "end": {
                        "row": 39,
                        "column": 56
                      },
                      "text": "_tc.SFrame({\"drawings\": stroke_based_drawings})",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 39,
                            "column": 9
                          },
                          "end": {
                            "row": 39,
                            "column": 19
                          },
                          "text": "_tc.SFrame",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 9
                              },
                              "end": {
                                "row": 39,
                                "column": 12
                              },
                              "text": "_tc"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 39,
                                "column": 12
                              },
                              "end": {
                                "row": 39,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 13
                              },
                              "end": {
                                "row": 39,
                                "column": 19
                              },
                              "text": "SFrame"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 39,
                            "column": 19
                          },
                          "end": {
                            "row": 39,
                            "column": 56
                          },
                          "text": "({\"drawings\": stroke_based_drawings})",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 39,
                                "column": 19
                              },
                              "end": {
                                "row": 39,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "dictionary",
                              "start": {
                                "row": 39,
                                "column": 20
                              },
                              "end": {
                                "row": 39,
                                "column": 55
                              },
                              "text": "{\"drawings\": stroke_based_drawings}",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 39,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 21
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "pair",
                                  "start": {
                                    "row": 39,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 54
                                  },
                                  "text": "\"drawings\": stroke_based_drawings",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 39,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 31
                                      },
                                      "text": "\"drawings\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 39,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 22
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 39,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 30
                                          },
                                          "text": "drawings"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 39,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 31
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 39,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 32
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 39,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 54
                                      },
                                      "text": "stroke_based_drawings"
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 39,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 55
                                  },
                                  "text": "}"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 39,
                                "column": 55
                              },
                              "end": {
                                "row": 39,
                                "column": 56
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 40,
                "column": 4
              },
              "end": {
                "row": 41,
                "column": 23
              },
              "text": "sf_with_drawings = _extensions._drawing_classifier_prepare_data(\n        sf, \"drawings\")",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 40,
                    "column": 4
                  },
                  "end": {
                    "row": 41,
                    "column": 23
                  },
                  "text": "sf_with_drawings = _extensions._drawing_classifier_prepare_data(\n        sf, \"drawings\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 40,
                        "column": 4
                      },
                      "end": {
                        "row": 40,
                        "column": 20
                      },
                      "text": "sf_with_drawings"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 40,
                        "column": 21
                      },
                      "end": {
                        "row": 40,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 40,
                        "column": 23
                      },
                      "end": {
                        "row": 41,
                        "column": 23
                      },
                      "text": "_extensions._drawing_classifier_prepare_data(\n        sf, \"drawings\")",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 40,
                            "column": 23
                          },
                          "end": {
                            "row": 40,
                            "column": 67
                          },
                          "text": "_extensions._drawing_classifier_prepare_data",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 23
                              },
                              "end": {
                                "row": 40,
                                "column": 34
                              },
                              "text": "_extensions"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 40,
                                "column": 34
                              },
                              "end": {
                                "row": 40,
                                "column": 35
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 35
                              },
                              "end": {
                                "row": 40,
                                "column": 67
                              },
                              "text": "_drawing_classifier_prepare_data"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 40,
                            "column": 67
                          },
                          "end": {
                            "row": 41,
                            "column": 23
                          },
                          "text": "(\n        sf, \"drawings\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 40,
                                "column": 67
                              },
                              "end": {
                                "row": 40,
                                "column": 68
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 41,
                                "column": 8
                              },
                              "end": {
                                "row": 41,
                                "column": 10
                              },
                              "text": "sf"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 41,
                                "column": 10
                              },
                              "end": {
                                "row": 41,
                                "column": 11
                              },
                              "text": ","
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 41,
                                "column": 12
                              },
                              "end": {
                                "row": 41,
                                "column": 22
                              },
                              "text": "\"drawings\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 41,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 13
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 41,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 21
                                  },
                                  "text": "drawings"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 41,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 22
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 41,
                                "column": 22
                              },
                              "end": {
                                "row": 41,
                                "column": 23
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 42,
                "column": 4
              },
              "end": {
                "row": 43,
                "column": 46
              },
              "text": "if single_input:\n        return sf_with_drawings[\"drawings\"][0]",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 42,
                    "column": 4
                  },
                  "end": {
                    "row": 42,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 42,
                    "column": 7
                  },
                  "end": {
                    "row": 42,
                    "column": 19
                  },
                  "text": "single_input"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 42,
                    "column": 19
                  },
                  "end": {
                    "row": 42,
                    "column": 20
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 43,
                    "column": 8
                  },
                  "end": {
                    "row": 43,
                    "column": 46
                  },
                  "text": "return sf_with_drawings[\"drawings\"][0]",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 43,
                        "column": 8
                      },
                      "end": {
                        "row": 43,
                        "column": 46
                      },
                      "text": "return sf_with_drawings[\"drawings\"][0]",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 43,
                            "column": 8
                          },
                          "end": {
                            "row": 43,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "subscript",
                          "start": {
                            "row": 43,
                            "column": 15
                          },
                          "end": {
                            "row": 43,
                            "column": 46
                          },
                          "text": "sf_with_drawings[\"drawings\"][0]",
                          "children": [
                            {
                              "type": "subscript",
                              "start": {
                                "row": 43,
                                "column": 15
                              },
                              "end": {
                                "row": 43,
                                "column": 43
                              },
                              "text": "sf_with_drawings[\"drawings\"]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 43,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 31
                                  },
                                  "text": "sf_with_drawings"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 43,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 32
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 43,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 42
                                  },
                                  "text": "\"drawings\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 43,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 33
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 43,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 41
                                      },
                                      "text": "drawings"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 43,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 42
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 43,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 43
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 43,
                                "column": 43
                              },
                              "end": {
                                "row": 43,
                                "column": 44
                              },
                              "text": "["
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 43,
                                "column": 44
                              },
                              "end": {
                                "row": 43,
                                "column": 45
                              },
                              "text": "0"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 43,
                                "column": 45
                              },
                              "end": {
                                "row": 43,
                                "column": 46
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 44,
                "column": 4
              },
              "end": {
                "row": 44,
                "column": 39
              },
              "text": "return sf_with_drawings[\"drawings\"]",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 44,
                    "column": 4
                  },
                  "end": {
                    "row": 44,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "subscript",
                  "start": {
                    "row": 44,
                    "column": 11
                  },
                  "end": {
                    "row": 44,
                    "column": 39
                  },
                  "text": "sf_with_drawings[\"drawings\"]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 44,
                        "column": 11
                      },
                      "end": {
                        "row": 44,
                        "column": 27
                      },
                      "text": "sf_with_drawings"
                    },
                    {
                      "type": "[",
                      "start": {
                        "row": 44,
                        "column": 27
                      },
                      "end": {
                        "row": 44,
                        "column": 28
                      },
                      "text": "["
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 44,
                        "column": 28
                      },
                      "end": {
                        "row": 44,
                        "column": 38
                      },
                      "text": "\"drawings\"",
                      "children": [
                        {
                          "type": "string_start",
                          "start": {
                            "row": 44,
                            "column": 28
                          },
                          "end": {
                            "row": 44,
                            "column": 29
                          },
                          "text": "\""
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 44,
                            "column": 29
                          },
                          "end": {
                            "row": 44,
                            "column": 37
                          },
                          "text": "drawings"
                        },
                        {
                          "type": "string_end",
                          "start": {
                            "row": 44,
                            "column": 37
                          },
                          "end": {
                            "row": 44,
                            "column": 38
                          },
                          "text": "\""
                        }
                      ]
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 44,
                        "column": 38
                      },
                      "end": {
                        "row": 44,
                        "column": 39
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}