{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 18,
    "column": 9
  },
  "text": "def get_upgrade(self, index=None, params=None):\n        \"\"\"\n        Monitor how much of one or more index is upgraded.\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-upgrade.html>`_\n\n        :arg index: A comma-separated list of index names; use `_all` or empty\n            string to perform the operation on all indices\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\n            expression resolves into no concrete indices. (This includes `_all`\n            string or when no indices have been specified)\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete\n            indices that are open, closed or both., default 'open', valid\n            choices are: 'open', 'closed', 'none', 'all'\n        :arg ignore_unavailable: Whether specified concrete indices should be\n            ignored when unavailable (missing or closed)\n        \"\"\"\n        return self.transport.perform_request(\n            \"GET\", _make_path(index, \"_upgrade\"), params=params\n        )",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 18,
        "column": 9
      },
      "text": "def get_upgrade(self, index=None, params=None):\n        \"\"\"\n        Monitor how much of one or more index is upgraded.\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-upgrade.html>`_\n\n        :arg index: A comma-separated list of index names; use `_all` or empty\n            string to perform the operation on all indices\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\n            expression resolves into no concrete indices. (This includes `_all`\n            string or when no indices have been specified)\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete\n            indices that are open, closed or both., default 'open', valid\n            choices are: 'open', 'closed', 'none', 'all'\n        :arg ignore_unavailable: Whether specified concrete indices should be\n            ignored when unavailable (missing or closed)\n        \"\"\"\n        return self.transport.perform_request(\n            \"GET\", _make_path(index, \"_upgrade\"), params=params\n        )",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 15
          },
          "text": "get_upgrade"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 15
          },
          "end": {
            "row": 0,
            "column": 46
          },
          "text": "(self, index=None, params=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "index=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 22
                  },
                  "end": {
                    "row": 0,
                    "column": 27
                  },
                  "text": "index"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 27
                  },
                  "end": {
                    "row": 0,
                    "column": 28
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 28
                  },
                  "end": {
                    "row": 0,
                    "column": 32
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": "params=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 34
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "params"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 40
                  },
                  "end": {
                    "row": 0,
                    "column": 41
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 41
                  },
                  "end": {
                    "row": 0,
                    "column": 45
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 46
          },
          "end": {
            "row": 0,
            "column": 47
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 18,
            "column": 9
          },
          "text": "\"\"\"\n        Monitor how much of one or more index is upgraded.\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-upgrade.html>`_\n\n        :arg index: A comma-separated list of index names; use `_all` or empty\n            string to perform the operation on all indices\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\n            expression resolves into no concrete indices. (This includes `_all`\n            string or when no indices have been specified)\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete\n            indices that are open, closed or both., default 'open', valid\n            choices are: 'open', 'closed', 'none', 'all'\n        :arg ignore_unavailable: Whether specified concrete indices should be\n            ignored when unavailable (missing or closed)\n        \"\"\"\n        return self.transport.perform_request(\n            \"GET\", _make_path(index, \"_upgrade\"), params=params\n        )",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 11
              },
              "text": "\"\"\"\n        Monitor how much of one or more index is upgraded.\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-upgrade.html>`_\n\n        :arg index: A comma-separated list of index names; use `_all` or empty\n            string to perform the operation on all indices\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\n            expression resolves into no concrete indices. (This includes `_all`\n            string or when no indices have been specified)\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete\n            indices that are open, closed or both., default 'open', valid\n            choices are: 'open', 'closed', 'none', 'all'\n        :arg ignore_unavailable: Whether specified concrete indices should be\n            ignored when unavailable (missing or closed)\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Monitor how much of one or more index is upgraded.\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-upgrade.html>`_\n\n        :arg index: A comma-separated list of index names; use `_all` or empty\n            string to perform the operation on all indices\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\n            expression resolves into no concrete indices. (This includes `_all`\n            string or when no indices have been specified)\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete\n            indices that are open, closed or both., default 'open', valid\n            choices are: 'open', 'closed', 'none', 'all'\n        :arg ignore_unavailable: Whether specified concrete indices should be\n            ignored when unavailable (missing or closed)\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 15,
                        "column": 8
                      },
                      "text": "\n        Monitor how much of one or more index is upgraded.\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-upgrade.html>`_\n\n        :arg index: A comma-separated list of index names; use `_all` or empty\n            string to perform the operation on all indices\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\n            expression resolves into no concrete indices. (This includes `_all`\n            string or when no indices have been specified)\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete\n            indices that are open, closed or both., default 'open', valid\n            choices are: 'open', 'closed', 'none', 'all'\n        :arg ignore_unavailable: Whether specified concrete indices should be\n            ignored when unavailable (missing or closed)\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 9
              },
              "text": "return self.transport.perform_request(\n            \"GET\", _make_path(index, \"_upgrade\"), params=params\n        )",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 16,
                    "column": 15
                  },
                  "end": {
                    "row": 18,
                    "column": 9
                  },
                  "text": "self.transport.perform_request(\n            \"GET\", _make_path(index, \"_upgrade\"), params=params\n        )",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 16,
                        "column": 15
                      },
                      "end": {
                        "row": 16,
                        "column": 45
                      },
                      "text": "self.transport.perform_request",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 15
                          },
                          "end": {
                            "row": 16,
                            "column": 29
                          },
                          "text": "self.transport",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 15
                              },
                              "end": {
                                "row": 16,
                                "column": 19
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 19
                              },
                              "end": {
                                "row": 16,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 20
                              },
                              "end": {
                                "row": 16,
                                "column": 29
                              },
                              "text": "transport"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 16,
                            "column": 29
                          },
                          "end": {
                            "row": 16,
                            "column": 30
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 30
                          },
                          "end": {
                            "row": 16,
                            "column": 45
                          },
                          "text": "perform_request"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 16,
                        "column": 45
                      },
                      "end": {
                        "row": 18,
                        "column": 9
                      },
                      "text": "(\n            \"GET\", _make_path(index, \"_upgrade\"), params=params\n        )",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 16,
                            "column": 45
                          },
                          "end": {
                            "row": 16,
                            "column": 46
                          },
                          "text": "("
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 17,
                            "column": 12
                          },
                          "end": {
                            "row": 17,
                            "column": 17
                          },
                          "text": "\"GET\"",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 17,
                                "column": 12
                              },
                              "end": {
                                "row": 17,
                                "column": 13
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 17,
                                "column": 13
                              },
                              "end": {
                                "row": 17,
                                "column": 16
                              },
                              "text": "GET"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 17,
                                "column": 16
                              },
                              "end": {
                                "row": 17,
                                "column": 17
                              },
                              "text": "\""
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 17,
                            "column": 17
                          },
                          "end": {
                            "row": 17,
                            "column": 18
                          },
                          "text": ","
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 17,
                            "column": 19
                          },
                          "end": {
                            "row": 17,
                            "column": 48
                          },
                          "text": "_make_path(index, \"_upgrade\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 19
                              },
                              "end": {
                                "row": 17,
                                "column": 29
                              },
                              "text": "_make_path"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 17,
                                "column": 29
                              },
                              "end": {
                                "row": 17,
                                "column": 48
                              },
                              "text": "(index, \"_upgrade\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 17,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 30
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 35
                                  },
                                  "text": "index"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 17,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 36
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 17,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 47
                                  },
                                  "text": "\"_upgrade\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 17,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 38
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 17,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 46
                                      },
                                      "text": "_upgrade"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 17,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 47
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 17,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 48
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 17,
                            "column": 48
                          },
                          "end": {
                            "row": 17,
                            "column": 49
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 17,
                            "column": 50
                          },
                          "end": {
                            "row": 17,
                            "column": 63
                          },
                          "text": "params=params",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 50
                              },
                              "end": {
                                "row": 17,
                                "column": 56
                              },
                              "text": "params"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 17,
                                "column": 56
                              },
                              "end": {
                                "row": 17,
                                "column": 57
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 57
                              },
                              "end": {
                                "row": 17,
                                "column": 63
                              },
                              "text": "params"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 18,
                            "column": 8
                          },
                          "end": {
                            "row": 18,
                            "column": 9
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}