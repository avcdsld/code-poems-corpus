{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 22,
    "column": 79
  },
  "text": "def _factorize_from_iterables(iterables):\n    \"\"\"\n    A higher-level wrapper over `_factorize_from_iterable`.\n\n    *This is an internal function*\n\n    Parameters\n    ----------\n    iterables : list-like of list-likes\n\n    Returns\n    -------\n    codes_list : list of ndarrays\n    categories_list : list of Indexes\n\n    Notes\n    -----\n    See `_factorize_from_iterable` for more info.\n    \"\"\"\n    if len(iterables) == 0:\n        # For consistency, it should return a list of 2 lists.\n        return [[], []]\n    return map(list, lzip(*[_factorize_from_iterable(it) for it in iterables]))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 22,
        "column": 79
      },
      "text": "def _factorize_from_iterables(iterables):\n    \"\"\"\n    A higher-level wrapper over `_factorize_from_iterable`.\n\n    *This is an internal function*\n\n    Parameters\n    ----------\n    iterables : list-like of list-likes\n\n    Returns\n    -------\n    codes_list : list of ndarrays\n    categories_list : list of Indexes\n\n    Notes\n    -----\n    See `_factorize_from_iterable` for more info.\n    \"\"\"\n    if len(iterables) == 0:\n        # For consistency, it should return a list of 2 lists.\n        return [[], []]\n    return map(list, lzip(*[_factorize_from_iterable(it) for it in iterables]))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 29
          },
          "text": "_factorize_from_iterables"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 29
          },
          "end": {
            "row": 0,
            "column": 40
          },
          "text": "(iterables)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": "iterables"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 40
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 22,
            "column": 79
          },
          "text": "\"\"\"\n    A higher-level wrapper over `_factorize_from_iterable`.\n\n    *This is an internal function*\n\n    Parameters\n    ----------\n    iterables : list-like of list-likes\n\n    Returns\n    -------\n    codes_list : list of ndarrays\n    categories_list : list of Indexes\n\n    Notes\n    -----\n    See `_factorize_from_iterable` for more info.\n    \"\"\"\n    if len(iterables) == 0:\n        # For consistency, it should return a list of 2 lists.\n        return [[], []]\n    return map(list, lzip(*[_factorize_from_iterable(it) for it in iterables]))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 7
              },
              "text": "\"\"\"\n    A higher-level wrapper over `_factorize_from_iterable`.\n\n    *This is an internal function*\n\n    Parameters\n    ----------\n    iterables : list-like of list-likes\n\n    Returns\n    -------\n    codes_list : list of ndarrays\n    categories_list : list of Indexes\n\n    Notes\n    -----\n    See `_factorize_from_iterable` for more info.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 18,
                    "column": 7
                  },
                  "text": "\"\"\"\n    A higher-level wrapper over `_factorize_from_iterable`.\n\n    *This is an internal function*\n\n    Parameters\n    ----------\n    iterables : list-like of list-likes\n\n    Returns\n    -------\n    codes_list : list of ndarrays\n    categories_list : list of Indexes\n\n    Notes\n    -----\n    See `_factorize_from_iterable` for more info.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 18,
                        "column": 4
                      },
                      "text": "\n    A higher-level wrapper over `_factorize_from_iterable`.\n\n    *This is an internal function*\n\n    Parameters\n    ----------\n    iterables : list-like of list-likes\n\n    Returns\n    -------\n    codes_list : list of ndarrays\n    categories_list : list of Indexes\n\n    Notes\n    -----\n    See `_factorize_from_iterable` for more info.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 18,
                        "column": 4
                      },
                      "end": {
                        "row": 18,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 19,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 23
              },
              "text": "if len(iterables) == 0:\n        # For consistency, it should return a list of 2 lists.\n        return [[], []]",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 19,
                    "column": 4
                  },
                  "end": {
                    "row": 19,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 19,
                    "column": 7
                  },
                  "end": {
                    "row": 19,
                    "column": 26
                  },
                  "text": "len(iterables) == 0",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 19,
                        "column": 7
                      },
                      "end": {
                        "row": 19,
                        "column": 21
                      },
                      "text": "len(iterables)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 7
                          },
                          "end": {
                            "row": 19,
                            "column": 10
                          },
                          "text": "len"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 19,
                            "column": 10
                          },
                          "end": {
                            "row": 19,
                            "column": 21
                          },
                          "text": "(iterables)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 19,
                                "column": 10
                              },
                              "end": {
                                "row": 19,
                                "column": 11
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 11
                              },
                              "end": {
                                "row": 19,
                                "column": 20
                              },
                              "text": "iterables"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 19,
                                "column": 20
                              },
                              "end": {
                                "row": 19,
                                "column": 21
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 19,
                        "column": 22
                      },
                      "end": {
                        "row": 19,
                        "column": 24
                      },
                      "text": "=="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 19,
                        "column": 25
                      },
                      "end": {
                        "row": 19,
                        "column": 26
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 19,
                    "column": 26
                  },
                  "end": {
                    "row": 19,
                    "column": 27
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 62
                  },
                  "text": "# For consistency, it should return a list of 2 lists."
                },
                {
                  "type": "block",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 23
                  },
                  "text": "return [[], []]",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 23
                      },
                      "text": "return [[], []]",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 21,
                            "column": 8
                          },
                          "end": {
                            "row": 21,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "list",
                          "start": {
                            "row": 21,
                            "column": 15
                          },
                          "end": {
                            "row": 21,
                            "column": 23
                          },
                          "text": "[[], []]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 21,
                                "column": 15
                              },
                              "end": {
                                "row": 21,
                                "column": 16
                              },
                              "text": "["
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 21,
                                "column": 16
                              },
                              "end": {
                                "row": 21,
                                "column": 18
                              },
                              "text": "[]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 21,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 17
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 21,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 18
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 21,
                                "column": 18
                              },
                              "end": {
                                "row": 21,
                                "column": 19
                              },
                              "text": ","
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 21,
                                "column": 20
                              },
                              "end": {
                                "row": 21,
                                "column": 22
                              },
                              "text": "[]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 21,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 21
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 21,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 22
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 21,
                                "column": 22
                              },
                              "end": {
                                "row": 21,
                                "column": 23
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 79
              },
              "text": "return map(list, lzip(*[_factorize_from_iterable(it) for it in iterables]))",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 22,
                    "column": 11
                  },
                  "end": {
                    "row": 22,
                    "column": 79
                  },
                  "text": "map(list, lzip(*[_factorize_from_iterable(it) for it in iterables]))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 11
                      },
                      "end": {
                        "row": 22,
                        "column": 14
                      },
                      "text": "map"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 22,
                        "column": 14
                      },
                      "end": {
                        "row": 22,
                        "column": 79
                      },
                      "text": "(list, lzip(*[_factorize_from_iterable(it) for it in iterables]))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 22,
                            "column": 14
                          },
                          "end": {
                            "row": 22,
                            "column": 15
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 15
                          },
                          "end": {
                            "row": 22,
                            "column": 19
                          },
                          "text": "list"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 22,
                            "column": 19
                          },
                          "end": {
                            "row": 22,
                            "column": 20
                          },
                          "text": ","
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 22,
                            "column": 21
                          },
                          "end": {
                            "row": 22,
                            "column": 78
                          },
                          "text": "lzip(*[_factorize_from_iterable(it) for it in iterables])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 21
                              },
                              "end": {
                                "row": 22,
                                "column": 25
                              },
                              "text": "lzip"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 22,
                                "column": 25
                              },
                              "end": {
                                "row": 22,
                                "column": 78
                              },
                              "text": "(*[_factorize_from_iterable(it) for it in iterables])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 22,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 26
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "list_splat",
                                  "start": {
                                    "row": 22,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 77
                                  },
                                  "text": "*[_factorize_from_iterable(it) for it in iterables]",
                                  "children": [
                                    {
                                      "type": "*",
                                      "start": {
                                        "row": 22,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 27
                                      },
                                      "text": "*"
                                    },
                                    {
                                      "type": "list_comprehension",
                                      "start": {
                                        "row": 22,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 77
                                      },
                                      "text": "[_factorize_from_iterable(it) for it in iterables]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 22,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 28
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 22,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 56
                                          },
                                          "text": "_factorize_from_iterable(it)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 52
                                              },
                                              "text": "_factorize_from_iterable"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 22,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 56
                                              },
                                              "text": "(it)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 53
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 55
                                                  },
                                                  "text": "it"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 56
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "for_in_clause",
                                          "start": {
                                            "row": 22,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 76
                                          },
                                          "text": "for it in iterables",
                                          "children": [
                                            {
                                              "type": "for",
                                              "start": {
                                                "row": 22,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 60
                                              },
                                              "text": "for"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 63
                                              },
                                              "text": "it"
                                            },
                                            {
                                              "type": "in",
                                              "start": {
                                                "row": 22,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 66
                                              },
                                              "text": "in"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 67
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 76
                                              },
                                              "text": "iterables"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 22,
                                            "column": 76
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 77
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 22,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 78
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 22,
                            "column": 78
                          },
                          "end": {
                            "row": 22,
                            "column": 79
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}