{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 29,
    "column": 18
  },
  "text": "def build_from_generator(cls,\n                           generator,\n                           target_size,\n                           max_subtoken_length=None,\n                           reserved_tokens=None):\n    \"\"\"Builds a SubwordTextEncoder from the generated text.\n\n    Args:\n      generator: yields text.\n      target_size: int, approximate vocabulary size to create.\n      max_subtoken_length: Maximum length of a subtoken. If this is not set,\n        then the runtime and memory use of creating the vocab is quadratic in\n        the length of the longest token. If this is set, then it is instead\n        O(max_subtoken_length * length of longest token).\n      reserved_tokens: List of reserved tokens. The global variable\n        `RESERVED_TOKENS` must be a prefix of `reserved_tokens`. If this\n        argument is `None`, it will use `RESERVED_TOKENS`.\n\n    Returns:\n      SubwordTextEncoder with `vocab_size` approximately `target_size`.\n    \"\"\"\n    token_counts = collections.defaultdict(int)\n    for item in generator:\n      for tok in tokenizer.encode(native_to_unicode(item)):\n        token_counts[tok] += 1\n    encoder = cls.build_to_target_size(\n        target_size, token_counts, 1, 1e3,\n        max_subtoken_length=max_subtoken_length,\n        reserved_tokens=reserved_tokens)\n    return encoder",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 29,
        "column": 18
      },
      "text": "def build_from_generator(cls,\n                           generator,\n                           target_size,\n                           max_subtoken_length=None,\n                           reserved_tokens=None):\n    \"\"\"Builds a SubwordTextEncoder from the generated text.\n\n    Args:\n      generator: yields text.\n      target_size: int, approximate vocabulary size to create.\n      max_subtoken_length: Maximum length of a subtoken. If this is not set,\n        then the runtime and memory use of creating the vocab is quadratic in\n        the length of the longest token. If this is set, then it is instead\n        O(max_subtoken_length * length of longest token).\n      reserved_tokens: List of reserved tokens. The global variable\n        `RESERVED_TOKENS` must be a prefix of `reserved_tokens`. If this\n        argument is `None`, it will use `RESERVED_TOKENS`.\n\n    Returns:\n      SubwordTextEncoder with `vocab_size` approximately `target_size`.\n    \"\"\"\n    token_counts = collections.defaultdict(int)\n    for item in generator:\n      for tok in tokenizer.encode(native_to_unicode(item)):\n        token_counts[tok] += 1\n    encoder = cls.build_to_target_size(\n        target_size, token_counts, 1, 1e3,\n        max_subtoken_length=max_subtoken_length,\n        reserved_tokens=reserved_tokens)\n    return encoder",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "build_from_generator"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 4,
            "column": 48
          },
          "text": "(cls,\n                           generator,\n                           target_size,\n                           max_subtoken_length=None,\n                           reserved_tokens=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "cls"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 27
              },
              "end": {
                "row": 1,
                "column": 36
              },
              "text": "generator"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 36
              },
              "end": {
                "row": 1,
                "column": 37
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 2,
                "column": 27
              },
              "end": {
                "row": 2,
                "column": 38
              },
              "text": "target_size"
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 38
              },
              "end": {
                "row": 2,
                "column": 39
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 27
              },
              "end": {
                "row": 3,
                "column": 51
              },
              "text": "max_subtoken_length=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 27
                  },
                  "end": {
                    "row": 3,
                    "column": 46
                  },
                  "text": "max_subtoken_length"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 46
                  },
                  "end": {
                    "row": 3,
                    "column": 47
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 3,
                    "column": 47
                  },
                  "end": {
                    "row": 3,
                    "column": 51
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 51
              },
              "end": {
                "row": 3,
                "column": 52
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 4,
                "column": 27
              },
              "end": {
                "row": 4,
                "column": 47
              },
              "text": "reserved_tokens=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 27
                  },
                  "end": {
                    "row": 4,
                    "column": 42
                  },
                  "text": "reserved_tokens"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 42
                  },
                  "end": {
                    "row": 4,
                    "column": 43
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 4,
                    "column": 43
                  },
                  "end": {
                    "row": 4,
                    "column": 47
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 4,
                "column": 47
              },
              "end": {
                "row": 4,
                "column": 48
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 4,
            "column": 48
          },
          "end": {
            "row": 4,
            "column": 49
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 5,
            "column": 4
          },
          "end": {
            "row": 29,
            "column": 18
          },
          "text": "\"\"\"Builds a SubwordTextEncoder from the generated text.\n\n    Args:\n      generator: yields text.\n      target_size: int, approximate vocabulary size to create.\n      max_subtoken_length: Maximum length of a subtoken. If this is not set,\n        then the runtime and memory use of creating the vocab is quadratic in\n        the length of the longest token. If this is set, then it is instead\n        O(max_subtoken_length * length of longest token).\n      reserved_tokens: List of reserved tokens. The global variable\n        `RESERVED_TOKENS` must be a prefix of `reserved_tokens`. If this\n        argument is `None`, it will use `RESERVED_TOKENS`.\n\n    Returns:\n      SubwordTextEncoder with `vocab_size` approximately `target_size`.\n    \"\"\"\n    token_counts = collections.defaultdict(int)\n    for item in generator:\n      for tok in tokenizer.encode(native_to_unicode(item)):\n        token_counts[tok] += 1\n    encoder = cls.build_to_target_size(\n        target_size, token_counts, 1, 1e3,\n        max_subtoken_length=max_subtoken_length,\n        reserved_tokens=reserved_tokens)\n    return encoder",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 5,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 7
              },
              "text": "\"\"\"Builds a SubwordTextEncoder from the generated text.\n\n    Args:\n      generator: yields text.\n      target_size: int, approximate vocabulary size to create.\n      max_subtoken_length: Maximum length of a subtoken. If this is not set,\n        then the runtime and memory use of creating the vocab is quadratic in\n        the length of the longest token. If this is set, then it is instead\n        O(max_subtoken_length * length of longest token).\n      reserved_tokens: List of reserved tokens. The global variable\n        `RESERVED_TOKENS` must be a prefix of `reserved_tokens`. If this\n        argument is `None`, it will use `RESERVED_TOKENS`.\n\n    Returns:\n      SubwordTextEncoder with `vocab_size` approximately `target_size`.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 5,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 7
                  },
                  "text": "\"\"\"Builds a SubwordTextEncoder from the generated text.\n\n    Args:\n      generator: yields text.\n      target_size: int, approximate vocabulary size to create.\n      max_subtoken_length: Maximum length of a subtoken. If this is not set,\n        then the runtime and memory use of creating the vocab is quadratic in\n        the length of the longest token. If this is set, then it is instead\n        O(max_subtoken_length * length of longest token).\n      reserved_tokens: List of reserved tokens. The global variable\n        `RESERVED_TOKENS` must be a prefix of `reserved_tokens`. If this\n        argument is `None`, it will use `RESERVED_TOKENS`.\n\n    Returns:\n      SubwordTextEncoder with `vocab_size` approximately `target_size`.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 5,
                        "column": 7
                      },
                      "end": {
                        "row": 20,
                        "column": 4
                      },
                      "text": "Builds a SubwordTextEncoder from the generated text.\n\n    Args:\n      generator: yields text.\n      target_size: int, approximate vocabulary size to create.\n      max_subtoken_length: Maximum length of a subtoken. If this is not set,\n        then the runtime and memory use of creating the vocab is quadratic in\n        the length of the longest token. If this is set, then it is instead\n        O(max_subtoken_length * length of longest token).\n      reserved_tokens: List of reserved tokens. The global variable\n        `RESERVED_TOKENS` must be a prefix of `reserved_tokens`. If this\n        argument is `None`, it will use `RESERVED_TOKENS`.\n\n    Returns:\n      SubwordTextEncoder with `vocab_size` approximately `target_size`.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 20,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 21,
                "column": 47
              },
              "text": "token_counts = collections.defaultdict(int)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 21,
                    "column": 4
                  },
                  "end": {
                    "row": 21,
                    "column": 47
                  },
                  "text": "token_counts = collections.defaultdict(int)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 4
                      },
                      "end": {
                        "row": 21,
                        "column": 16
                      },
                      "text": "token_counts"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 21,
                        "column": 17
                      },
                      "end": {
                        "row": 21,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 21,
                        "column": 19
                      },
                      "end": {
                        "row": 21,
                        "column": 47
                      },
                      "text": "collections.defaultdict(int)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 21,
                            "column": 19
                          },
                          "end": {
                            "row": 21,
                            "column": 42
                          },
                          "text": "collections.defaultdict",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 19
                              },
                              "end": {
                                "row": 21,
                                "column": 30
                              },
                              "text": "collections"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 21,
                                "column": 30
                              },
                              "end": {
                                "row": 21,
                                "column": 31
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 31
                              },
                              "end": {
                                "row": 21,
                                "column": 42
                              },
                              "text": "defaultdict"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 21,
                            "column": 42
                          },
                          "end": {
                            "row": 21,
                            "column": 47
                          },
                          "text": "(int)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 21,
                                "column": 42
                              },
                              "end": {
                                "row": 21,
                                "column": 43
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 43
                              },
                              "end": {
                                "row": 21,
                                "column": 46
                              },
                              "text": "int"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 21,
                                "column": 46
                              },
                              "end": {
                                "row": 21,
                                "column": 47
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 24,
                "column": 30
              },
              "text": "for item in generator:\n      for tok in tokenizer.encode(native_to_unicode(item)):\n        token_counts[tok] += 1",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 12
                  },
                  "text": "item"
                },
                {
                  "type": "in",
                  "start": {
                    "row": 22,
                    "column": 13
                  },
                  "end": {
                    "row": 22,
                    "column": 15
                  },
                  "text": "in"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 22,
                    "column": 16
                  },
                  "end": {
                    "row": 22,
                    "column": 25
                  },
                  "text": "generator"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 22,
                    "column": 25
                  },
                  "end": {
                    "row": 22,
                    "column": 26
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 23,
                    "column": 6
                  },
                  "end": {
                    "row": 24,
                    "column": 30
                  },
                  "text": "for tok in tokenizer.encode(native_to_unicode(item)):\n        token_counts[tok] += 1",
                  "children": [
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 23,
                        "column": 6
                      },
                      "end": {
                        "row": 24,
                        "column": 30
                      },
                      "text": "for tok in tokenizer.encode(native_to_unicode(item)):\n        token_counts[tok] += 1",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 23,
                            "column": 6
                          },
                          "end": {
                            "row": 23,
                            "column": 9
                          },
                          "text": "for"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 10
                          },
                          "end": {
                            "row": 23,
                            "column": 13
                          },
                          "text": "tok"
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 23,
                            "column": 14
                          },
                          "end": {
                            "row": 23,
                            "column": 16
                          },
                          "text": "in"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 23,
                            "column": 17
                          },
                          "end": {
                            "row": 23,
                            "column": 58
                          },
                          "text": "tokenizer.encode(native_to_unicode(item))",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 23,
                                "column": 17
                              },
                              "end": {
                                "row": 23,
                                "column": 33
                              },
                              "text": "tokenizer.encode",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 26
                                  },
                                  "text": "tokenizer"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 23,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 27
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 33
                                  },
                                  "text": "encode"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 23,
                                "column": 33
                              },
                              "end": {
                                "row": 23,
                                "column": 58
                              },
                              "text": "(native_to_unicode(item))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 23,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 34
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 23,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 57
                                  },
                                  "text": "native_to_unicode(item)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 51
                                      },
                                      "text": "native_to_unicode"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 23,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 57
                                      },
                                      "text": "(item)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 23,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 52
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 23,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 56
                                          },
                                          "text": "item"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 23,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 57
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 23,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 58
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 23,
                            "column": 58
                          },
                          "end": {
                            "row": 23,
                            "column": 59
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 24,
                            "column": 8
                          },
                          "end": {
                            "row": 24,
                            "column": 30
                          },
                          "text": "token_counts[tok] += 1",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 24,
                                "column": 8
                              },
                              "end": {
                                "row": 24,
                                "column": 30
                              },
                              "text": "token_counts[tok] += 1",
                              "children": [
                                {
                                  "type": "augmented_assignment",
                                  "start": {
                                    "row": 24,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 30
                                  },
                                  "text": "token_counts[tok] += 1",
                                  "children": [
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 24,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 25
                                      },
                                      "text": "token_counts[tok]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 20
                                          },
                                          "text": "token_counts"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 24,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 21
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 24,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 24
                                          },
                                          "text": "tok"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 24,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 25
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+=",
                                      "start": {
                                        "row": 24,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 28
                                      },
                                      "text": "+="
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 24,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 30
                                      },
                                      "text": "1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 25,
                "column": 4
              },
              "end": {
                "row": 28,
                "column": 40
              },
              "text": "encoder = cls.build_to_target_size(\n        target_size, token_counts, 1, 1e3,\n        max_subtoken_length=max_subtoken_length,\n        reserved_tokens=reserved_tokens)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 25,
                    "column": 4
                  },
                  "end": {
                    "row": 28,
                    "column": 40
                  },
                  "text": "encoder = cls.build_to_target_size(\n        target_size, token_counts, 1, 1e3,\n        max_subtoken_length=max_subtoken_length,\n        reserved_tokens=reserved_tokens)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 4
                      },
                      "end": {
                        "row": 25,
                        "column": 11
                      },
                      "text": "encoder"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 25,
                        "column": 12
                      },
                      "end": {
                        "row": 25,
                        "column": 13
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 25,
                        "column": 14
                      },
                      "end": {
                        "row": 28,
                        "column": 40
                      },
                      "text": "cls.build_to_target_size(\n        target_size, token_counts, 1, 1e3,\n        max_subtoken_length=max_subtoken_length,\n        reserved_tokens=reserved_tokens)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 25,
                            "column": 14
                          },
                          "end": {
                            "row": 25,
                            "column": 38
                          },
                          "text": "cls.build_to_target_size",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 14
                              },
                              "end": {
                                "row": 25,
                                "column": 17
                              },
                              "text": "cls"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 25,
                                "column": 17
                              },
                              "end": {
                                "row": 25,
                                "column": 18
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 18
                              },
                              "end": {
                                "row": 25,
                                "column": 38
                              },
                              "text": "build_to_target_size"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 25,
                            "column": 38
                          },
                          "end": {
                            "row": 28,
                            "column": 40
                          },
                          "text": "(\n        target_size, token_counts, 1, 1e3,\n        max_subtoken_length=max_subtoken_length,\n        reserved_tokens=reserved_tokens)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 25,
                                "column": 38
                              },
                              "end": {
                                "row": 25,
                                "column": 39
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 8
                              },
                              "end": {
                                "row": 26,
                                "column": 19
                              },
                              "text": "target_size"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 26,
                                "column": 19
                              },
                              "end": {
                                "row": 26,
                                "column": 20
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 21
                              },
                              "end": {
                                "row": 26,
                                "column": 33
                              },
                              "text": "token_counts"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 26,
                                "column": 33
                              },
                              "end": {
                                "row": 26,
                                "column": 34
                              },
                              "text": ","
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 26,
                                "column": 35
                              },
                              "end": {
                                "row": 26,
                                "column": 36
                              },
                              "text": "1"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 26,
                                "column": 36
                              },
                              "end": {
                                "row": 26,
                                "column": 37
                              },
                              "text": ","
                            },
                            {
                              "type": "float",
                              "start": {
                                "row": 26,
                                "column": 38
                              },
                              "end": {
                                "row": 26,
                                "column": 41
                              },
                              "text": "1e3"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 26,
                                "column": 41
                              },
                              "end": {
                                "row": 26,
                                "column": 42
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 27,
                                "column": 8
                              },
                              "end": {
                                "row": 27,
                                "column": 47
                              },
                              "text": "max_subtoken_length=max_subtoken_length",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 27
                                  },
                                  "text": "max_subtoken_length"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 27,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 28
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 27,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 47
                                  },
                                  "text": "max_subtoken_length"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 27,
                                "column": 47
                              },
                              "end": {
                                "row": 27,
                                "column": 48
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 28,
                                "column": 8
                              },
                              "end": {
                                "row": 28,
                                "column": 39
                              },
                              "text": "reserved_tokens=reserved_tokens",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 23
                                  },
                                  "text": "reserved_tokens"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 28,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 24
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 39
                                  },
                                  "text": "reserved_tokens"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 28,
                                "column": 39
                              },
                              "end": {
                                "row": 28,
                                "column": 40
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 29,
                "column": 4
              },
              "end": {
                "row": 29,
                "column": 18
              },
              "text": "return encoder",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 29,
                    "column": 4
                  },
                  "end": {
                    "row": 29,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 29,
                    "column": 11
                  },
                  "end": {
                    "row": 29,
                    "column": 18
                  },
                  "text": "encoder"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}