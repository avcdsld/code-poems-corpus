{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 18,
    "column": 13
  },
  "text": "def find_signature_inputs_from_multivalued_ops(inputs):\n  \"\"\"Returns error message for module inputs from ops with multiple outputs.\"\"\"\n  dense_inputs = []  # List of (str, Tensor), with SparseTensors decomposed.\n  for name, tensor in sorted(inputs.items()):\n    if isinstance(tensor, tf.SparseTensor):\n      dense_inputs.extend((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))\n    else:\n      dense_inputs.append((name, tensor))\n  warnings = [(name, tensor.name) for name, tensor in dense_inputs\n              if len(tensor.op.outputs) != 1]\n  if warnings:\n    return (\n        \"WARNING: The inputs declared in hub.add_signature() should be tensors \"\n        \"from ops with a single output, or else uses of tf.colocate_with() on \"\n        \"that op can trigger fatal errors when the module is applied and \"\n        \"colocation constraints have to be rewritten.\\nAffected inputs: %s\" %\n        \", \".join(\"%s='%s'\" % pair for pair in warnings))\n  return None",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 18,
        "column": 13
      },
      "text": "def find_signature_inputs_from_multivalued_ops(inputs):\n  \"\"\"Returns error message for module inputs from ops with multiple outputs.\"\"\"\n  dense_inputs = []  # List of (str, Tensor), with SparseTensors decomposed.\n  for name, tensor in sorted(inputs.items()):\n    if isinstance(tensor, tf.SparseTensor):\n      dense_inputs.extend((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))\n    else:\n      dense_inputs.append((name, tensor))\n  warnings = [(name, tensor.name) for name, tensor in dense_inputs\n              if len(tensor.op.outputs) != 1]\n  if warnings:\n    return (\n        \"WARNING: The inputs declared in hub.add_signature() should be tensors \"\n        \"from ops with a single output, or else uses of tf.colocate_with() on \"\n        \"that op can trigger fatal errors when the module is applied and \"\n        \"colocation constraints have to be rewritten.\\nAffected inputs: %s\" %\n        \", \".join(\"%s='%s'\" % pair for pair in warnings))\n  return None",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 46
          },
          "text": "find_signature_inputs_from_multivalued_ops"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 46
          },
          "end": {
            "row": 0,
            "column": 54
          },
          "text": "(inputs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": "inputs"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 53
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 54
          },
          "end": {
            "row": 0,
            "column": 55
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 2
          },
          "end": {
            "row": 18,
            "column": 13
          },
          "text": "\"\"\"Returns error message for module inputs from ops with multiple outputs.\"\"\"\n  dense_inputs = []  # List of (str, Tensor), with SparseTensors decomposed.\n  for name, tensor in sorted(inputs.items()):\n    if isinstance(tensor, tf.SparseTensor):\n      dense_inputs.extend((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))\n    else:\n      dense_inputs.append((name, tensor))\n  warnings = [(name, tensor.name) for name, tensor in dense_inputs\n              if len(tensor.op.outputs) != 1]\n  if warnings:\n    return (\n        \"WARNING: The inputs declared in hub.add_signature() should be tensors \"\n        \"from ops with a single output, or else uses of tf.colocate_with() on \"\n        \"that op can trigger fatal errors when the module is applied and \"\n        \"colocation constraints have to be rewritten.\\nAffected inputs: %s\" %\n        \", \".join(\"%s='%s'\" % pair for pair in warnings))\n  return None",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 1,
                "column": 79
              },
              "text": "\"\"\"Returns error message for module inputs from ops with multiple outputs.\"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 1,
                    "column": 79
                  },
                  "text": "\"\"\"Returns error message for module inputs from ops with multiple outputs.\"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 5
                      },
                      "end": {
                        "row": 1,
                        "column": 76
                      },
                      "text": "Returns error message for module inputs from ops with multiple outputs."
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 1,
                        "column": 76
                      },
                      "end": {
                        "row": 1,
                        "column": 79
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 2
              },
              "end": {
                "row": 2,
                "column": 19
              },
              "text": "dense_inputs = []",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 2,
                    "column": 2
                  },
                  "end": {
                    "row": 2,
                    "column": 19
                  },
                  "text": "dense_inputs = []",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 2,
                        "column": 2
                      },
                      "end": {
                        "row": 2,
                        "column": 14
                      },
                      "text": "dense_inputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 2,
                        "column": 15
                      },
                      "end": {
                        "row": 2,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 2,
                        "column": 17
                      },
                      "end": {
                        "row": 2,
                        "column": 19
                      },
                      "text": "[]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 2,
                            "column": 17
                          },
                          "end": {
                            "row": 2,
                            "column": 18
                          },
                          "text": "["
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 2,
                            "column": 18
                          },
                          "end": {
                            "row": 2,
                            "column": 19
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 2,
                "column": 21
              },
              "end": {
                "row": 2,
                "column": 76
              },
              "text": "# List of (str, Tensor), with SparseTensors decomposed."
            },
            {
              "type": "for_statement",
              "start": {
                "row": 3,
                "column": 2
              },
              "end": {
                "row": 8,
                "column": 41
              },
              "text": "for name, tensor in sorted(inputs.items()):\n    if isinstance(tensor, tf.SparseTensor):\n      dense_inputs.extend((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))\n    else:\n      dense_inputs.append((name, tensor))",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 3,
                    "column": 2
                  },
                  "end": {
                    "row": 3,
                    "column": 5
                  },
                  "text": "for"
                },
                {
                  "type": "pattern_list",
                  "start": {
                    "row": 3,
                    "column": 6
                  },
                  "end": {
                    "row": 3,
                    "column": 18
                  },
                  "text": "name, tensor",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 6
                      },
                      "end": {
                        "row": 3,
                        "column": 10
                      },
                      "text": "name"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 3,
                        "column": 10
                      },
                      "end": {
                        "row": 3,
                        "column": 11
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 12
                      },
                      "end": {
                        "row": 3,
                        "column": 18
                      },
                      "text": "tensor"
                    }
                  ]
                },
                {
                  "type": "in",
                  "start": {
                    "row": 3,
                    "column": 19
                  },
                  "end": {
                    "row": 3,
                    "column": 21
                  },
                  "text": "in"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 3,
                    "column": 22
                  },
                  "end": {
                    "row": 3,
                    "column": 44
                  },
                  "text": "sorted(inputs.items())",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 3,
                        "column": 22
                      },
                      "end": {
                        "row": 3,
                        "column": 28
                      },
                      "text": "sorted"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 3,
                        "column": 28
                      },
                      "end": {
                        "row": 3,
                        "column": 44
                      },
                      "text": "(inputs.items())",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 3,
                            "column": 28
                          },
                          "end": {
                            "row": 3,
                            "column": 29
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 3,
                            "column": 29
                          },
                          "end": {
                            "row": 3,
                            "column": 43
                          },
                          "text": "inputs.items()",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 3,
                                "column": 29
                              },
                              "end": {
                                "row": 3,
                                "column": 41
                              },
                              "text": "inputs.items",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 35
                                  },
                                  "text": "inputs"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 3,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 36
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 41
                                  },
                                  "text": "items"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 3,
                                "column": 41
                              },
                              "end": {
                                "row": 3,
                                "column": 43
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 3,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 42
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 3,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 43
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 3,
                            "column": 43
                          },
                          "end": {
                            "row": 3,
                            "column": 44
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 3,
                    "column": 44
                  },
                  "end": {
                    "row": 3,
                    "column": 45
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 4,
                    "column": 4
                  },
                  "end": {
                    "row": 8,
                    "column": 41
                  },
                  "text": "if isinstance(tensor, tf.SparseTensor):\n      dense_inputs.extend((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))\n    else:\n      dense_inputs.append((name, tensor))",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 4,
                        "column": 4
                      },
                      "end": {
                        "row": 8,
                        "column": 41
                      },
                      "text": "if isinstance(tensor, tf.SparseTensor):\n      dense_inputs.extend((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))\n    else:\n      dense_inputs.append((name, tensor))",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 4,
                            "column": 4
                          },
                          "end": {
                            "row": 4,
                            "column": 6
                          },
                          "text": "if"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 4,
                            "column": 7
                          },
                          "end": {
                            "row": 4,
                            "column": 42
                          },
                          "text": "isinstance(tensor, tf.SparseTensor)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 4,
                                "column": 7
                              },
                              "end": {
                                "row": 4,
                                "column": 17
                              },
                              "text": "isinstance"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 4,
                                "column": 17
                              },
                              "end": {
                                "row": 4,
                                "column": 42
                              },
                              "text": "(tensor, tf.SparseTensor)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 4,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 18
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 4,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 24
                                  },
                                  "text": "tensor"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 4,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 25
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 4,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 41
                                  },
                                  "text": "tf.SparseTensor",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 4,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 28
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 4,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 29
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 4,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 4,
                                        "column": 41
                                      },
                                      "text": "SparseTensor"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 4,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 42
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 4,
                            "column": 42
                          },
                          "end": {
                            "row": 4,
                            "column": 43
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 5,
                            "column": 6
                          },
                          "end": {
                            "row": 6,
                            "column": 75
                          },
                          "text": "dense_inputs.extend((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 5,
                                "column": 6
                              },
                              "end": {
                                "row": 6,
                                "column": 75
                              },
                              "text": "dense_inputs.extend((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 5,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 75
                                  },
                                  "text": "dense_inputs.extend((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 5,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 25
                                      },
                                      "text": "dense_inputs.extend",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 5,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 18
                                          },
                                          "text": "dense_inputs"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 5,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 19
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 5,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 25
                                          },
                                          "text": "extend"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "generator_expression",
                                      "start": {
                                        "row": 5,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 75
                                      },
                                      "text": "((\"%s.%s\" % (name, attr), getattr(tensor, attr))\n                          for attr in (\"indices\", \"values\", \"dense_shape\"))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 5,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 26
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "tuple",
                                          "start": {
                                            "row": 5,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 5,
                                            "column": 73
                                          },
                                          "text": "(\"%s.%s\" % (name, attr), getattr(tensor, attr))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 5,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 5,
                                                "column": 27
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "binary_operator",
                                              "start": {
                                                "row": 5,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 5,
                                                "column": 49
                                              },
                                              "text": "\"%s.%s\" % (name, attr)",
                                              "children": [
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 34
                                                  },
                                                  "text": "\"%s.%s\"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 28
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 33
                                                      },
                                                      "text": "%s.%s"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 34
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "%",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 36
                                                  },
                                                  "text": "%"
                                                },
                                                {
                                                  "type": "tuple",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 49
                                                  },
                                                  "text": "(name, attr)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 38
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 42
                                                      },
                                                      "text": "name"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 43
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 48
                                                      },
                                                      "text": "attr"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 48
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 49
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 5,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 5,
                                                "column": 50
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 5,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 5,
                                                "column": 72
                                              },
                                              "text": "getattr(tensor, attr)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 58
                                                  },
                                                  "text": "getattr"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 5,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 5,
                                                    "column": 72
                                                  },
                                                  "text": "(tensor, attr)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 59
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 65
                                                      },
                                                      "text": "tensor"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 66
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 67
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 71
                                                      },
                                                      "text": "attr"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 5,
                                                        "column": 71
                                                      },
                                                      "end": {
                                                        "row": 5,
                                                        "column": 72
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 5,
                                                "column": 72
                                              },
                                              "end": {
                                                "row": 5,
                                                "column": 73
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "for_in_clause",
                                          "start": {
                                            "row": 6,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 74
                                          },
                                          "text": "for attr in (\"indices\", \"values\", \"dense_shape\")",
                                          "children": [
                                            {
                                              "type": "for",
                                              "start": {
                                                "row": 6,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 29
                                              },
                                              "text": "for"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 6,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 34
                                              },
                                              "text": "attr"
                                            },
                                            {
                                              "type": "in",
                                              "start": {
                                                "row": 6,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 37
                                              },
                                              "text": "in"
                                            },
                                            {
                                              "type": "tuple",
                                              "start": {
                                                "row": 6,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 74
                                              },
                                              "text": "(\"indices\", \"values\", \"dense_shape\")",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 39
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 48
                                                  },
                                                  "text": "\"indices\"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 6,
                                                        "column": 40
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 6,
                                                        "column": 47
                                                      },
                                                      "text": "indices"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 6,
                                                        "column": 48
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 49
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 58
                                                  },
                                                  "text": "\"values\"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 50
                                                      },
                                                      "end": {
                                                        "row": 6,
                                                        "column": 51
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 51
                                                      },
                                                      "end": {
                                                        "row": 6,
                                                        "column": 57
                                                      },
                                                      "text": "values"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 57
                                                      },
                                                      "end": {
                                                        "row": 6,
                                                        "column": 58
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 59
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 60
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 73
                                                  },
                                                  "text": "\"dense_shape\"",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 60
                                                      },
                                                      "end": {
                                                        "row": 6,
                                                        "column": 61
                                                      },
                                                      "text": "\""
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 61
                                                      },
                                                      "end": {
                                                        "row": 6,
                                                        "column": 72
                                                      },
                                                      "text": "dense_shape"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 6,
                                                        "column": 72
                                                      },
                                                      "end": {
                                                        "row": 6,
                                                        "column": 73
                                                      },
                                                      "text": "\""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 6,
                                                    "column": 73
                                                  },
                                                  "end": {
                                                    "row": 6,
                                                    "column": 74
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 6,
                                            "column": 74
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 75
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 7,
                            "column": 4
                          },
                          "end": {
                            "row": 8,
                            "column": 41
                          },
                          "text": "else:\n      dense_inputs.append((name, tensor))",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 7,
                                "column": 4
                              },
                              "end": {
                                "row": 7,
                                "column": 8
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 7,
                                "column": 8
                              },
                              "end": {
                                "row": 7,
                                "column": 9
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 8,
                                "column": 6
                              },
                              "end": {
                                "row": 8,
                                "column": 41
                              },
                              "text": "dense_inputs.append((name, tensor))",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 8,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 41
                                  },
                                  "text": "dense_inputs.append((name, tensor))",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 8,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 41
                                      },
                                      "text": "dense_inputs.append((name, tensor))",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 8,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 25
                                          },
                                          "text": "dense_inputs.append",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 8,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 18
                                              },
                                              "text": "dense_inputs"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 8,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 19
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 8,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 25
                                              },
                                              "text": "append"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 8,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 41
                                          },
                                          "text": "((name, tensor))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 8,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 26
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "tuple",
                                              "start": {
                                                "row": 8,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 40
                                              },
                                              "text": "(name, tensor)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 27
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 31
                                                  },
                                                  "text": "name"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 32
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 39
                                                  },
                                                  "text": "tensor"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 40
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 8,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 41
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 9,
                "column": 2
              },
              "end": {
                "row": 10,
                "column": 45
              },
              "text": "warnings = [(name, tensor.name) for name, tensor in dense_inputs\n              if len(tensor.op.outputs) != 1]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 9,
                    "column": 2
                  },
                  "end": {
                    "row": 10,
                    "column": 45
                  },
                  "text": "warnings = [(name, tensor.name) for name, tensor in dense_inputs\n              if len(tensor.op.outputs) != 1]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 2
                      },
                      "end": {
                        "row": 9,
                        "column": 10
                      },
                      "text": "warnings"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 9,
                        "column": 11
                      },
                      "end": {
                        "row": 9,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "list_comprehension",
                      "start": {
                        "row": 9,
                        "column": 13
                      },
                      "end": {
                        "row": 10,
                        "column": 45
                      },
                      "text": "[(name, tensor.name) for name, tensor in dense_inputs\n              if len(tensor.op.outputs) != 1]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 9,
                            "column": 13
                          },
                          "end": {
                            "row": 9,
                            "column": 14
                          },
                          "text": "["
                        },
                        {
                          "type": "tuple",
                          "start": {
                            "row": 9,
                            "column": 14
                          },
                          "end": {
                            "row": 9,
                            "column": 33
                          },
                          "text": "(name, tensor.name)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 9,
                                "column": 14
                              },
                              "end": {
                                "row": 9,
                                "column": 15
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 15
                              },
                              "end": {
                                "row": 9,
                                "column": 19
                              },
                              "text": "name"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 9,
                                "column": 19
                              },
                              "end": {
                                "row": 9,
                                "column": 20
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 9,
                                "column": 21
                              },
                              "end": {
                                "row": 9,
                                "column": 32
                              },
                              "text": "tensor.name",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 27
                                  },
                                  "text": "tensor"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 9,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 28
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 32
                                  },
                                  "text": "name"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 9,
                                "column": 32
                              },
                              "end": {
                                "row": 9,
                                "column": 33
                              },
                              "text": ")"
                            }
                          ]
                        },
                        {
                          "type": "for_in_clause",
                          "start": {
                            "row": 9,
                            "column": 34
                          },
                          "end": {
                            "row": 9,
                            "column": 66
                          },
                          "text": "for name, tensor in dense_inputs",
                          "children": [
                            {
                              "type": "for",
                              "start": {
                                "row": 9,
                                "column": 34
                              },
                              "end": {
                                "row": 9,
                                "column": 37
                              },
                              "text": "for"
                            },
                            {
                              "type": "pattern_list",
                              "start": {
                                "row": 9,
                                "column": 38
                              },
                              "end": {
                                "row": 9,
                                "column": 50
                              },
                              "text": "name, tensor",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 42
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 9,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 43
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 50
                                  },
                                  "text": "tensor"
                                }
                              ]
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 9,
                                "column": 51
                              },
                              "end": {
                                "row": 9,
                                "column": 53
                              },
                              "text": "in"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 54
                              },
                              "end": {
                                "row": 9,
                                "column": 66
                              },
                              "text": "dense_inputs"
                            }
                          ]
                        },
                        {
                          "type": "if_clause",
                          "start": {
                            "row": 10,
                            "column": 14
                          },
                          "end": {
                            "row": 10,
                            "column": 44
                          },
                          "text": "if len(tensor.op.outputs) != 1",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 10,
                                "column": 14
                              },
                              "end": {
                                "row": 10,
                                "column": 16
                              },
                              "text": "if"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 10,
                                "column": 17
                              },
                              "end": {
                                "row": 10,
                                "column": 44
                              },
                              "text": "len(tensor.op.outputs) != 1",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 10,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 39
                                  },
                                  "text": "len(tensor.op.outputs)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 20
                                      },
                                      "text": "len"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 10,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 39
                                      },
                                      "text": "(tensor.op.outputs)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 10,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 21
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 10,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 38
                                          },
                                          "text": "tensor.op.outputs",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 10,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 30
                                              },
                                              "text": "tensor.op",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 10,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 10,
                                                    "column": 27
                                                  },
                                                  "text": "tensor"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 10,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 10,
                                                    "column": 28
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 10,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 10,
                                                    "column": 30
                                                  },
                                                  "text": "op"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 10,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 31
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 10,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 10,
                                                "column": 38
                                              },
                                              "text": "outputs"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 10,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 39
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "!=",
                                  "start": {
                                    "row": 10,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 42
                                  },
                                  "text": "!="
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 10,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 44
                                  },
                                  "text": "1"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 10,
                            "column": 44
                          },
                          "end": {
                            "row": 10,
                            "column": 45
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 11,
                "column": 2
              },
              "end": {
                "row": 17,
                "column": 57
              },
              "text": "if warnings:\n    return (\n        \"WARNING: The inputs declared in hub.add_signature() should be tensors \"\n        \"from ops with a single output, or else uses of tf.colocate_with() on \"\n        \"that op can trigger fatal errors when the module is applied and \"\n        \"colocation constraints have to be rewritten.\\nAffected inputs: %s\" %\n        \", \".join(\"%s='%s'\" % pair for pair in warnings))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 11,
                    "column": 2
                  },
                  "end": {
                    "row": 11,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 11,
                    "column": 5
                  },
                  "end": {
                    "row": 11,
                    "column": 13
                  },
                  "text": "warnings"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 11,
                    "column": 13
                  },
                  "end": {
                    "row": 11,
                    "column": 14
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 12,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 57
                  },
                  "text": "return (\n        \"WARNING: The inputs declared in hub.add_signature() should be tensors \"\n        \"from ops with a single output, or else uses of tf.colocate_with() on \"\n        \"that op can trigger fatal errors when the module is applied and \"\n        \"colocation constraints have to be rewritten.\\nAffected inputs: %s\" %\n        \", \".join(\"%s='%s'\" % pair for pair in warnings))",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 12,
                        "column": 4
                      },
                      "end": {
                        "row": 17,
                        "column": 57
                      },
                      "text": "return (\n        \"WARNING: The inputs declared in hub.add_signature() should be tensors \"\n        \"from ops with a single output, or else uses of tf.colocate_with() on \"\n        \"that op can trigger fatal errors when the module is applied and \"\n        \"colocation constraints have to be rewritten.\\nAffected inputs: %s\" %\n        \", \".join(\"%s='%s'\" % pair for pair in warnings))",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 12,
                            "column": 4
                          },
                          "end": {
                            "row": 12,
                            "column": 10
                          },
                          "text": "return"
                        },
                        {
                          "type": "parenthesized_expression",
                          "start": {
                            "row": 12,
                            "column": 11
                          },
                          "end": {
                            "row": 17,
                            "column": 57
                          },
                          "text": "(\n        \"WARNING: The inputs declared in hub.add_signature() should be tensors \"\n        \"from ops with a single output, or else uses of tf.colocate_with() on \"\n        \"that op can trigger fatal errors when the module is applied and \"\n        \"colocation constraints have to be rewritten.\\nAffected inputs: %s\" %\n        \", \".join(\"%s='%s'\" % pair for pair in warnings))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 11
                              },
                              "end": {
                                "row": 12,
                                "column": 12
                              },
                              "text": "("
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 13,
                                "column": 8
                              },
                              "end": {
                                "row": 17,
                                "column": 56
                              },
                              "text": "\"WARNING: The inputs declared in hub.add_signature() should be tensors \"\n        \"from ops with a single output, or else uses of tf.colocate_with() on \"\n        \"that op can trigger fatal errors when the module is applied and \"\n        \"colocation constraints have to be rewritten.\\nAffected inputs: %s\" %\n        \", \".join(\"%s='%s'\" % pair for pair in warnings)",
                              "children": [
                                {
                                  "type": "concatenated_string",
                                  "start": {
                                    "row": 13,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 75
                                  },
                                  "text": "\"WARNING: The inputs declared in hub.add_signature() should be tensors \"\n        \"from ops with a single output, or else uses of tf.colocate_with() on \"\n        \"that op can trigger fatal errors when the module is applied and \"\n        \"colocation constraints have to be rewritten.\\nAffected inputs: %s\"",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 13,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 80
                                      },
                                      "text": "\"WARNING: The inputs declared in hub.add_signature() should be tensors \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 13,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 9
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 13,
                                            "column": 9
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 79
                                          },
                                          "text": "WARNING: The inputs declared in hub.add_signature() should be tensors "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 13,
                                            "column": 79
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 80
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 14,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 79
                                      },
                                      "text": "\"from ops with a single output, or else uses of tf.colocate_with() on \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 14,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 9
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 14,
                                            "column": 9
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 78
                                          },
                                          "text": "from ops with a single output, or else uses of tf.colocate_with() on "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 14,
                                            "column": 78
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 79
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 15,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 74
                                      },
                                      "text": "\"that op can trigger fatal errors when the module is applied and \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 15,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 9
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 15,
                                            "column": 9
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 73
                                          },
                                          "text": "that op can trigger fatal errors when the module is applied and "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 15,
                                            "column": 73
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 74
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 16,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 75
                                      },
                                      "text": "\"colocation constraints have to be rewritten.\\nAffected inputs: %s\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 16,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 9
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 16,
                                            "column": 9
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 74
                                          },
                                          "text": "colocation constraints have to be rewritten.\\nAffected inputs: %s",
                                          "children": [
                                            {
                                              "type": "escape_sequence",
                                              "start": {
                                                "row": 16,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 55
                                              },
                                              "text": "\\n"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 16,
                                            "column": 74
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 75
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "%",
                                  "start": {
                                    "row": 16,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 77
                                  },
                                  "text": "%"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 17,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 56
                                  },
                                  "text": "\", \".join(\"%s='%s'\" % pair for pair in warnings)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 17,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 17
                                      },
                                      "text": "\", \".join",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 17,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 12
                                          },
                                          "text": "\", \"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 17,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 9
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 17,
                                                "column": 9
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 11
                                              },
                                              "text": ", "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 17,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 12
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 17,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 13
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 17,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 17
                                          },
                                          "text": "join"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "generator_expression",
                                      "start": {
                                        "row": 17,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 56
                                      },
                                      "text": "(\"%s='%s'\" % pair for pair in warnings)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 17,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 18
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_operator",
                                          "start": {
                                            "row": 17,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 34
                                          },
                                          "text": "\"%s='%s'\" % pair",
                                          "children": [
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 17,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 27
                                              },
                                              "text": "\"%s='%s'\"",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 19
                                                  },
                                                  "text": "\""
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 19
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 26
                                                  },
                                                  "text": "%s='%s'"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 17,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 17,
                                                    "column": 27
                                                  },
                                                  "text": "\""
                                                }
                                              ]
                                            },
                                            {
                                              "type": "%",
                                              "start": {
                                                "row": 17,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 29
                                              },
                                              "text": "%"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 17,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 34
                                              },
                                              "text": "pair"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "for_in_clause",
                                          "start": {
                                            "row": 17,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 55
                                          },
                                          "text": "for pair in warnings",
                                          "children": [
                                            {
                                              "type": "for",
                                              "start": {
                                                "row": 17,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 38
                                              },
                                              "text": "for"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 17,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 43
                                              },
                                              "text": "pair"
                                            },
                                            {
                                              "type": "in",
                                              "start": {
                                                "row": 17,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 46
                                              },
                                              "text": "in"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 17,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 17,
                                                "column": 55
                                              },
                                              "text": "warnings"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 17,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 17,
                                            "column": 56
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 17,
                                "column": 56
                              },
                              "end": {
                                "row": 17,
                                "column": 57
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 18,
                "column": 2
              },
              "end": {
                "row": 18,
                "column": 13
              },
              "text": "return None",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 18,
                    "column": 2
                  },
                  "end": {
                    "row": 18,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "none",
                  "start": {
                    "row": 18,
                    "column": 9
                  },
                  "end": {
                    "row": 18,
                    "column": 13
                  },
                  "text": "None"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}