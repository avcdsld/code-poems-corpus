{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 45,
    "column": 91
  },
  "text": "def pow(base, exp):\n    \"\"\"Returns element-wise result of base element raised to powers from exp element.\n\n    Both inputs can be Symbol or scalar number.\n    Broadcasting is not supported. Use `broadcast_pow` instead.\n\n    `sym.pow` is being deprecated, please use `sym.power` instead.\n\n    Parameters\n    ---------\n    base : Symbol or scalar\n        The base symbol\n    exp : Symbol or scalar\n        The exponent symbol\n\n    Returns\n    -------\n    Symbol or scalar\n        The bases in x raised to the exponents in y.\n\n    Examples\n    --------\n    >>> mx.sym.pow(2, 3)\n    8\n    >>> x = mx.sym.Variable('x')\n    >>> y = mx.sym.Variable('y')\n    >>> z = mx.sym.pow(x, 2)\n    >>> z.eval(x=mx.nd.array([1,2]))[0].asnumpy()\n    array([ 1.,  4.], dtype=float32)\n    >>> z = mx.sym.pow(3, y)\n    >>> z.eval(y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  27.], dtype=float32)\n    >>> z = mx.sym.pow(x, y)\n    >>> z.eval(x=mx.nd.array([3,4]), y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  64.], dtype=float32)\n    \"\"\"\n    if isinstance(base, Symbol) and isinstance(exp, Symbol):\n        return _internal._Power(base, exp)\n    if isinstance(base, Symbol) and isinstance(exp, Number):\n        return _internal._PowerScalar(base, scalar=exp)\n    if isinstance(base, Number) and isinstance(exp, Symbol):\n        return _internal._RPowerScalar(exp, scalar=base)\n    if isinstance(base, Number) and isinstance(exp, Number):\n        return base**exp\n    else:\n        raise TypeError('types (%s, %s) not supported' % (str(type(base)), str(type(exp))))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 45,
        "column": 91
      },
      "text": "def pow(base, exp):\n    \"\"\"Returns element-wise result of base element raised to powers from exp element.\n\n    Both inputs can be Symbol or scalar number.\n    Broadcasting is not supported. Use `broadcast_pow` instead.\n\n    `sym.pow` is being deprecated, please use `sym.power` instead.\n\n    Parameters\n    ---------\n    base : Symbol or scalar\n        The base symbol\n    exp : Symbol or scalar\n        The exponent symbol\n\n    Returns\n    -------\n    Symbol or scalar\n        The bases in x raised to the exponents in y.\n\n    Examples\n    --------\n    >>> mx.sym.pow(2, 3)\n    8\n    >>> x = mx.sym.Variable('x')\n    >>> y = mx.sym.Variable('y')\n    >>> z = mx.sym.pow(x, 2)\n    >>> z.eval(x=mx.nd.array([1,2]))[0].asnumpy()\n    array([ 1.,  4.], dtype=float32)\n    >>> z = mx.sym.pow(3, y)\n    >>> z.eval(y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  27.], dtype=float32)\n    >>> z = mx.sym.pow(x, y)\n    >>> z.eval(x=mx.nd.array([3,4]), y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  64.], dtype=float32)\n    \"\"\"\n    if isinstance(base, Symbol) and isinstance(exp, Symbol):\n        return _internal._Power(base, exp)\n    if isinstance(base, Symbol) and isinstance(exp, Number):\n        return _internal._PowerScalar(base, scalar=exp)\n    if isinstance(base, Number) and isinstance(exp, Symbol):\n        return _internal._RPowerScalar(exp, scalar=base)\n    if isinstance(base, Number) and isinstance(exp, Number):\n        return base**exp\n    else:\n        raise TypeError('types (%s, %s) not supported' % (str(type(base)), str(type(exp))))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 7
          },
          "text": "pow"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 7
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "(base, exp)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 8
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "base"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "exp"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 45,
            "column": 91
          },
          "text": "\"\"\"Returns element-wise result of base element raised to powers from exp element.\n\n    Both inputs can be Symbol or scalar number.\n    Broadcasting is not supported. Use `broadcast_pow` instead.\n\n    `sym.pow` is being deprecated, please use `sym.power` instead.\n\n    Parameters\n    ---------\n    base : Symbol or scalar\n        The base symbol\n    exp : Symbol or scalar\n        The exponent symbol\n\n    Returns\n    -------\n    Symbol or scalar\n        The bases in x raised to the exponents in y.\n\n    Examples\n    --------\n    >>> mx.sym.pow(2, 3)\n    8\n    >>> x = mx.sym.Variable('x')\n    >>> y = mx.sym.Variable('y')\n    >>> z = mx.sym.pow(x, 2)\n    >>> z.eval(x=mx.nd.array([1,2]))[0].asnumpy()\n    array([ 1.,  4.], dtype=float32)\n    >>> z = mx.sym.pow(3, y)\n    >>> z.eval(y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  27.], dtype=float32)\n    >>> z = mx.sym.pow(x, y)\n    >>> z.eval(x=mx.nd.array([3,4]), y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  64.], dtype=float32)\n    \"\"\"\n    if isinstance(base, Symbol) and isinstance(exp, Symbol):\n        return _internal._Power(base, exp)\n    if isinstance(base, Symbol) and isinstance(exp, Number):\n        return _internal._PowerScalar(base, scalar=exp)\n    if isinstance(base, Number) and isinstance(exp, Symbol):\n        return _internal._RPowerScalar(exp, scalar=base)\n    if isinstance(base, Number) and isinstance(exp, Number):\n        return base**exp\n    else:\n        raise TypeError('types (%s, %s) not supported' % (str(type(base)), str(type(exp))))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 35,
                "column": 7
              },
              "text": "\"\"\"Returns element-wise result of base element raised to powers from exp element.\n\n    Both inputs can be Symbol or scalar number.\n    Broadcasting is not supported. Use `broadcast_pow` instead.\n\n    `sym.pow` is being deprecated, please use `sym.power` instead.\n\n    Parameters\n    ---------\n    base : Symbol or scalar\n        The base symbol\n    exp : Symbol or scalar\n        The exponent symbol\n\n    Returns\n    -------\n    Symbol or scalar\n        The bases in x raised to the exponents in y.\n\n    Examples\n    --------\n    >>> mx.sym.pow(2, 3)\n    8\n    >>> x = mx.sym.Variable('x')\n    >>> y = mx.sym.Variable('y')\n    >>> z = mx.sym.pow(x, 2)\n    >>> z.eval(x=mx.nd.array([1,2]))[0].asnumpy()\n    array([ 1.,  4.], dtype=float32)\n    >>> z = mx.sym.pow(3, y)\n    >>> z.eval(y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  27.], dtype=float32)\n    >>> z = mx.sym.pow(x, y)\n    >>> z.eval(x=mx.nd.array([3,4]), y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  64.], dtype=float32)\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 35,
                    "column": 7
                  },
                  "text": "\"\"\"Returns element-wise result of base element raised to powers from exp element.\n\n    Both inputs can be Symbol or scalar number.\n    Broadcasting is not supported. Use `broadcast_pow` instead.\n\n    `sym.pow` is being deprecated, please use `sym.power` instead.\n\n    Parameters\n    ---------\n    base : Symbol or scalar\n        The base symbol\n    exp : Symbol or scalar\n        The exponent symbol\n\n    Returns\n    -------\n    Symbol or scalar\n        The bases in x raised to the exponents in y.\n\n    Examples\n    --------\n    >>> mx.sym.pow(2, 3)\n    8\n    >>> x = mx.sym.Variable('x')\n    >>> y = mx.sym.Variable('y')\n    >>> z = mx.sym.pow(x, 2)\n    >>> z.eval(x=mx.nd.array([1,2]))[0].asnumpy()\n    array([ 1.,  4.], dtype=float32)\n    >>> z = mx.sym.pow(3, y)\n    >>> z.eval(y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  27.], dtype=float32)\n    >>> z = mx.sym.pow(x, y)\n    >>> z.eval(x=mx.nd.array([3,4]), y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  64.], dtype=float32)\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 35,
                        "column": 4
                      },
                      "text": "Returns element-wise result of base element raised to powers from exp element.\n\n    Both inputs can be Symbol or scalar number.\n    Broadcasting is not supported. Use `broadcast_pow` instead.\n\n    `sym.pow` is being deprecated, please use `sym.power` instead.\n\n    Parameters\n    ---------\n    base : Symbol or scalar\n        The base symbol\n    exp : Symbol or scalar\n        The exponent symbol\n\n    Returns\n    -------\n    Symbol or scalar\n        The bases in x raised to the exponents in y.\n\n    Examples\n    --------\n    >>> mx.sym.pow(2, 3)\n    8\n    >>> x = mx.sym.Variable('x')\n    >>> y = mx.sym.Variable('y')\n    >>> z = mx.sym.pow(x, 2)\n    >>> z.eval(x=mx.nd.array([1,2]))[0].asnumpy()\n    array([ 1.,  4.], dtype=float32)\n    >>> z = mx.sym.pow(3, y)\n    >>> z.eval(y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  27.], dtype=float32)\n    >>> z = mx.sym.pow(x, y)\n    >>> z.eval(x=mx.nd.array([3,4]), y=mx.nd.array([2,3]))[0].asnumpy()\n    array([  9.,  64.], dtype=float32)\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 35,
                        "column": 4
                      },
                      "end": {
                        "row": 35,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 36,
                "column": 4
              },
              "end": {
                "row": 37,
                "column": 42
              },
              "text": "if isinstance(base, Symbol) and isinstance(exp, Symbol):\n        return _internal._Power(base, exp)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 36,
                    "column": 4
                  },
                  "end": {
                    "row": 36,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 36,
                    "column": 7
                  },
                  "end": {
                    "row": 36,
                    "column": 59
                  },
                  "text": "isinstance(base, Symbol) and isinstance(exp, Symbol)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 36,
                        "column": 7
                      },
                      "end": {
                        "row": 36,
                        "column": 31
                      },
                      "text": "isinstance(base, Symbol)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 36,
                            "column": 7
                          },
                          "end": {
                            "row": 36,
                            "column": 17
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 36,
                            "column": 17
                          },
                          "end": {
                            "row": 36,
                            "column": 31
                          },
                          "text": "(base, Symbol)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 36,
                                "column": 17
                              },
                              "end": {
                                "row": 36,
                                "column": 18
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 18
                              },
                              "end": {
                                "row": 36,
                                "column": 22
                              },
                              "text": "base"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 36,
                                "column": 22
                              },
                              "end": {
                                "row": 36,
                                "column": 23
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 24
                              },
                              "end": {
                                "row": 36,
                                "column": 30
                              },
                              "text": "Symbol"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 36,
                                "column": 30
                              },
                              "end": {
                                "row": 36,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 36,
                        "column": 32
                      },
                      "end": {
                        "row": 36,
                        "column": 35
                      },
                      "text": "and"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 36,
                        "column": 36
                      },
                      "end": {
                        "row": 36,
                        "column": 59
                      },
                      "text": "isinstance(exp, Symbol)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 36,
                            "column": 36
                          },
                          "end": {
                            "row": 36,
                            "column": 46
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 36,
                            "column": 46
                          },
                          "end": {
                            "row": 36,
                            "column": 59
                          },
                          "text": "(exp, Symbol)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 36,
                                "column": 46
                              },
                              "end": {
                                "row": 36,
                                "column": 47
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 47
                              },
                              "end": {
                                "row": 36,
                                "column": 50
                              },
                              "text": "exp"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 36,
                                "column": 50
                              },
                              "end": {
                                "row": 36,
                                "column": 51
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 52
                              },
                              "end": {
                                "row": 36,
                                "column": 58
                              },
                              "text": "Symbol"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 36,
                                "column": 58
                              },
                              "end": {
                                "row": 36,
                                "column": 59
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 36,
                    "column": 59
                  },
                  "end": {
                    "row": 36,
                    "column": 60
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 37,
                    "column": 8
                  },
                  "end": {
                    "row": 37,
                    "column": 42
                  },
                  "text": "return _internal._Power(base, exp)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 37,
                        "column": 8
                      },
                      "end": {
                        "row": 37,
                        "column": 42
                      },
                      "text": "return _internal._Power(base, exp)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 37,
                            "column": 8
                          },
                          "end": {
                            "row": 37,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 37,
                            "column": 15
                          },
                          "end": {
                            "row": 37,
                            "column": 42
                          },
                          "text": "_internal._Power(base, exp)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 37,
                                "column": 15
                              },
                              "end": {
                                "row": 37,
                                "column": 31
                              },
                              "text": "_internal._Power",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 24
                                  },
                                  "text": "_internal"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 37,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 31
                                  },
                                  "text": "_Power"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 37,
                                "column": 31
                              },
                              "end": {
                                "row": 37,
                                "column": 42
                              },
                              "text": "(base, exp)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 37,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 32
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 36
                                  },
                                  "text": "base"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 37,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 37
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 41
                                  },
                                  "text": "exp"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 37,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 42
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 38,
                "column": 4
              },
              "end": {
                "row": 39,
                "column": 55
              },
              "text": "if isinstance(base, Symbol) and isinstance(exp, Number):\n        return _internal._PowerScalar(base, scalar=exp)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 38,
                    "column": 4
                  },
                  "end": {
                    "row": 38,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 38,
                    "column": 7
                  },
                  "end": {
                    "row": 38,
                    "column": 59
                  },
                  "text": "isinstance(base, Symbol) and isinstance(exp, Number)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 38,
                        "column": 7
                      },
                      "end": {
                        "row": 38,
                        "column": 31
                      },
                      "text": "isinstance(base, Symbol)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 38,
                            "column": 7
                          },
                          "end": {
                            "row": 38,
                            "column": 17
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 38,
                            "column": 17
                          },
                          "end": {
                            "row": 38,
                            "column": 31
                          },
                          "text": "(base, Symbol)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 38,
                                "column": 17
                              },
                              "end": {
                                "row": 38,
                                "column": 18
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 18
                              },
                              "end": {
                                "row": 38,
                                "column": 22
                              },
                              "text": "base"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 38,
                                "column": 22
                              },
                              "end": {
                                "row": 38,
                                "column": 23
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 24
                              },
                              "end": {
                                "row": 38,
                                "column": 30
                              },
                              "text": "Symbol"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 38,
                                "column": 30
                              },
                              "end": {
                                "row": 38,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 38,
                        "column": 32
                      },
                      "end": {
                        "row": 38,
                        "column": 35
                      },
                      "text": "and"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 38,
                        "column": 36
                      },
                      "end": {
                        "row": 38,
                        "column": 59
                      },
                      "text": "isinstance(exp, Number)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 38,
                            "column": 36
                          },
                          "end": {
                            "row": 38,
                            "column": 46
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 38,
                            "column": 46
                          },
                          "end": {
                            "row": 38,
                            "column": 59
                          },
                          "text": "(exp, Number)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 38,
                                "column": 46
                              },
                              "end": {
                                "row": 38,
                                "column": 47
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 47
                              },
                              "end": {
                                "row": 38,
                                "column": 50
                              },
                              "text": "exp"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 38,
                                "column": 50
                              },
                              "end": {
                                "row": 38,
                                "column": 51
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 52
                              },
                              "end": {
                                "row": 38,
                                "column": 58
                              },
                              "text": "Number"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 38,
                                "column": 58
                              },
                              "end": {
                                "row": 38,
                                "column": 59
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 38,
                    "column": 59
                  },
                  "end": {
                    "row": 38,
                    "column": 60
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 39,
                    "column": 8
                  },
                  "end": {
                    "row": 39,
                    "column": 55
                  },
                  "text": "return _internal._PowerScalar(base, scalar=exp)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 39,
                        "column": 8
                      },
                      "end": {
                        "row": 39,
                        "column": 55
                      },
                      "text": "return _internal._PowerScalar(base, scalar=exp)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 39,
                            "column": 8
                          },
                          "end": {
                            "row": 39,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 39,
                            "column": 15
                          },
                          "end": {
                            "row": 39,
                            "column": 55
                          },
                          "text": "_internal._PowerScalar(base, scalar=exp)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 39,
                                "column": 15
                              },
                              "end": {
                                "row": 39,
                                "column": 37
                              },
                              "text": "_internal._PowerScalar",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 24
                                  },
                                  "text": "_internal"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 39,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 37
                                  },
                                  "text": "_PowerScalar"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 39,
                                "column": 37
                              },
                              "end": {
                                "row": 39,
                                "column": 55
                              },
                              "text": "(base, scalar=exp)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 39,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 38
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 42
                                  },
                                  "text": "base"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 39,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 43
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "keyword_argument",
                                  "start": {
                                    "row": 39,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 54
                                  },
                                  "text": "scalar=exp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 39,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 50
                                      },
                                      "text": "scalar"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 39,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 51
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 39,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 54
                                      },
                                      "text": "exp"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 39,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 55
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 40,
                "column": 4
              },
              "end": {
                "row": 41,
                "column": 56
              },
              "text": "if isinstance(base, Number) and isinstance(exp, Symbol):\n        return _internal._RPowerScalar(exp, scalar=base)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 40,
                    "column": 4
                  },
                  "end": {
                    "row": 40,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 40,
                    "column": 7
                  },
                  "end": {
                    "row": 40,
                    "column": 59
                  },
                  "text": "isinstance(base, Number) and isinstance(exp, Symbol)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 40,
                        "column": 7
                      },
                      "end": {
                        "row": 40,
                        "column": 31
                      },
                      "text": "isinstance(base, Number)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 40,
                            "column": 7
                          },
                          "end": {
                            "row": 40,
                            "column": 17
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 40,
                            "column": 17
                          },
                          "end": {
                            "row": 40,
                            "column": 31
                          },
                          "text": "(base, Number)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 40,
                                "column": 17
                              },
                              "end": {
                                "row": 40,
                                "column": 18
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 18
                              },
                              "end": {
                                "row": 40,
                                "column": 22
                              },
                              "text": "base"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 40,
                                "column": 22
                              },
                              "end": {
                                "row": 40,
                                "column": 23
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 24
                              },
                              "end": {
                                "row": 40,
                                "column": 30
                              },
                              "text": "Number"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 40,
                                "column": 30
                              },
                              "end": {
                                "row": 40,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 40,
                        "column": 32
                      },
                      "end": {
                        "row": 40,
                        "column": 35
                      },
                      "text": "and"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 40,
                        "column": 36
                      },
                      "end": {
                        "row": 40,
                        "column": 59
                      },
                      "text": "isinstance(exp, Symbol)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 40,
                            "column": 36
                          },
                          "end": {
                            "row": 40,
                            "column": 46
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 40,
                            "column": 46
                          },
                          "end": {
                            "row": 40,
                            "column": 59
                          },
                          "text": "(exp, Symbol)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 40,
                                "column": 46
                              },
                              "end": {
                                "row": 40,
                                "column": 47
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 47
                              },
                              "end": {
                                "row": 40,
                                "column": 50
                              },
                              "text": "exp"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 40,
                                "column": 50
                              },
                              "end": {
                                "row": 40,
                                "column": 51
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 52
                              },
                              "end": {
                                "row": 40,
                                "column": 58
                              },
                              "text": "Symbol"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 40,
                                "column": 58
                              },
                              "end": {
                                "row": 40,
                                "column": 59
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 40,
                    "column": 59
                  },
                  "end": {
                    "row": 40,
                    "column": 60
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 41,
                    "column": 8
                  },
                  "end": {
                    "row": 41,
                    "column": 56
                  },
                  "text": "return _internal._RPowerScalar(exp, scalar=base)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 41,
                        "column": 8
                      },
                      "end": {
                        "row": 41,
                        "column": 56
                      },
                      "text": "return _internal._RPowerScalar(exp, scalar=base)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 41,
                            "column": 8
                          },
                          "end": {
                            "row": 41,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 41,
                            "column": 15
                          },
                          "end": {
                            "row": 41,
                            "column": 56
                          },
                          "text": "_internal._RPowerScalar(exp, scalar=base)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 41,
                                "column": 15
                              },
                              "end": {
                                "row": 41,
                                "column": 38
                              },
                              "text": "_internal._RPowerScalar",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 24
                                  },
                                  "text": "_internal"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 41,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 38
                                  },
                                  "text": "_RPowerScalar"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 41,
                                "column": 38
                              },
                              "end": {
                                "row": 41,
                                "column": 56
                              },
                              "text": "(exp, scalar=base)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 41,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 39
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 42
                                  },
                                  "text": "exp"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 41,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 43
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "keyword_argument",
                                  "start": {
                                    "row": 41,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 55
                                  },
                                  "text": "scalar=base",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 41,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 50
                                      },
                                      "text": "scalar"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 41,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 51
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 41,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 55
                                      },
                                      "text": "base"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 41,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 42,
                "column": 4
              },
              "end": {
                "row": 45,
                "column": 91
              },
              "text": "if isinstance(base, Number) and isinstance(exp, Number):\n        return base**exp\n    else:\n        raise TypeError('types (%s, %s) not supported' % (str(type(base)), str(type(exp))))",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 42,
                    "column": 4
                  },
                  "end": {
                    "row": 42,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 42,
                    "column": 7
                  },
                  "end": {
                    "row": 42,
                    "column": 59
                  },
                  "text": "isinstance(base, Number) and isinstance(exp, Number)",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 42,
                        "column": 7
                      },
                      "end": {
                        "row": 42,
                        "column": 31
                      },
                      "text": "isinstance(base, Number)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 42,
                            "column": 7
                          },
                          "end": {
                            "row": 42,
                            "column": 17
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 42,
                            "column": 17
                          },
                          "end": {
                            "row": 42,
                            "column": 31
                          },
                          "text": "(base, Number)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 42,
                                "column": 17
                              },
                              "end": {
                                "row": 42,
                                "column": 18
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 18
                              },
                              "end": {
                                "row": 42,
                                "column": 22
                              },
                              "text": "base"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 42,
                                "column": 22
                              },
                              "end": {
                                "row": 42,
                                "column": 23
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 24
                              },
                              "end": {
                                "row": 42,
                                "column": 30
                              },
                              "text": "Number"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 42,
                                "column": 30
                              },
                              "end": {
                                "row": 42,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 42,
                        "column": 32
                      },
                      "end": {
                        "row": 42,
                        "column": 35
                      },
                      "text": "and"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 42,
                        "column": 36
                      },
                      "end": {
                        "row": 42,
                        "column": 59
                      },
                      "text": "isinstance(exp, Number)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 42,
                            "column": 36
                          },
                          "end": {
                            "row": 42,
                            "column": 46
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 42,
                            "column": 46
                          },
                          "end": {
                            "row": 42,
                            "column": 59
                          },
                          "text": "(exp, Number)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 42,
                                "column": 46
                              },
                              "end": {
                                "row": 42,
                                "column": 47
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 47
                              },
                              "end": {
                                "row": 42,
                                "column": 50
                              },
                              "text": "exp"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 42,
                                "column": 50
                              },
                              "end": {
                                "row": 42,
                                "column": 51
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 52
                              },
                              "end": {
                                "row": 42,
                                "column": 58
                              },
                              "text": "Number"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 42,
                                "column": 58
                              },
                              "end": {
                                "row": 42,
                                "column": 59
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 42,
                    "column": 59
                  },
                  "end": {
                    "row": 42,
                    "column": 60
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 43,
                    "column": 8
                  },
                  "end": {
                    "row": 43,
                    "column": 24
                  },
                  "text": "return base**exp",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 43,
                        "column": 8
                      },
                      "end": {
                        "row": 43,
                        "column": 24
                      },
                      "text": "return base**exp",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 43,
                            "column": 8
                          },
                          "end": {
                            "row": 43,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "binary_operator",
                          "start": {
                            "row": 43,
                            "column": 15
                          },
                          "end": {
                            "row": 43,
                            "column": 24
                          },
                          "text": "base**exp",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 43,
                                "column": 15
                              },
                              "end": {
                                "row": 43,
                                "column": 19
                              },
                              "text": "base"
                            },
                            {
                              "type": "**",
                              "start": {
                                "row": 43,
                                "column": 19
                              },
                              "end": {
                                "row": 43,
                                "column": 21
                              },
                              "text": "**"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 43,
                                "column": 21
                              },
                              "end": {
                                "row": 43,
                                "column": 24
                              },
                              "text": "exp"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 44,
                    "column": 4
                  },
                  "end": {
                    "row": 45,
                    "column": 91
                  },
                  "text": "else:\n        raise TypeError('types (%s, %s) not supported' % (str(type(base)), str(type(exp))))",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 44,
                        "column": 4
                      },
                      "end": {
                        "row": 44,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 44,
                        "column": 8
                      },
                      "end": {
                        "row": 44,
                        "column": 9
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 45,
                        "column": 8
                      },
                      "end": {
                        "row": 45,
                        "column": 91
                      },
                      "text": "raise TypeError('types (%s, %s) not supported' % (str(type(base)), str(type(exp))))",
                      "children": [
                        {
                          "type": "raise_statement",
                          "start": {
                            "row": 45,
                            "column": 8
                          },
                          "end": {
                            "row": 45,
                            "column": 91
                          },
                          "text": "raise TypeError('types (%s, %s) not supported' % (str(type(base)), str(type(exp))))",
                          "children": [
                            {
                              "type": "raise",
                              "start": {
                                "row": 45,
                                "column": 8
                              },
                              "end": {
                                "row": 45,
                                "column": 13
                              },
                              "text": "raise"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 45,
                                "column": 14
                              },
                              "end": {
                                "row": 45,
                                "column": 91
                              },
                              "text": "TypeError('types (%s, %s) not supported' % (str(type(base)), str(type(exp))))",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 23
                                  },
                                  "text": "TypeError"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 45,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 91
                                  },
                                  "text": "('types (%s, %s) not supported' % (str(type(base)), str(type(exp))))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 45,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 24
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 45,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 90
                                      },
                                      "text": "'types (%s, %s) not supported' % (str(type(base)), str(type(exp)))",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 45,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 54
                                          },
                                          "text": "'types (%s, %s) not supported'",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 45,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 25
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 45,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 53
                                              },
                                              "text": "types (%s, %s) not supported"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 45,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 54
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "%",
                                          "start": {
                                            "row": 45,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 56
                                          },
                                          "text": "%"
                                        },
                                        {
                                          "type": "tuple",
                                          "start": {
                                            "row": 45,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 90
                                          },
                                          "text": "(str(type(base)), str(type(exp)))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 45,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 58
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 45,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 73
                                              },
                                              "text": "str(type(base))",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 45,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 45,
                                                    "column": 61
                                                  },
                                                  "text": "str"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 45,
                                                    "column": 61
                                                  },
                                                  "end": {
                                                    "row": 45,
                                                    "column": 73
                                                  },
                                                  "text": "(type(base))",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 45,
                                                        "column": 61
                                                      },
                                                      "end": {
                                                        "row": 45,
                                                        "column": 62
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 45,
                                                        "column": 62
                                                      },
                                                      "end": {
                                                        "row": 45,
                                                        "column": 72
                                                      },
                                                      "text": "type(base)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 45,
                                                            "column": 62
                                                          },
                                                          "end": {
                                                            "row": 45,
                                                            "column": 66
                                                          },
                                                          "text": "type"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 45,
                                                            "column": 66
                                                          },
                                                          "end": {
                                                            "row": 45,
                                                            "column": 72
                                                          },
                                                          "text": "(base)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 45,
                                                                "column": 66
                                                              },
                                                              "end": {
                                                                "row": 45,
                                                                "column": 67
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 45,
                                                                "column": 67
                                                              },
                                                              "end": {
                                                                "row": 45,
                                                                "column": 71
                                                              },
                                                              "text": "base"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 45,
                                                                "column": 71
                                                              },
                                                              "end": {
                                                                "row": 45,
                                                                "column": 72
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 45,
                                                        "column": 72
                                                      },
                                                      "end": {
                                                        "row": 45,
                                                        "column": 73
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 45,
                                                "column": 73
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 74
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 45,
                                                "column": 75
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 89
                                              },
                                              "text": "str(type(exp))",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 45,
                                                    "column": 75
                                                  },
                                                  "end": {
                                                    "row": 45,
                                                    "column": 78
                                                  },
                                                  "text": "str"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 45,
                                                    "column": 78
                                                  },
                                                  "end": {
                                                    "row": 45,
                                                    "column": 89
                                                  },
                                                  "text": "(type(exp))",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 45,
                                                        "column": 78
                                                      },
                                                      "end": {
                                                        "row": 45,
                                                        "column": 79
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 45,
                                                        "column": 79
                                                      },
                                                      "end": {
                                                        "row": 45,
                                                        "column": 88
                                                      },
                                                      "text": "type(exp)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 45,
                                                            "column": 79
                                                          },
                                                          "end": {
                                                            "row": 45,
                                                            "column": 83
                                                          },
                                                          "text": "type"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 45,
                                                            "column": 83
                                                          },
                                                          "end": {
                                                            "row": 45,
                                                            "column": 88
                                                          },
                                                          "text": "(exp)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 45,
                                                                "column": 83
                                                              },
                                                              "end": {
                                                                "row": 45,
                                                                "column": 84
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 45,
                                                                "column": 84
                                                              },
                                                              "end": {
                                                                "row": 45,
                                                                "column": 87
                                                              },
                                                              "text": "exp"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 45,
                                                                "column": 87
                                                              },
                                                              "end": {
                                                                "row": 45,
                                                                "column": 88
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 45,
                                                        "column": 88
                                                      },
                                                      "end": {
                                                        "row": 45,
                                                        "column": 89
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 45,
                                                "column": 89
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 90
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 45,
                                        "column": 90
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 91
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}