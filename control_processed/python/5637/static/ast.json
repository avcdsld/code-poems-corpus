{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 17,
    "column": 13
  },
  "text": "def lengths_to_area_mask(feature_length, length, max_area_size):\n  \"\"\"Generates a non-padding mask for areas based on lengths.\n\n  Args:\n    feature_length: a tensor of [batch_size]\n    length: the length of the batch\n    max_area_size: the maximum area size considered\n  Returns:\n    mask: a tensor in shape of [batch_size, num_areas]\n  \"\"\"\n\n  paddings = tf.cast(tf.expand_dims(\n      tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length)), 2), tf.float32)\n  _, _, area_sum, _, _ = compute_area_features(paddings,\n                                               max_area_width=max_area_size)\n  mask = tf.squeeze(tf.logical_not(tf.cast(area_sum, tf.bool)), [2])\n  return mask",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 17,
        "column": 13
      },
      "text": "def lengths_to_area_mask(feature_length, length, max_area_size):\n  \"\"\"Generates a non-padding mask for areas based on lengths.\n\n  Args:\n    feature_length: a tensor of [batch_size]\n    length: the length of the batch\n    max_area_size: the maximum area size considered\n  Returns:\n    mask: a tensor in shape of [batch_size, num_areas]\n  \"\"\"\n\n  paddings = tf.cast(tf.expand_dims(\n      tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length)), 2), tf.float32)\n  _, _, area_sum, _, _ = compute_area_features(paddings,\n                                               max_area_width=max_area_size)\n  mask = tf.squeeze(tf.logical_not(tf.cast(area_sum, tf.bool)), [2])\n  return mask",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "lengths_to_area_mask"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 0,
            "column": 63
          },
          "text": "(feature_length, length, max_area_size)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": "feature_length"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": "length"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 49
              },
              "end": {
                "row": 0,
                "column": 62
              },
              "text": "max_area_size"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 62
              },
              "end": {
                "row": 0,
                "column": 63
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 63
          },
          "end": {
            "row": 0,
            "column": 64
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 2
          },
          "end": {
            "row": 17,
            "column": 13
          },
          "text": "\"\"\"Generates a non-padding mask for areas based on lengths.\n\n  Args:\n    feature_length: a tensor of [batch_size]\n    length: the length of the batch\n    max_area_size: the maximum area size considered\n  Returns:\n    mask: a tensor in shape of [batch_size, num_areas]\n  \"\"\"\n\n  paddings = tf.cast(tf.expand_dims(\n      tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length)), 2), tf.float32)\n  _, _, area_sum, _, _ = compute_area_features(paddings,\n                                               max_area_width=max_area_size)\n  mask = tf.squeeze(tf.logical_not(tf.cast(area_sum, tf.bool)), [2])\n  return mask",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 9,
                "column": 5
              },
              "text": "\"\"\"Generates a non-padding mask for areas based on lengths.\n\n  Args:\n    feature_length: a tensor of [batch_size]\n    length: the length of the batch\n    max_area_size: the maximum area size considered\n  Returns:\n    mask: a tensor in shape of [batch_size, num_areas]\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 9,
                    "column": 5
                  },
                  "text": "\"\"\"Generates a non-padding mask for areas based on lengths.\n\n  Args:\n    feature_length: a tensor of [batch_size]\n    length: the length of the batch\n    max_area_size: the maximum area size considered\n  Returns:\n    mask: a tensor in shape of [batch_size, num_areas]\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 5
                      },
                      "end": {
                        "row": 9,
                        "column": 2
                      },
                      "text": "Generates a non-padding mask for areas based on lengths.\n\n  Args:\n    feature_length: a tensor of [batch_size]\n    length: the length of the batch\n    max_area_size: the maximum area size considered\n  Returns:\n    mask: a tensor in shape of [batch_size, num_areas]\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 9,
                        "column": 2
                      },
                      "end": {
                        "row": 9,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 11,
                "column": 2
              },
              "end": {
                "row": 13,
                "column": 75
              },
              "text": "paddings = tf.cast(tf.expand_dims(\n      tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length)), 2), tf.float32)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 11,
                    "column": 2
                  },
                  "end": {
                    "row": 13,
                    "column": 75
                  },
                  "text": "paddings = tf.cast(tf.expand_dims(\n      tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length)), 2), tf.float32)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 11,
                        "column": 2
                      },
                      "end": {
                        "row": 11,
                        "column": 10
                      },
                      "text": "paddings"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 11,
                        "column": 11
                      },
                      "end": {
                        "row": 11,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 11,
                        "column": 13
                      },
                      "end": {
                        "row": 13,
                        "column": 75
                      },
                      "text": "tf.cast(tf.expand_dims(\n      tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length)), 2), tf.float32)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 11,
                            "column": 13
                          },
                          "end": {
                            "row": 11,
                            "column": 20
                          },
                          "text": "tf.cast",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 13
                              },
                              "end": {
                                "row": 11,
                                "column": 15
                              },
                              "text": "tf"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 11,
                                "column": 15
                              },
                              "end": {
                                "row": 11,
                                "column": 16
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 16
                              },
                              "end": {
                                "row": 11,
                                "column": 20
                              },
                              "text": "cast"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 11,
                            "column": 20
                          },
                          "end": {
                            "row": 13,
                            "column": 75
                          },
                          "text": "(tf.expand_dims(\n      tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length)), 2), tf.float32)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 11,
                                "column": 20
                              },
                              "end": {
                                "row": 11,
                                "column": 21
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 11,
                                "column": 21
                              },
                              "end": {
                                "row": 13,
                                "column": 62
                              },
                              "text": "tf.expand_dims(\n      tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length)), 2)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 11,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 35
                                  },
                                  "text": "tf.expand_dims",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 23
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 11,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 24
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 35
                                      },
                                      "text": "expand_dims"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 11,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 62
                                  },
                                  "text": "(\n      tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length)), 2)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 11,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 36
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 12,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 58
                                      },
                                      "text": "tf.logical_not(\n          tf.sequence_mask(feature_length, maxlen=length))",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 12,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 20
                                          },
                                          "text": "tf.logical_not",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 8
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 12,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 9
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 9
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 20
                                              },
                                              "text": "logical_not"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 12,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 58
                                          },
                                          "text": "(\n          tf.sequence_mask(feature_length, maxlen=length))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 12,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 21
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 13,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 57
                                              },
                                              "text": "tf.sequence_mask(feature_length, maxlen=length)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 10
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 26
                                                  },
                                                  "text": "tf.sequence_mask",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 10
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 12
                                                      },
                                                      "text": "tf"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 12
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 13
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 13
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 26
                                                      },
                                                      "text": "sequence_mask"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 57
                                                  },
                                                  "text": "(feature_length, maxlen=length)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 27
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 41
                                                      },
                                                      "text": "feature_length"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 41
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 42
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "keyword_argument",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 56
                                                      },
                                                      "text": "maxlen=length",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 13,
                                                            "column": 43
                                                          },
                                                          "end": {
                                                            "row": 13,
                                                            "column": 49
                                                          },
                                                          "text": "maxlen"
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start": {
                                                            "row": 13,
                                                            "column": 49
                                                          },
                                                          "end": {
                                                            "row": 13,
                                                            "column": 50
                                                          },
                                                          "text": "="
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 13,
                                                            "column": 50
                                                          },
                                                          "end": {
                                                            "row": 13,
                                                            "column": 56
                                                          },
                                                          "text": "length"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 13,
                                                        "column": 56
                                                      },
                                                      "end": {
                                                        "row": 13,
                                                        "column": 57
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 13,
                                                "column": 57
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 58
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 13,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 59
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 13,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 61
                                      },
                                      "text": "2"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 13,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 62
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 13,
                                "column": 62
                              },
                              "end": {
                                "row": 13,
                                "column": 63
                              },
                              "text": ","
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 13,
                                "column": 64
                              },
                              "end": {
                                "row": 13,
                                "column": 74
                              },
                              "text": "tf.float32",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 66
                                  },
                                  "text": "tf"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 67
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 74
                                  },
                                  "text": "float32"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 74
                              },
                              "end": {
                                "row": 13,
                                "column": 75
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 14,
                "column": 2
              },
              "end": {
                "row": 15,
                "column": 76
              },
              "text": "_, _, area_sum, _, _ = compute_area_features(paddings,\n                                               max_area_width=max_area_size)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 14,
                    "column": 2
                  },
                  "end": {
                    "row": 15,
                    "column": 76
                  },
                  "text": "_, _, area_sum, _, _ = compute_area_features(paddings,\n                                               max_area_width=max_area_size)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 14,
                        "column": 2
                      },
                      "end": {
                        "row": 14,
                        "column": 22
                      },
                      "text": "_, _, area_sum, _, _",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 2
                          },
                          "end": {
                            "row": 14,
                            "column": 3
                          },
                          "text": "_"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 14,
                            "column": 3
                          },
                          "end": {
                            "row": 14,
                            "column": 4
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 5
                          },
                          "end": {
                            "row": 14,
                            "column": 6
                          },
                          "text": "_"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 14,
                            "column": 6
                          },
                          "end": {
                            "row": 14,
                            "column": 7
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 8
                          },
                          "end": {
                            "row": 14,
                            "column": 16
                          },
                          "text": "area_sum"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 14,
                            "column": 16
                          },
                          "end": {
                            "row": 14,
                            "column": 17
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 18
                          },
                          "end": {
                            "row": 14,
                            "column": 19
                          },
                          "text": "_"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 14,
                            "column": 19
                          },
                          "end": {
                            "row": 14,
                            "column": 20
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 21
                          },
                          "end": {
                            "row": 14,
                            "column": 22
                          },
                          "text": "_"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 14,
                        "column": 23
                      },
                      "end": {
                        "row": 14,
                        "column": 24
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 14,
                        "column": 25
                      },
                      "end": {
                        "row": 15,
                        "column": 76
                      },
                      "text": "compute_area_features(paddings,\n                                               max_area_width=max_area_size)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 14,
                            "column": 25
                          },
                          "end": {
                            "row": 14,
                            "column": 46
                          },
                          "text": "compute_area_features"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 14,
                            "column": 46
                          },
                          "end": {
                            "row": 15,
                            "column": 76
                          },
                          "text": "(paddings,\n                                               max_area_width=max_area_size)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 14,
                                "column": 46
                              },
                              "end": {
                                "row": 14,
                                "column": 47
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 47
                              },
                              "end": {
                                "row": 14,
                                "column": 55
                              },
                              "text": "paddings"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 14,
                                "column": 55
                              },
                              "end": {
                                "row": 14,
                                "column": 56
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 15,
                                "column": 47
                              },
                              "end": {
                                "row": 15,
                                "column": 75
                              },
                              "text": "max_area_width=max_area_size",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 61
                                  },
                                  "text": "max_area_width"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 15,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 62
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 75
                                  },
                                  "text": "max_area_size"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 15,
                                "column": 75
                              },
                              "end": {
                                "row": 15,
                                "column": 76
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 2
              },
              "end": {
                "row": 16,
                "column": 68
              },
              "text": "mask = tf.squeeze(tf.logical_not(tf.cast(area_sum, tf.bool)), [2])",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 16,
                    "column": 2
                  },
                  "end": {
                    "row": 16,
                    "column": 68
                  },
                  "text": "mask = tf.squeeze(tf.logical_not(tf.cast(area_sum, tf.bool)), [2])",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 2
                      },
                      "end": {
                        "row": 16,
                        "column": 6
                      },
                      "text": "mask"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 16,
                        "column": 7
                      },
                      "end": {
                        "row": 16,
                        "column": 8
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 16,
                        "column": 9
                      },
                      "end": {
                        "row": 16,
                        "column": 68
                      },
                      "text": "tf.squeeze(tf.logical_not(tf.cast(area_sum, tf.bool)), [2])",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 9
                          },
                          "end": {
                            "row": 16,
                            "column": 19
                          },
                          "text": "tf.squeeze",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 9
                              },
                              "end": {
                                "row": 16,
                                "column": 11
                              },
                              "text": "tf"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 11
                              },
                              "end": {
                                "row": 16,
                                "column": 12
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 19
                              },
                              "text": "squeeze"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 16,
                            "column": 19
                          },
                          "end": {
                            "row": 16,
                            "column": 68
                          },
                          "text": "(tf.logical_not(tf.cast(area_sum, tf.bool)), [2])",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 16,
                                "column": 19
                              },
                              "end": {
                                "row": 16,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 16,
                                "column": 20
                              },
                              "end": {
                                "row": 16,
                                "column": 62
                              },
                              "text": "tf.logical_not(tf.cast(area_sum, tf.bool))",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "text": "tf.logical_not",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 22
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 16,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 23
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 34
                                      },
                                      "text": "logical_not"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 62
                                  },
                                  "text": "(tf.cast(area_sum, tf.bool))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 16,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 35
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 16,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 61
                                      },
                                      "text": "tf.cast(area_sum, tf.bool)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 16,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 42
                                          },
                                          "text": "tf.cast",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 37
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 16,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 38
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 42
                                              },
                                              "text": "cast"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 16,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 61
                                          },
                                          "text": "(area_sum, tf.bool)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 16,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 43
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 51
                                              },
                                              "text": "area_sum"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 16,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 52
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 16,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 60
                                              },
                                              "text": "tf.bool",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 55
                                                  },
                                                  "text": "tf"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 56
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 60
                                                  },
                                                  "text": "bool"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 16,
                                                "column": 60
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 61
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 16,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 62
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 16,
                                "column": 62
                              },
                              "end": {
                                "row": 16,
                                "column": 63
                              },
                              "text": ","
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 16,
                                "column": 64
                              },
                              "end": {
                                "row": 16,
                                "column": 67
                              },
                              "text": "[2]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 16,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 65
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 16,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 66
                                  },
                                  "text": "2"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 16,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 67
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 67
                              },
                              "end": {
                                "row": 16,
                                "column": 68
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 17,
                "column": 2
              },
              "end": {
                "row": 17,
                "column": 13
              },
              "text": "return mask",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 17,
                    "column": 2
                  },
                  "end": {
                    "row": 17,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 17,
                    "column": 9
                  },
                  "end": {
                    "row": 17,
                    "column": 13
                  },
                  "text": "mask"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}