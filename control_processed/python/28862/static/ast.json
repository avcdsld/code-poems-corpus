{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 26,
    "column": 58
  },
  "text": "def tree(path, load_path=None):\n    '''\n    Returns recursively the complete tree of a node\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' augeas.tree /files/etc/\n\n    path\n        The base of the recursive listing\n\n    .. versionadded:: 2016.3.0\n\n    load_path\n        A colon-spearated list of directories that modules should be searched\n        in. This is in addition to the standard load path and the directories\n        in AUGEAS_LENS_LIB.\n    '''\n    load_path = _check_load_paths(load_path)\n\n    aug = _Augeas(loadpath=load_path)\n\n    path = path.rstrip('/') + '/'\n    match_path = path\n    return dict([i for i in _recurmatch(match_path, aug)])",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 26,
        "column": 58
      },
      "text": "def tree(path, load_path=None):\n    '''\n    Returns recursively the complete tree of a node\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' augeas.tree /files/etc/\n\n    path\n        The base of the recursive listing\n\n    .. versionadded:: 2016.3.0\n\n    load_path\n        A colon-spearated list of directories that modules should be searched\n        in. This is in addition to the standard load path and the directories\n        in AUGEAS_LENS_LIB.\n    '''\n    load_path = _check_load_paths(load_path)\n\n    aug = _Augeas(loadpath=load_path)\n\n    path = path.rstrip('/') + '/'\n    match_path = path\n    return dict([i for i in _recurmatch(match_path, aug)])",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "tree"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 30
          },
          "text": "(path, load_path=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "path"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "load_path=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 15
                  },
                  "end": {
                    "row": 0,
                    "column": 24
                  },
                  "text": "load_path"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 24
                  },
                  "end": {
                    "row": 0,
                    "column": 25
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 25
                  },
                  "end": {
                    "row": 0,
                    "column": 29
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 30
          },
          "end": {
            "row": 0,
            "column": 31
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 26,
            "column": 58
          },
          "text": "'''\n    Returns recursively the complete tree of a node\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' augeas.tree /files/etc/\n\n    path\n        The base of the recursive listing\n\n    .. versionadded:: 2016.3.0\n\n    load_path\n        A colon-spearated list of directories that modules should be searched\n        in. This is in addition to the standard load path and the directories\n        in AUGEAS_LENS_LIB.\n    '''\n    load_path = _check_load_paths(load_path)\n\n    aug = _Augeas(loadpath=load_path)\n\n    path = path.rstrip('/') + '/'\n    match_path = path\n    return dict([i for i in _recurmatch(match_path, aug)])",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 7
              },
              "text": "'''\n    Returns recursively the complete tree of a node\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' augeas.tree /files/etc/\n\n    path\n        The base of the recursive listing\n\n    .. versionadded:: 2016.3.0\n\n    load_path\n        A colon-spearated list of directories that modules should be searched\n        in. This is in addition to the standard load path and the directories\n        in AUGEAS_LENS_LIB.\n    '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 19,
                    "column": 7
                  },
                  "text": "'''\n    Returns recursively the complete tree of a node\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' augeas.tree /files/etc/\n\n    path\n        The base of the recursive listing\n\n    .. versionadded:: 2016.3.0\n\n    load_path\n        A colon-spearated list of directories that modules should be searched\n        in. This is in addition to the standard load path and the directories\n        in AUGEAS_LENS_LIB.\n    '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 19,
                        "column": 4
                      },
                      "text": "\n    Returns recursively the complete tree of a node\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' augeas.tree /files/etc/\n\n    path\n        The base of the recursive listing\n\n    .. versionadded:: 2016.3.0\n\n    load_path\n        A colon-spearated list of directories that modules should be searched\n        in. This is in addition to the standard load path and the directories\n        in AUGEAS_LENS_LIB.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 19,
                        "column": 4
                      },
                      "end": {
                        "row": 19,
                        "column": 7
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 44
              },
              "text": "load_path = _check_load_paths(load_path)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 44
                  },
                  "text": "load_path = _check_load_paths(load_path)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 20,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 13
                      },
                      "text": "load_path"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 14
                      },
                      "end": {
                        "row": 20,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 20,
                        "column": 16
                      },
                      "end": {
                        "row": 20,
                        "column": 44
                      },
                      "text": "_check_load_paths(load_path)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 16
                          },
                          "end": {
                            "row": 20,
                            "column": 33
                          },
                          "text": "_check_load_paths"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 20,
                            "column": 33
                          },
                          "end": {
                            "row": 20,
                            "column": 44
                          },
                          "text": "(load_path)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 20,
                                "column": 33
                              },
                              "end": {
                                "row": 20,
                                "column": 34
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 34
                              },
                              "end": {
                                "row": 20,
                                "column": 43
                              },
                              "text": "load_path"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 20,
                                "column": 43
                              },
                              "end": {
                                "row": 20,
                                "column": 44
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 22,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 37
              },
              "text": "aug = _Augeas(loadpath=load_path)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 22,
                    "column": 4
                  },
                  "end": {
                    "row": 22,
                    "column": 37
                  },
                  "text": "aug = _Augeas(loadpath=load_path)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 22,
                        "column": 4
                      },
                      "end": {
                        "row": 22,
                        "column": 7
                      },
                      "text": "aug"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 22,
                        "column": 10
                      },
                      "end": {
                        "row": 22,
                        "column": 37
                      },
                      "text": "_Augeas(loadpath=load_path)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 10
                          },
                          "end": {
                            "row": 22,
                            "column": 17
                          },
                          "text": "_Augeas"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 22,
                            "column": 17
                          },
                          "end": {
                            "row": 22,
                            "column": 37
                          },
                          "text": "(loadpath=load_path)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 22,
                                "column": 17
                              },
                              "end": {
                                "row": 22,
                                "column": 18
                              },
                              "text": "("
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 22,
                                "column": 18
                              },
                              "end": {
                                "row": 22,
                                "column": 36
                              },
                              "text": "loadpath=load_path",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 26
                                  },
                                  "text": "loadpath"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 22,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 27
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 36
                                  },
                                  "text": "load_path"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 22,
                                "column": 36
                              },
                              "end": {
                                "row": 22,
                                "column": 37
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 24,
                "column": 4
              },
              "end": {
                "row": 24,
                "column": 33
              },
              "text": "path = path.rstrip('/') + '/'",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 24,
                    "column": 4
                  },
                  "end": {
                    "row": 24,
                    "column": 33
                  },
                  "text": "path = path.rstrip('/') + '/'",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 4
                      },
                      "end": {
                        "row": 24,
                        "column": 8
                      },
                      "text": "path"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 24,
                        "column": 9
                      },
                      "end": {
                        "row": 24,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 24,
                        "column": 11
                      },
                      "end": {
                        "row": 24,
                        "column": 33
                      },
                      "text": "path.rstrip('/') + '/'",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 24,
                            "column": 11
                          },
                          "end": {
                            "row": 24,
                            "column": 27
                          },
                          "text": "path.rstrip('/')",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 24,
                                "column": 11
                              },
                              "end": {
                                "row": 24,
                                "column": 22
                              },
                              "text": "path.rstrip",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 15
                                  },
                                  "text": "path"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 24,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 22
                                  },
                                  "text": "rstrip"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 24,
                                "column": 22
                              },
                              "end": {
                                "row": 24,
                                "column": 27
                              },
                              "text": "('/')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 24,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 24,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 26
                                  },
                                  "text": "'/'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 24,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 24
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 24,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 25
                                      },
                                      "text": "/"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 24,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 26
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 24,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 27
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start": {
                            "row": 24,
                            "column": 28
                          },
                          "end": {
                            "row": 24,
                            "column": 29
                          },
                          "text": "+"
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 24,
                            "column": 30
                          },
                          "end": {
                            "row": 24,
                            "column": 33
                          },
                          "text": "'/'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 24,
                                "column": 30
                              },
                              "end": {
                                "row": 24,
                                "column": 31
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 24,
                                "column": 31
                              },
                              "end": {
                                "row": 24,
                                "column": 32
                              },
                              "text": "/"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 24,
                                "column": 32
                              },
                              "end": {
                                "row": 24,
                                "column": 33
                              },
                              "text": "'"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 25,
                "column": 4
              },
              "end": {
                "row": 25,
                "column": 21
              },
              "text": "match_path = path",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 25,
                    "column": 4
                  },
                  "end": {
                    "row": 25,
                    "column": 21
                  },
                  "text": "match_path = path",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 4
                      },
                      "end": {
                        "row": 25,
                        "column": 14
                      },
                      "text": "match_path"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 25,
                        "column": 15
                      },
                      "end": {
                        "row": 25,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 17
                      },
                      "end": {
                        "row": 25,
                        "column": 21
                      },
                      "text": "path"
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 26,
                "column": 4
              },
              "end": {
                "row": 26,
                "column": 58
              },
              "text": "return dict([i for i in _recurmatch(match_path, aug)])",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 26,
                    "column": 4
                  },
                  "end": {
                    "row": 26,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 26,
                    "column": 11
                  },
                  "end": {
                    "row": 26,
                    "column": 58
                  },
                  "text": "dict([i for i in _recurmatch(match_path, aug)])",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 26,
                        "column": 11
                      },
                      "end": {
                        "row": 26,
                        "column": 15
                      },
                      "text": "dict"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 26,
                        "column": 15
                      },
                      "end": {
                        "row": 26,
                        "column": 58
                      },
                      "text": "([i for i in _recurmatch(match_path, aug)])",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 26,
                            "column": 15
                          },
                          "end": {
                            "row": 26,
                            "column": 16
                          },
                          "text": "("
                        },
                        {
                          "type": "list_comprehension",
                          "start": {
                            "row": 26,
                            "column": 16
                          },
                          "end": {
                            "row": 26,
                            "column": 57
                          },
                          "text": "[i for i in _recurmatch(match_path, aug)]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 26,
                                "column": 16
                              },
                              "end": {
                                "row": 26,
                                "column": 17
                              },
                              "text": "["
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 17
                              },
                              "end": {
                                "row": 26,
                                "column": 18
                              },
                              "text": "i"
                            },
                            {
                              "type": "for_in_clause",
                              "start": {
                                "row": 26,
                                "column": 19
                              },
                              "end": {
                                "row": 26,
                                "column": 56
                              },
                              "text": "for i in _recurmatch(match_path, aug)",
                              "children": [
                                {
                                  "type": "for",
                                  "start": {
                                    "row": 26,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 22
                                  },
                                  "text": "for"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 24
                                  },
                                  "text": "i"
                                },
                                {
                                  "type": "in",
                                  "start": {
                                    "row": 26,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 27
                                  },
                                  "text": "in"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 26,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 56
                                  },
                                  "text": "_recurmatch(match_path, aug)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 39
                                      },
                                      "text": "_recurmatch"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 26,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 56
                                      },
                                      "text": "(match_path, aug)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 26,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 40
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 50
                                          },
                                          "text": "match_path"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 26,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 51
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 55
                                          },
                                          "text": "aug"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 26,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 56
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 26,
                                "column": 56
                              },
                              "end": {
                                "row": 26,
                                "column": 57
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 26,
                            "column": 57
                          },
                          "end": {
                            "row": 26,
                            "column": 58
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}