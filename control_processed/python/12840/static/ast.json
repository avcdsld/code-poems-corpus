{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 24,
    "column": 37
  },
  "text": "def predict(self, train_x):\n        \"\"\"Predict the result.\n        Args:\n            train_x: A list of NetworkDescriptor.\n        Returns:\n            y_mean: The predicted mean.\n            y_std: The predicted standard deviation.\n        \"\"\"\n        k_trans = np.exp(-np.power(edit_distance_matrix(train_x, self._x), 2))\n        y_mean = k_trans.dot(self._alpha_vector)  # Line 4 (y_mean = f_star)\n\n        # compute inverse K_inv of K based on its Cholesky\n        # decomposition L and its inverse L_inv\n        l_inv = solve_triangular(self._l_matrix.T, np.eye(self._l_matrix.shape[0]))\n        k_inv = l_inv.dot(l_inv.T)\n        # Compute variance of predictive distribution\n        y_var = np.ones(len(train_x), dtype=np.float)\n        y_var -= np.einsum(\"ij,ij->i\", np.dot(k_trans, k_inv), k_trans)\n\n        # Check if any of the variances is negative because of\n        # numerical issues. If yes: set the variance to 0.\n        y_var_negative = y_var < 0\n        if np.any(y_var_negative):\n            y_var[y_var_negative] = 0.0\n        return y_mean, np.sqrt(y_var)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 24,
        "column": 37
      },
      "text": "def predict(self, train_x):\n        \"\"\"Predict the result.\n        Args:\n            train_x: A list of NetworkDescriptor.\n        Returns:\n            y_mean: The predicted mean.\n            y_std: The predicted standard deviation.\n        \"\"\"\n        k_trans = np.exp(-np.power(edit_distance_matrix(train_x, self._x), 2))\n        y_mean = k_trans.dot(self._alpha_vector)  # Line 4 (y_mean = f_star)\n\n        # compute inverse K_inv of K based on its Cholesky\n        # decomposition L and its inverse L_inv\n        l_inv = solve_triangular(self._l_matrix.T, np.eye(self._l_matrix.shape[0]))\n        k_inv = l_inv.dot(l_inv.T)\n        # Compute variance of predictive distribution\n        y_var = np.ones(len(train_x), dtype=np.float)\n        y_var -= np.einsum(\"ij,ij->i\", np.dot(k_trans, k_inv), k_trans)\n\n        # Check if any of the variances is negative because of\n        # numerical issues. If yes: set the variance to 0.\n        y_var_negative = y_var < 0\n        if np.any(y_var_negative):\n            y_var[y_var_negative] = 0.0\n        return y_mean, np.sqrt(y_var)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "predict"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 11
          },
          "end": {
            "row": 0,
            "column": 26
          },
          "text": "(self, train_x)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "train_x"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 26
          },
          "end": {
            "row": 0,
            "column": 27
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 24,
            "column": 37
          },
          "text": "\"\"\"Predict the result.\n        Args:\n            train_x: A list of NetworkDescriptor.\n        Returns:\n            y_mean: The predicted mean.\n            y_std: The predicted standard deviation.\n        \"\"\"\n        k_trans = np.exp(-np.power(edit_distance_matrix(train_x, self._x), 2))\n        y_mean = k_trans.dot(self._alpha_vector)  # Line 4 (y_mean = f_star)\n\n        # compute inverse K_inv of K based on its Cholesky\n        # decomposition L and its inverse L_inv\n        l_inv = solve_triangular(self._l_matrix.T, np.eye(self._l_matrix.shape[0]))\n        k_inv = l_inv.dot(l_inv.T)\n        # Compute variance of predictive distribution\n        y_var = np.ones(len(train_x), dtype=np.float)\n        y_var -= np.einsum(\"ij,ij->i\", np.dot(k_trans, k_inv), k_trans)\n\n        # Check if any of the variances is negative because of\n        # numerical issues. If yes: set the variance to 0.\n        y_var_negative = y_var < 0\n        if np.any(y_var_negative):\n            y_var[y_var_negative] = 0.0\n        return y_mean, np.sqrt(y_var)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 7,
                "column": 11
              },
              "text": "\"\"\"Predict the result.\n        Args:\n            train_x: A list of NetworkDescriptor.\n        Returns:\n            y_mean: The predicted mean.\n            y_std: The predicted standard deviation.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 7,
                    "column": 11
                  },
                  "text": "\"\"\"Predict the result.\n        Args:\n            train_x: A list of NetworkDescriptor.\n        Returns:\n            y_mean: The predicted mean.\n            y_std: The predicted standard deviation.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 7,
                        "column": 8
                      },
                      "text": "Predict the result.\n        Args:\n            train_x: A list of NetworkDescriptor.\n        Returns:\n            y_mean: The predicted mean.\n            y_std: The predicted standard deviation.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 8,
                "column": 8
              },
              "end": {
                "row": 8,
                "column": 78
              },
              "text": "k_trans = np.exp(-np.power(edit_distance_matrix(train_x, self._x), 2))",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 8,
                    "column": 8
                  },
                  "end": {
                    "row": 8,
                    "column": 78
                  },
                  "text": "k_trans = np.exp(-np.power(edit_distance_matrix(train_x, self._x), 2))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 8,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 15
                      },
                      "text": "k_trans"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 8,
                        "column": 16
                      },
                      "end": {
                        "row": 8,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 8,
                        "column": 18
                      },
                      "end": {
                        "row": 8,
                        "column": 78
                      },
                      "text": "np.exp(-np.power(edit_distance_matrix(train_x, self._x), 2))",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 8,
                            "column": 18
                          },
                          "end": {
                            "row": 8,
                            "column": 24
                          },
                          "text": "np.exp",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 18
                              },
                              "end": {
                                "row": 8,
                                "column": 20
                              },
                              "text": "np"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 8,
                                "column": 20
                              },
                              "end": {
                                "row": 8,
                                "column": 21
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 21
                              },
                              "end": {
                                "row": 8,
                                "column": 24
                              },
                              "text": "exp"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 8,
                            "column": 24
                          },
                          "end": {
                            "row": 8,
                            "column": 78
                          },
                          "text": "(-np.power(edit_distance_matrix(train_x, self._x), 2))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 8,
                                "column": 24
                              },
                              "end": {
                                "row": 8,
                                "column": 25
                              },
                              "text": "("
                            },
                            {
                              "type": "unary_operator",
                              "start": {
                                "row": 8,
                                "column": 25
                              },
                              "end": {
                                "row": 8,
                                "column": 77
                              },
                              "text": "-np.power(edit_distance_matrix(train_x, self._x), 2)",
                              "children": [
                                {
                                  "type": "-",
                                  "start": {
                                    "row": 8,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 26
                                  },
                                  "text": "-"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 8,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 77
                                  },
                                  "text": "np.power(edit_distance_matrix(train_x, self._x), 2)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 8,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 34
                                      },
                                      "text": "np.power",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 8,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 28
                                          },
                                          "text": "np"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 8,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 29
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 8,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 34
                                          },
                                          "text": "power"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 8,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 77
                                      },
                                      "text": "(edit_distance_matrix(train_x, self._x), 2)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 8,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 35
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 8,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 73
                                          },
                                          "text": "edit_distance_matrix(train_x, self._x)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 8,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 55
                                              },
                                              "text": "edit_distance_matrix"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 8,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 73
                                              },
                                              "text": "(train_x, self._x)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 56
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 63
                                                  },
                                                  "text": "train_x"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 64
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 72
                                                  },
                                                  "text": "self._x",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 69
                                                      },
                                                      "text": "self"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 69
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 70
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 8,
                                                        "column": 70
                                                      },
                                                      "end": {
                                                        "row": 8,
                                                        "column": 72
                                                      },
                                                      "text": "_x"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 72
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 73
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 8,
                                            "column": 73
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 74
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 8,
                                            "column": 75
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 76
                                          },
                                          "text": "2"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 8,
                                            "column": 76
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 77
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 8,
                                "column": 77
                              },
                              "end": {
                                "row": 8,
                                "column": 78
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 9,
                "column": 8
              },
              "end": {
                "row": 9,
                "column": 48
              },
              "text": "y_mean = k_trans.dot(self._alpha_vector)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 9,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 48
                  },
                  "text": "y_mean = k_trans.dot(self._alpha_vector)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 9,
                        "column": 8
                      },
                      "end": {
                        "row": 9,
                        "column": 14
                      },
                      "text": "y_mean"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 9,
                        "column": 15
                      },
                      "end": {
                        "row": 9,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 9,
                        "column": 17
                      },
                      "end": {
                        "row": 9,
                        "column": 48
                      },
                      "text": "k_trans.dot(self._alpha_vector)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 9,
                            "column": 17
                          },
                          "end": {
                            "row": 9,
                            "column": 28
                          },
                          "text": "k_trans.dot",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 17
                              },
                              "end": {
                                "row": 9,
                                "column": 24
                              },
                              "text": "k_trans"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 9,
                                "column": 24
                              },
                              "end": {
                                "row": 9,
                                "column": 25
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 25
                              },
                              "end": {
                                "row": 9,
                                "column": 28
                              },
                              "text": "dot"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 9,
                            "column": 28
                          },
                          "end": {
                            "row": 9,
                            "column": 48
                          },
                          "text": "(self._alpha_vector)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 9,
                                "column": 28
                              },
                              "end": {
                                "row": 9,
                                "column": 29
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 9,
                                "column": 29
                              },
                              "end": {
                                "row": 9,
                                "column": 47
                              },
                              "text": "self._alpha_vector",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 33
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 9,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 34
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 47
                                  },
                                  "text": "_alpha_vector"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 9,
                                "column": 47
                              },
                              "end": {
                                "row": 9,
                                "column": 48
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 9,
                "column": 50
              },
              "end": {
                "row": 9,
                "column": 76
              },
              "text": "# Line 4 (y_mean = f_star)"
            },
            {
              "type": "comment",
              "start": {
                "row": 11,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 58
              },
              "text": "# compute inverse K_inv of K based on its Cholesky"
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 47
              },
              "text": "# decomposition L and its inverse L_inv"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 83
              },
              "text": "l_inv = solve_triangular(self._l_matrix.T, np.eye(self._l_matrix.shape[0]))",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 83
                  },
                  "text": "l_inv = solve_triangular(self._l_matrix.T, np.eye(self._l_matrix.shape[0]))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 13
                      },
                      "text": "l_inv"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 14
                      },
                      "end": {
                        "row": 13,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 13,
                        "column": 16
                      },
                      "end": {
                        "row": 13,
                        "column": 83
                      },
                      "text": "solve_triangular(self._l_matrix.T, np.eye(self._l_matrix.shape[0]))",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 16
                          },
                          "end": {
                            "row": 13,
                            "column": 32
                          },
                          "text": "solve_triangular"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 32
                          },
                          "end": {
                            "row": 13,
                            "column": 83
                          },
                          "text": "(self._l_matrix.T, np.eye(self._l_matrix.shape[0]))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 32
                              },
                              "end": {
                                "row": 13,
                                "column": 33
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 13,
                                "column": 33
                              },
                              "end": {
                                "row": 13,
                                "column": 49
                              },
                              "text": "self._l_matrix.T",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 13,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 47
                                  },
                                  "text": "self._l_matrix",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 37
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 13,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 38
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 47
                                      },
                                      "text": "_l_matrix"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 48
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 49
                                  },
                                  "text": "T"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 13,
                                "column": 49
                              },
                              "end": {
                                "row": 13,
                                "column": 50
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 13,
                                "column": 51
                              },
                              "end": {
                                "row": 13,
                                "column": 82
                              },
                              "text": "np.eye(self._l_matrix.shape[0])",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 13,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 57
                                  },
                                  "text": "np.eye",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 53
                                      },
                                      "text": "np"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 13,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 54
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 13,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 57
                                      },
                                      "text": "eye"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 13,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 82
                                  },
                                  "text": "(self._l_matrix.shape[0])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 13,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 58
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 13,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 81
                                      },
                                      "text": "self._l_matrix.shape[0]",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 13,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 78
                                          },
                                          "text": "self._l_matrix.shape",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 13,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 72
                                              },
                                              "text": "self._l_matrix",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 62
                                                  },
                                                  "text": "self"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 62
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 63
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 13,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 13,
                                                    "column": 72
                                                  },
                                                  "text": "_l_matrix"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 13,
                                                "column": 72
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 73
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 13,
                                                "column": 73
                                              },
                                              "end": {
                                                "row": 13,
                                                "column": 78
                                              },
                                              "text": "shape"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 13,
                                            "column": 78
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 79
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 13,
                                            "column": 79
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 80
                                          },
                                          "text": "0"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 13,
                                            "column": 80
                                          },
                                          "end": {
                                            "row": 13,
                                            "column": 81
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 13,
                                        "column": 81
                                      },
                                      "end": {
                                        "row": 13,
                                        "column": 82
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 82
                              },
                              "end": {
                                "row": 13,
                                "column": 83
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 34
              },
              "text": "k_inv = l_inv.dot(l_inv.T)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 14,
                    "column": 8
                  },
                  "end": {
                    "row": 14,
                    "column": 34
                  },
                  "text": "k_inv = l_inv.dot(l_inv.T)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 13
                      },
                      "text": "k_inv"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 14,
                        "column": 14
                      },
                      "end": {
                        "row": 14,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 14,
                        "column": 16
                      },
                      "end": {
                        "row": 14,
                        "column": 34
                      },
                      "text": "l_inv.dot(l_inv.T)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 14,
                            "column": 16
                          },
                          "end": {
                            "row": 14,
                            "column": 25
                          },
                          "text": "l_inv.dot",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 16
                              },
                              "end": {
                                "row": 14,
                                "column": 21
                              },
                              "text": "l_inv"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 14,
                                "column": 21
                              },
                              "end": {
                                "row": 14,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 22
                              },
                              "end": {
                                "row": 14,
                                "column": 25
                              },
                              "text": "dot"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 14,
                            "column": 25
                          },
                          "end": {
                            "row": 14,
                            "column": 34
                          },
                          "text": "(l_inv.T)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 14,
                                "column": 25
                              },
                              "end": {
                                "row": 14,
                                "column": 26
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 14,
                                "column": 26
                              },
                              "end": {
                                "row": 14,
                                "column": 33
                              },
                              "text": "l_inv.T",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 31
                                  },
                                  "text": "l_inv"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 14,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 32
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 33
                                  },
                                  "text": "T"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 14,
                                "column": 33
                              },
                              "end": {
                                "row": 14,
                                "column": 34
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 53
              },
              "text": "# Compute variance of predictive distribution"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 53
              },
              "text": "y_var = np.ones(len(train_x), dtype=np.float)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 53
                  },
                  "text": "y_var = np.ones(len(train_x), dtype=np.float)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 16,
                        "column": 13
                      },
                      "text": "y_var"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 16,
                        "column": 14
                      },
                      "end": {
                        "row": 16,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 16,
                        "column": 16
                      },
                      "end": {
                        "row": 16,
                        "column": 53
                      },
                      "text": "np.ones(len(train_x), dtype=np.float)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 16
                          },
                          "end": {
                            "row": 16,
                            "column": 23
                          },
                          "text": "np.ones",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 16
                              },
                              "end": {
                                "row": 16,
                                "column": 18
                              },
                              "text": "np"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 18
                              },
                              "end": {
                                "row": 16,
                                "column": 19
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 19
                              },
                              "end": {
                                "row": 16,
                                "column": 23
                              },
                              "text": "ones"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 16,
                            "column": 23
                          },
                          "end": {
                            "row": 16,
                            "column": 53
                          },
                          "text": "(len(train_x), dtype=np.float)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 16,
                                "column": 23
                              },
                              "end": {
                                "row": 16,
                                "column": 24
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 16,
                                "column": 24
                              },
                              "end": {
                                "row": 16,
                                "column": 36
                              },
                              "text": "len(train_x)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 27
                                  },
                                  "text": "len"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 16,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 36
                                  },
                                  "text": "(train_x)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 16,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 35
                                      },
                                      "text": "train_x"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 16,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 36
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 16,
                                "column": 36
                              },
                              "end": {
                                "row": 16,
                                "column": 37
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 16,
                                "column": 38
                              },
                              "end": {
                                "row": 16,
                                "column": 52
                              },
                              "text": "dtype=np.float",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 43
                                  },
                                  "text": "dtype"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 16,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 44
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 16,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 52
                                  },
                                  "text": "np.float",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 46
                                      },
                                      "text": "np"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 16,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 47
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 52
                                      },
                                      "text": "float"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 52
                              },
                              "end": {
                                "row": 16,
                                "column": 53
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 17,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 71
              },
              "text": "y_var -= np.einsum(\"ij,ij->i\", np.dot(k_trans, k_inv), k_trans)",
              "children": [
                {
                  "type": "augmented_assignment",
                  "start": {
                    "row": 17,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 71
                  },
                  "text": "y_var -= np.einsum(\"ij,ij->i\", np.dot(k_trans, k_inv), k_trans)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 13
                      },
                      "text": "y_var"
                    },
                    {
                      "type": "-=",
                      "start": {
                        "row": 17,
                        "column": 14
                      },
                      "end": {
                        "row": 17,
                        "column": 16
                      },
                      "text": "-="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 17,
                        "column": 17
                      },
                      "end": {
                        "row": 17,
                        "column": 71
                      },
                      "text": "np.einsum(\"ij,ij->i\", np.dot(k_trans, k_inv), k_trans)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 17,
                            "column": 17
                          },
                          "end": {
                            "row": 17,
                            "column": 26
                          },
                          "text": "np.einsum",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 17
                              },
                              "end": {
                                "row": 17,
                                "column": 19
                              },
                              "text": "np"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 17,
                                "column": 19
                              },
                              "end": {
                                "row": 17,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 20
                              },
                              "end": {
                                "row": 17,
                                "column": 26
                              },
                              "text": "einsum"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 17,
                            "column": 26
                          },
                          "end": {
                            "row": 17,
                            "column": 71
                          },
                          "text": "(\"ij,ij->i\", np.dot(k_trans, k_inv), k_trans)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 17,
                                "column": 26
                              },
                              "end": {
                                "row": 17,
                                "column": 27
                              },
                              "text": "("
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 17,
                                "column": 27
                              },
                              "end": {
                                "row": 17,
                                "column": 37
                              },
                              "text": "\"ij,ij->i\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 17,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 28
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 17,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 36
                                  },
                                  "text": "ij,ij->i"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 17,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 37
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 17,
                                "column": 37
                              },
                              "end": {
                                "row": 17,
                                "column": 38
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 17,
                                "column": 39
                              },
                              "end": {
                                "row": 17,
                                "column": 61
                              },
                              "text": "np.dot(k_trans, k_inv)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 17,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 45
                                  },
                                  "text": "np.dot",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 17,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 41
                                      },
                                      "text": "np"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 17,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 42
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 17,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 45
                                      },
                                      "text": "dot"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 17,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 61
                                  },
                                  "text": "(k_trans, k_inv)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 17,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 46
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 17,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 53
                                      },
                                      "text": "k_trans"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 17,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 54
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 17,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 60
                                      },
                                      "text": "k_inv"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 17,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 61
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 17,
                                "column": 61
                              },
                              "end": {
                                "row": 17,
                                "column": 62
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 63
                              },
                              "end": {
                                "row": 17,
                                "column": 70
                              },
                              "text": "k_trans"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 17,
                                "column": 70
                              },
                              "end": {
                                "row": 17,
                                "column": 71
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 62
              },
              "text": "# Check if any of the variances is negative because of"
            },
            {
              "type": "comment",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 58
              },
              "text": "# numerical issues. If yes: set the variance to 0."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 21,
                "column": 34
              },
              "text": "y_var_negative = y_var < 0",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 34
                  },
                  "text": "y_var_negative = y_var < 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 22
                      },
                      "text": "y_var_negative"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 21,
                        "column": 23
                      },
                      "end": {
                        "row": 21,
                        "column": 24
                      },
                      "text": "="
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 21,
                        "column": 25
                      },
                      "end": {
                        "row": 21,
                        "column": 34
                      },
                      "text": "y_var < 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 25
                          },
                          "end": {
                            "row": 21,
                            "column": 30
                          },
                          "text": "y_var"
                        },
                        {
                          "type": "<",
                          "start": {
                            "row": 21,
                            "column": 31
                          },
                          "end": {
                            "row": 21,
                            "column": 32
                          },
                          "text": "<"
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 21,
                            "column": 33
                          },
                          "end": {
                            "row": 21,
                            "column": 34
                          },
                          "text": "0"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 22,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 39
              },
              "text": "if np.any(y_var_negative):\n            y_var[y_var_negative] = 0.0",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 22,
                    "column": 11
                  },
                  "end": {
                    "row": 22,
                    "column": 33
                  },
                  "text": "np.any(y_var_negative)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 22,
                        "column": 11
                      },
                      "end": {
                        "row": 22,
                        "column": 17
                      },
                      "text": "np.any",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 11
                          },
                          "end": {
                            "row": 22,
                            "column": 13
                          },
                          "text": "np"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 22,
                            "column": 13
                          },
                          "end": {
                            "row": 22,
                            "column": 14
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 14
                          },
                          "end": {
                            "row": 22,
                            "column": 17
                          },
                          "text": "any"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 22,
                        "column": 17
                      },
                      "end": {
                        "row": 22,
                        "column": 33
                      },
                      "text": "(y_var_negative)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 22,
                            "column": 17
                          },
                          "end": {
                            "row": 22,
                            "column": 18
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 18
                          },
                          "end": {
                            "row": 22,
                            "column": 32
                          },
                          "text": "y_var_negative"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 22,
                            "column": 32
                          },
                          "end": {
                            "row": 22,
                            "column": 33
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 22,
                    "column": 33
                  },
                  "end": {
                    "row": 22,
                    "column": 34
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 23,
                    "column": 12
                  },
                  "end": {
                    "row": 23,
                    "column": 39
                  },
                  "text": "y_var[y_var_negative] = 0.0",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 23,
                        "column": 12
                      },
                      "end": {
                        "row": 23,
                        "column": 39
                      },
                      "text": "y_var[y_var_negative] = 0.0",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 23,
                            "column": 12
                          },
                          "end": {
                            "row": 23,
                            "column": 39
                          },
                          "text": "y_var[y_var_negative] = 0.0",
                          "children": [
                            {
                              "type": "subscript",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 33
                              },
                              "text": "y_var[y_var_negative]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 17
                                  },
                                  "text": "y_var"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 23,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 18
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 32
                                  },
                                  "text": "y_var_negative"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 23,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 33
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 23,
                                "column": 34
                              },
                              "end": {
                                "row": 23,
                                "column": 35
                              },
                              "text": "="
                            },
                            {
                              "type": "float",
                              "start": {
                                "row": 23,
                                "column": 36
                              },
                              "end": {
                                "row": 23,
                                "column": 39
                              },
                              "text": "0.0"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 24,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 37
              },
              "text": "return y_mean, np.sqrt(y_var)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 24,
                    "column": 8
                  },
                  "end": {
                    "row": 24,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "expression_list",
                  "start": {
                    "row": 24,
                    "column": 15
                  },
                  "end": {
                    "row": 24,
                    "column": 37
                  },
                  "text": "y_mean, np.sqrt(y_var)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 15
                      },
                      "end": {
                        "row": 24,
                        "column": 21
                      },
                      "text": "y_mean"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 24,
                        "column": 21
                      },
                      "end": {
                        "row": 24,
                        "column": 22
                      },
                      "text": ","
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 24,
                        "column": 23
                      },
                      "end": {
                        "row": 24,
                        "column": 37
                      },
                      "text": "np.sqrt(y_var)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 24,
                            "column": 23
                          },
                          "end": {
                            "row": 24,
                            "column": 30
                          },
                          "text": "np.sqrt",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 23
                              },
                              "end": {
                                "row": 24,
                                "column": 25
                              },
                              "text": "np"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 24,
                                "column": 25
                              },
                              "end": {
                                "row": 24,
                                "column": 26
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 26
                              },
                              "end": {
                                "row": 24,
                                "column": 30
                              },
                              "text": "sqrt"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 24,
                            "column": 30
                          },
                          "end": {
                            "row": 24,
                            "column": 37
                          },
                          "text": "(y_var)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 24,
                                "column": 30
                              },
                              "end": {
                                "row": 24,
                                "column": 31
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 31
                              },
                              "end": {
                                "row": 24,
                                "column": 36
                              },
                              "text": "y_var"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 24,
                                "column": 36
                              },
                              "end": {
                                "row": 24,
                                "column": 37
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}