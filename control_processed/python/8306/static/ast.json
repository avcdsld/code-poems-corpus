{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 15,
    "column": 21
  },
  "text": "def sysctl(command):\n    \"\"\"Run a sysctl command and parse the output.\n\n    Args:\n        command: A sysctl command with an argument, for example,\n            [\"sysctl\", \"hw.memsize\"].\n\n    Returns:\n        The parsed output.\n    \"\"\"\n    out = subprocess.check_output(command)\n    result = out.split(b\" \")[1]\n    try:\n        return int(result)\n    except ValueError:\n        return result",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 15,
        "column": 21
      },
      "text": "def sysctl(command):\n    \"\"\"Run a sysctl command and parse the output.\n\n    Args:\n        command: A sysctl command with an argument, for example,\n            [\"sysctl\", \"hw.memsize\"].\n\n    Returns:\n        The parsed output.\n    \"\"\"\n    out = subprocess.check_output(command)\n    result = out.split(b\" \")[1]\n    try:\n        return int(result)\n    except ValueError:\n        return result",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "sysctl"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "(command)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "command"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 15,
            "column": 21
          },
          "text": "\"\"\"Run a sysctl command and parse the output.\n\n    Args:\n        command: A sysctl command with an argument, for example,\n            [\"sysctl\", \"hw.memsize\"].\n\n    Returns:\n        The parsed output.\n    \"\"\"\n    out = subprocess.check_output(command)\n    result = out.split(b\" \")[1]\n    try:\n        return int(result)\n    except ValueError:\n        return result",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 9,
                "column": 7
              },
              "text": "\"\"\"Run a sysctl command and parse the output.\n\n    Args:\n        command: A sysctl command with an argument, for example,\n            [\"sysctl\", \"hw.memsize\"].\n\n    Returns:\n        The parsed output.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 9,
                    "column": 7
                  },
                  "text": "\"\"\"Run a sysctl command and parse the output.\n\n    Args:\n        command: A sysctl command with an argument, for example,\n            [\"sysctl\", \"hw.memsize\"].\n\n    Returns:\n        The parsed output.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 9,
                        "column": 4
                      },
                      "text": "Run a sysctl command and parse the output.\n\n    Args:\n        command: A sysctl command with an argument, for example,\n            [\"sysctl\", \"hw.memsize\"].\n\n    Returns:\n        The parsed output.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 9,
                        "column": 4
                      },
                      "end": {
                        "row": 9,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 10,
                "column": 4
              },
              "end": {
                "row": 10,
                "column": 42
              },
              "text": "out = subprocess.check_output(command)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 10,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 42
                  },
                  "text": "out = subprocess.check_output(command)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 10,
                        "column": 4
                      },
                      "end": {
                        "row": 10,
                        "column": 7
                      },
                      "text": "out"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 10,
                        "column": 10
                      },
                      "end": {
                        "row": 10,
                        "column": 42
                      },
                      "text": "subprocess.check_output(command)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 10,
                            "column": 10
                          },
                          "end": {
                            "row": 10,
                            "column": 33
                          },
                          "text": "subprocess.check_output",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 10
                              },
                              "end": {
                                "row": 10,
                                "column": 20
                              },
                              "text": "subprocess"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 10,
                                "column": 20
                              },
                              "end": {
                                "row": 10,
                                "column": 21
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 21
                              },
                              "end": {
                                "row": 10,
                                "column": 33
                              },
                              "text": "check_output"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 10,
                            "column": 33
                          },
                          "end": {
                            "row": 10,
                            "column": 42
                          },
                          "text": "(command)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 10,
                                "column": 33
                              },
                              "end": {
                                "row": 10,
                                "column": 34
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 34
                              },
                              "end": {
                                "row": 10,
                                "column": 41
                              },
                              "text": "command"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 10,
                                "column": 41
                              },
                              "end": {
                                "row": 10,
                                "column": 42
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 11,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 31
              },
              "text": "result = out.split(b\" \")[1]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 11,
                    "column": 4
                  },
                  "end": {
                    "row": 11,
                    "column": 31
                  },
                  "text": "result = out.split(b\" \")[1]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 11,
                        "column": 4
                      },
                      "end": {
                        "row": 11,
                        "column": 10
                      },
                      "text": "result"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 11,
                        "column": 11
                      },
                      "end": {
                        "row": 11,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 11,
                        "column": 13
                      },
                      "end": {
                        "row": 11,
                        "column": 31
                      },
                      "text": "out.split(b\" \")[1]",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 11,
                            "column": 13
                          },
                          "end": {
                            "row": 11,
                            "column": 28
                          },
                          "text": "out.split(b\" \")",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 11,
                                "column": 13
                              },
                              "end": {
                                "row": 11,
                                "column": 22
                              },
                              "text": "out.split",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 16
                                  },
                                  "text": "out"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 22
                                  },
                                  "text": "split"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 11,
                                "column": 22
                              },
                              "end": {
                                "row": 11,
                                "column": 28
                              },
                              "text": "(b\" \")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 11,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 27
                                  },
                                  "text": "b\" \"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 11,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 25
                                      },
                                      "text": "b\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 11,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 26
                                      },
                                      "text": " "
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 11,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 27
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 28
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 11,
                            "column": 28
                          },
                          "end": {
                            "row": 11,
                            "column": 29
                          },
                          "text": "["
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 11,
                            "column": 29
                          },
                          "end": {
                            "row": 11,
                            "column": 30
                          },
                          "text": "1"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 11,
                            "column": 30
                          },
                          "end": {
                            "row": 11,
                            "column": 31
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 12,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 21
              },
              "text": "try:\n        return int(result)\n    except ValueError:\n        return result",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 12,
                    "column": 4
                  },
                  "end": {
                    "row": 12,
                    "column": 7
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 12,
                    "column": 7
                  },
                  "end": {
                    "row": 12,
                    "column": 8
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 26
                  },
                  "text": "return int(result)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 26
                      },
                      "text": "return int(result)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 13,
                            "column": 8
                          },
                          "end": {
                            "row": 13,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 13,
                            "column": 15
                          },
                          "end": {
                            "row": 13,
                            "column": 26
                          },
                          "text": "int(result)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 15
                              },
                              "end": {
                                "row": 13,
                                "column": 18
                              },
                              "text": "int"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 13,
                                "column": 18
                              },
                              "end": {
                                "row": 13,
                                "column": 26
                              },
                              "text": "(result)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 13,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 19
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 25
                                  },
                                  "text": "result"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 13,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 26
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 14,
                    "column": 4
                  },
                  "end": {
                    "row": 15,
                    "column": 21
                  },
                  "text": "except ValueError:\n        return result",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 14,
                        "column": 4
                      },
                      "end": {
                        "row": 14,
                        "column": 10
                      },
                      "text": "except"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 11
                      },
                      "end": {
                        "row": 14,
                        "column": 21
                      },
                      "text": "ValueError"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 14,
                        "column": 21
                      },
                      "end": {
                        "row": 14,
                        "column": 22
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 21
                      },
                      "text": "return result",
                      "children": [
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 21
                          },
                          "text": "return result",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 15,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 15
                              },
                              "end": {
                                "row": 15,
                                "column": 21
                              },
                              "text": "result"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}