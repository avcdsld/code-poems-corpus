{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 83,
    "column": 23
  },
  "text": "def auth_password(self, username, password, event=None, fallback=True):\n        \"\"\"\n        Authenticate to the server using a password.  The username and password\n        are sent over an encrypted link.\n\n        If an ``event`` is passed in, this method will return immediately, and\n        the event will be triggered once authentication succeeds or fails.  On\n        success, `is_authenticated` will return ``True``.  On failure, you may\n        use `get_exception` to get more detailed error information.\n\n        Since 1.1, if no event is passed, this method will block until the\n        authentication succeeds or fails.  On failure, an exception is raised.\n        Otherwise, the method simply returns.\n\n        Since 1.5, if no event is passed and ``fallback`` is ``True`` (the\n        default), if the server doesn't support plain password authentication\n        but does support so-called \"keyboard-interactive\" mode, an attempt\n        will be made to authenticate using this interactive mode.  If it fails,\n        the normal exception will be thrown as if the attempt had never been\n        made.  This is useful for some recent Gentoo and Debian distributions,\n        which turn off plain password authentication in a misguided belief\n        that interactive authentication is \"more secure\".  (It's not.)\n\n        If the server requires multi-step authentication (which is very rare),\n        this method will return a list of auth types permissible for the next\n        step.  Otherwise, in the normal case, an empty list is returned.\n\n        :param str username: the username to authenticate as\n        :param basestring password: the password to authenticate with\n        :param .threading.Event event:\n            an event to trigger when the authentication attempt is complete\n            (whether it was successful or not)\n        :param bool fallback:\n            ``True`` if an attempt at an automated \"interactive\" password auth\n            should be made if the server doesn't support normal password auth\n        :return:\n            list of auth types permissible for the next stage of\n            authentication (normally empty)\n\n        :raises:\n            `.BadAuthenticationType` -- if password authentication isn't\n            allowed by the server for this user (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"\n        if (not self.active) or (not self.initial_kex_done):\n            # we should never try to send the password unless we're on a secure\n            # link\n            raise SSHException(\"No existing session\")\n        if event is None:\n            my_event = threading.Event()\n        else:\n            my_event = event\n        self.auth_handler = AuthHandler(self)\n        self.auth_handler.auth_password(username, password, my_event)\n        if event is not None:\n            # caller wants to wait for event themselves\n            return []\n        try:\n            return self.auth_handler.wait_for_response(my_event)\n        except BadAuthenticationType as e:\n            # if password auth isn't allowed, but keyboard-interactive *is*,\n            # try to fudge it\n            if not fallback or (\"keyboard-interactive\" not in e.allowed_types):\n                raise\n            try:\n\n                def handler(title, instructions, fields):\n                    if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]\n\n                return self.auth_interactive(username, handler)\n            except SSHException:\n                # attempt failed; just raise the original exception\n                raise e",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 83,
        "column": 23
      },
      "text": "def auth_password(self, username, password, event=None, fallback=True):\n        \"\"\"\n        Authenticate to the server using a password.  The username and password\n        are sent over an encrypted link.\n\n        If an ``event`` is passed in, this method will return immediately, and\n        the event will be triggered once authentication succeeds or fails.  On\n        success, `is_authenticated` will return ``True``.  On failure, you may\n        use `get_exception` to get more detailed error information.\n\n        Since 1.1, if no event is passed, this method will block until the\n        authentication succeeds or fails.  On failure, an exception is raised.\n        Otherwise, the method simply returns.\n\n        Since 1.5, if no event is passed and ``fallback`` is ``True`` (the\n        default), if the server doesn't support plain password authentication\n        but does support so-called \"keyboard-interactive\" mode, an attempt\n        will be made to authenticate using this interactive mode.  If it fails,\n        the normal exception will be thrown as if the attempt had never been\n        made.  This is useful for some recent Gentoo and Debian distributions,\n        which turn off plain password authentication in a misguided belief\n        that interactive authentication is \"more secure\".  (It's not.)\n\n        If the server requires multi-step authentication (which is very rare),\n        this method will return a list of auth types permissible for the next\n        step.  Otherwise, in the normal case, an empty list is returned.\n\n        :param str username: the username to authenticate as\n        :param basestring password: the password to authenticate with\n        :param .threading.Event event:\n            an event to trigger when the authentication attempt is complete\n            (whether it was successful or not)\n        :param bool fallback:\n            ``True`` if an attempt at an automated \"interactive\" password auth\n            should be made if the server doesn't support normal password auth\n        :return:\n            list of auth types permissible for the next stage of\n            authentication (normally empty)\n\n        :raises:\n            `.BadAuthenticationType` -- if password authentication isn't\n            allowed by the server for this user (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"\n        if (not self.active) or (not self.initial_kex_done):\n            # we should never try to send the password unless we're on a secure\n            # link\n            raise SSHException(\"No existing session\")\n        if event is None:\n            my_event = threading.Event()\n        else:\n            my_event = event\n        self.auth_handler = AuthHandler(self)\n        self.auth_handler.auth_password(username, password, my_event)\n        if event is not None:\n            # caller wants to wait for event themselves\n            return []\n        try:\n            return self.auth_handler.wait_for_response(my_event)\n        except BadAuthenticationType as e:\n            # if password auth isn't allowed, but keyboard-interactive *is*,\n            # try to fudge it\n            if not fallback or (\"keyboard-interactive\" not in e.allowed_types):\n                raise\n            try:\n\n                def handler(title, instructions, fields):\n                    if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]\n\n                return self.auth_interactive(username, handler)\n            except SSHException:\n                # attempt failed; just raise the original exception\n                raise e",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "auth_password"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 17
          },
          "end": {
            "row": 0,
            "column": 70
          },
          "text": "(self, username, password, event=None, fallback=True)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "username"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": "password"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": "event=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 44
                  },
                  "end": {
                    "row": 0,
                    "column": 49
                  },
                  "text": "event"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 49
                  },
                  "end": {
                    "row": 0,
                    "column": 50
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 50
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 54
              },
              "end": {
                "row": 0,
                "column": 55
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 56
              },
              "end": {
                "row": 0,
                "column": 69
              },
              "text": "fallback=True",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 56
                  },
                  "end": {
                    "row": 0,
                    "column": 64
                  },
                  "text": "fallback"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 64
                  },
                  "end": {
                    "row": 0,
                    "column": 65
                  },
                  "text": "="
                },
                {
                  "type": "true",
                  "start": {
                    "row": 0,
                    "column": 65
                  },
                  "end": {
                    "row": 0,
                    "column": 69
                  },
                  "text": "True"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 69
              },
              "end": {
                "row": 0,
                "column": 70
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 70
          },
          "end": {
            "row": 0,
            "column": 71
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 83,
            "column": 23
          },
          "text": "\"\"\"\n        Authenticate to the server using a password.  The username and password\n        are sent over an encrypted link.\n\n        If an ``event`` is passed in, this method will return immediately, and\n        the event will be triggered once authentication succeeds or fails.  On\n        success, `is_authenticated` will return ``True``.  On failure, you may\n        use `get_exception` to get more detailed error information.\n\n        Since 1.1, if no event is passed, this method will block until the\n        authentication succeeds or fails.  On failure, an exception is raised.\n        Otherwise, the method simply returns.\n\n        Since 1.5, if no event is passed and ``fallback`` is ``True`` (the\n        default), if the server doesn't support plain password authentication\n        but does support so-called \"keyboard-interactive\" mode, an attempt\n        will be made to authenticate using this interactive mode.  If it fails,\n        the normal exception will be thrown as if the attempt had never been\n        made.  This is useful for some recent Gentoo and Debian distributions,\n        which turn off plain password authentication in a misguided belief\n        that interactive authentication is \"more secure\".  (It's not.)\n\n        If the server requires multi-step authentication (which is very rare),\n        this method will return a list of auth types permissible for the next\n        step.  Otherwise, in the normal case, an empty list is returned.\n\n        :param str username: the username to authenticate as\n        :param basestring password: the password to authenticate with\n        :param .threading.Event event:\n            an event to trigger when the authentication attempt is complete\n            (whether it was successful or not)\n        :param bool fallback:\n            ``True`` if an attempt at an automated \"interactive\" password auth\n            should be made if the server doesn't support normal password auth\n        :return:\n            list of auth types permissible for the next stage of\n            authentication (normally empty)\n\n        :raises:\n            `.BadAuthenticationType` -- if password authentication isn't\n            allowed by the server for this user (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"\n        if (not self.active) or (not self.initial_kex_done):\n            # we should never try to send the password unless we're on a secure\n            # link\n            raise SSHException(\"No existing session\")\n        if event is None:\n            my_event = threading.Event()\n        else:\n            my_event = event\n        self.auth_handler = AuthHandler(self)\n        self.auth_handler.auth_password(username, password, my_event)\n        if event is not None:\n            # caller wants to wait for event themselves\n            return []\n        try:\n            return self.auth_handler.wait_for_response(my_event)\n        except BadAuthenticationType as e:\n            # if password auth isn't allowed, but keyboard-interactive *is*,\n            # try to fudge it\n            if not fallback or (\"keyboard-interactive\" not in e.allowed_types):\n                raise\n            try:\n\n                def handler(title, instructions, fields):\n                    if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]\n\n                return self.auth_interactive(username, handler)\n            except SSHException:\n                # attempt failed; just raise the original exception\n                raise e",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 46,
                "column": 11
              },
              "text": "\"\"\"\n        Authenticate to the server using a password.  The username and password\n        are sent over an encrypted link.\n\n        If an ``event`` is passed in, this method will return immediately, and\n        the event will be triggered once authentication succeeds or fails.  On\n        success, `is_authenticated` will return ``True``.  On failure, you may\n        use `get_exception` to get more detailed error information.\n\n        Since 1.1, if no event is passed, this method will block until the\n        authentication succeeds or fails.  On failure, an exception is raised.\n        Otherwise, the method simply returns.\n\n        Since 1.5, if no event is passed and ``fallback`` is ``True`` (the\n        default), if the server doesn't support plain password authentication\n        but does support so-called \"keyboard-interactive\" mode, an attempt\n        will be made to authenticate using this interactive mode.  If it fails,\n        the normal exception will be thrown as if the attempt had never been\n        made.  This is useful for some recent Gentoo and Debian distributions,\n        which turn off plain password authentication in a misguided belief\n        that interactive authentication is \"more secure\".  (It's not.)\n\n        If the server requires multi-step authentication (which is very rare),\n        this method will return a list of auth types permissible for the next\n        step.  Otherwise, in the normal case, an empty list is returned.\n\n        :param str username: the username to authenticate as\n        :param basestring password: the password to authenticate with\n        :param .threading.Event event:\n            an event to trigger when the authentication attempt is complete\n            (whether it was successful or not)\n        :param bool fallback:\n            ``True`` if an attempt at an automated \"interactive\" password auth\n            should be made if the server doesn't support normal password auth\n        :return:\n            list of auth types permissible for the next stage of\n            authentication (normally empty)\n\n        :raises:\n            `.BadAuthenticationType` -- if password authentication isn't\n            allowed by the server for this user (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 46,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Authenticate to the server using a password.  The username and password\n        are sent over an encrypted link.\n\n        If an ``event`` is passed in, this method will return immediately, and\n        the event will be triggered once authentication succeeds or fails.  On\n        success, `is_authenticated` will return ``True``.  On failure, you may\n        use `get_exception` to get more detailed error information.\n\n        Since 1.1, if no event is passed, this method will block until the\n        authentication succeeds or fails.  On failure, an exception is raised.\n        Otherwise, the method simply returns.\n\n        Since 1.5, if no event is passed and ``fallback`` is ``True`` (the\n        default), if the server doesn't support plain password authentication\n        but does support so-called \"keyboard-interactive\" mode, an attempt\n        will be made to authenticate using this interactive mode.  If it fails,\n        the normal exception will be thrown as if the attempt had never been\n        made.  This is useful for some recent Gentoo and Debian distributions,\n        which turn off plain password authentication in a misguided belief\n        that interactive authentication is \"more secure\".  (It's not.)\n\n        If the server requires multi-step authentication (which is very rare),\n        this method will return a list of auth types permissible for the next\n        step.  Otherwise, in the normal case, an empty list is returned.\n\n        :param str username: the username to authenticate as\n        :param basestring password: the password to authenticate with\n        :param .threading.Event event:\n            an event to trigger when the authentication attempt is complete\n            (whether it was successful or not)\n        :param bool fallback:\n            ``True`` if an attempt at an automated \"interactive\" password auth\n            should be made if the server doesn't support normal password auth\n        :return:\n            list of auth types permissible for the next stage of\n            authentication (normally empty)\n\n        :raises:\n            `.BadAuthenticationType` -- if password authentication isn't\n            allowed by the server for this user (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 46,
                        "column": 8
                      },
                      "text": "\n        Authenticate to the server using a password.  The username and password\n        are sent over an encrypted link.\n\n        If an ``event`` is passed in, this method will return immediately, and\n        the event will be triggered once authentication succeeds or fails.  On\n        success, `is_authenticated` will return ``True``.  On failure, you may\n        use `get_exception` to get more detailed error information.\n\n        Since 1.1, if no event is passed, this method will block until the\n        authentication succeeds or fails.  On failure, an exception is raised.\n        Otherwise, the method simply returns.\n\n        Since 1.5, if no event is passed and ``fallback`` is ``True`` (the\n        default), if the server doesn't support plain password authentication\n        but does support so-called \"keyboard-interactive\" mode, an attempt\n        will be made to authenticate using this interactive mode.  If it fails,\n        the normal exception will be thrown as if the attempt had never been\n        made.  This is useful for some recent Gentoo and Debian distributions,\n        which turn off plain password authentication in a misguided belief\n        that interactive authentication is \"more secure\".  (It's not.)\n\n        If the server requires multi-step authentication (which is very rare),\n        this method will return a list of auth types permissible for the next\n        step.  Otherwise, in the normal case, an empty list is returned.\n\n        :param str username: the username to authenticate as\n        :param basestring password: the password to authenticate with\n        :param .threading.Event event:\n            an event to trigger when the authentication attempt is complete\n            (whether it was successful or not)\n        :param bool fallback:\n            ``True`` if an attempt at an automated \"interactive\" password auth\n            should be made if the server doesn't support normal password auth\n        :return:\n            list of auth types permissible for the next stage of\n            authentication (normally empty)\n\n        :raises:\n            `.BadAuthenticationType` -- if password authentication isn't\n            allowed by the server for this user (and no event was passed in)\n        :raises:\n            `.AuthenticationException` -- if the authentication failed (and no\n            event was passed in)\n        :raises: `.SSHException` -- if there was a network error\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 46,
                        "column": 8
                      },
                      "end": {
                        "row": 46,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 47,
                "column": 8
              },
              "end": {
                "row": 50,
                "column": 53
              },
              "text": "if (not self.active) or (not self.initial_kex_done):\n            # we should never try to send the password unless we're on a secure\n            # link\n            raise SSHException(\"No existing session\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 47,
                    "column": 8
                  },
                  "end": {
                    "row": 47,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 47,
                    "column": 11
                  },
                  "end": {
                    "row": 47,
                    "column": 59
                  },
                  "text": "(not self.active) or (not self.initial_kex_done)",
                  "children": [
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 47,
                        "column": 11
                      },
                      "end": {
                        "row": 47,
                        "column": 28
                      },
                      "text": "(not self.active)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 47,
                            "column": 11
                          },
                          "end": {
                            "row": 47,
                            "column": 12
                          },
                          "text": "("
                        },
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 47,
                            "column": 12
                          },
                          "end": {
                            "row": 47,
                            "column": 27
                          },
                          "text": "not self.active",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 47,
                                "column": 12
                              },
                              "end": {
                                "row": 47,
                                "column": 15
                              },
                              "text": "not"
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 47,
                                "column": 16
                              },
                              "end": {
                                "row": 47,
                                "column": 27
                              },
                              "text": "self.active",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 47,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 20
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 47,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 47,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 27
                                  },
                                  "text": "active"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 47,
                            "column": 27
                          },
                          "end": {
                            "row": 47,
                            "column": 28
                          },
                          "text": ")"
                        }
                      ]
                    },
                    {
                      "type": "or",
                      "start": {
                        "row": 47,
                        "column": 29
                      },
                      "end": {
                        "row": 47,
                        "column": 31
                      },
                      "text": "or"
                    },
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 47,
                        "column": 32
                      },
                      "end": {
                        "row": 47,
                        "column": 59
                      },
                      "text": "(not self.initial_kex_done)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 47,
                            "column": 32
                          },
                          "end": {
                            "row": 47,
                            "column": 33
                          },
                          "text": "("
                        },
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 47,
                            "column": 33
                          },
                          "end": {
                            "row": 47,
                            "column": 58
                          },
                          "text": "not self.initial_kex_done",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 47,
                                "column": 33
                              },
                              "end": {
                                "row": 47,
                                "column": 36
                              },
                              "text": "not"
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 47,
                                "column": 37
                              },
                              "end": {
                                "row": 47,
                                "column": 58
                              },
                              "text": "self.initial_kex_done",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 47,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 41
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 47,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 42
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 47,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 58
                                  },
                                  "text": "initial_kex_done"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 47,
                            "column": 58
                          },
                          "end": {
                            "row": 47,
                            "column": 59
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 47,
                    "column": 59
                  },
                  "end": {
                    "row": 47,
                    "column": 60
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 48,
                    "column": 12
                  },
                  "end": {
                    "row": 48,
                    "column": 79
                  },
                  "text": "# we should never try to send the password unless we're on a secure"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 49,
                    "column": 12
                  },
                  "end": {
                    "row": 49,
                    "column": 18
                  },
                  "text": "# link"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 50,
                    "column": 12
                  },
                  "end": {
                    "row": 50,
                    "column": 53
                  },
                  "text": "raise SSHException(\"No existing session\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 50,
                        "column": 12
                      },
                      "end": {
                        "row": 50,
                        "column": 53
                      },
                      "text": "raise SSHException(\"No existing session\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 50,
                            "column": 12
                          },
                          "end": {
                            "row": 50,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 50,
                            "column": 18
                          },
                          "end": {
                            "row": 50,
                            "column": 53
                          },
                          "text": "SSHException(\"No existing session\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 50,
                                "column": 18
                              },
                              "end": {
                                "row": 50,
                                "column": 30
                              },
                              "text": "SSHException"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 50,
                                "column": 30
                              },
                              "end": {
                                "row": 50,
                                "column": 53
                              },
                              "text": "(\"No existing session\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 50,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 50,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 52
                                  },
                                  "text": "\"No existing session\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 50,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 32
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 50,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 51
                                      },
                                      "text": "No existing session"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 50,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 52
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 50,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 53
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 51,
                "column": 8
              },
              "end": {
                "row": 54,
                "column": 28
              },
              "text": "if event is None:\n            my_event = threading.Event()\n        else:\n            my_event = event",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 51,
                    "column": 8
                  },
                  "end": {
                    "row": 51,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 51,
                    "column": 11
                  },
                  "end": {
                    "row": 51,
                    "column": 24
                  },
                  "text": "event is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 51,
                        "column": 11
                      },
                      "end": {
                        "row": 51,
                        "column": 16
                      },
                      "text": "event"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 51,
                        "column": 17
                      },
                      "end": {
                        "row": 51,
                        "column": 19
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 51,
                        "column": 20
                      },
                      "end": {
                        "row": 51,
                        "column": 24
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 51,
                    "column": 24
                  },
                  "end": {
                    "row": 51,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 52,
                    "column": 12
                  },
                  "end": {
                    "row": 52,
                    "column": 40
                  },
                  "text": "my_event = threading.Event()",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 52,
                        "column": 12
                      },
                      "end": {
                        "row": 52,
                        "column": 40
                      },
                      "text": "my_event = threading.Event()",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 52,
                            "column": 12
                          },
                          "end": {
                            "row": 52,
                            "column": 40
                          },
                          "text": "my_event = threading.Event()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 52,
                                "column": 12
                              },
                              "end": {
                                "row": 52,
                                "column": 20
                              },
                              "text": "my_event"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 52,
                                "column": 21
                              },
                              "end": {
                                "row": 52,
                                "column": 22
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 52,
                                "column": 23
                              },
                              "end": {
                                "row": 52,
                                "column": 40
                              },
                              "text": "threading.Event()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 52,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 38
                                  },
                                  "text": "threading.Event",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 32
                                      },
                                      "text": "threading"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 52,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 33
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 52,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 38
                                      },
                                      "text": "Event"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 52,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 40
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 52,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 39
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 52,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 52,
                                        "column": 40
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 53,
                    "column": 8
                  },
                  "end": {
                    "row": 54,
                    "column": 28
                  },
                  "text": "else:\n            my_event = event",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 53,
                        "column": 8
                      },
                      "end": {
                        "row": 53,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 53,
                        "column": 12
                      },
                      "end": {
                        "row": 53,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 54,
                        "column": 12
                      },
                      "end": {
                        "row": 54,
                        "column": 28
                      },
                      "text": "my_event = event",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 54,
                            "column": 12
                          },
                          "end": {
                            "row": 54,
                            "column": 28
                          },
                          "text": "my_event = event",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 54,
                                "column": 12
                              },
                              "end": {
                                "row": 54,
                                "column": 28
                              },
                              "text": "my_event = event",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 20
                                  },
                                  "text": "my_event"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 54,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 22
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 28
                                  },
                                  "text": "event"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 55,
                "column": 8
              },
              "end": {
                "row": 55,
                "column": 45
              },
              "text": "self.auth_handler = AuthHandler(self)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 55,
                    "column": 8
                  },
                  "end": {
                    "row": 55,
                    "column": 45
                  },
                  "text": "self.auth_handler = AuthHandler(self)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 55,
                        "column": 8
                      },
                      "end": {
                        "row": 55,
                        "column": 25
                      },
                      "text": "self.auth_handler",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 55,
                            "column": 8
                          },
                          "end": {
                            "row": 55,
                            "column": 12
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 55,
                            "column": 12
                          },
                          "end": {
                            "row": 55,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 55,
                            "column": 13
                          },
                          "end": {
                            "row": 55,
                            "column": 25
                          },
                          "text": "auth_handler"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 55,
                        "column": 26
                      },
                      "end": {
                        "row": 55,
                        "column": 27
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 55,
                        "column": 28
                      },
                      "end": {
                        "row": 55,
                        "column": 45
                      },
                      "text": "AuthHandler(self)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 55,
                            "column": 28
                          },
                          "end": {
                            "row": 55,
                            "column": 39
                          },
                          "text": "AuthHandler"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 55,
                            "column": 39
                          },
                          "end": {
                            "row": 55,
                            "column": 45
                          },
                          "text": "(self)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 55,
                                "column": 39
                              },
                              "end": {
                                "row": 55,
                                "column": 40
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 55,
                                "column": 40
                              },
                              "end": {
                                "row": 55,
                                "column": 44
                              },
                              "text": "self"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 55,
                                "column": 44
                              },
                              "end": {
                                "row": 55,
                                "column": 45
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 56,
                "column": 8
              },
              "end": {
                "row": 56,
                "column": 69
              },
              "text": "self.auth_handler.auth_password(username, password, my_event)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 56,
                    "column": 8
                  },
                  "end": {
                    "row": 56,
                    "column": 69
                  },
                  "text": "self.auth_handler.auth_password(username, password, my_event)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 56,
                        "column": 8
                      },
                      "end": {
                        "row": 56,
                        "column": 39
                      },
                      "text": "self.auth_handler.auth_password",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 56,
                            "column": 8
                          },
                          "end": {
                            "row": 56,
                            "column": 25
                          },
                          "text": "self.auth_handler",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 56,
                                "column": 8
                              },
                              "end": {
                                "row": 56,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 56,
                                "column": 12
                              },
                              "end": {
                                "row": 56,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 56,
                                "column": 13
                              },
                              "end": {
                                "row": 56,
                                "column": 25
                              },
                              "text": "auth_handler"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 56,
                            "column": 25
                          },
                          "end": {
                            "row": 56,
                            "column": 26
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 56,
                            "column": 26
                          },
                          "end": {
                            "row": 56,
                            "column": 39
                          },
                          "text": "auth_password"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 56,
                        "column": 39
                      },
                      "end": {
                        "row": 56,
                        "column": 69
                      },
                      "text": "(username, password, my_event)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 56,
                            "column": 39
                          },
                          "end": {
                            "row": 56,
                            "column": 40
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 56,
                            "column": 40
                          },
                          "end": {
                            "row": 56,
                            "column": 48
                          },
                          "text": "username"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 56,
                            "column": 48
                          },
                          "end": {
                            "row": 56,
                            "column": 49
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 56,
                            "column": 50
                          },
                          "end": {
                            "row": 56,
                            "column": 58
                          },
                          "text": "password"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 56,
                            "column": 58
                          },
                          "end": {
                            "row": 56,
                            "column": 59
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 56,
                            "column": 60
                          },
                          "end": {
                            "row": 56,
                            "column": 68
                          },
                          "text": "my_event"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 56,
                            "column": 68
                          },
                          "end": {
                            "row": 56,
                            "column": 69
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 57,
                "column": 8
              },
              "end": {
                "row": 59,
                "column": 21
              },
              "text": "if event is not None:\n            # caller wants to wait for event themselves\n            return []",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 57,
                    "column": 8
                  },
                  "end": {
                    "row": 57,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 57,
                    "column": 11
                  },
                  "end": {
                    "row": 57,
                    "column": 28
                  },
                  "text": "event is not None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 57,
                        "column": 11
                      },
                      "end": {
                        "row": 57,
                        "column": 16
                      },
                      "text": "event"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 57,
                        "column": 17
                      },
                      "end": {
                        "row": 57,
                        "column": 19
                      },
                      "text": "is"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 57,
                        "column": 20
                      },
                      "end": {
                        "row": 57,
                        "column": 23
                      },
                      "text": "not"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 57,
                        "column": 24
                      },
                      "end": {
                        "row": 57,
                        "column": 28
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 57,
                    "column": 28
                  },
                  "end": {
                    "row": 57,
                    "column": 29
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 58,
                    "column": 12
                  },
                  "end": {
                    "row": 58,
                    "column": 55
                  },
                  "text": "# caller wants to wait for event themselves"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 59,
                    "column": 12
                  },
                  "end": {
                    "row": 59,
                    "column": 21
                  },
                  "text": "return []",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 59,
                        "column": 12
                      },
                      "end": {
                        "row": 59,
                        "column": 21
                      },
                      "text": "return []",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 59,
                            "column": 12
                          },
                          "end": {
                            "row": 59,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "list",
                          "start": {
                            "row": 59,
                            "column": 19
                          },
                          "end": {
                            "row": 59,
                            "column": 21
                          },
                          "text": "[]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 59,
                                "column": 19
                              },
                              "end": {
                                "row": 59,
                                "column": 20
                              },
                              "text": "["
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 59,
                                "column": 20
                              },
                              "end": {
                                "row": 59,
                                "column": 21
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 60,
                "column": 8
              },
              "end": {
                "row": 83,
                "column": 23
              },
              "text": "try:\n            return self.auth_handler.wait_for_response(my_event)\n        except BadAuthenticationType as e:\n            # if password auth isn't allowed, but keyboard-interactive *is*,\n            # try to fudge it\n            if not fallback or (\"keyboard-interactive\" not in e.allowed_types):\n                raise\n            try:\n\n                def handler(title, instructions, fields):\n                    if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]\n\n                return self.auth_interactive(username, handler)\n            except SSHException:\n                # attempt failed; just raise the original exception\n                raise e",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 60,
                    "column": 8
                  },
                  "end": {
                    "row": 60,
                    "column": 11
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 60,
                    "column": 11
                  },
                  "end": {
                    "row": 60,
                    "column": 12
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 61,
                    "column": 12
                  },
                  "end": {
                    "row": 61,
                    "column": 64
                  },
                  "text": "return self.auth_handler.wait_for_response(my_event)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 61,
                        "column": 12
                      },
                      "end": {
                        "row": 61,
                        "column": 64
                      },
                      "text": "return self.auth_handler.wait_for_response(my_event)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 61,
                            "column": 12
                          },
                          "end": {
                            "row": 61,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 61,
                            "column": 19
                          },
                          "end": {
                            "row": 61,
                            "column": 64
                          },
                          "text": "self.auth_handler.wait_for_response(my_event)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 61,
                                "column": 19
                              },
                              "end": {
                                "row": 61,
                                "column": 54
                              },
                              "text": "self.auth_handler.wait_for_response",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 61,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 36
                                  },
                                  "text": "self.auth_handler",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 61,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 23
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 61,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 24
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 61,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 36
                                      },
                                      "text": "auth_handler"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 61,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 37
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 61,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 54
                                  },
                                  "text": "wait_for_response"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 61,
                                "column": 54
                              },
                              "end": {
                                "row": 61,
                                "column": 64
                              },
                              "text": "(my_event)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 61,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 55
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 61,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 63
                                  },
                                  "text": "my_event"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 61,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 64
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 62,
                    "column": 8
                  },
                  "end": {
                    "row": 83,
                    "column": 23
                  },
                  "text": "except BadAuthenticationType as e:\n            # if password auth isn't allowed, but keyboard-interactive *is*,\n            # try to fudge it\n            if not fallback or (\"keyboard-interactive\" not in e.allowed_types):\n                raise\n            try:\n\n                def handler(title, instructions, fields):\n                    if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]\n\n                return self.auth_interactive(username, handler)\n            except SSHException:\n                # attempt failed; just raise the original exception\n                raise e",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 62,
                        "column": 8
                      },
                      "end": {
                        "row": 62,
                        "column": 14
                      },
                      "text": "except"
                    },
                    {
                      "type": "as_pattern",
                      "start": {
                        "row": 62,
                        "column": 15
                      },
                      "end": {
                        "row": 62,
                        "column": 41
                      },
                      "text": "BadAuthenticationType as e",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 62,
                            "column": 15
                          },
                          "end": {
                            "row": 62,
                            "column": 36
                          },
                          "text": "BadAuthenticationType"
                        },
                        {
                          "type": "as",
                          "start": {
                            "row": 62,
                            "column": 37
                          },
                          "end": {
                            "row": 62,
                            "column": 39
                          },
                          "text": "as"
                        },
                        {
                          "type": "as_pattern_target",
                          "start": {
                            "row": 62,
                            "column": 40
                          },
                          "end": {
                            "row": 62,
                            "column": 41
                          },
                          "text": "e",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 62,
                                "column": 40
                              },
                              "end": {
                                "row": 62,
                                "column": 41
                              },
                              "text": "e"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 62,
                        "column": 41
                      },
                      "end": {
                        "row": 62,
                        "column": 42
                      },
                      "text": ":"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 63,
                        "column": 12
                      },
                      "end": {
                        "row": 63,
                        "column": 76
                      },
                      "text": "# if password auth isn't allowed, but keyboard-interactive *is*,"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 64,
                        "column": 12
                      },
                      "end": {
                        "row": 64,
                        "column": 29
                      },
                      "text": "# try to fudge it"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 65,
                        "column": 12
                      },
                      "end": {
                        "row": 83,
                        "column": 23
                      },
                      "text": "if not fallback or (\"keyboard-interactive\" not in e.allowed_types):\n                raise\n            try:\n\n                def handler(title, instructions, fields):\n                    if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]\n\n                return self.auth_interactive(username, handler)\n            except SSHException:\n                # attempt failed; just raise the original exception\n                raise e",
                      "children": [
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 65,
                            "column": 12
                          },
                          "end": {
                            "row": 66,
                            "column": 21
                          },
                          "text": "if not fallback or (\"keyboard-interactive\" not in e.allowed_types):\n                raise",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 65,
                                "column": 12
                              },
                              "end": {
                                "row": 65,
                                "column": 14
                              },
                              "text": "if"
                            },
                            {
                              "type": "boolean_operator",
                              "start": {
                                "row": 65,
                                "column": 15
                              },
                              "end": {
                                "row": 65,
                                "column": 78
                              },
                              "text": "not fallback or (\"keyboard-interactive\" not in e.allowed_types)",
                              "children": [
                                {
                                  "type": "not_operator",
                                  "start": {
                                    "row": 65,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 27
                                  },
                                  "text": "not fallback",
                                  "children": [
                                    {
                                      "type": "not",
                                      "start": {
                                        "row": 65,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 18
                                      },
                                      "text": "not"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 65,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 27
                                      },
                                      "text": "fallback"
                                    }
                                  ]
                                },
                                {
                                  "type": "or",
                                  "start": {
                                    "row": 65,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 30
                                  },
                                  "text": "or"
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start": {
                                    "row": 65,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 78
                                  },
                                  "text": "(\"keyboard-interactive\" not in e.allowed_types)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 65,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 32
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 65,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 77
                                      },
                                      "text": "\"keyboard-interactive\" not in e.allowed_types",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 65,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 54
                                          },
                                          "text": "\"keyboard-interactive\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 65,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 33
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 65,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 53
                                              },
                                              "text": "keyboard-interactive"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 65,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 54
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": "not in",
                                          "start": {
                                            "row": 65,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 58
                                          },
                                          "text": "not"
                                        },
                                        {
                                          "type": "not in",
                                          "start": {
                                            "row": 65,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 61
                                          },
                                          "text": "in"
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 65,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 77
                                          },
                                          "text": "e.allowed_types",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 65,
                                                "column": 62
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 63
                                              },
                                              "text": "e"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 65,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 64
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 65,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 77
                                              },
                                              "text": "allowed_types"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 65,
                                        "column": 77
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 78
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 65,
                                "column": 78
                              },
                              "end": {
                                "row": 65,
                                "column": 79
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 66,
                                "column": 16
                              },
                              "end": {
                                "row": 66,
                                "column": 21
                              },
                              "text": "raise",
                              "children": [
                                {
                                  "type": "raise_statement",
                                  "start": {
                                    "row": 66,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 66,
                                    "column": 21
                                  },
                                  "text": "raise",
                                  "children": [
                                    {
                                      "type": "raise",
                                      "start": {
                                        "row": 66,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 66,
                                        "column": 21
                                      },
                                      "text": "raise"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "try_statement",
                          "start": {
                            "row": 67,
                            "column": 12
                          },
                          "end": {
                            "row": 83,
                            "column": 23
                          },
                          "text": "try:\n\n                def handler(title, instructions, fields):\n                    if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]\n\n                return self.auth_interactive(username, handler)\n            except SSHException:\n                # attempt failed; just raise the original exception\n                raise e",
                          "children": [
                            {
                              "type": "try",
                              "start": {
                                "row": 67,
                                "column": 12
                              },
                              "end": {
                                "row": 67,
                                "column": 15
                              },
                              "text": "try"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 67,
                                "column": 15
                              },
                              "end": {
                                "row": 67,
                                "column": 16
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 69,
                                "column": 16
                              },
                              "end": {
                                "row": 80,
                                "column": 63
                              },
                              "text": "def handler(title, instructions, fields):\n                    if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]\n\n                return self.auth_interactive(username, handler)",
                              "children": [
                                {
                                  "type": "function_definition",
                                  "start": {
                                    "row": 69,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 37
                                  },
                                  "text": "def handler(title, instructions, fields):\n                    if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]",
                                  "children": [
                                    {
                                      "type": "def",
                                      "start": {
                                        "row": 69,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 19
                                      },
                                      "text": "def"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 69,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 27
                                      },
                                      "text": "handler"
                                    },
                                    {
                                      "type": "parameters",
                                      "start": {
                                        "row": 69,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 56
                                      },
                                      "text": "(title, instructions, fields)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 69,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 28
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 69,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 33
                                          },
                                          "text": "title"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 69,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 34
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 69,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 47
                                          },
                                          "text": "instructions"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 69,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 48
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 69,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 55
                                          },
                                          "text": "fields"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 69,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 56
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 69,
                                        "column": 56
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 57
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 70,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 78,
                                        "column": 37
                                      },
                                      "text": "if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")\n                    if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []\n                    return [password]",
                                      "children": [
                                        {
                                          "type": "if_statement",
                                          "start": {
                                            "row": 70,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 71,
                                            "column": 77
                                          },
                                          "text": "if len(fields) > 1:\n                        raise SSHException(\"Fallback authentication failed.\")",
                                          "children": [
                                            {
                                              "type": "if",
                                              "start": {
                                                "row": 70,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 22
                                              },
                                              "text": "if"
                                            },
                                            {
                                              "type": "comparison_operator",
                                              "start": {
                                                "row": 70,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 38
                                              },
                                              "text": "len(fields) > 1",
                                              "children": [
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 34
                                                  },
                                                  "text": "len(fields)",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 26
                                                      },
                                                      "text": "len"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 70,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 70,
                                                        "column": 34
                                                      },
                                                      "text": "(fields)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 27
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 33
                                                          },
                                                          "text": "fields"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 70,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 70,
                                                            "column": 34
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ">",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 36
                                                  },
                                                  "text": ">"
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 70,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 70,
                                                    "column": 38
                                                  },
                                                  "text": "1"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ":",
                                              "start": {
                                                "row": 70,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 39
                                              },
                                              "text": ":"
                                            },
                                            {
                                              "type": "block",
                                              "start": {
                                                "row": 71,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 71,
                                                "column": 77
                                              },
                                              "text": "raise SSHException(\"Fallback authentication failed.\")",
                                              "children": [
                                                {
                                                  "type": "raise_statement",
                                                  "start": {
                                                    "row": 71,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 71,
                                                    "column": 77
                                                  },
                                                  "text": "raise SSHException(\"Fallback authentication failed.\")",
                                                  "children": [
                                                    {
                                                      "type": "raise",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 29
                                                      },
                                                      "text": "raise"
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 77
                                                      },
                                                      "text": "SSHException(\"Fallback authentication failed.\")",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 71,
                                                            "column": 30
                                                          },
                                                          "end": {
                                                            "row": 71,
                                                            "column": 42
                                                          },
                                                          "text": "SSHException"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 71,
                                                            "column": 42
                                                          },
                                                          "end": {
                                                            "row": 71,
                                                            "column": 77
                                                          },
                                                          "text": "(\"Fallback authentication failed.\")",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 71,
                                                                "column": 42
                                                              },
                                                              "end": {
                                                                "row": 71,
                                                                "column": 43
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "string",
                                                              "start": {
                                                                "row": 71,
                                                                "column": 43
                                                              },
                                                              "end": {
                                                                "row": 71,
                                                                "column": 76
                                                              },
                                                              "text": "\"Fallback authentication failed.\"",
                                                              "children": [
                                                                {
                                                                  "type": "string_start",
                                                                  "start": {
                                                                    "row": 71,
                                                                    "column": 43
                                                                  },
                                                                  "end": {
                                                                    "row": 71,
                                                                    "column": 44
                                                                  },
                                                                  "text": "\""
                                                                },
                                                                {
                                                                  "type": "string_content",
                                                                  "start": {
                                                                    "row": 71,
                                                                    "column": 44
                                                                  },
                                                                  "end": {
                                                                    "row": 71,
                                                                    "column": 75
                                                                  },
                                                                  "text": "Fallback authentication failed."
                                                                },
                                                                {
                                                                  "type": "string_end",
                                                                  "start": {
                                                                    "row": 71,
                                                                    "column": 75
                                                                  },
                                                                  "end": {
                                                                    "row": 71,
                                                                    "column": 76
                                                                  },
                                                                  "text": "\""
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 71,
                                                                "column": 76
                                                              },
                                                              "end": {
                                                                "row": 71,
                                                                "column": 77
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "if_statement",
                                          "start": {
                                            "row": 72,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 77,
                                            "column": 33
                                          },
                                          "text": "if len(fields) == 0:\n                        # for some reason, at least on os x, a 2nd request will\n                        # be made with zero fields requested.  maybe it's just\n                        # to try to fake out automated scripting of the exact\n                        # type we're doing here.  *shrug* :)\n                        return []",
                                          "children": [
                                            {
                                              "type": "if",
                                              "start": {
                                                "row": 72,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 72,
                                                "column": 22
                                              },
                                              "text": "if"
                                            },
                                            {
                                              "type": "comparison_operator",
                                              "start": {
                                                "row": 72,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 72,
                                                "column": 39
                                              },
                                              "text": "len(fields) == 0",
                                              "children": [
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 34
                                                  },
                                                  "text": "len(fields)",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 26
                                                      },
                                                      "text": "len"
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 34
                                                      },
                                                      "text": "(fields)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 27
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 33
                                                          },
                                                          "text": "fields"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 34
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "==",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 37
                                                  },
                                                  "text": "=="
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 39
                                                  },
                                                  "text": "0"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ":",
                                              "start": {
                                                "row": 72,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 72,
                                                "column": 40
                                              },
                                              "text": ":"
                                            },
                                            {
                                              "type": "comment",
                                              "start": {
                                                "row": 73,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 79
                                              },
                                              "text": "# for some reason, at least on os x, a 2nd request will"
                                            },
                                            {
                                              "type": "comment",
                                              "start": {
                                                "row": 74,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 74,
                                                "column": 78
                                              },
                                              "text": "# be made with zero fields requested.  maybe it's just"
                                            },
                                            {
                                              "type": "comment",
                                              "start": {
                                                "row": 75,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 77
                                              },
                                              "text": "# to try to fake out automated scripting of the exact"
                                            },
                                            {
                                              "type": "comment",
                                              "start": {
                                                "row": 76,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 76,
                                                "column": 60
                                              },
                                              "text": "# type we're doing here.  *shrug* :)"
                                            },
                                            {
                                              "type": "block",
                                              "start": {
                                                "row": 77,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 77,
                                                "column": 33
                                              },
                                              "text": "return []",
                                              "children": [
                                                {
                                                  "type": "return_statement",
                                                  "start": {
                                                    "row": 77,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 77,
                                                    "column": 33
                                                  },
                                                  "text": "return []",
                                                  "children": [
                                                    {
                                                      "type": "return",
                                                      "start": {
                                                        "row": 77,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 77,
                                                        "column": 30
                                                      },
                                                      "text": "return"
                                                    },
                                                    {
                                                      "type": "list",
                                                      "start": {
                                                        "row": 77,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 77,
                                                        "column": 33
                                                      },
                                                      "text": "[]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 77,
                                                            "column": 31
                                                          },
                                                          "end": {
                                                            "row": 77,
                                                            "column": 32
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 77,
                                                            "column": 32
                                                          },
                                                          "end": {
                                                            "row": 77,
                                                            "column": 33
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "return_statement",
                                          "start": {
                                            "row": 78,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 78,
                                            "column": 37
                                          },
                                          "text": "return [password]",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start": {
                                                "row": 78,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 78,
                                                "column": 26
                                              },
                                              "text": "return"
                                            },
                                            {
                                              "type": "list",
                                              "start": {
                                                "row": 78,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 78,
                                                "column": 37
                                              },
                                              "text": "[password]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 78,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 78,
                                                    "column": 28
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 78,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 78,
                                                    "column": 36
                                                  },
                                                  "text": "password"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 78,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 78,
                                                    "column": 37
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 80,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 80,
                                    "column": 63
                                  },
                                  "text": "return self.auth_interactive(username, handler)",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 80,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 80,
                                        "column": 22
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 80,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 80,
                                        "column": 63
                                      },
                                      "text": "self.auth_interactive(username, handler)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 80,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 80,
                                            "column": 44
                                          },
                                          "text": "self.auth_interactive",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 80,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 80,
                                                "column": 27
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 80,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 80,
                                                "column": 28
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 80,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 80,
                                                "column": 44
                                              },
                                              "text": "auth_interactive"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 80,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 80,
                                            "column": 63
                                          },
                                          "text": "(username, handler)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 80,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 80,
                                                "column": 45
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 80,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 80,
                                                "column": 53
                                              },
                                              "text": "username"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 80,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 80,
                                                "column": 54
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 80,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 80,
                                                "column": 62
                                              },
                                              "text": "handler"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 80,
                                                "column": 62
                                              },
                                              "end": {
                                                "row": 80,
                                                "column": 63
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "except_clause",
                              "start": {
                                "row": 81,
                                "column": 12
                              },
                              "end": {
                                "row": 83,
                                "column": 23
                              },
                              "text": "except SSHException:\n                # attempt failed; just raise the original exception\n                raise e",
                              "children": [
                                {
                                  "type": "except",
                                  "start": {
                                    "row": 81,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 18
                                  },
                                  "text": "except"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 81,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 31
                                  },
                                  "text": "SSHException"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 81,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 32
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 82,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 82,
                                    "column": 67
                                  },
                                  "text": "# attempt failed; just raise the original exception"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 83,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 83,
                                    "column": 23
                                  },
                                  "text": "raise e",
                                  "children": [
                                    {
                                      "type": "raise_statement",
                                      "start": {
                                        "row": 83,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 83,
                                        "column": 23
                                      },
                                      "text": "raise e",
                                      "children": [
                                        {
                                          "type": "raise",
                                          "start": {
                                            "row": 83,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 83,
                                            "column": 21
                                          },
                                          "text": "raise"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 83,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 83,
                                            "column": 23
                                          },
                                          "text": "e"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}