{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 36,
    "column": 43
  },
  "text": "def step(self, batch_size, max_norm=None):\n        \"\"\"Makes one step of parameter update. Should be called after\n        `fp16_optimizer.backward()`, and outside of `record()` scope.\n\n        Parameters\n        ----------\n        batch_size : int\n            Batch size of data processed. Gradient will be normalized by `1/batch_size`.\n            Set this to 1 if you normalized loss manually with `loss = mean(loss)`.\n        max_norm : NDArray, optional, default is None\n            max value for global 2-norm of gradients.\n        \"\"\"\n        self.fp32_trainer.allreduce_grads()\n        step_size = batch_size * self._scaler.loss_scale\n        if max_norm:\n            norm, ratio, is_finite = grad_global_norm(self.fp32_trainer._params,\n                                                      max_norm * self._scaler.loss_scale)\n            step_size = ratio * step_size\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = is_finite.asscalar() < 1\n            else:\n                overflow = not np.isfinite(norm.asscalar())\n                if not overflow:\n                    self.fp32_trainer.update(step_size)\n        else:\n            # TODO(haibin) optimize the performance when max_norm is not present\n            # sequentially adding isnan/isinf results may be slow\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n            else:\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n                if not overflow:\n                    self.fp32_trainer.update(step_size)\n        # update scale based on overflow information\n        self._scaler.update_scale(overflow)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 36,
        "column": 43
      },
      "text": "def step(self, batch_size, max_norm=None):\n        \"\"\"Makes one step of parameter update. Should be called after\n        `fp16_optimizer.backward()`, and outside of `record()` scope.\n\n        Parameters\n        ----------\n        batch_size : int\n            Batch size of data processed. Gradient will be normalized by `1/batch_size`.\n            Set this to 1 if you normalized loss manually with `loss = mean(loss)`.\n        max_norm : NDArray, optional, default is None\n            max value for global 2-norm of gradients.\n        \"\"\"\n        self.fp32_trainer.allreduce_grads()\n        step_size = batch_size * self._scaler.loss_scale\n        if max_norm:\n            norm, ratio, is_finite = grad_global_norm(self.fp32_trainer._params,\n                                                      max_norm * self._scaler.loss_scale)\n            step_size = ratio * step_size\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = is_finite.asscalar() < 1\n            else:\n                overflow = not np.isfinite(norm.asscalar())\n                if not overflow:\n                    self.fp32_trainer.update(step_size)\n        else:\n            # TODO(haibin) optimize the performance when max_norm is not present\n            # sequentially adding isnan/isinf results may be slow\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n            else:\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n                if not overflow:\n                    self.fp32_trainer.update(step_size)\n        # update scale based on overflow information\n        self._scaler.update_scale(overflow)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 8
          },
          "text": "step"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 8
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": "(self, batch_size, max_norm=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 8
              },
              "end": {
                "row": 0,
                "column": 9
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "batch_size"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "max_norm=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 27
                  },
                  "end": {
                    "row": 0,
                    "column": 35
                  },
                  "text": "max_norm"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 35
                  },
                  "end": {
                    "row": 0,
                    "column": 36
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 36
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 41
          },
          "end": {
            "row": 0,
            "column": 42
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 36,
            "column": 43
          },
          "text": "\"\"\"Makes one step of parameter update. Should be called after\n        `fp16_optimizer.backward()`, and outside of `record()` scope.\n\n        Parameters\n        ----------\n        batch_size : int\n            Batch size of data processed. Gradient will be normalized by `1/batch_size`.\n            Set this to 1 if you normalized loss manually with `loss = mean(loss)`.\n        max_norm : NDArray, optional, default is None\n            max value for global 2-norm of gradients.\n        \"\"\"\n        self.fp32_trainer.allreduce_grads()\n        step_size = batch_size * self._scaler.loss_scale\n        if max_norm:\n            norm, ratio, is_finite = grad_global_norm(self.fp32_trainer._params,\n                                                      max_norm * self._scaler.loss_scale)\n            step_size = ratio * step_size\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = is_finite.asscalar() < 1\n            else:\n                overflow = not np.isfinite(norm.asscalar())\n                if not overflow:\n                    self.fp32_trainer.update(step_size)\n        else:\n            # TODO(haibin) optimize the performance when max_norm is not present\n            # sequentially adding isnan/isinf results may be slow\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n            else:\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n                if not overflow:\n                    self.fp32_trainer.update(step_size)\n        # update scale based on overflow information\n        self._scaler.update_scale(overflow)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 11
              },
              "text": "\"\"\"Makes one step of parameter update. Should be called after\n        `fp16_optimizer.backward()`, and outside of `record()` scope.\n\n        Parameters\n        ----------\n        batch_size : int\n            Batch size of data processed. Gradient will be normalized by `1/batch_size`.\n            Set this to 1 if you normalized loss manually with `loss = mean(loss)`.\n        max_norm : NDArray, optional, default is None\n            max value for global 2-norm of gradients.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 11
                  },
                  "text": "\"\"\"Makes one step of parameter update. Should be called after\n        `fp16_optimizer.backward()`, and outside of `record()` scope.\n\n        Parameters\n        ----------\n        batch_size : int\n            Batch size of data processed. Gradient will be normalized by `1/batch_size`.\n            Set this to 1 if you normalized loss manually with `loss = mean(loss)`.\n        max_norm : NDArray, optional, default is None\n            max value for global 2-norm of gradients.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 11,
                        "column": 8
                      },
                      "text": "Makes one step of parameter update. Should be called after\n        `fp16_optimizer.backward()`, and outside of `record()` scope.\n\n        Parameters\n        ----------\n        batch_size : int\n            Batch size of data processed. Gradient will be normalized by `1/batch_size`.\n            Set this to 1 if you normalized loss manually with `loss = mean(loss)`.\n        max_norm : NDArray, optional, default is None\n            max value for global 2-norm of gradients.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 43
              },
              "text": "self.fp32_trainer.allreduce_grads()",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 12,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 43
                  },
                  "text": "self.fp32_trainer.allreduce_grads()",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 41
                      },
                      "text": "self.fp32_trainer.allreduce_grads",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 12,
                            "column": 8
                          },
                          "end": {
                            "row": 12,
                            "column": 25
                          },
                          "text": "self.fp32_trainer",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 8
                              },
                              "end": {
                                "row": 12,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 12,
                                "column": 12
                              },
                              "end": {
                                "row": 12,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 13
                              },
                              "end": {
                                "row": 12,
                                "column": 25
                              },
                              "text": "fp32_trainer"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 12,
                            "column": 25
                          },
                          "end": {
                            "row": 12,
                            "column": 26
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 12,
                            "column": 26
                          },
                          "end": {
                            "row": 12,
                            "column": 41
                          },
                          "text": "allreduce_grads"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 12,
                        "column": 41
                      },
                      "end": {
                        "row": 12,
                        "column": 43
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 12,
                            "column": 41
                          },
                          "end": {
                            "row": 12,
                            "column": 42
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 12,
                            "column": 42
                          },
                          "end": {
                            "row": 12,
                            "column": 43
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 56
              },
              "text": "step_size = batch_size * self._scaler.loss_scale",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 56
                  },
                  "text": "step_size = batch_size * self._scaler.loss_scale",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 17
                      },
                      "text": "step_size"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 18
                      },
                      "end": {
                        "row": 13,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 13,
                        "column": 20
                      },
                      "end": {
                        "row": 13,
                        "column": 56
                      },
                      "text": "batch_size * self._scaler.loss_scale",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 20
                          },
                          "end": {
                            "row": 13,
                            "column": 30
                          },
                          "text": "batch_size"
                        },
                        {
                          "type": "*",
                          "start": {
                            "row": 13,
                            "column": 31
                          },
                          "end": {
                            "row": 13,
                            "column": 32
                          },
                          "text": "*"
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 13,
                            "column": 33
                          },
                          "end": {
                            "row": 13,
                            "column": 56
                          },
                          "text": "self._scaler.loss_scale",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 13,
                                "column": 33
                              },
                              "end": {
                                "row": 13,
                                "column": 45
                              },
                              "text": "self._scaler",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 37
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 13,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 38
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 45
                                  },
                                  "text": "_scaler"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 13,
                                "column": 45
                              },
                              "end": {
                                "row": 13,
                                "column": 46
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 46
                              },
                              "end": {
                                "row": 13,
                                "column": 56
                              },
                              "text": "loss_scale"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 34,
                "column": 55
              },
              "text": "if max_norm:\n            norm, ratio, is_finite = grad_global_norm(self.fp32_trainer._params,\n                                                      max_norm * self._scaler.loss_scale)\n            step_size = ratio * step_size\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = is_finite.asscalar() < 1\n            else:\n                overflow = not np.isfinite(norm.asscalar())\n                if not overflow:\n                    self.fp32_trainer.update(step_size)\n        else:\n            # TODO(haibin) optimize the performance when max_norm is not present\n            # sequentially adding isnan/isinf results may be slow\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n            else:\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 14,
                    "column": 8
                  },
                  "end": {
                    "row": 14,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 14,
                    "column": 11
                  },
                  "end": {
                    "row": 14,
                    "column": 19
                  },
                  "text": "max_norm"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 14,
                    "column": 19
                  },
                  "end": {
                    "row": 14,
                    "column": 20
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 15,
                    "column": 12
                  },
                  "end": {
                    "row": 24,
                    "column": 55
                  },
                  "text": "norm, ratio, is_finite = grad_global_norm(self.fp32_trainer._params,\n                                                      max_norm * self._scaler.loss_scale)\n            step_size = ratio * step_size\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = is_finite.asscalar() < 1\n            else:\n                overflow = not np.isfinite(norm.asscalar())\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 15,
                        "column": 12
                      },
                      "end": {
                        "row": 16,
                        "column": 89
                      },
                      "text": "norm, ratio, is_finite = grad_global_norm(self.fp32_trainer._params,\n                                                      max_norm * self._scaler.loss_scale)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 15,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 89
                          },
                          "text": "norm, ratio, is_finite = grad_global_norm(self.fp32_trainer._params,\n                                                      max_norm * self._scaler.loss_scale)",
                          "children": [
                            {
                              "type": "pattern_list",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 34
                              },
                              "text": "norm, ratio, is_finite",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 16
                                  },
                                  "text": "norm"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 15,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 17
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 23
                                  },
                                  "text": "ratio"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 15,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 24
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 34
                                  },
                                  "text": "is_finite"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 15,
                                "column": 35
                              },
                              "end": {
                                "row": 15,
                                "column": 36
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 15,
                                "column": 37
                              },
                              "end": {
                                "row": 16,
                                "column": 89
                              },
                              "text": "grad_global_norm(self.fp32_trainer._params,\n                                                      max_norm * self._scaler.loss_scale)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 15,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 53
                                  },
                                  "text": "grad_global_norm"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 15,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 89
                                  },
                                  "text": "(self.fp32_trainer._params,\n                                                      max_norm * self._scaler.loss_scale)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 15,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 54
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 15,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 79
                                      },
                                      "text": "self.fp32_trainer._params",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 15,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 71
                                          },
                                          "text": "self.fp32_trainer",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 15,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 58
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 15,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 59
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 15,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 15,
                                                "column": 71
                                              },
                                              "text": "fp32_trainer"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 15,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 72
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 15,
                                            "column": 72
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 79
                                          },
                                          "text": "_params"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 15,
                                        "column": 79
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 80
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 16,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 88
                                      },
                                      "text": "max_norm * self._scaler.loss_scale",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 16,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 62
                                          },
                                          "text": "max_norm"
                                        },
                                        {
                                          "type": "*",
                                          "start": {
                                            "row": 16,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 64
                                          },
                                          "text": "*"
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 16,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 16,
                                            "column": 88
                                          },
                                          "text": "self._scaler.loss_scale",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 16,
                                                "column": 65
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 77
                                              },
                                              "text": "self._scaler",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 69
                                                  },
                                                  "text": "self"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 69
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 70
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 16,
                                                    "column": 70
                                                  },
                                                  "end": {
                                                    "row": 16,
                                                    "column": 77
                                                  },
                                                  "text": "_scaler"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 16,
                                                "column": 77
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 78
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 16,
                                                "column": 78
                                              },
                                              "end": {
                                                "row": 16,
                                                "column": 88
                                              },
                                              "text": "loss_scale"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 16,
                                        "column": 88
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 89
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 17,
                        "column": 12
                      },
                      "end": {
                        "row": 17,
                        "column": 41
                      },
                      "text": "step_size = ratio * step_size",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 17,
                            "column": 12
                          },
                          "end": {
                            "row": 17,
                            "column": 41
                          },
                          "text": "step_size = ratio * step_size",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 12
                              },
                              "end": {
                                "row": 17,
                                "column": 21
                              },
                              "text": "step_size"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 17,
                                "column": 22
                              },
                              "end": {
                                "row": 17,
                                "column": 23
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 17,
                                "column": 24
                              },
                              "end": {
                                "row": 17,
                                "column": 41
                              },
                              "text": "ratio * step_size",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 29
                                  },
                                  "text": "ratio"
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 17,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 31
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 41
                                  },
                                  "text": "step_size"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 18,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 55
                      },
                      "text": "if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = is_finite.asscalar() < 1\n            else:\n                overflow = not np.isfinite(norm.asscalar())\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 18,
                            "column": 12
                          },
                          "end": {
                            "row": 18,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 18,
                            "column": 15
                          },
                          "end": {
                            "row": 18,
                            "column": 38
                          },
                          "text": "self._support_nan_check",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 15
                              },
                              "end": {
                                "row": 18,
                                "column": 19
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 18,
                                "column": 19
                              },
                              "end": {
                                "row": 18,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 20
                              },
                              "end": {
                                "row": 18,
                                "column": 38
                              },
                              "text": "_support_nan_check"
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 18,
                            "column": 38
                          },
                          "end": {
                            "row": 18,
                            "column": 39
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 19,
                            "column": 16
                          },
                          "end": {
                            "row": 20,
                            "column": 51
                          },
                          "text": "self.fp32_trainer.update(step_size)\n                overflow = is_finite.asscalar() < 1",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 19,
                                "column": 16
                              },
                              "end": {
                                "row": 19,
                                "column": 51
                              },
                              "text": "self.fp32_trainer.update(step_size)",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 19,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 51
                                  },
                                  "text": "self.fp32_trainer.update(step_size)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 19,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 40
                                      },
                                      "text": "self.fp32_trainer.update",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 19,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 33
                                          },
                                          "text": "self.fp32_trainer",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 19,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 20
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 19,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 21
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 19,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 33
                                              },
                                              "text": "fp32_trainer"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 19,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 34
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 40
                                          },
                                          "text": "update"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 19,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 51
                                      },
                                      "text": "(step_size)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 19,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 41
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 19,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 50
                                          },
                                          "text": "step_size"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 19,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 51
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 20,
                                "column": 16
                              },
                              "end": {
                                "row": 20,
                                "column": 51
                              },
                              "text": "overflow = is_finite.asscalar() < 1",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 51
                                  },
                                  "text": "overflow = is_finite.asscalar() < 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 20,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 24
                                      },
                                      "text": "overflow"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 20,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 26
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "comparison_operator",
                                      "start": {
                                        "row": 20,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 51
                                      },
                                      "text": "is_finite.asscalar() < 1",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 20,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 47
                                          },
                                          "text": "is_finite.asscalar()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 20,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 45
                                              },
                                              "text": "is_finite.asscalar",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 36
                                                  },
                                                  "text": "is_finite"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 37
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 45
                                                  },
                                                  "text": "asscalar"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 20,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 20,
                                                "column": 47
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 46
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 20,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 20,
                                                    "column": 47
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "<",
                                          "start": {
                                            "row": 20,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 49
                                          },
                                          "text": "<"
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 20,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 20,
                                            "column": 51
                                          },
                                          "text": "1"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 21,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 55
                          },
                          "text": "else:\n                overflow = not np.isfinite(norm.asscalar())\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 21,
                                "column": 12
                              },
                              "end": {
                                "row": 21,
                                "column": 16
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 21,
                                "column": 16
                              },
                              "end": {
                                "row": 21,
                                "column": 17
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 22,
                                "column": 16
                              },
                              "end": {
                                "row": 24,
                                "column": 55
                              },
                              "text": "overflow = not np.isfinite(norm.asscalar())\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 22,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 59
                                  },
                                  "text": "overflow = not np.isfinite(norm.asscalar())",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 22,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 59
                                      },
                                      "text": "overflow = not np.isfinite(norm.asscalar())",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 24
                                          },
                                          "text": "overflow"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 22,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 26
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "not_operator",
                                          "start": {
                                            "row": 22,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 59
                                          },
                                          "text": "not np.isfinite(norm.asscalar())",
                                          "children": [
                                            {
                                              "type": "not",
                                              "start": {
                                                "row": 22,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 30
                                              },
                                              "text": "not"
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 22,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 59
                                              },
                                              "text": "np.isfinite(norm.asscalar())",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 42
                                                  },
                                                  "text": "np.isfinite",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 33
                                                      },
                                                      "text": "np"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 34
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 42
                                                      },
                                                      "text": "isfinite"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 22,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 22,
                                                    "column": 59
                                                  },
                                                  "text": "(norm.asscalar())",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 43
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 58
                                                      },
                                                      "text": "norm.asscalar()",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 22,
                                                            "column": 43
                                                          },
                                                          "end": {
                                                            "row": 22,
                                                            "column": 56
                                                          },
                                                          "text": "norm.asscalar",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 22,
                                                                "column": 43
                                                              },
                                                              "end": {
                                                                "row": 22,
                                                                "column": 47
                                                              },
                                                              "text": "norm"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 22,
                                                                "column": 47
                                                              },
                                                              "end": {
                                                                "row": 22,
                                                                "column": 48
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 22,
                                                                "column": 48
                                                              },
                                                              "end": {
                                                                "row": 22,
                                                                "column": 56
                                                              },
                                                              "text": "asscalar"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 22,
                                                            "column": 56
                                                          },
                                                          "end": {
                                                            "row": 22,
                                                            "column": 58
                                                          },
                                                          "text": "()",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 22,
                                                                "column": 56
                                                              },
                                                              "end": {
                                                                "row": 22,
                                                                "column": 57
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 22,
                                                                "column": 57
                                                              },
                                                              "end": {
                                                                "row": 22,
                                                                "column": 58
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 22,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 22,
                                                        "column": 59
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start": {
                                    "row": 23,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 55
                                  },
                                  "text": "if not overflow:\n                    self.fp32_trainer.update(step_size)",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start": {
                                        "row": 23,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 18
                                      },
                                      "text": "if"
                                    },
                                    {
                                      "type": "not_operator",
                                      "start": {
                                        "row": 23,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 31
                                      },
                                      "text": "not overflow",
                                      "children": [
                                        {
                                          "type": "not",
                                          "start": {
                                            "row": 23,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 22
                                          },
                                          "text": "not"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 23,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 31
                                          },
                                          "text": "overflow"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 23,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 32
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "block",
                                      "start": {
                                        "row": 24,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 55
                                      },
                                      "text": "self.fp32_trainer.update(step_size)",
                                      "children": [
                                        {
                                          "type": "expression_statement",
                                          "start": {
                                            "row": 24,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 24,
                                            "column": 55
                                          },
                                          "text": "self.fp32_trainer.update(step_size)",
                                          "children": [
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 24,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 24,
                                                "column": 55
                                              },
                                              "text": "self.fp32_trainer.update(step_size)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 44
                                                  },
                                                  "text": "self.fp32_trainer.update",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 37
                                                      },
                                                      "text": "self.fp32_trainer",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 24
                                                          },
                                                          "text": "self"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 24
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 25
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 24,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 24,
                                                            "column": 37
                                                          },
                                                          "text": "fp32_trainer"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 38
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 44
                                                      },
                                                      "text": "update"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 24,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 24,
                                                    "column": 55
                                                  },
                                                  "text": "(step_size)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 45
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 54
                                                      },
                                                      "text": "step_size"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 24,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 24,
                                                        "column": 55
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 34,
                    "column": 55
                  },
                  "text": "else:\n            # TODO(haibin) optimize the performance when max_norm is not present\n            # sequentially adding isnan/isinf results may be slow\n            if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n            else:\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 25,
                        "column": 12
                      },
                      "end": {
                        "row": 25,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 26,
                        "column": 12
                      },
                      "end": {
                        "row": 26,
                        "column": 80
                      },
                      "text": "# TODO(haibin) optimize the performance when max_norm is not present"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 27,
                        "column": 12
                      },
                      "end": {
                        "row": 27,
                        "column": 65
                      },
                      "text": "# sequentially adding isnan/isinf results may be slow"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 28,
                        "column": 12
                      },
                      "end": {
                        "row": 34,
                        "column": 55
                      },
                      "text": "if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n            else:\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
                      "children": [
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 28,
                            "column": 12
                          },
                          "end": {
                            "row": 34,
                            "column": 55
                          },
                          "text": "if self._support_nan_check:\n                self.fp32_trainer.update(step_size)\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n            else:\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 28,
                                "column": 12
                              },
                              "end": {
                                "row": 28,
                                "column": 14
                              },
                              "text": "if"
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 28,
                                "column": 15
                              },
                              "end": {
                                "row": 28,
                                "column": 38
                              },
                              "text": "self._support_nan_check",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 19
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 28,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 20
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 28,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 28,
                                    "column": 38
                                  },
                                  "text": "_support_nan_check"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 28,
                                "column": 38
                              },
                              "end": {
                                "row": 28,
                                "column": 39
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 29,
                                "column": 16
                              },
                              "end": {
                                "row": 30,
                                "column": 79
                              },
                              "text": "self.fp32_trainer.update(step_size)\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 29,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 51
                                  },
                                  "text": "self.fp32_trainer.update(step_size)",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 29,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 29,
                                        "column": 51
                                      },
                                      "text": "self.fp32_trainer.update(step_size)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 29,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 40
                                          },
                                          "text": "self.fp32_trainer.update",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 29,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 33
                                              },
                                              "text": "self.fp32_trainer",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 20
                                                  },
                                                  "text": "self"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 21
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 29,
                                                    "column": 21
                                                  },
                                                  "end": {
                                                    "row": 29,
                                                    "column": 33
                                                  },
                                                  "text": "fp32_trainer"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 29,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 34
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 29,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 40
                                              },
                                              "text": "update"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 29,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 29,
                                            "column": 51
                                          },
                                          "text": "(step_size)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 29,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 41
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 29,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 50
                                              },
                                              "text": "step_size"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 29,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 29,
                                                "column": 51
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 30,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 79
                                  },
                                  "text": "overflow = self._scaler.has_overflow(self.fp32_trainer._params)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 30,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 79
                                      },
                                      "text": "overflow = self._scaler.has_overflow(self.fp32_trainer._params)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 24
                                          },
                                          "text": "overflow"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 30,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 26
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 30,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 79
                                          },
                                          "text": "self._scaler.has_overflow(self.fp32_trainer._params)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 30,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 52
                                              },
                                              "text": "self._scaler.has_overflow",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 39
                                                  },
                                                  "text": "self._scaler",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 31
                                                      },
                                                      "text": "self"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 32
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 32
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 39
                                                      },
                                                      "text": "_scaler"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 40
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 52
                                                  },
                                                  "text": "has_overflow"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 30,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 30,
                                                "column": 79
                                              },
                                              "text": "(self.fp32_trainer._params)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 53
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 78
                                                  },
                                                  "text": "self.fp32_trainer._params",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 70
                                                      },
                                                      "text": "self.fp32_trainer",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 30,
                                                            "column": 53
                                                          },
                                                          "end": {
                                                            "row": 30,
                                                            "column": 57
                                                          },
                                                          "text": "self"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 30,
                                                            "column": 57
                                                          },
                                                          "end": {
                                                            "row": 30,
                                                            "column": 58
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 30,
                                                            "column": 58
                                                          },
                                                          "end": {
                                                            "row": 30,
                                                            "column": 70
                                                          },
                                                          "text": "fp32_trainer"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 70
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 71
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 30,
                                                        "column": 71
                                                      },
                                                      "end": {
                                                        "row": 30,
                                                        "column": 78
                                                      },
                                                      "text": "_params"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 30,
                                                    "column": 78
                                                  },
                                                  "end": {
                                                    "row": 30,
                                                    "column": 79
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "else_clause",
                              "start": {
                                "row": 31,
                                "column": 12
                              },
                              "end": {
                                "row": 34,
                                "column": 55
                              },
                              "text": "else:\n                overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
                              "children": [
                                {
                                  "type": "else",
                                  "start": {
                                    "row": 31,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 16
                                  },
                                  "text": "else"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 31,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 17
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 32,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 55
                                  },
                                  "text": "overflow = self._scaler.has_overflow(self.fp32_trainer._params)\n                if not overflow:\n                    self.fp32_trainer.update(step_size)",
                                  "children": [
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 32,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 79
                                      },
                                      "text": "overflow = self._scaler.has_overflow(self.fp32_trainer._params)",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 32,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 79
                                          },
                                          "text": "overflow = self._scaler.has_overflow(self.fp32_trainer._params)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 32,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 24
                                              },
                                              "text": "overflow"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 32,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 26
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 32,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 79
                                              },
                                              "text": "self._scaler.has_overflow(self.fp32_trainer._params)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 52
                                                  },
                                                  "text": "self._scaler.has_overflow",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 39
                                                      },
                                                      "text": "self._scaler",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 32,
                                                            "column": 27
                                                          },
                                                          "end": {
                                                            "row": 32,
                                                            "column": 31
                                                          },
                                                          "text": "self"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 32,
                                                            "column": 31
                                                          },
                                                          "end": {
                                                            "row": 32,
                                                            "column": 32
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 32,
                                                            "column": 32
                                                          },
                                                          "end": {
                                                            "row": 32,
                                                            "column": 39
                                                          },
                                                          "text": "_scaler"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 40
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 52
                                                      },
                                                      "text": "has_overflow"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 32,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 32,
                                                    "column": 79
                                                  },
                                                  "text": "(self.fp32_trainer._params)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 52
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 53
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 78
                                                      },
                                                      "text": "self.fp32_trainer._params",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 32,
                                                            "column": 53
                                                          },
                                                          "end": {
                                                            "row": 32,
                                                            "column": 70
                                                          },
                                                          "text": "self.fp32_trainer",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 32,
                                                                "column": 53
                                                              },
                                                              "end": {
                                                                "row": 32,
                                                                "column": 57
                                                              },
                                                              "text": "self"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 32,
                                                                "column": 57
                                                              },
                                                              "end": {
                                                                "row": 32,
                                                                "column": 58
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 32,
                                                                "column": 58
                                                              },
                                                              "end": {
                                                                "row": 32,
                                                                "column": 70
                                                              },
                                                              "text": "fp32_trainer"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 32,
                                                            "column": 70
                                                          },
                                                          "end": {
                                                            "row": 32,
                                                            "column": 71
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 32,
                                                            "column": 71
                                                          },
                                                          "end": {
                                                            "row": 32,
                                                            "column": 78
                                                          },
                                                          "text": "_params"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 32,
                                                        "column": 78
                                                      },
                                                      "end": {
                                                        "row": 32,
                                                        "column": 79
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start": {
                                        "row": 33,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 34,
                                        "column": 55
                                      },
                                      "text": "if not overflow:\n                    self.fp32_trainer.update(step_size)",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start": {
                                            "row": 33,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 18
                                          },
                                          "text": "if"
                                        },
                                        {
                                          "type": "not_operator",
                                          "start": {
                                            "row": 33,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 31
                                          },
                                          "text": "not overflow",
                                          "children": [
                                            {
                                              "type": "not",
                                              "start": {
                                                "row": 33,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 22
                                              },
                                              "text": "not"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 31
                                              },
                                              "text": "overflow"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 33,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 32
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "block",
                                          "start": {
                                            "row": 34,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 34,
                                            "column": 55
                                          },
                                          "text": "self.fp32_trainer.update(step_size)",
                                          "children": [
                                            {
                                              "type": "expression_statement",
                                              "start": {
                                                "row": 34,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 34,
                                                "column": 55
                                              },
                                              "text": "self.fp32_trainer.update(step_size)",
                                              "children": [
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 34,
                                                    "column": 20
                                                  },
                                                  "end": {
                                                    "row": 34,
                                                    "column": 55
                                                  },
                                                  "text": "self.fp32_trainer.update(step_size)",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 44
                                                      },
                                                      "text": "self.fp32_trainer.update",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 20
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 37
                                                          },
                                                          "text": "self.fp32_trainer",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 20
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 24
                                                              },
                                                              "text": "self"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 24
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 25
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 34,
                                                                "column": 25
                                                              },
                                                              "end": {
                                                                "row": 34,
                                                                "column": 37
                                                              },
                                                              "text": "fp32_trainer"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 38
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 38
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 44
                                                          },
                                                          "text": "update"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 34,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 34,
                                                        "column": 55
                                                      },
                                                      "text": "(step_size)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 45
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 45
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 54
                                                          },
                                                          "text": "step_size"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 34,
                                                            "column": 54
                                                          },
                                                          "end": {
                                                            "row": 34,
                                                            "column": 55
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 35,
                "column": 8
              },
              "end": {
                "row": 35,
                "column": 52
              },
              "text": "# update scale based on overflow information"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 36,
                "column": 8
              },
              "end": {
                "row": 36,
                "column": 43
              },
              "text": "self._scaler.update_scale(overflow)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 36,
                    "column": 8
                  },
                  "end": {
                    "row": 36,
                    "column": 43
                  },
                  "text": "self._scaler.update_scale(overflow)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 36,
                        "column": 8
                      },
                      "end": {
                        "row": 36,
                        "column": 33
                      },
                      "text": "self._scaler.update_scale",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 36,
                            "column": 8
                          },
                          "end": {
                            "row": 36,
                            "column": 20
                          },
                          "text": "self._scaler",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 8
                              },
                              "end": {
                                "row": 36,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 36,
                                "column": 12
                              },
                              "end": {
                                "row": 36,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 13
                              },
                              "end": {
                                "row": 36,
                                "column": 20
                              },
                              "text": "_scaler"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 36,
                            "column": 20
                          },
                          "end": {
                            "row": 36,
                            "column": 21
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 36,
                            "column": 21
                          },
                          "end": {
                            "row": 36,
                            "column": 33
                          },
                          "text": "update_scale"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 36,
                        "column": 33
                      },
                      "end": {
                        "row": 36,
                        "column": 43
                      },
                      "text": "(overflow)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 36,
                            "column": 33
                          },
                          "end": {
                            "row": 36,
                            "column": 34
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 36,
                            "column": 34
                          },
                          "end": {
                            "row": 36,
                            "column": 42
                          },
                          "text": "overflow"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 36,
                            "column": 42
                          },
                          "end": {
                            "row": 36,
                            "column": 43
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}