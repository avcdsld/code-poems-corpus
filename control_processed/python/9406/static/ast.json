{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 12,
    "column": 24
  },
  "text": "def is_file(self):\n        \"\"\"\n        Whether this path is a regular file (also True for symlinks pointing\n        to regular files).\n        \"\"\"\n        try:\n            return S_ISREG(self.stat().st_mode)\n        except OSError as e:\n            if e.errno not in (ENOENT, ENOTDIR):\n                raise\n            # Path doesn't exist or is a broken symlink\n            # (see https://bitbucket.org/pitrou/pathlib/issue/12/)\n            return False",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 12,
        "column": 24
      },
      "text": "def is_file(self):\n        \"\"\"\n        Whether this path is a regular file (also True for symlinks pointing\n        to regular files).\n        \"\"\"\n        try:\n            return S_ISREG(self.stat().st_mode)\n        except OSError as e:\n            if e.errno not in (ENOENT, ENOTDIR):\n                raise\n            # Path doesn't exist or is a broken symlink\n            # (see https://bitbucket.org/pitrou/pathlib/issue/12/)\n            return False",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "is_file"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 11
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "(self)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "self"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 17
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 12,
            "column": 24
          },
          "text": "\"\"\"\n        Whether this path is a regular file (also True for symlinks pointing\n        to regular files).\n        \"\"\"\n        try:\n            return S_ISREG(self.stat().st_mode)\n        except OSError as e:\n            if e.errno not in (ENOENT, ENOTDIR):\n                raise\n            # Path doesn't exist or is a broken symlink\n            # (see https://bitbucket.org/pitrou/pathlib/issue/12/)\n            return False",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 4,
                "column": 11
              },
              "text": "\"\"\"\n        Whether this path is a regular file (also True for symlinks pointing\n        to regular files).\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 4,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Whether this path is a regular file (also True for symlinks pointing\n        to regular files).\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 4,
                        "column": 8
                      },
                      "text": "\n        Whether this path is a regular file (also True for symlinks pointing\n        to regular files).\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 4,
                        "column": 8
                      },
                      "end": {
                        "row": 4,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 5,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 24
              },
              "text": "try:\n            return S_ISREG(self.stat().st_mode)\n        except OSError as e:\n            if e.errno not in (ENOENT, ENOTDIR):\n                raise\n            # Path doesn't exist or is a broken symlink\n            # (see https://bitbucket.org/pitrou/pathlib/issue/12/)\n            return False",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 5,
                    "column": 8
                  },
                  "end": {
                    "row": 5,
                    "column": 11
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 5,
                    "column": 11
                  },
                  "end": {
                    "row": 5,
                    "column": 12
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 6,
                    "column": 12
                  },
                  "end": {
                    "row": 6,
                    "column": 47
                  },
                  "text": "return S_ISREG(self.stat().st_mode)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 6,
                        "column": 12
                      },
                      "end": {
                        "row": 6,
                        "column": 47
                      },
                      "text": "return S_ISREG(self.stat().st_mode)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 6,
                            "column": 12
                          },
                          "end": {
                            "row": 6,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 6,
                            "column": 19
                          },
                          "end": {
                            "row": 6,
                            "column": 47
                          },
                          "text": "S_ISREG(self.stat().st_mode)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 19
                              },
                              "end": {
                                "row": 6,
                                "column": 26
                              },
                              "text": "S_ISREG"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 6,
                                "column": 26
                              },
                              "end": {
                                "row": 6,
                                "column": 47
                              },
                              "text": "(self.stat().st_mode)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 6,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 27
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 6,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 46
                                  },
                                  "text": "self.stat().st_mode",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 6,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 38
                                      },
                                      "text": "self.stat()",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 6,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 36
                                          },
                                          "text": "self.stat",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 6,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 31
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 6,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 32
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 6,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 36
                                              },
                                              "text": "stat"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 6,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 6,
                                            "column": 38
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 6,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 37
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 6,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 6,
                                                "column": 38
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 6,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 39
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 6,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 6,
                                        "column": 46
                                      },
                                      "text": "st_mode"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 6,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 6,
                                    "column": 47
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 12,
                    "column": 24
                  },
                  "text": "except OSError as e:\n            if e.errno not in (ENOENT, ENOTDIR):\n                raise\n            # Path doesn't exist or is a broken symlink\n            # (see https://bitbucket.org/pitrou/pathlib/issue/12/)\n            return False",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 14
                      },
                      "text": "except"
                    },
                    {
                      "type": "as_pattern",
                      "start": {
                        "row": 7,
                        "column": 15
                      },
                      "end": {
                        "row": 7,
                        "column": 27
                      },
                      "text": "OSError as e",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 15
                          },
                          "end": {
                            "row": 7,
                            "column": 22
                          },
                          "text": "OSError"
                        },
                        {
                          "type": "as",
                          "start": {
                            "row": 7,
                            "column": 23
                          },
                          "end": {
                            "row": 7,
                            "column": 25
                          },
                          "text": "as"
                        },
                        {
                          "type": "as_pattern_target",
                          "start": {
                            "row": 7,
                            "column": 26
                          },
                          "end": {
                            "row": 7,
                            "column": 27
                          },
                          "text": "e",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 26
                              },
                              "end": {
                                "row": 7,
                                "column": 27
                              },
                              "text": "e"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 7,
                        "column": 27
                      },
                      "end": {
                        "row": 7,
                        "column": 28
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 8,
                        "column": 12
                      },
                      "end": {
                        "row": 12,
                        "column": 24
                      },
                      "text": "if e.errno not in (ENOENT, ENOTDIR):\n                raise\n            # Path doesn't exist or is a broken symlink\n            # (see https://bitbucket.org/pitrou/pathlib/issue/12/)\n            return False",
                      "children": [
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 8,
                            "column": 12
                          },
                          "end": {
                            "row": 9,
                            "column": 21
                          },
                          "text": "if e.errno not in (ENOENT, ENOTDIR):\n                raise",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 8,
                                "column": 12
                              },
                              "end": {
                                "row": 8,
                                "column": 14
                              },
                              "text": "if"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 8,
                                "column": 15
                              },
                              "end": {
                                "row": 8,
                                "column": 47
                              },
                              "text": "e.errno not in (ENOENT, ENOTDIR)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 8,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 22
                                  },
                                  "text": "e.errno",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 8,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 16
                                      },
                                      "text": "e"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 8,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 17
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 8,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 22
                                      },
                                      "text": "errno"
                                    }
                                  ]
                                },
                                {
                                  "type": "not in",
                                  "start": {
                                    "row": 8,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 26
                                  },
                                  "text": "not"
                                },
                                {
                                  "type": "not in",
                                  "start": {
                                    "row": 8,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 29
                                  },
                                  "text": "in"
                                },
                                {
                                  "type": "tuple",
                                  "start": {
                                    "row": 8,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 47
                                  },
                                  "text": "(ENOENT, ENOTDIR)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 8,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 31
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 8,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 37
                                      },
                                      "text": "ENOENT"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 8,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 38
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 8,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 46
                                      },
                                      "text": "ENOTDIR"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 8,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 8,
                                "column": 47
                              },
                              "end": {
                                "row": 8,
                                "column": 48
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 9,
                                "column": 16
                              },
                              "end": {
                                "row": 9,
                                "column": 21
                              },
                              "text": "raise",
                              "children": [
                                {
                                  "type": "raise_statement",
                                  "start": {
                                    "row": 9,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 21
                                  },
                                  "text": "raise",
                                  "children": [
                                    {
                                      "type": "raise",
                                      "start": {
                                        "row": 9,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 21
                                      },
                                      "text": "raise"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 10,
                            "column": 12
                          },
                          "end": {
                            "row": 10,
                            "column": 55
                          },
                          "text": "# Path doesn't exist or is a broken symlink"
                        },
                        {
                          "type": "comment",
                          "start": {
                            "row": 11,
                            "column": 12
                          },
                          "end": {
                            "row": 11,
                            "column": 66
                          },
                          "text": "# (see https://bitbucket.org/pitrou/pathlib/issue/12/)"
                        },
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 12,
                            "column": 12
                          },
                          "end": {
                            "row": 12,
                            "column": 24
                          },
                          "text": "return False",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 12,
                                "column": 12
                              },
                              "end": {
                                "row": 12,
                                "column": 18
                              },
                              "text": "return"
                            },
                            {
                              "type": "false",
                              "start": {
                                "row": 12,
                                "column": 19
                              },
                              "end": {
                                "row": 12,
                                "column": 24
                              },
                              "text": "False"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}