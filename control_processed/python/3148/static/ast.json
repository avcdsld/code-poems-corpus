{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 26,
    "column": 81
  },
  "text": "def predict_input(itos_filename, trained_classifier_filename, num_classes=2):\n    \"\"\"\n    Loads a model and produces predictions on arbitrary input.\n    :param itos_filename: the path to the id-to-string mapping file\n    :param trained_classifier_filename: the filename of the trained classifier;\n                                        typically ends with \"clas_1.h5\"\n    :param num_classes: the number of classes that the model predicts\n    \"\"\"\n    # Check the itos file exists\n    if not os.path.exists(itos_filename):\n        print(\"Could not find \" + itos_filename)\n        exit(-1)\n\n    # Check the classifier file exists\n    if not os.path.exists(trained_classifier_filename):\n        print(\"Could not find \" + trained_classifier_filename)\n        exit(-1)\n\n    stoi, model = load_model(itos_filename, trained_classifier_filename, num_classes)\n\n    while True:\n        text = input(\"Enter text to analyse (or q to quit): \")\n        if text.strip() == 'q':\n            break\n        else:\n            scores = predict_text(stoi, model, text)\n            print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 26,
        "column": 81
      },
      "text": "def predict_input(itos_filename, trained_classifier_filename, num_classes=2):\n    \"\"\"\n    Loads a model and produces predictions on arbitrary input.\n    :param itos_filename: the path to the id-to-string mapping file\n    :param trained_classifier_filename: the filename of the trained classifier;\n                                        typically ends with \"clas_1.h5\"\n    :param num_classes: the number of classes that the model predicts\n    \"\"\"\n    # Check the itos file exists\n    if not os.path.exists(itos_filename):\n        print(\"Could not find \" + itos_filename)\n        exit(-1)\n\n    # Check the classifier file exists\n    if not os.path.exists(trained_classifier_filename):\n        print(\"Could not find \" + trained_classifier_filename)\n        exit(-1)\n\n    stoi, model = load_model(itos_filename, trained_classifier_filename, num_classes)\n\n    while True:\n        text = input(\"Enter text to analyse (or q to quit): \")\n        if text.strip() == 'q':\n            break\n        else:\n            scores = predict_text(stoi, model, text)\n            print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "predict_input"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 17
          },
          "end": {
            "row": 0,
            "column": 76
          },
          "text": "(itos_filename, trained_classifier_filename, num_classes=2)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": "itos_filename"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": "trained_classifier_filename"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 60
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 62
              },
              "end": {
                "row": 0,
                "column": 75
              },
              "text": "num_classes=2",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 62
                  },
                  "end": {
                    "row": 0,
                    "column": 73
                  },
                  "text": "num_classes"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 73
                  },
                  "end": {
                    "row": 0,
                    "column": 74
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 74
                  },
                  "end": {
                    "row": 0,
                    "column": 75
                  },
                  "text": "2"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 75
              },
              "end": {
                "row": 0,
                "column": 76
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 76
          },
          "end": {
            "row": 0,
            "column": 77
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 26,
            "column": 81
          },
          "text": "\"\"\"\n    Loads a model and produces predictions on arbitrary input.\n    :param itos_filename: the path to the id-to-string mapping file\n    :param trained_classifier_filename: the filename of the trained classifier;\n                                        typically ends with \"clas_1.h5\"\n    :param num_classes: the number of classes that the model predicts\n    \"\"\"\n    # Check the itos file exists\n    if not os.path.exists(itos_filename):\n        print(\"Could not find \" + itos_filename)\n        exit(-1)\n\n    # Check the classifier file exists\n    if not os.path.exists(trained_classifier_filename):\n        print(\"Could not find \" + trained_classifier_filename)\n        exit(-1)\n\n    stoi, model = load_model(itos_filename, trained_classifier_filename, num_classes)\n\n    while True:\n        text = input(\"Enter text to analyse (or q to quit): \")\n        if text.strip() == 'q':\n            break\n        else:\n            scores = predict_text(stoi, model, text)\n            print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 7,
                "column": 7
              },
              "text": "\"\"\"\n    Loads a model and produces predictions on arbitrary input.\n    :param itos_filename: the path to the id-to-string mapping file\n    :param trained_classifier_filename: the filename of the trained classifier;\n                                        typically ends with \"clas_1.h5\"\n    :param num_classes: the number of classes that the model predicts\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 7,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Loads a model and produces predictions on arbitrary input.\n    :param itos_filename: the path to the id-to-string mapping file\n    :param trained_classifier_filename: the filename of the trained classifier;\n                                        typically ends with \"clas_1.h5\"\n    :param num_classes: the number of classes that the model predicts\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 7,
                        "column": 4
                      },
                      "text": "\n    Loads a model and produces predictions on arbitrary input.\n    :param itos_filename: the path to the id-to-string mapping file\n    :param trained_classifier_filename: the filename of the trained classifier;\n                                        typically ends with \"clas_1.h5\"\n    :param num_classes: the number of classes that the model predicts\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 7,
                        "column": 4
                      },
                      "end": {
                        "row": 7,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 8,
                "column": 4
              },
              "end": {
                "row": 8,
                "column": 32
              },
              "text": "# Check the itos file exists"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 9,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 16
              },
              "text": "if not os.path.exists(itos_filename):\n        print(\"Could not find \" + itos_filename)\n        exit(-1)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 9,
                    "column": 4
                  },
                  "end": {
                    "row": 9,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 9,
                    "column": 7
                  },
                  "end": {
                    "row": 9,
                    "column": 40
                  },
                  "text": "not os.path.exists(itos_filename)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 9,
                        "column": 7
                      },
                      "end": {
                        "row": 9,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 9,
                        "column": 11
                      },
                      "end": {
                        "row": 9,
                        "column": 40
                      },
                      "text": "os.path.exists(itos_filename)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 9,
                            "column": 11
                          },
                          "end": {
                            "row": 9,
                            "column": 25
                          },
                          "text": "os.path.exists",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 9,
                                "column": 11
                              },
                              "end": {
                                "row": 9,
                                "column": 18
                              },
                              "text": "os.path",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 13
                                  },
                                  "text": "os"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 9,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 14
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 9,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 18
                                  },
                                  "text": "path"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 9,
                                "column": 18
                              },
                              "end": {
                                "row": 9,
                                "column": 19
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 19
                              },
                              "end": {
                                "row": 9,
                                "column": 25
                              },
                              "text": "exists"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 9,
                            "column": 25
                          },
                          "end": {
                            "row": 9,
                            "column": 40
                          },
                          "text": "(itos_filename)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 9,
                                "column": 25
                              },
                              "end": {
                                "row": 9,
                                "column": 26
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 26
                              },
                              "end": {
                                "row": 9,
                                "column": 39
                              },
                              "text": "itos_filename"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 9,
                                "column": 39
                              },
                              "end": {
                                "row": 9,
                                "column": 40
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 9,
                    "column": 40
                  },
                  "end": {
                    "row": 9,
                    "column": 41
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 10,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 16
                  },
                  "text": "print(\"Could not find \" + itos_filename)\n        exit(-1)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 10,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 48
                      },
                      "text": "print(\"Could not find \" + itos_filename)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 10,
                            "column": 8
                          },
                          "end": {
                            "row": 10,
                            "column": 48
                          },
                          "text": "print(\"Could not find \" + itos_filename)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 10,
                                "column": 8
                              },
                              "end": {
                                "row": 10,
                                "column": 13
                              },
                              "text": "print"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 10,
                                "column": 13
                              },
                              "end": {
                                "row": 10,
                                "column": 48
                              },
                              "text": "(\"Could not find \" + itos_filename)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 10,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 14
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 10,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 47
                                  },
                                  "text": "\"Could not find \" + itos_filename",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 10,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 31
                                      },
                                      "text": "\"Could not find \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 10,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 15
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 10,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 30
                                          },
                                          "text": "Could not find "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 10,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 10,
                                            "column": 31
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 10,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 33
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 47
                                      },
                                      "text": "itos_filename"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 10,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 48
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 16
                      },
                      "text": "exit(-1)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 11,
                            "column": 8
                          },
                          "end": {
                            "row": 11,
                            "column": 16
                          },
                          "text": "exit(-1)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 8
                              },
                              "end": {
                                "row": 11,
                                "column": 12
                              },
                              "text": "exit"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 11,
                                "column": 12
                              },
                              "end": {
                                "row": 11,
                                "column": 16
                              },
                              "text": "(-1)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 13
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "unary_operator",
                                  "start": {
                                    "row": 11,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 15
                                  },
                                  "text": "-1",
                                  "children": [
                                    {
                                      "type": "-",
                                      "start": {
                                        "row": 11,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 14
                                      },
                                      "text": "-"
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 11,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 15
                                      },
                                      "text": "1"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 16
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 13,
                "column": 4
              },
              "end": {
                "row": 13,
                "column": 38
              },
              "text": "# Check the classifier file exists"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 14,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 16
              },
              "text": "if not os.path.exists(trained_classifier_filename):\n        print(\"Could not find \" + trained_classifier_filename)\n        exit(-1)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 14,
                    "column": 4
                  },
                  "end": {
                    "row": 14,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 14,
                    "column": 7
                  },
                  "end": {
                    "row": 14,
                    "column": 54
                  },
                  "text": "not os.path.exists(trained_classifier_filename)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 14,
                        "column": 7
                      },
                      "end": {
                        "row": 14,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 14,
                        "column": 11
                      },
                      "end": {
                        "row": 14,
                        "column": 54
                      },
                      "text": "os.path.exists(trained_classifier_filename)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 14,
                            "column": 11
                          },
                          "end": {
                            "row": 14,
                            "column": 25
                          },
                          "text": "os.path.exists",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 14,
                                "column": 11
                              },
                              "end": {
                                "row": 14,
                                "column": 18
                              },
                              "text": "os.path",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 13
                                  },
                                  "text": "os"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 14,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 14
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 18
                                  },
                                  "text": "path"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 14,
                                "column": 18
                              },
                              "end": {
                                "row": 14,
                                "column": 19
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 19
                              },
                              "end": {
                                "row": 14,
                                "column": 25
                              },
                              "text": "exists"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 14,
                            "column": 25
                          },
                          "end": {
                            "row": 14,
                            "column": 54
                          },
                          "text": "(trained_classifier_filename)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 14,
                                "column": 25
                              },
                              "end": {
                                "row": 14,
                                "column": 26
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 26
                              },
                              "end": {
                                "row": 14,
                                "column": 53
                              },
                              "text": "trained_classifier_filename"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 14,
                                "column": 53
                              },
                              "end": {
                                "row": 14,
                                "column": 54
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 14,
                    "column": 54
                  },
                  "end": {
                    "row": 14,
                    "column": 55
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 16
                  },
                  "text": "print(\"Could not find \" + trained_classifier_filename)\n        exit(-1)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 62
                      },
                      "text": "print(\"Could not find \" + trained_classifier_filename)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 62
                          },
                          "text": "print(\"Could not find \" + trained_classifier_filename)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 15,
                                "column": 13
                              },
                              "text": "print"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 15,
                                "column": 13
                              },
                              "end": {
                                "row": 15,
                                "column": 62
                              },
                              "text": "(\"Could not find \" + trained_classifier_filename)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 15,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 14
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 15,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 61
                                  },
                                  "text": "\"Could not find \" + trained_classifier_filename",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 15,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 31
                                      },
                                      "text": "\"Could not find \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 15,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 15
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 15,
                                            "column": 15
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 30
                                          },
                                          "text": "Could not find "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 15,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 15,
                                            "column": 31
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start": {
                                        "row": 15,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 33
                                      },
                                      "text": "+"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 15,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 15,
                                        "column": 61
                                      },
                                      "text": "trained_classifier_filename"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 15,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 15,
                                    "column": 62
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 16,
                        "column": 16
                      },
                      "text": "exit(-1)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 16,
                            "column": 8
                          },
                          "end": {
                            "row": 16,
                            "column": 16
                          },
                          "text": "exit(-1)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 8
                              },
                              "end": {
                                "row": 16,
                                "column": 12
                              },
                              "text": "exit"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 16
                              },
                              "text": "(-1)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 16,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 13
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "unary_operator",
                                  "start": {
                                    "row": 16,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 15
                                  },
                                  "text": "-1",
                                  "children": [
                                    {
                                      "type": "-",
                                      "start": {
                                        "row": 16,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 14
                                      },
                                      "text": "-"
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 16,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 15
                                      },
                                      "text": "1"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 16
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 18,
                "column": 85
              },
              "text": "stoi, model = load_model(itos_filename, trained_classifier_filename, num_classes)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 18,
                    "column": 4
                  },
                  "end": {
                    "row": 18,
                    "column": 85
                  },
                  "text": "stoi, model = load_model(itos_filename, trained_classifier_filename, num_classes)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 18,
                        "column": 4
                      },
                      "end": {
                        "row": 18,
                        "column": 15
                      },
                      "text": "stoi, model",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 4
                          },
                          "end": {
                            "row": 18,
                            "column": 8
                          },
                          "text": "stoi"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 18,
                            "column": 8
                          },
                          "end": {
                            "row": 18,
                            "column": 9
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 10
                          },
                          "end": {
                            "row": 18,
                            "column": 15
                          },
                          "text": "model"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 18,
                        "column": 16
                      },
                      "end": {
                        "row": 18,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 18,
                        "column": 18
                      },
                      "end": {
                        "row": 18,
                        "column": 85
                      },
                      "text": "load_model(itos_filename, trained_classifier_filename, num_classes)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 18,
                            "column": 18
                          },
                          "end": {
                            "row": 18,
                            "column": 28
                          },
                          "text": "load_model"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 18,
                            "column": 28
                          },
                          "end": {
                            "row": 18,
                            "column": 85
                          },
                          "text": "(itos_filename, trained_classifier_filename, num_classes)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 18,
                                "column": 28
                              },
                              "end": {
                                "row": 18,
                                "column": 29
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 29
                              },
                              "end": {
                                "row": 18,
                                "column": 42
                              },
                              "text": "itos_filename"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 18,
                                "column": 42
                              },
                              "end": {
                                "row": 18,
                                "column": 43
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 44
                              },
                              "end": {
                                "row": 18,
                                "column": 71
                              },
                              "text": "trained_classifier_filename"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 18,
                                "column": 71
                              },
                              "end": {
                                "row": 18,
                                "column": 72
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 73
                              },
                              "end": {
                                "row": 18,
                                "column": 84
                              },
                              "text": "num_classes"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 18,
                                "column": 84
                              },
                              "end": {
                                "row": 18,
                                "column": 85
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 26,
                "column": 81
              },
              "text": "while True:\n        text = input(\"Enter text to analyse (or q to quit): \")\n        if text.strip() == 'q':\n            break\n        else:\n            scores = predict_text(stoi, model, text)\n            print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
              "children": [
                {
                  "type": "while",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 9
                  },
                  "text": "while"
                },
                {
                  "type": "true",
                  "start": {
                    "row": 20,
                    "column": 10
                  },
                  "end": {
                    "row": 20,
                    "column": 14
                  },
                  "text": "True"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 20,
                    "column": 14
                  },
                  "end": {
                    "row": 20,
                    "column": 15
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 81
                  },
                  "text": "text = input(\"Enter text to analyse (or q to quit): \")\n        if text.strip() == 'q':\n            break\n        else:\n            scores = predict_text(stoi, model, text)\n            print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 21,
                        "column": 8
                      },
                      "end": {
                        "row": 21,
                        "column": 62
                      },
                      "text": "text = input(\"Enter text to analyse (or q to quit): \")",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 21,
                            "column": 8
                          },
                          "end": {
                            "row": 21,
                            "column": 62
                          },
                          "text": "text = input(\"Enter text to analyse (or q to quit): \")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 21,
                                "column": 8
                              },
                              "end": {
                                "row": 21,
                                "column": 12
                              },
                              "text": "text"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 21,
                                "column": 13
                              },
                              "end": {
                                "row": 21,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 21,
                                "column": 15
                              },
                              "end": {
                                "row": 21,
                                "column": 62
                              },
                              "text": "input(\"Enter text to analyse (or q to quit): \")",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 20
                                  },
                                  "text": "input"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 21,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 62
                                  },
                                  "text": "(\"Enter text to analyse (or q to quit): \")",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 21,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 21
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 21,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 61
                                      },
                                      "text": "\"Enter text to analyse (or q to quit): \"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 21,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 22
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 21,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 60
                                          },
                                          "text": "Enter text to analyse (or q to quit): "
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 21,
                                            "column": 60
                                          },
                                          "end": {
                                            "row": 21,
                                            "column": 61
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 21,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 62
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 81
                      },
                      "text": "if text.strip() == 'q':\n            break\n        else:\n            scores = predict_text(stoi, model, text)\n            print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 22,
                            "column": 8
                          },
                          "end": {
                            "row": 22,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 22,
                            "column": 11
                          },
                          "end": {
                            "row": 22,
                            "column": 30
                          },
                          "text": "text.strip() == 'q'",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 22,
                                "column": 11
                              },
                              "end": {
                                "row": 22,
                                "column": 23
                              },
                              "text": "text.strip()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 22,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 21
                                  },
                                  "text": "text.strip",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 15
                                      },
                                      "text": "text"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 22,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 16
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 21
                                      },
                                      "text": "strip"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 22,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 23
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 22,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 22
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 22,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 23
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "==",
                              "start": {
                                "row": 22,
                                "column": 24
                              },
                              "end": {
                                "row": 22,
                                "column": 26
                              },
                              "text": "=="
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 22,
                                "column": 27
                              },
                              "end": {
                                "row": 22,
                                "column": 30
                              },
                              "text": "'q'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 22,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 28
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 22,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 29
                                  },
                                  "text": "q"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 22,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 30
                                  },
                                  "text": "'"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 22,
                            "column": 30
                          },
                          "end": {
                            "row": 22,
                            "column": 31
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 23,
                            "column": 12
                          },
                          "end": {
                            "row": 23,
                            "column": 17
                          },
                          "text": "break",
                          "children": [
                            {
                              "type": "break_statement",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 17
                              },
                              "text": "break",
                              "children": [
                                {
                                  "type": "break",
                                  "start": {
                                    "row": 23,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 17
                                  },
                                  "text": "break"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 24,
                            "column": 8
                          },
                          "end": {
                            "row": 26,
                            "column": 81
                          },
                          "text": "else:\n            scores = predict_text(stoi, model, text)\n            print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 24,
                                "column": 8
                              },
                              "end": {
                                "row": 24,
                                "column": 12
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 24,
                                "column": 12
                              },
                              "end": {
                                "row": 24,
                                "column": 13
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 25,
                                "column": 12
                              },
                              "end": {
                                "row": 26,
                                "column": 81
                              },
                              "text": "scores = predict_text(stoi, model, text)\n            print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 25,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 52
                                  },
                                  "text": "scores = predict_text(stoi, model, text)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 25,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 52
                                      },
                                      "text": "scores = predict_text(stoi, model, text)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 18
                                          },
                                          "text": "scores"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 25,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 20
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 25,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 52
                                          },
                                          "text": "predict_text(stoi, model, text)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 25,
                                                "column": 21
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 33
                                              },
                                              "text": "predict_text"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 25,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 52
                                              },
                                              "text": "(stoi, model, text)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 34
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 38
                                                  },
                                                  "text": "stoi"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 39
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 45
                                                  },
                                                  "text": "model"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 46
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 51
                                                  },
                                                  "text": "text"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 52
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 26,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 81
                                  },
                                  "text": "print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 26,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 81
                                      },
                                      "text": "print(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 17
                                          },
                                          "text": "print"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 26,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 81
                                          },
                                          "text": "(\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 26,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 18
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 26,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 80
                                              },
                                              "text": "\"Result id {0}, Scores: {1}\".format(np.argmax(scores), scores)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 18
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 53
                                                  },
                                                  "text": "\"Result id {0}, Scores: {1}\".format",
                                                  "children": [
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 18
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 46
                                                      },
                                                      "text": "\"Result id {0}, Scores: {1}\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 18
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 19
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 19
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 45
                                                          },
                                                          "text": "Result id {0}, Scores: {1}"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 45
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 46
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 47
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 47
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 53
                                                      },
                                                      "text": "format"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 80
                                                  },
                                                  "text": "(np.argmax(scores), scores)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 54
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 54
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 71
                                                      },
                                                      "text": "np.argmax(scores)",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 54
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 63
                                                          },
                                                          "text": "np.argmax",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 54
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 56
                                                              },
                                                              "text": "np"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 56
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 57
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 57
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 63
                                                              },
                                                              "text": "argmax"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 26,
                                                            "column": 63
                                                          },
                                                          "end": {
                                                            "row": 26,
                                                            "column": 71
                                                          },
                                                          "text": "(scores)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 63
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 64
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 64
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 70
                                                              },
                                                              "text": "scores"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 26,
                                                                "column": 70
                                                              },
                                                              "end": {
                                                                "row": 26,
                                                                "column": 71
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 71
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 72
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 73
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 79
                                                      },
                                                      "text": "scores"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 26,
                                                        "column": 79
                                                      },
                                                      "end": {
                                                        "row": 26,
                                                        "column": 80
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 26,
                                                "column": 80
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 81
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}