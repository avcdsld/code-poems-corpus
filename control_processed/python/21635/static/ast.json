{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 7,
    "column": 14
  },
  "text": "def force_delete(func, path, exc_info):\n    \"\"\"Error handler for `shutil.rmtree()` equivalent to `rm -rf`.\n\n    Usage: `shutil.rmtree(path, onerror=force_delete)`\n    From stackoverflow.com/questions/1889597\n    \"\"\"\n    os.chmod(path, stat.S_IWRITE)\n    func(path)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 7,
        "column": 14
      },
      "text": "def force_delete(func, path, exc_info):\n    \"\"\"Error handler for `shutil.rmtree()` equivalent to `rm -rf`.\n\n    Usage: `shutil.rmtree(path, onerror=force_delete)`\n    From stackoverflow.com/questions/1889597\n    \"\"\"\n    os.chmod(path, stat.S_IWRITE)\n    func(path)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 16
          },
          "text": "force_delete"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 16
          },
          "end": {
            "row": 0,
            "column": 38
          },
          "text": "(func, path, exc_info)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "func"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "path"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "exc_info"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 38
          },
          "end": {
            "row": 0,
            "column": 39
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 7,
            "column": 14
          },
          "text": "\"\"\"Error handler for `shutil.rmtree()` equivalent to `rm -rf`.\n\n    Usage: `shutil.rmtree(path, onerror=force_delete)`\n    From stackoverflow.com/questions/1889597\n    \"\"\"\n    os.chmod(path, stat.S_IWRITE)\n    func(path)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 7
              },
              "text": "\"\"\"Error handler for `shutil.rmtree()` equivalent to `rm -rf`.\n\n    Usage: `shutil.rmtree(path, onerror=force_delete)`\n    From stackoverflow.com/questions/1889597\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 7
                  },
                  "text": "\"\"\"Error handler for `shutil.rmtree()` equivalent to `rm -rf`.\n\n    Usage: `shutil.rmtree(path, onerror=force_delete)`\n    From stackoverflow.com/questions/1889597\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 5,
                        "column": 4
                      },
                      "text": "Error handler for `shutil.rmtree()` equivalent to `rm -rf`.\n\n    Usage: `shutil.rmtree(path, onerror=force_delete)`\n    From stackoverflow.com/questions/1889597\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 6,
                "column": 33
              },
              "text": "os.chmod(path, stat.S_IWRITE)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 6,
                    "column": 33
                  },
                  "text": "os.chmod(path, stat.S_IWRITE)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 6,
                        "column": 4
                      },
                      "end": {
                        "row": 6,
                        "column": 12
                      },
                      "text": "os.chmod",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 4
                          },
                          "end": {
                            "row": 6,
                            "column": 6
                          },
                          "text": "os"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 6,
                            "column": 6
                          },
                          "end": {
                            "row": 6,
                            "column": 7
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 7
                          },
                          "end": {
                            "row": 6,
                            "column": 12
                          },
                          "text": "chmod"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 6,
                        "column": 12
                      },
                      "end": {
                        "row": 6,
                        "column": 33
                      },
                      "text": "(path, stat.S_IWRITE)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 6,
                            "column": 12
                          },
                          "end": {
                            "row": 6,
                            "column": 13
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 13
                          },
                          "end": {
                            "row": 6,
                            "column": 17
                          },
                          "text": "path"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 6,
                            "column": 17
                          },
                          "end": {
                            "row": 6,
                            "column": 18
                          },
                          "text": ","
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 6,
                            "column": 19
                          },
                          "end": {
                            "row": 6,
                            "column": 32
                          },
                          "text": "stat.S_IWRITE",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 19
                              },
                              "end": {
                                "row": 6,
                                "column": 23
                              },
                              "text": "stat"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 6,
                                "column": 23
                              },
                              "end": {
                                "row": 6,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 6,
                                "column": 24
                              },
                              "end": {
                                "row": 6,
                                "column": 32
                              },
                              "text": "S_IWRITE"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 6,
                            "column": 32
                          },
                          "end": {
                            "row": 6,
                            "column": 33
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 7,
                "column": 4
              },
              "end": {
                "row": 7,
                "column": 14
              },
              "text": "func(path)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 7,
                    "column": 4
                  },
                  "end": {
                    "row": 7,
                    "column": 14
                  },
                  "text": "func(path)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 7,
                        "column": 4
                      },
                      "end": {
                        "row": 7,
                        "column": 8
                      },
                      "text": "func"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 7,
                        "column": 14
                      },
                      "text": "(path)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 7,
                            "column": 8
                          },
                          "end": {
                            "row": 7,
                            "column": 9
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 7,
                            "column": 9
                          },
                          "end": {
                            "row": 7,
                            "column": 13
                          },
                          "text": "path"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 7,
                            "column": 13
                          },
                          "end": {
                            "row": 7,
                            "column": 14
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}