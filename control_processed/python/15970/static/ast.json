{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 143,
    "column": 39
  },
  "text": "def create(graph, label_field,\n           threshold=1e-3,\n           weight_field='',\n           self_weight=1.0,\n           undirected=False,\n           max_iterations=None,\n           _single_precision=False,\n           _distributed='auto',\n           verbose=True):\n    \"\"\"\n    Given a weighted graph with observed class labels of a subset of vertices,\n    infer the label probability for the unobserved vertices using the\n    \"label propagation\" algorithm.\n\n    The algorithm iteratively updates the label probability of current vertex\n    as a weighted sum of label probability of self and the neighboring vertices\n    until converge.  See\n    :class:`turicreate.label_propagation.LabelPropagationModel` for the details\n    of the algorithm.\n\n    Notes: label propagation works well with small number of labels, i.e. binary\n    labels, or less than 1000 classes. The toolkit will throw error\n    if the number of classes exceeds the maximum value (1000).\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the label propagation.\n\n    label_field: str\n        Vertex field storing the initial vertex labels. The values in\n        must be [0, num_classes). None values indicate unobserved vertex labels.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the average L2 norm\n        (the sum of squared values) of the delta of each vertex's\n        label probability vector.\n\n    max_iterations: int, optional\n        The max number of iterations to run. Default is unlimited.\n        If set, the algorithm terminates when either max_iterations\n        or convergence threshold is reached.\n\n    weight_field: str, optional\n        Vertex field for edge weight. If empty, all edges are assumed\n        to have unit weight.\n\n    self_weight: float, optional\n        The weight for self edge.\n\n    undirected: bool, optional\n        If true, treat each edge as undirected, and propagates label in\n        both directions.\n\n    _single_precision : bool, optional\n        If true, running label propagation in single precision. The resulting\n        probability values may less accurate, but should run faster\n        and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n    Returns\n    -------\n    out : LabelPropagationModel\n\n    References\n    ----------\n    - Zhu, X., & Ghahramani, Z. (2002). `Learning from labeled and unlabeled data\n      with label propagation <http://www.cs.cmu.edu/~zhuxj/pub/CMU-CALD-02-107.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.label_propagation.LabelPropagationModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz',\n    ...                         format='snap')\n    # Initialize random classes for a subset of vertices\n    # Leave the unobserved vertices with None label.\n    >>> import random\n    >>> def init_label(vid):\n    ...     x = random.random()\n    ...     if x < 0.2:\n    ...         return 0\n    ...     elif x > 0.9:\n    ...         return 1\n    ...     else:\n    ...         return None\n    >>> g.vertices['label'] = g.vertices['__id'].apply(init_label, int)\n    >>> m = turicreate.label_propagation.create(g, label_field='label')\n\n    We can obtain for each vertex the predicted label and the probability of\n    each label in the graph ``g`` using:\n\n    >>> labels = m['labels']     # SFrame\n    >>> labels\n    +------+-------+-----------------+-------------------+----------------+\n    | __id | label | predicted_label |         P0        |       P1       |\n    +------+-------+-----------------+-------------------+----------------+\n    |  5   |   1   |        1        |        0.0        |      1.0       |\n    |  7   |  None |        0        |    0.8213214997   |  0.1786785003  |\n    |  8   |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  10  |  None |        0        |   0.534984718273  | 0.465015281727 |\n    |  27  |  None |        0        |   0.752801638549  | 0.247198361451 |\n    |  29  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  33  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  47  |   0   |        0        |        1.0        |      0.0       |\n    |  50  |  None |        0        |   0.788279032657  | 0.211720967343 |\n    |  52  |  None |        0        |   0.666666666667  | 0.333333333333 |\n    +------+-------+-----------------+-------------------+----------------+\n    [36692 rows x 5 columns]\n\n    See Also\n    --------\n    LabelPropagationModel\n    \"\"\"\n    from turicreate._cython.cy_server import QuietProgress\n\n    _raise_error_if_not_of_type(label_field, str)\n    _raise_error_if_not_of_type(weight_field, str)\n\n    if not isinstance(graph, _SGraph):\n        raise TypeError('graph input must be a SGraph object.')\n\n    if graph.vertices[label_field].dtype != int:\n        raise TypeError('label_field %s must be integer typed.' % label_field)\n\n    opts = {'label_field': label_field,\n            'threshold': threshold,\n            'weight_field': weight_field,\n            'self_weight': self_weight,\n            'undirected': undirected,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}\n\n    with QuietProgress(verbose):\n        params = _tc.extensions._toolkits.graph.label_propagation.create(opts)\n\n    model = params['model']\n    return LabelPropagationModel(model)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 143,
        "column": 39
      },
      "text": "def create(graph, label_field,\n           threshold=1e-3,\n           weight_field='',\n           self_weight=1.0,\n           undirected=False,\n           max_iterations=None,\n           _single_precision=False,\n           _distributed='auto',\n           verbose=True):\n    \"\"\"\n    Given a weighted graph with observed class labels of a subset of vertices,\n    infer the label probability for the unobserved vertices using the\n    \"label propagation\" algorithm.\n\n    The algorithm iteratively updates the label probability of current vertex\n    as a weighted sum of label probability of self and the neighboring vertices\n    until converge.  See\n    :class:`turicreate.label_propagation.LabelPropagationModel` for the details\n    of the algorithm.\n\n    Notes: label propagation works well with small number of labels, i.e. binary\n    labels, or less than 1000 classes. The toolkit will throw error\n    if the number of classes exceeds the maximum value (1000).\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the label propagation.\n\n    label_field: str\n        Vertex field storing the initial vertex labels. The values in\n        must be [0, num_classes). None values indicate unobserved vertex labels.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the average L2 norm\n        (the sum of squared values) of the delta of each vertex's\n        label probability vector.\n\n    max_iterations: int, optional\n        The max number of iterations to run. Default is unlimited.\n        If set, the algorithm terminates when either max_iterations\n        or convergence threshold is reached.\n\n    weight_field: str, optional\n        Vertex field for edge weight. If empty, all edges are assumed\n        to have unit weight.\n\n    self_weight: float, optional\n        The weight for self edge.\n\n    undirected: bool, optional\n        If true, treat each edge as undirected, and propagates label in\n        both directions.\n\n    _single_precision : bool, optional\n        If true, running label propagation in single precision. The resulting\n        probability values may less accurate, but should run faster\n        and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n    Returns\n    -------\n    out : LabelPropagationModel\n\n    References\n    ----------\n    - Zhu, X., & Ghahramani, Z. (2002). `Learning from labeled and unlabeled data\n      with label propagation <http://www.cs.cmu.edu/~zhuxj/pub/CMU-CALD-02-107.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.label_propagation.LabelPropagationModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz',\n    ...                         format='snap')\n    # Initialize random classes for a subset of vertices\n    # Leave the unobserved vertices with None label.\n    >>> import random\n    >>> def init_label(vid):\n    ...     x = random.random()\n    ...     if x < 0.2:\n    ...         return 0\n    ...     elif x > 0.9:\n    ...         return 1\n    ...     else:\n    ...         return None\n    >>> g.vertices['label'] = g.vertices['__id'].apply(init_label, int)\n    >>> m = turicreate.label_propagation.create(g, label_field='label')\n\n    We can obtain for each vertex the predicted label and the probability of\n    each label in the graph ``g`` using:\n\n    >>> labels = m['labels']     # SFrame\n    >>> labels\n    +------+-------+-----------------+-------------------+----------------+\n    | __id | label | predicted_label |         P0        |       P1       |\n    +------+-------+-----------------+-------------------+----------------+\n    |  5   |   1   |        1        |        0.0        |      1.0       |\n    |  7   |  None |        0        |    0.8213214997   |  0.1786785003  |\n    |  8   |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  10  |  None |        0        |   0.534984718273  | 0.465015281727 |\n    |  27  |  None |        0        |   0.752801638549  | 0.247198361451 |\n    |  29  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  33  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  47  |   0   |        0        |        1.0        |      0.0       |\n    |  50  |  None |        0        |   0.788279032657  | 0.211720967343 |\n    |  52  |  None |        0        |   0.666666666667  | 0.333333333333 |\n    +------+-------+-----------------+-------------------+----------------+\n    [36692 rows x 5 columns]\n\n    See Also\n    --------\n    LabelPropagationModel\n    \"\"\"\n    from turicreate._cython.cy_server import QuietProgress\n\n    _raise_error_if_not_of_type(label_field, str)\n    _raise_error_if_not_of_type(weight_field, str)\n\n    if not isinstance(graph, _SGraph):\n        raise TypeError('graph input must be a SGraph object.')\n\n    if graph.vertices[label_field].dtype != int:\n        raise TypeError('label_field %s must be integer typed.' % label_field)\n\n    opts = {'label_field': label_field,\n            'threshold': threshold,\n            'weight_field': weight_field,\n            'self_weight': self_weight,\n            'undirected': undirected,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}\n\n    with QuietProgress(verbose):\n        params = _tc.extensions._toolkits.graph.label_propagation.create(opts)\n\n    model = params['model']\n    return LabelPropagationModel(model)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 10
          },
          "text": "create"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 10
          },
          "end": {
            "row": 8,
            "column": 24
          },
          "text": "(graph, label_field,\n           threshold=1e-3,\n           weight_field='',\n           self_weight=1.0,\n           undirected=False,\n           max_iterations=None,\n           _single_precision=False,\n           _distributed='auto',\n           verbose=True)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "graph"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "label_field"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 11
              },
              "end": {
                "row": 1,
                "column": 25
              },
              "text": "threshold=1e-3",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 11
                  },
                  "end": {
                    "row": 1,
                    "column": 20
                  },
                  "text": "threshold"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 20
                  },
                  "end": {
                    "row": 1,
                    "column": 21
                  },
                  "text": "="
                },
                {
                  "type": "float",
                  "start": {
                    "row": 1,
                    "column": 21
                  },
                  "end": {
                    "row": 1,
                    "column": 25
                  },
                  "text": "1e-3"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 25
              },
              "end": {
                "row": 1,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 11
              },
              "end": {
                "row": 2,
                "column": 26
              },
              "text": "weight_field=''",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 11
                  },
                  "end": {
                    "row": 2,
                    "column": 23
                  },
                  "text": "weight_field"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 23
                  },
                  "end": {
                    "row": 2,
                    "column": 24
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 24
                  },
                  "end": {
                    "row": 2,
                    "column": 26
                  },
                  "text": "''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 24
                      },
                      "end": {
                        "row": 2,
                        "column": 25
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 2,
                        "column": 25
                      },
                      "end": {
                        "row": 2,
                        "column": 26
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 26
              },
              "end": {
                "row": 2,
                "column": 27
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 11
              },
              "end": {
                "row": 3,
                "column": 26
              },
              "text": "self_weight=1.0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 11
                  },
                  "end": {
                    "row": 3,
                    "column": 22
                  },
                  "text": "self_weight"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 22
                  },
                  "end": {
                    "row": 3,
                    "column": 23
                  },
                  "text": "="
                },
                {
                  "type": "float",
                  "start": {
                    "row": 3,
                    "column": 23
                  },
                  "end": {
                    "row": 3,
                    "column": 26
                  },
                  "text": "1.0"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 26
              },
              "end": {
                "row": 3,
                "column": 27
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 4,
                "column": 11
              },
              "end": {
                "row": 4,
                "column": 27
              },
              "text": "undirected=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 11
                  },
                  "end": {
                    "row": 4,
                    "column": 21
                  },
                  "text": "undirected"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 21
                  },
                  "end": {
                    "row": 4,
                    "column": 22
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 4,
                    "column": 22
                  },
                  "end": {
                    "row": 4,
                    "column": 27
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 27
              },
              "end": {
                "row": 4,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 5,
                "column": 11
              },
              "end": {
                "row": 5,
                "column": 30
              },
              "text": "max_iterations=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 11
                  },
                  "end": {
                    "row": 5,
                    "column": 25
                  },
                  "text": "max_iterations"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 25
                  },
                  "end": {
                    "row": 5,
                    "column": 26
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 5,
                    "column": 26
                  },
                  "end": {
                    "row": 5,
                    "column": 30
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 5,
                "column": 30
              },
              "end": {
                "row": 5,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 6,
                "column": 11
              },
              "end": {
                "row": 6,
                "column": 34
              },
              "text": "_single_precision=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 11
                  },
                  "end": {
                    "row": 6,
                    "column": 28
                  },
                  "text": "_single_precision"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 6,
                    "column": 28
                  },
                  "end": {
                    "row": 6,
                    "column": 29
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 6,
                    "column": 29
                  },
                  "end": {
                    "row": 6,
                    "column": 34
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 6,
                "column": 34
              },
              "end": {
                "row": 6,
                "column": 35
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 7,
                "column": 11
              },
              "end": {
                "row": 7,
                "column": 30
              },
              "text": "_distributed='auto'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 7,
                    "column": 11
                  },
                  "end": {
                    "row": 7,
                    "column": 23
                  },
                  "text": "_distributed"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 7,
                    "column": 23
                  },
                  "end": {
                    "row": 7,
                    "column": 24
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 7,
                    "column": 24
                  },
                  "end": {
                    "row": 7,
                    "column": 30
                  },
                  "text": "'auto'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 7,
                        "column": 24
                      },
                      "end": {
                        "row": 7,
                        "column": 25
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 7,
                        "column": 25
                      },
                      "end": {
                        "row": 7,
                        "column": 29
                      },
                      "text": "auto"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 7,
                        "column": 29
                      },
                      "end": {
                        "row": 7,
                        "column": 30
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 7,
                "column": 30
              },
              "end": {
                "row": 7,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 8,
                "column": 11
              },
              "end": {
                "row": 8,
                "column": 23
              },
              "text": "verbose=True",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 8,
                    "column": 11
                  },
                  "end": {
                    "row": 8,
                    "column": 18
                  },
                  "text": "verbose"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 8,
                    "column": 18
                  },
                  "end": {
                    "row": 8,
                    "column": 19
                  },
                  "text": "="
                },
                {
                  "type": "true",
                  "start": {
                    "row": 8,
                    "column": 19
                  },
                  "end": {
                    "row": 8,
                    "column": 23
                  },
                  "text": "True"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 8,
                "column": 23
              },
              "end": {
                "row": 8,
                "column": 24
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 8,
            "column": 24
          },
          "end": {
            "row": 8,
            "column": 25
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 9,
            "column": 4
          },
          "end": {
            "row": 143,
            "column": 39
          },
          "text": "\"\"\"\n    Given a weighted graph with observed class labels of a subset of vertices,\n    infer the label probability for the unobserved vertices using the\n    \"label propagation\" algorithm.\n\n    The algorithm iteratively updates the label probability of current vertex\n    as a weighted sum of label probability of self and the neighboring vertices\n    until converge.  See\n    :class:`turicreate.label_propagation.LabelPropagationModel` for the details\n    of the algorithm.\n\n    Notes: label propagation works well with small number of labels, i.e. binary\n    labels, or less than 1000 classes. The toolkit will throw error\n    if the number of classes exceeds the maximum value (1000).\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the label propagation.\n\n    label_field: str\n        Vertex field storing the initial vertex labels. The values in\n        must be [0, num_classes). None values indicate unobserved vertex labels.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the average L2 norm\n        (the sum of squared values) of the delta of each vertex's\n        label probability vector.\n\n    max_iterations: int, optional\n        The max number of iterations to run. Default is unlimited.\n        If set, the algorithm terminates when either max_iterations\n        or convergence threshold is reached.\n\n    weight_field: str, optional\n        Vertex field for edge weight. If empty, all edges are assumed\n        to have unit weight.\n\n    self_weight: float, optional\n        The weight for self edge.\n\n    undirected: bool, optional\n        If true, treat each edge as undirected, and propagates label in\n        both directions.\n\n    _single_precision : bool, optional\n        If true, running label propagation in single precision. The resulting\n        probability values may less accurate, but should run faster\n        and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n    Returns\n    -------\n    out : LabelPropagationModel\n\n    References\n    ----------\n    - Zhu, X., & Ghahramani, Z. (2002). `Learning from labeled and unlabeled data\n      with label propagation <http://www.cs.cmu.edu/~zhuxj/pub/CMU-CALD-02-107.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.label_propagation.LabelPropagationModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz',\n    ...                         format='snap')\n    # Initialize random classes for a subset of vertices\n    # Leave the unobserved vertices with None label.\n    >>> import random\n    >>> def init_label(vid):\n    ...     x = random.random()\n    ...     if x < 0.2:\n    ...         return 0\n    ...     elif x > 0.9:\n    ...         return 1\n    ...     else:\n    ...         return None\n    >>> g.vertices['label'] = g.vertices['__id'].apply(init_label, int)\n    >>> m = turicreate.label_propagation.create(g, label_field='label')\n\n    We can obtain for each vertex the predicted label and the probability of\n    each label in the graph ``g`` using:\n\n    >>> labels = m['labels']     # SFrame\n    >>> labels\n    +------+-------+-----------------+-------------------+----------------+\n    | __id | label | predicted_label |         P0        |       P1       |\n    +------+-------+-----------------+-------------------+----------------+\n    |  5   |   1   |        1        |        0.0        |      1.0       |\n    |  7   |  None |        0        |    0.8213214997   |  0.1786785003  |\n    |  8   |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  10  |  None |        0        |   0.534984718273  | 0.465015281727 |\n    |  27  |  None |        0        |   0.752801638549  | 0.247198361451 |\n    |  29  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  33  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  47  |   0   |        0        |        1.0        |      0.0       |\n    |  50  |  None |        0        |   0.788279032657  | 0.211720967343 |\n    |  52  |  None |        0        |   0.666666666667  | 0.333333333333 |\n    +------+-------+-----------------+-------------------+----------------+\n    [36692 rows x 5 columns]\n\n    See Also\n    --------\n    LabelPropagationModel\n    \"\"\"\n    from turicreate._cython.cy_server import QuietProgress\n\n    _raise_error_if_not_of_type(label_field, str)\n    _raise_error_if_not_of_type(weight_field, str)\n\n    if not isinstance(graph, _SGraph):\n        raise TypeError('graph input must be a SGraph object.')\n\n    if graph.vertices[label_field].dtype != int:\n        raise TypeError('label_field %s must be integer typed.' % label_field)\n\n    opts = {'label_field': label_field,\n            'threshold': threshold,\n            'weight_field': weight_field,\n            'self_weight': self_weight,\n            'undirected': undirected,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}\n\n    with QuietProgress(verbose):\n        params = _tc.extensions._toolkits.graph.label_propagation.create(opts)\n\n    model = params['model']\n    return LabelPropagationModel(model)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 9,
                "column": 4
              },
              "end": {
                "row": 118,
                "column": 7
              },
              "text": "\"\"\"\n    Given a weighted graph with observed class labels of a subset of vertices,\n    infer the label probability for the unobserved vertices using the\n    \"label propagation\" algorithm.\n\n    The algorithm iteratively updates the label probability of current vertex\n    as a weighted sum of label probability of self and the neighboring vertices\n    until converge.  See\n    :class:`turicreate.label_propagation.LabelPropagationModel` for the details\n    of the algorithm.\n\n    Notes: label propagation works well with small number of labels, i.e. binary\n    labels, or less than 1000 classes. The toolkit will throw error\n    if the number of classes exceeds the maximum value (1000).\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the label propagation.\n\n    label_field: str\n        Vertex field storing the initial vertex labels. The values in\n        must be [0, num_classes). None values indicate unobserved vertex labels.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the average L2 norm\n        (the sum of squared values) of the delta of each vertex's\n        label probability vector.\n\n    max_iterations: int, optional\n        The max number of iterations to run. Default is unlimited.\n        If set, the algorithm terminates when either max_iterations\n        or convergence threshold is reached.\n\n    weight_field: str, optional\n        Vertex field for edge weight. If empty, all edges are assumed\n        to have unit weight.\n\n    self_weight: float, optional\n        The weight for self edge.\n\n    undirected: bool, optional\n        If true, treat each edge as undirected, and propagates label in\n        both directions.\n\n    _single_precision : bool, optional\n        If true, running label propagation in single precision. The resulting\n        probability values may less accurate, but should run faster\n        and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n    Returns\n    -------\n    out : LabelPropagationModel\n\n    References\n    ----------\n    - Zhu, X., & Ghahramani, Z. (2002). `Learning from labeled and unlabeled data\n      with label propagation <http://www.cs.cmu.edu/~zhuxj/pub/CMU-CALD-02-107.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.label_propagation.LabelPropagationModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz',\n    ...                         format='snap')\n    # Initialize random classes for a subset of vertices\n    # Leave the unobserved vertices with None label.\n    >>> import random\n    >>> def init_label(vid):\n    ...     x = random.random()\n    ...     if x < 0.2:\n    ...         return 0\n    ...     elif x > 0.9:\n    ...         return 1\n    ...     else:\n    ...         return None\n    >>> g.vertices['label'] = g.vertices['__id'].apply(init_label, int)\n    >>> m = turicreate.label_propagation.create(g, label_field='label')\n\n    We can obtain for each vertex the predicted label and the probability of\n    each label in the graph ``g`` using:\n\n    >>> labels = m['labels']     # SFrame\n    >>> labels\n    +------+-------+-----------------+-------------------+----------------+\n    | __id | label | predicted_label |         P0        |       P1       |\n    +------+-------+-----------------+-------------------+----------------+\n    |  5   |   1   |        1        |        0.0        |      1.0       |\n    |  7   |  None |        0        |    0.8213214997   |  0.1786785003  |\n    |  8   |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  10  |  None |        0        |   0.534984718273  | 0.465015281727 |\n    |  27  |  None |        0        |   0.752801638549  | 0.247198361451 |\n    |  29  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  33  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  47  |   0   |        0        |        1.0        |      0.0       |\n    |  50  |  None |        0        |   0.788279032657  | 0.211720967343 |\n    |  52  |  None |        0        |   0.666666666667  | 0.333333333333 |\n    +------+-------+-----------------+-------------------+----------------+\n    [36692 rows x 5 columns]\n\n    See Also\n    --------\n    LabelPropagationModel\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 9,
                    "column": 4
                  },
                  "end": {
                    "row": 118,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Given a weighted graph with observed class labels of a subset of vertices,\n    infer the label probability for the unobserved vertices using the\n    \"label propagation\" algorithm.\n\n    The algorithm iteratively updates the label probability of current vertex\n    as a weighted sum of label probability of self and the neighboring vertices\n    until converge.  See\n    :class:`turicreate.label_propagation.LabelPropagationModel` for the details\n    of the algorithm.\n\n    Notes: label propagation works well with small number of labels, i.e. binary\n    labels, or less than 1000 classes. The toolkit will throw error\n    if the number of classes exceeds the maximum value (1000).\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the label propagation.\n\n    label_field: str\n        Vertex field storing the initial vertex labels. The values in\n        must be [0, num_classes). None values indicate unobserved vertex labels.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the average L2 norm\n        (the sum of squared values) of the delta of each vertex's\n        label probability vector.\n\n    max_iterations: int, optional\n        The max number of iterations to run. Default is unlimited.\n        If set, the algorithm terminates when either max_iterations\n        or convergence threshold is reached.\n\n    weight_field: str, optional\n        Vertex field for edge weight. If empty, all edges are assumed\n        to have unit weight.\n\n    self_weight: float, optional\n        The weight for self edge.\n\n    undirected: bool, optional\n        If true, treat each edge as undirected, and propagates label in\n        both directions.\n\n    _single_precision : bool, optional\n        If true, running label propagation in single precision. The resulting\n        probability values may less accurate, but should run faster\n        and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n    Returns\n    -------\n    out : LabelPropagationModel\n\n    References\n    ----------\n    - Zhu, X., & Ghahramani, Z. (2002). `Learning from labeled and unlabeled data\n      with label propagation <http://www.cs.cmu.edu/~zhuxj/pub/CMU-CALD-02-107.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.label_propagation.LabelPropagationModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz',\n    ...                         format='snap')\n    # Initialize random classes for a subset of vertices\n    # Leave the unobserved vertices with None label.\n    >>> import random\n    >>> def init_label(vid):\n    ...     x = random.random()\n    ...     if x < 0.2:\n    ...         return 0\n    ...     elif x > 0.9:\n    ...         return 1\n    ...     else:\n    ...         return None\n    >>> g.vertices['label'] = g.vertices['__id'].apply(init_label, int)\n    >>> m = turicreate.label_propagation.create(g, label_field='label')\n\n    We can obtain for each vertex the predicted label and the probability of\n    each label in the graph ``g`` using:\n\n    >>> labels = m['labels']     # SFrame\n    >>> labels\n    +------+-------+-----------------+-------------------+----------------+\n    | __id | label | predicted_label |         P0        |       P1       |\n    +------+-------+-----------------+-------------------+----------------+\n    |  5   |   1   |        1        |        0.0        |      1.0       |\n    |  7   |  None |        0        |    0.8213214997   |  0.1786785003  |\n    |  8   |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  10  |  None |        0        |   0.534984718273  | 0.465015281727 |\n    |  27  |  None |        0        |   0.752801638549  | 0.247198361451 |\n    |  29  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  33  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  47  |   0   |        0        |        1.0        |      0.0       |\n    |  50  |  None |        0        |   0.788279032657  | 0.211720967343 |\n    |  52  |  None |        0        |   0.666666666667  | 0.333333333333 |\n    +------+-------+-----------------+-------------------+----------------+\n    [36692 rows x 5 columns]\n\n    See Also\n    --------\n    LabelPropagationModel\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 9,
                        "column": 4
                      },
                      "end": {
                        "row": 9,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 9,
                        "column": 7
                      },
                      "end": {
                        "row": 118,
                        "column": 4
                      },
                      "text": "\n    Given a weighted graph with observed class labels of a subset of vertices,\n    infer the label probability for the unobserved vertices using the\n    \"label propagation\" algorithm.\n\n    The algorithm iteratively updates the label probability of current vertex\n    as a weighted sum of label probability of self and the neighboring vertices\n    until converge.  See\n    :class:`turicreate.label_propagation.LabelPropagationModel` for the details\n    of the algorithm.\n\n    Notes: label propagation works well with small number of labels, i.e. binary\n    labels, or less than 1000 classes. The toolkit will throw error\n    if the number of classes exceeds the maximum value (1000).\n\n    Parameters\n    ----------\n    graph : SGraph\n        The graph on which to compute the label propagation.\n\n    label_field: str\n        Vertex field storing the initial vertex labels. The values in\n        must be [0, num_classes). None values indicate unobserved vertex labels.\n\n    threshold : float, optional\n        Threshold for convergence, measured in the average L2 norm\n        (the sum of squared values) of the delta of each vertex's\n        label probability vector.\n\n    max_iterations: int, optional\n        The max number of iterations to run. Default is unlimited.\n        If set, the algorithm terminates when either max_iterations\n        or convergence threshold is reached.\n\n    weight_field: str, optional\n        Vertex field for edge weight. If empty, all edges are assumed\n        to have unit weight.\n\n    self_weight: float, optional\n        The weight for self edge.\n\n    undirected: bool, optional\n        If true, treat each edge as undirected, and propagates label in\n        both directions.\n\n    _single_precision : bool, optional\n        If true, running label propagation in single precision. The resulting\n        probability values may less accurate, but should run faster\n        and use less memory.\n\n    _distributed : distributed environment, internal\n\n    verbose : bool, optional\n        If True, print progress updates.\n\n    Returns\n    -------\n    out : LabelPropagationModel\n\n    References\n    ----------\n    - Zhu, X., & Ghahramani, Z. (2002). `Learning from labeled and unlabeled data\n      with label propagation <http://www.cs.cmu.edu/~zhuxj/pub/CMU-CALD-02-107.pdf>`_.\n\n    Examples\n    --------\n    If given an :class:`~turicreate.SGraph` ``g``, we can create\n    a :class:`~turicreate.label_propagation.LabelPropagationModel` as follows:\n\n    >>> g = turicreate.load_sgraph('http://snap.stanford.edu/data/email-Enron.txt.gz',\n    ...                         format='snap')\n    # Initialize random classes for a subset of vertices\n    # Leave the unobserved vertices with None label.\n    >>> import random\n    >>> def init_label(vid):\n    ...     x = random.random()\n    ...     if x < 0.2:\n    ...         return 0\n    ...     elif x > 0.9:\n    ...         return 1\n    ...     else:\n    ...         return None\n    >>> g.vertices['label'] = g.vertices['__id'].apply(init_label, int)\n    >>> m = turicreate.label_propagation.create(g, label_field='label')\n\n    We can obtain for each vertex the predicted label and the probability of\n    each label in the graph ``g`` using:\n\n    >>> labels = m['labels']     # SFrame\n    >>> labels\n    +------+-------+-----------------+-------------------+----------------+\n    | __id | label | predicted_label |         P0        |       P1       |\n    +------+-------+-----------------+-------------------+----------------+\n    |  5   |   1   |        1        |        0.0        |      1.0       |\n    |  7   |  None |        0        |    0.8213214997   |  0.1786785003  |\n    |  8   |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  10  |  None |        0        |   0.534984718273  | 0.465015281727 |\n    |  27  |  None |        0        |   0.752801638549  | 0.247198361451 |\n    |  29  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  33  |  None |        1        | 5.96046447754e-08 | 0.999999940395 |\n    |  47  |   0   |        0        |        1.0        |      0.0       |\n    |  50  |  None |        0        |   0.788279032657  | 0.211720967343 |\n    |  52  |  None |        0        |   0.666666666667  | 0.333333333333 |\n    +------+-------+-----------------+-------------------+----------------+\n    [36692 rows x 5 columns]\n\n    See Also\n    --------\n    LabelPropagationModel\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 118,
                        "column": 4
                      },
                      "end": {
                        "row": 118,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "import_from_statement",
              "start": {
                "row": 119,
                "column": 4
              },
              "end": {
                "row": 119,
                "column": 58
              },
              "text": "from turicreate._cython.cy_server import QuietProgress",
              "children": [
                {
                  "type": "from",
                  "start": {
                    "row": 119,
                    "column": 4
                  },
                  "end": {
                    "row": 119,
                    "column": 8
                  },
                  "text": "from"
                },
                {
                  "type": "dotted_name",
                  "start": {
                    "row": 119,
                    "column": 9
                  },
                  "end": {
                    "row": 119,
                    "column": 37
                  },
                  "text": "turicreate._cython.cy_server",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 119,
                        "column": 9
                      },
                      "end": {
                        "row": 119,
                        "column": 19
                      },
                      "text": "turicreate"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 119,
                        "column": 19
                      },
                      "end": {
                        "row": 119,
                        "column": 20
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 119,
                        "column": 20
                      },
                      "end": {
                        "row": 119,
                        "column": 27
                      },
                      "text": "_cython"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 119,
                        "column": 27
                      },
                      "end": {
                        "row": 119,
                        "column": 28
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 119,
                        "column": 28
                      },
                      "end": {
                        "row": 119,
                        "column": 37
                      },
                      "text": "cy_server"
                    }
                  ]
                },
                {
                  "type": "import",
                  "start": {
                    "row": 119,
                    "column": 38
                  },
                  "end": {
                    "row": 119,
                    "column": 44
                  },
                  "text": "import"
                },
                {
                  "type": "dotted_name",
                  "start": {
                    "row": 119,
                    "column": 45
                  },
                  "end": {
                    "row": 119,
                    "column": 58
                  },
                  "text": "QuietProgress",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 119,
                        "column": 45
                      },
                      "end": {
                        "row": 119,
                        "column": 58
                      },
                      "text": "QuietProgress"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 121,
                "column": 4
              },
              "end": {
                "row": 121,
                "column": 49
              },
              "text": "_raise_error_if_not_of_type(label_field, str)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 121,
                    "column": 4
                  },
                  "end": {
                    "row": 121,
                    "column": 49
                  },
                  "text": "_raise_error_if_not_of_type(label_field, str)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 121,
                        "column": 4
                      },
                      "end": {
                        "row": 121,
                        "column": 31
                      },
                      "text": "_raise_error_if_not_of_type"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 121,
                        "column": 31
                      },
                      "end": {
                        "row": 121,
                        "column": 49
                      },
                      "text": "(label_field, str)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 121,
                            "column": 31
                          },
                          "end": {
                            "row": 121,
                            "column": 32
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 121,
                            "column": 32
                          },
                          "end": {
                            "row": 121,
                            "column": 43
                          },
                          "text": "label_field"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 121,
                            "column": 43
                          },
                          "end": {
                            "row": 121,
                            "column": 44
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 121,
                            "column": 45
                          },
                          "end": {
                            "row": 121,
                            "column": 48
                          },
                          "text": "str"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 121,
                            "column": 48
                          },
                          "end": {
                            "row": 121,
                            "column": 49
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 122,
                "column": 4
              },
              "end": {
                "row": 122,
                "column": 50
              },
              "text": "_raise_error_if_not_of_type(weight_field, str)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 122,
                    "column": 4
                  },
                  "end": {
                    "row": 122,
                    "column": 50
                  },
                  "text": "_raise_error_if_not_of_type(weight_field, str)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 122,
                        "column": 4
                      },
                      "end": {
                        "row": 122,
                        "column": 31
                      },
                      "text": "_raise_error_if_not_of_type"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 122,
                        "column": 31
                      },
                      "end": {
                        "row": 122,
                        "column": 50
                      },
                      "text": "(weight_field, str)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 122,
                            "column": 31
                          },
                          "end": {
                            "row": 122,
                            "column": 32
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 122,
                            "column": 32
                          },
                          "end": {
                            "row": 122,
                            "column": 44
                          },
                          "text": "weight_field"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 122,
                            "column": 44
                          },
                          "end": {
                            "row": 122,
                            "column": 45
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 122,
                            "column": 46
                          },
                          "end": {
                            "row": 122,
                            "column": 49
                          },
                          "text": "str"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 122,
                            "column": 49
                          },
                          "end": {
                            "row": 122,
                            "column": 50
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 124,
                "column": 4
              },
              "end": {
                "row": 125,
                "column": 63
              },
              "text": "if not isinstance(graph, _SGraph):\n        raise TypeError('graph input must be a SGraph object.')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 124,
                    "column": 4
                  },
                  "end": {
                    "row": 124,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 124,
                    "column": 7
                  },
                  "end": {
                    "row": 124,
                    "column": 37
                  },
                  "text": "not isinstance(graph, _SGraph)",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 124,
                        "column": 7
                      },
                      "end": {
                        "row": 124,
                        "column": 10
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 124,
                        "column": 11
                      },
                      "end": {
                        "row": 124,
                        "column": 37
                      },
                      "text": "isinstance(graph, _SGraph)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 124,
                            "column": 11
                          },
                          "end": {
                            "row": 124,
                            "column": 21
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 124,
                            "column": 21
                          },
                          "end": {
                            "row": 124,
                            "column": 37
                          },
                          "text": "(graph, _SGraph)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 124,
                                "column": 21
                              },
                              "end": {
                                "row": 124,
                                "column": 22
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 124,
                                "column": 22
                              },
                              "end": {
                                "row": 124,
                                "column": 27
                              },
                              "text": "graph"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 124,
                                "column": 27
                              },
                              "end": {
                                "row": 124,
                                "column": 28
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 124,
                                "column": 29
                              },
                              "end": {
                                "row": 124,
                                "column": 36
                              },
                              "text": "_SGraph"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 124,
                                "column": 36
                              },
                              "end": {
                                "row": 124,
                                "column": 37
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 124,
                    "column": 37
                  },
                  "end": {
                    "row": 124,
                    "column": 38
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 125,
                    "column": 8
                  },
                  "end": {
                    "row": 125,
                    "column": 63
                  },
                  "text": "raise TypeError('graph input must be a SGraph object.')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 125,
                        "column": 8
                      },
                      "end": {
                        "row": 125,
                        "column": 63
                      },
                      "text": "raise TypeError('graph input must be a SGraph object.')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 125,
                            "column": 8
                          },
                          "end": {
                            "row": 125,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 125,
                            "column": 14
                          },
                          "end": {
                            "row": 125,
                            "column": 63
                          },
                          "text": "TypeError('graph input must be a SGraph object.')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 125,
                                "column": 14
                              },
                              "end": {
                                "row": 125,
                                "column": 23
                              },
                              "text": "TypeError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 125,
                                "column": 23
                              },
                              "end": {
                                "row": 125,
                                "column": 63
                              },
                              "text": "('graph input must be a SGraph object.')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 125,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 125,
                                    "column": 24
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 125,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 125,
                                    "column": 62
                                  },
                                  "text": "'graph input must be a SGraph object.'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 125,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 25
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 125,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 61
                                      },
                                      "text": "graph input must be a SGraph object."
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 125,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 125,
                                        "column": 62
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 125,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 125,
                                    "column": 63
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 127,
                "column": 4
              },
              "end": {
                "row": 128,
                "column": 78
              },
              "text": "if graph.vertices[label_field].dtype != int:\n        raise TypeError('label_field %s must be integer typed.' % label_field)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 127,
                    "column": 4
                  },
                  "end": {
                    "row": 127,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 127,
                    "column": 7
                  },
                  "end": {
                    "row": 127,
                    "column": 47
                  },
                  "text": "graph.vertices[label_field].dtype != int",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 127,
                        "column": 7
                      },
                      "end": {
                        "row": 127,
                        "column": 40
                      },
                      "text": "graph.vertices[label_field].dtype",
                      "children": [
                        {
                          "type": "subscript",
                          "start": {
                            "row": 127,
                            "column": 7
                          },
                          "end": {
                            "row": 127,
                            "column": 34
                          },
                          "text": "graph.vertices[label_field]",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 127,
                                "column": 7
                              },
                              "end": {
                                "row": 127,
                                "column": 21
                              },
                              "text": "graph.vertices",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 127,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 127,
                                    "column": 12
                                  },
                                  "text": "graph"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 127,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 127,
                                    "column": 13
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 127,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 127,
                                    "column": 21
                                  },
                                  "text": "vertices"
                                }
                              ]
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 127,
                                "column": 21
                              },
                              "end": {
                                "row": 127,
                                "column": 22
                              },
                              "text": "["
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 127,
                                "column": 22
                              },
                              "end": {
                                "row": 127,
                                "column": 33
                              },
                              "text": "label_field"
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 127,
                                "column": 33
                              },
                              "end": {
                                "row": 127,
                                "column": 34
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 127,
                            "column": 34
                          },
                          "end": {
                            "row": 127,
                            "column": 35
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 127,
                            "column": 35
                          },
                          "end": {
                            "row": 127,
                            "column": 40
                          },
                          "text": "dtype"
                        }
                      ]
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 127,
                        "column": 41
                      },
                      "end": {
                        "row": 127,
                        "column": 43
                      },
                      "text": "!="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 127,
                        "column": 44
                      },
                      "end": {
                        "row": 127,
                        "column": 47
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 127,
                    "column": 47
                  },
                  "end": {
                    "row": 127,
                    "column": 48
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 128,
                    "column": 8
                  },
                  "end": {
                    "row": 128,
                    "column": 78
                  },
                  "text": "raise TypeError('label_field %s must be integer typed.' % label_field)",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 128,
                        "column": 8
                      },
                      "end": {
                        "row": 128,
                        "column": 78
                      },
                      "text": "raise TypeError('label_field %s must be integer typed.' % label_field)",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 128,
                            "column": 8
                          },
                          "end": {
                            "row": 128,
                            "column": 13
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 128,
                            "column": 14
                          },
                          "end": {
                            "row": 128,
                            "column": 78
                          },
                          "text": "TypeError('label_field %s must be integer typed.' % label_field)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 128,
                                "column": 14
                              },
                              "end": {
                                "row": 128,
                                "column": 23
                              },
                              "text": "TypeError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 128,
                                "column": 23
                              },
                              "end": {
                                "row": 128,
                                "column": 78
                              },
                              "text": "('label_field %s must be integer typed.' % label_field)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 128,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 128,
                                    "column": 24
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 128,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 128,
                                    "column": 77
                                  },
                                  "text": "'label_field %s must be integer typed.' % label_field",
                                  "children": [
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 128,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 128,
                                        "column": 63
                                      },
                                      "text": "'label_field %s must be integer typed.'",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 128,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 128,
                                            "column": 25
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 128,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 128,
                                            "column": 62
                                          },
                                          "text": "label_field %s must be integer typed."
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 128,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 128,
                                            "column": 63
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "%",
                                      "start": {
                                        "row": 128,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 128,
                                        "column": 65
                                      },
                                      "text": "%"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 128,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 128,
                                        "column": 77
                                      },
                                      "text": "label_field"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 128,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 128,
                                    "column": 78
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 130,
                "column": 4
              },
              "end": {
                "row": 137,
                "column": 37
              },
              "text": "opts = {'label_field': label_field,\n            'threshold': threshold,\n            'weight_field': weight_field,\n            'self_weight': self_weight,\n            'undirected': undirected,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 130,
                    "column": 4
                  },
                  "end": {
                    "row": 137,
                    "column": 37
                  },
                  "text": "opts = {'label_field': label_field,\n            'threshold': threshold,\n            'weight_field': weight_field,\n            'self_weight': self_weight,\n            'undirected': undirected,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 130,
                        "column": 4
                      },
                      "end": {
                        "row": 130,
                        "column": 8
                      },
                      "text": "opts"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 130,
                        "column": 9
                      },
                      "end": {
                        "row": 130,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "dictionary",
                      "start": {
                        "row": 130,
                        "column": 11
                      },
                      "end": {
                        "row": 137,
                        "column": 37
                      },
                      "text": "{'label_field': label_field,\n            'threshold': threshold,\n            'weight_field': weight_field,\n            'self_weight': self_weight,\n            'undirected': undirected,\n            'max_iterations': max_iterations,\n            'single_precision': _single_precision,\n            'graph': graph.__proxy__}",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 130,
                            "column": 11
                          },
                          "end": {
                            "row": 130,
                            "column": 12
                          },
                          "text": "{"
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 130,
                            "column": 12
                          },
                          "end": {
                            "row": 130,
                            "column": 38
                          },
                          "text": "'label_field': label_field",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 130,
                                "column": 12
                              },
                              "end": {
                                "row": 130,
                                "column": 25
                              },
                              "text": "'label_field'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 130,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 130,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 24
                                  },
                                  "text": "label_field"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 130,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 130,
                                    "column": 25
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 130,
                                "column": 25
                              },
                              "end": {
                                "row": 130,
                                "column": 26
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 130,
                                "column": 27
                              },
                              "end": {
                                "row": 130,
                                "column": 38
                              },
                              "text": "label_field"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 130,
                            "column": 38
                          },
                          "end": {
                            "row": 130,
                            "column": 39
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 131,
                            "column": 12
                          },
                          "end": {
                            "row": 131,
                            "column": 34
                          },
                          "text": "'threshold': threshold",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 131,
                                "column": 12
                              },
                              "end": {
                                "row": 131,
                                "column": 23
                              },
                              "text": "'threshold'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 131,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 131,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 131,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 131,
                                    "column": 22
                                  },
                                  "text": "threshold"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 131,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 131,
                                    "column": 23
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 131,
                                "column": 23
                              },
                              "end": {
                                "row": 131,
                                "column": 24
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 131,
                                "column": 25
                              },
                              "end": {
                                "row": 131,
                                "column": 34
                              },
                              "text": "threshold"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 131,
                            "column": 34
                          },
                          "end": {
                            "row": 131,
                            "column": 35
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 132,
                            "column": 12
                          },
                          "end": {
                            "row": 132,
                            "column": 40
                          },
                          "text": "'weight_field': weight_field",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 132,
                                "column": 12
                              },
                              "end": {
                                "row": 132,
                                "column": 26
                              },
                              "text": "'weight_field'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 132,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 132,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 132,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 132,
                                    "column": 25
                                  },
                                  "text": "weight_field"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 132,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 132,
                                    "column": 26
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 132,
                                "column": 26
                              },
                              "end": {
                                "row": 132,
                                "column": 27
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 132,
                                "column": 28
                              },
                              "end": {
                                "row": 132,
                                "column": 40
                              },
                              "text": "weight_field"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 132,
                            "column": 40
                          },
                          "end": {
                            "row": 132,
                            "column": 41
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 133,
                            "column": 12
                          },
                          "end": {
                            "row": 133,
                            "column": 38
                          },
                          "text": "'self_weight': self_weight",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 133,
                                "column": 12
                              },
                              "end": {
                                "row": 133,
                                "column": 25
                              },
                              "text": "'self_weight'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 133,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 133,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 133,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 133,
                                    "column": 24
                                  },
                                  "text": "self_weight"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 133,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 133,
                                    "column": 25
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 133,
                                "column": 25
                              },
                              "end": {
                                "row": 133,
                                "column": 26
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 133,
                                "column": 27
                              },
                              "end": {
                                "row": 133,
                                "column": 38
                              },
                              "text": "self_weight"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 133,
                            "column": 38
                          },
                          "end": {
                            "row": 133,
                            "column": 39
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 134,
                            "column": 12
                          },
                          "end": {
                            "row": 134,
                            "column": 36
                          },
                          "text": "'undirected': undirected",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 134,
                                "column": 12
                              },
                              "end": {
                                "row": 134,
                                "column": 24
                              },
                              "text": "'undirected'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 134,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 134,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 134,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 134,
                                    "column": 23
                                  },
                                  "text": "undirected"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 134,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 134,
                                    "column": 24
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 134,
                                "column": 24
                              },
                              "end": {
                                "row": 134,
                                "column": 25
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 134,
                                "column": 26
                              },
                              "end": {
                                "row": 134,
                                "column": 36
                              },
                              "text": "undirected"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 134,
                            "column": 36
                          },
                          "end": {
                            "row": 134,
                            "column": 37
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 135,
                            "column": 12
                          },
                          "end": {
                            "row": 135,
                            "column": 44
                          },
                          "text": "'max_iterations': max_iterations",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 135,
                                "column": 12
                              },
                              "end": {
                                "row": 135,
                                "column": 28
                              },
                              "text": "'max_iterations'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 135,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 135,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 135,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 135,
                                    "column": 27
                                  },
                                  "text": "max_iterations"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 135,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 135,
                                    "column": 28
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 135,
                                "column": 28
                              },
                              "end": {
                                "row": 135,
                                "column": 29
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 135,
                                "column": 30
                              },
                              "end": {
                                "row": 135,
                                "column": 44
                              },
                              "text": "max_iterations"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 135,
                            "column": 44
                          },
                          "end": {
                            "row": 135,
                            "column": 45
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 136,
                            "column": 12
                          },
                          "end": {
                            "row": 136,
                            "column": 49
                          },
                          "text": "'single_precision': _single_precision",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 136,
                                "column": 12
                              },
                              "end": {
                                "row": 136,
                                "column": 30
                              },
                              "text": "'single_precision'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 136,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 136,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 136,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 136,
                                    "column": 29
                                  },
                                  "text": "single_precision"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 136,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 136,
                                    "column": 30
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 136,
                                "column": 30
                              },
                              "end": {
                                "row": 136,
                                "column": 31
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 136,
                                "column": 32
                              },
                              "end": {
                                "row": 136,
                                "column": 49
                              },
                              "text": "_single_precision"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 136,
                            "column": 49
                          },
                          "end": {
                            "row": 136,
                            "column": 50
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 137,
                            "column": 12
                          },
                          "end": {
                            "row": 137,
                            "column": 36
                          },
                          "text": "'graph': graph.__proxy__",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 137,
                                "column": 12
                              },
                              "end": {
                                "row": 137,
                                "column": 19
                              },
                              "text": "'graph'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 137,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 137,
                                    "column": 13
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 137,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 137,
                                    "column": 18
                                  },
                                  "text": "graph"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 137,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 137,
                                    "column": 19
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 137,
                                "column": 19
                              },
                              "end": {
                                "row": 137,
                                "column": 20
                              },
                              "text": ":"
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 137,
                                "column": 21
                              },
                              "end": {
                                "row": 137,
                                "column": 36
                              },
                              "text": "graph.__proxy__",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 137,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 137,
                                    "column": 26
                                  },
                                  "text": "graph"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 137,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 137,
                                    "column": 27
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 137,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 137,
                                    "column": 36
                                  },
                                  "text": "__proxy__"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 137,
                            "column": 36
                          },
                          "end": {
                            "row": 137,
                            "column": 37
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "with_statement",
              "start": {
                "row": 139,
                "column": 4
              },
              "end": {
                "row": 140,
                "column": 78
              },
              "text": "with QuietProgress(verbose):\n        params = _tc.extensions._toolkits.graph.label_propagation.create(opts)",
              "children": [
                {
                  "type": "with",
                  "start": {
                    "row": 139,
                    "column": 4
                  },
                  "end": {
                    "row": 139,
                    "column": 8
                  },
                  "text": "with"
                },
                {
                  "type": "with_clause",
                  "start": {
                    "row": 139,
                    "column": 9
                  },
                  "end": {
                    "row": 139,
                    "column": 31
                  },
                  "text": "QuietProgress(verbose)",
                  "children": [
                    {
                      "type": "with_item",
                      "start": {
                        "row": 139,
                        "column": 9
                      },
                      "end": {
                        "row": 139,
                        "column": 31
                      },
                      "text": "QuietProgress(verbose)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 139,
                            "column": 9
                          },
                          "end": {
                            "row": 139,
                            "column": 31
                          },
                          "text": "QuietProgress(verbose)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 139,
                                "column": 9
                              },
                              "end": {
                                "row": 139,
                                "column": 22
                              },
                              "text": "QuietProgress"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 139,
                                "column": 22
                              },
                              "end": {
                                "row": 139,
                                "column": 31
                              },
                              "text": "(verbose)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 139,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 139,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 139,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 139,
                                    "column": 30
                                  },
                                  "text": "verbose"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 139,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 139,
                                    "column": 31
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 139,
                    "column": 31
                  },
                  "end": {
                    "row": 139,
                    "column": 32
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 140,
                    "column": 8
                  },
                  "end": {
                    "row": 140,
                    "column": 78
                  },
                  "text": "params = _tc.extensions._toolkits.graph.label_propagation.create(opts)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 140,
                        "column": 8
                      },
                      "end": {
                        "row": 140,
                        "column": 78
                      },
                      "text": "params = _tc.extensions._toolkits.graph.label_propagation.create(opts)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 140,
                            "column": 8
                          },
                          "end": {
                            "row": 140,
                            "column": 78
                          },
                          "text": "params = _tc.extensions._toolkits.graph.label_propagation.create(opts)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 140,
                                "column": 8
                              },
                              "end": {
                                "row": 140,
                                "column": 14
                              },
                              "text": "params"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 140,
                                "column": 15
                              },
                              "end": {
                                "row": 140,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 140,
                                "column": 17
                              },
                              "end": {
                                "row": 140,
                                "column": 78
                              },
                              "text": "_tc.extensions._toolkits.graph.label_propagation.create(opts)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 140,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 140,
                                    "column": 72
                                  },
                                  "text": "_tc.extensions._toolkits.graph.label_propagation.create",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 140,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 140,
                                        "column": 65
                                      },
                                      "text": "_tc.extensions._toolkits.graph.label_propagation",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 140,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 140,
                                            "column": 47
                                          },
                                          "text": "_tc.extensions._toolkits.graph",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 140,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 140,
                                                "column": 41
                                              },
                                              "text": "_tc.extensions._toolkits",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 140,
                                                    "column": 17
                                                  },
                                                  "end": {
                                                    "row": 140,
                                                    "column": 31
                                                  },
                                                  "text": "_tc.extensions",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 140,
                                                        "column": 17
                                                      },
                                                      "end": {
                                                        "row": 140,
                                                        "column": 20
                                                      },
                                                      "text": "_tc"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 140,
                                                        "column": 20
                                                      },
                                                      "end": {
                                                        "row": 140,
                                                        "column": 21
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 140,
                                                        "column": 21
                                                      },
                                                      "end": {
                                                        "row": 140,
                                                        "column": 31
                                                      },
                                                      "text": "extensions"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 140,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 140,
                                                    "column": 32
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 140,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 140,
                                                    "column": 41
                                                  },
                                                  "text": "_toolkits"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 140,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 140,
                                                "column": 42
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 140,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 140,
                                                "column": 47
                                              },
                                              "text": "graph"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 140,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 140,
                                            "column": 48
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 140,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 140,
                                            "column": 65
                                          },
                                          "text": "label_propagation"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 140,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 140,
                                        "column": 66
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 140,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 140,
                                        "column": 72
                                      },
                                      "text": "create"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 140,
                                    "column": 72
                                  },
                                  "end": {
                                    "row": 140,
                                    "column": 78
                                  },
                                  "text": "(opts)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 140,
                                        "column": 72
                                      },
                                      "end": {
                                        "row": 140,
                                        "column": 73
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 140,
                                        "column": 73
                                      },
                                      "end": {
                                        "row": 140,
                                        "column": 77
                                      },
                                      "text": "opts"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 140,
                                        "column": 77
                                      },
                                      "end": {
                                        "row": 140,
                                        "column": 78
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 142,
                "column": 4
              },
              "end": {
                "row": 142,
                "column": 27
              },
              "text": "model = params['model']",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 142,
                    "column": 4
                  },
                  "end": {
                    "row": 142,
                    "column": 27
                  },
                  "text": "model = params['model']",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 142,
                        "column": 4
                      },
                      "end": {
                        "row": 142,
                        "column": 9
                      },
                      "text": "model"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 142,
                        "column": 10
                      },
                      "end": {
                        "row": 142,
                        "column": 11
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 142,
                        "column": 12
                      },
                      "end": {
                        "row": 142,
                        "column": 27
                      },
                      "text": "params['model']",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 142,
                            "column": 12
                          },
                          "end": {
                            "row": 142,
                            "column": 18
                          },
                          "text": "params"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 142,
                            "column": 18
                          },
                          "end": {
                            "row": 142,
                            "column": 19
                          },
                          "text": "["
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 142,
                            "column": 19
                          },
                          "end": {
                            "row": 142,
                            "column": 26
                          },
                          "text": "'model'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 142,
                                "column": 19
                              },
                              "end": {
                                "row": 142,
                                "column": 20
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 142,
                                "column": 20
                              },
                              "end": {
                                "row": 142,
                                "column": 25
                              },
                              "text": "model"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 142,
                                "column": 25
                              },
                              "end": {
                                "row": 142,
                                "column": 26
                              },
                              "text": "'"
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 142,
                            "column": 26
                          },
                          "end": {
                            "row": 142,
                            "column": 27
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 143,
                "column": 4
              },
              "end": {
                "row": 143,
                "column": 39
              },
              "text": "return LabelPropagationModel(model)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 143,
                    "column": 4
                  },
                  "end": {
                    "row": 143,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 143,
                    "column": 11
                  },
                  "end": {
                    "row": 143,
                    "column": 39
                  },
                  "text": "LabelPropagationModel(model)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 143,
                        "column": 11
                      },
                      "end": {
                        "row": 143,
                        "column": 32
                      },
                      "text": "LabelPropagationModel"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 143,
                        "column": 32
                      },
                      "end": {
                        "row": 143,
                        "column": 39
                      },
                      "text": "(model)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 143,
                            "column": 32
                          },
                          "end": {
                            "row": 143,
                            "column": 33
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 143,
                            "column": 33
                          },
                          "end": {
                            "row": 143,
                            "column": 38
                          },
                          "text": "model"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 143,
                            "column": 38
                          },
                          "end": {
                            "row": 143,
                            "column": 39
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}