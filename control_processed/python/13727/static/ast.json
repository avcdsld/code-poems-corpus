{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 28,
    "column": 20
  },
  "text": "def score(self, testing_features, testing_target):\n        \"\"\"Return the score on the given testing data using the user-specified scoring function.\n\n        Parameters\n        ----------\n        testing_features: array-like {n_samples, n_features}\n            Feature matrix of the testing set\n        testing_target: array-like {n_samples}\n            List of class labels for prediction in the testing set\n\n        Returns\n        -------\n        accuracy_score: float\n            The estimated test set accuracy\n\n        \"\"\"\n        if self.fitted_pipeline_ is None:\n            raise RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')\n\n        testing_features, testing_target = self._check_dataset(testing_features, testing_target, sample_weight=None)\n\n        # If the scoring function is a string, we must adjust to use the sklearn\n        # scoring interface\n        score = SCORERS[self.scoring_function](\n            self.fitted_pipeline_,\n            testing_features.astype(np.float64),\n            testing_target.astype(np.float64)\n        )\n        return score",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 28,
        "column": 20
      },
      "text": "def score(self, testing_features, testing_target):\n        \"\"\"Return the score on the given testing data using the user-specified scoring function.\n\n        Parameters\n        ----------\n        testing_features: array-like {n_samples, n_features}\n            Feature matrix of the testing set\n        testing_target: array-like {n_samples}\n            List of class labels for prediction in the testing set\n\n        Returns\n        -------\n        accuracy_score: float\n            The estimated test set accuracy\n\n        \"\"\"\n        if self.fitted_pipeline_ is None:\n            raise RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')\n\n        testing_features, testing_target = self._check_dataset(testing_features, testing_target, sample_weight=None)\n\n        # If the scoring function is a string, we must adjust to use the sklearn\n        # scoring interface\n        score = SCORERS[self.scoring_function](\n            self.fitted_pipeline_,\n            testing_features.astype(np.float64),\n            testing_target.astype(np.float64)\n        )\n        return score",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 9
          },
          "text": "score"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 49
          },
          "text": "(self, testing_features, testing_target)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 10
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "testing_features"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": "testing_target"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 48
              },
              "end": {
                "row": 0,
                "column": 49
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 49
          },
          "end": {
            "row": 0,
            "column": 50
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 28,
            "column": 20
          },
          "text": "\"\"\"Return the score on the given testing data using the user-specified scoring function.\n\n        Parameters\n        ----------\n        testing_features: array-like {n_samples, n_features}\n            Feature matrix of the testing set\n        testing_target: array-like {n_samples}\n            List of class labels for prediction in the testing set\n\n        Returns\n        -------\n        accuracy_score: float\n            The estimated test set accuracy\n\n        \"\"\"\n        if self.fitted_pipeline_ is None:\n            raise RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')\n\n        testing_features, testing_target = self._check_dataset(testing_features, testing_target, sample_weight=None)\n\n        # If the scoring function is a string, we must adjust to use the sklearn\n        # scoring interface\n        score = SCORERS[self.scoring_function](\n            self.fitted_pipeline_,\n            testing_features.astype(np.float64),\n            testing_target.astype(np.float64)\n        )\n        return score",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 11
              },
              "text": "\"\"\"Return the score on the given testing data using the user-specified scoring function.\n\n        Parameters\n        ----------\n        testing_features: array-like {n_samples, n_features}\n            Feature matrix of the testing set\n        testing_target: array-like {n_samples}\n            List of class labels for prediction in the testing set\n\n        Returns\n        -------\n        accuracy_score: float\n            The estimated test set accuracy\n\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 11
                  },
                  "text": "\"\"\"Return the score on the given testing data using the user-specified scoring function.\n\n        Parameters\n        ----------\n        testing_features: array-like {n_samples, n_features}\n            Feature matrix of the testing set\n        testing_target: array-like {n_samples}\n            List of class labels for prediction in the testing set\n\n        Returns\n        -------\n        accuracy_score: float\n            The estimated test set accuracy\n\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 15,
                        "column": 8
                      },
                      "text": "Return the score on the given testing data using the user-specified scoring function.\n\n        Parameters\n        ----------\n        testing_features: array-like {n_samples, n_features}\n            Feature matrix of the testing set\n        testing_target: array-like {n_samples}\n            List of class labels for prediction in the testing set\n\n        Returns\n        -------\n        accuracy_score: float\n            The estimated test set accuracy\n\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 97
              },
              "text": "if self.fitted_pipeline_ is None:\n            raise RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 16,
                    "column": 11
                  },
                  "end": {
                    "row": 16,
                    "column": 40
                  },
                  "text": "self.fitted_pipeline_ is None",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 16,
                        "column": 11
                      },
                      "end": {
                        "row": 16,
                        "column": 32
                      },
                      "text": "self.fitted_pipeline_",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 11
                          },
                          "end": {
                            "row": 16,
                            "column": 15
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 16,
                            "column": 15
                          },
                          "end": {
                            "row": 16,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 16,
                            "column": 16
                          },
                          "end": {
                            "row": 16,
                            "column": 32
                          },
                          "text": "fitted_pipeline_"
                        }
                      ]
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 16,
                        "column": 33
                      },
                      "end": {
                        "row": 16,
                        "column": 35
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 16,
                        "column": 36
                      },
                      "end": {
                        "row": 16,
                        "column": 40
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 16,
                    "column": 40
                  },
                  "end": {
                    "row": 16,
                    "column": 41
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 17,
                    "column": 12
                  },
                  "end": {
                    "row": 17,
                    "column": 97
                  },
                  "text": "raise RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 17,
                        "column": 12
                      },
                      "end": {
                        "row": 17,
                        "column": 97
                      },
                      "text": "raise RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 17,
                            "column": 12
                          },
                          "end": {
                            "row": 17,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 17,
                            "column": 18
                          },
                          "end": {
                            "row": 17,
                            "column": 97
                          },
                          "text": "RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 18
                              },
                              "end": {
                                "row": 17,
                                "column": 30
                              },
                              "text": "RuntimeError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 17,
                                "column": 30
                              },
                              "end": {
                                "row": 17,
                                "column": 97
                              },
                              "text": "('A pipeline has not yet been optimized. Please call fit() first.')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 17,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 17,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 96
                                  },
                                  "text": "'A pipeline has not yet been optimized. Please call fit() first.'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 17,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 32
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 17,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 95
                                      },
                                      "text": "A pipeline has not yet been optimized. Please call fit() first."
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 17,
                                        "column": 95
                                      },
                                      "end": {
                                        "row": 17,
                                        "column": 96
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 17,
                                    "column": 96
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 97
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 116
              },
              "text": "testing_features, testing_target = self._check_dataset(testing_features, testing_target, sample_weight=None)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 116
                  },
                  "text": "testing_features, testing_target = self._check_dataset(testing_features, testing_target, sample_weight=None)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 19,
                        "column": 8
                      },
                      "end": {
                        "row": 19,
                        "column": 40
                      },
                      "text": "testing_features, testing_target",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 8
                          },
                          "end": {
                            "row": 19,
                            "column": 24
                          },
                          "text": "testing_features"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 19,
                            "column": 24
                          },
                          "end": {
                            "row": 19,
                            "column": 25
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 26
                          },
                          "end": {
                            "row": 19,
                            "column": 40
                          },
                          "text": "testing_target"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 19,
                        "column": 41
                      },
                      "end": {
                        "row": 19,
                        "column": 42
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 19,
                        "column": 43
                      },
                      "end": {
                        "row": 19,
                        "column": 116
                      },
                      "text": "self._check_dataset(testing_features, testing_target, sample_weight=None)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 19,
                            "column": 43
                          },
                          "end": {
                            "row": 19,
                            "column": 62
                          },
                          "text": "self._check_dataset",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 43
                              },
                              "end": {
                                "row": 19,
                                "column": 47
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 19,
                                "column": 47
                              },
                              "end": {
                                "row": 19,
                                "column": 48
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 48
                              },
                              "end": {
                                "row": 19,
                                "column": 62
                              },
                              "text": "_check_dataset"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 19,
                            "column": 62
                          },
                          "end": {
                            "row": 19,
                            "column": 116
                          },
                          "text": "(testing_features, testing_target, sample_weight=None)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 19,
                                "column": 62
                              },
                              "end": {
                                "row": 19,
                                "column": 63
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 63
                              },
                              "end": {
                                "row": 19,
                                "column": 79
                              },
                              "text": "testing_features"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 19,
                                "column": 79
                              },
                              "end": {
                                "row": 19,
                                "column": 80
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 81
                              },
                              "end": {
                                "row": 19,
                                "column": 95
                              },
                              "text": "testing_target"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 19,
                                "column": 95
                              },
                              "end": {
                                "row": 19,
                                "column": 96
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 19,
                                "column": 97
                              },
                              "end": {
                                "row": 19,
                                "column": 115
                              },
                              "text": "sample_weight=None",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 19,
                                    "column": 97
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 110
                                  },
                                  "text": "sample_weight"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 19,
                                    "column": 110
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 111
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "none",
                                  "start": {
                                    "row": 19,
                                    "column": 111
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 115
                                  },
                                  "text": "None"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 19,
                                "column": 115
                              },
                              "end": {
                                "row": 19,
                                "column": 116
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 21,
                "column": 80
              },
              "text": "# If the scoring function is a string, we must adjust to use the sklearn"
            },
            {
              "type": "comment",
              "start": {
                "row": 22,
                "column": 8
              },
              "end": {
                "row": 22,
                "column": 27
              },
              "text": "# scoring interface"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 23,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 9
              },
              "text": "score = SCORERS[self.scoring_function](\n            self.fitted_pipeline_,\n            testing_features.astype(np.float64),\n            testing_target.astype(np.float64)\n        )",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 9
                  },
                  "text": "score = SCORERS[self.scoring_function](\n            self.fitted_pipeline_,\n            testing_features.astype(np.float64),\n            testing_target.astype(np.float64)\n        )",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 13
                      },
                      "text": "score"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 23,
                        "column": 14
                      },
                      "end": {
                        "row": 23,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 23,
                        "column": 16
                      },
                      "end": {
                        "row": 27,
                        "column": 9
                      },
                      "text": "SCORERS[self.scoring_function](\n            self.fitted_pipeline_,\n            testing_features.astype(np.float64),\n            testing_target.astype(np.float64)\n        )",
                      "children": [
                        {
                          "type": "subscript",
                          "start": {
                            "row": 23,
                            "column": 16
                          },
                          "end": {
                            "row": 23,
                            "column": 46
                          },
                          "text": "SCORERS[self.scoring_function]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 16
                              },
                              "end": {
                                "row": 23,
                                "column": 23
                              },
                              "text": "SCORERS"
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 23,
                                "column": 23
                              },
                              "end": {
                                "row": 23,
                                "column": 24
                              },
                              "text": "["
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 23,
                                "column": 24
                              },
                              "end": {
                                "row": 23,
                                "column": 45
                              },
                              "text": "self.scoring_function",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 28
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 23,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 29
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 45
                                  },
                                  "text": "scoring_function"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 23,
                                "column": 45
                              },
                              "end": {
                                "row": 23,
                                "column": 46
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 23,
                            "column": 46
                          },
                          "end": {
                            "row": 27,
                            "column": 9
                          },
                          "text": "(\n            self.fitted_pipeline_,\n            testing_features.astype(np.float64),\n            testing_target.astype(np.float64)\n        )",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 23,
                                "column": 46
                              },
                              "end": {
                                "row": 23,
                                "column": 47
                              },
                              "text": "("
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 24,
                                "column": 12
                              },
                              "end": {
                                "row": 24,
                                "column": 33
                              },
                              "text": "self.fitted_pipeline_",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 33
                                  },
                                  "text": "fitted_pipeline_"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 24,
                                "column": 33
                              },
                              "end": {
                                "row": 24,
                                "column": 34
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 25,
                                "column": 12
                              },
                              "end": {
                                "row": 25,
                                "column": 47
                              },
                              "text": "testing_features.astype(np.float64)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 25,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 35
                                  },
                                  "text": "testing_features.astype",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 28
                                      },
                                      "text": "testing_features"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 25,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 29
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 35
                                      },
                                      "text": "astype"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 25,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 47
                                  },
                                  "text": "(np.float64)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 25,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 36
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 25,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 46
                                      },
                                      "text": "np.float64",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 38
                                          },
                                          "text": "np"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 25,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 39
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 25,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 46
                                          },
                                          "text": "float64"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 25,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 25,
                                "column": 47
                              },
                              "end": {
                                "row": 25,
                                "column": 48
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 26,
                                "column": 12
                              },
                              "end": {
                                "row": 26,
                                "column": 45
                              },
                              "text": "testing_target.astype(np.float64)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 26,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 33
                                  },
                                  "text": "testing_target.astype",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 26
                                      },
                                      "text": "testing_target"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 26,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 27
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 33
                                      },
                                      "text": "astype"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 26,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 45
                                  },
                                  "text": "(np.float64)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 26,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 34
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 26,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 44
                                      },
                                      "text": "np.float64",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 36
                                          },
                                          "text": "np"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 26,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 37
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 44
                                          },
                                          "text": "float64"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 26,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 45
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 27,
                                "column": 8
                              },
                              "end": {
                                "row": 27,
                                "column": 9
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 28,
                "column": 8
              },
              "end": {
                "row": 28,
                "column": 20
              },
              "text": "return score",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 28,
                    "column": 8
                  },
                  "end": {
                    "row": 28,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 28,
                    "column": 15
                  },
                  "end": {
                    "row": 28,
                    "column": 20
                  },
                  "text": "score"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}