{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 86,
    "column": 63
  },
  "text": "def sort_and_run_forward(self,\n                             module: Callable[[PackedSequence, Optional[RnnState]],\n                                              Tuple[Union[PackedSequence, torch.Tensor], RnnState]],\n                             inputs: torch.Tensor,\n                             mask: torch.Tensor,\n                             hidden_state: Optional[RnnState] = None):\n        \"\"\"\n        This function exists because Pytorch RNNs require that their inputs be sorted\n        before being passed as input. As all of our Seq2xxxEncoders use this functionality,\n        it is provided in a base class. This method can be called on any module which\n        takes as input a ``PackedSequence`` and some ``hidden_state``, which can either be a\n        tuple of tensors or a tensor.\n\n        As all of our Seq2xxxEncoders have different return types, we return `sorted`\n        outputs from the module, which is called directly. Additionally, we return the\n        indices into the batch dimension required to restore the tensor to it's correct,\n        unsorted order and the number of valid batch elements (i.e the number of elements\n        in the batch which are not completely masked). This un-sorting and re-padding\n        of the module outputs is left to the subclasses because their outputs have different\n        types and handling them smoothly here is difficult.\n\n        Parameters\n        ----------\n        module : ``Callable[[PackedSequence, Optional[RnnState]],\n                            Tuple[Union[PackedSequence, torch.Tensor], RnnState]]``, required.\n            A function to run on the inputs. In most cases, this is a ``torch.nn.Module``.\n        inputs : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length, embedding_size)`` representing\n            the inputs to the Encoder.\n        mask : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length)``, representing masked and\n            non-masked elements of the sequence for each element in the batch.\n        hidden_state : ``Optional[RnnState]``, (default = None).\n            A single tensor of shape (num_layers, batch_size, hidden_size) representing the\n            state of an RNN with or a tuple of\n            tensors of shapes (num_layers, batch_size, hidden_size) and\n            (num_layers, batch_size, memory_size), representing the hidden state and memory\n            state of an LSTM-like RNN.\n\n        Returns\n        -------\n        module_output : ``Union[torch.Tensor, PackedSequence]``.\n            A Tensor or PackedSequence representing the output of the Pytorch Module.\n            The batch size dimension will be equal to ``num_valid``, as sequences of zero\n            length are clipped off before the module is called, as Pytorch cannot handle\n            zero length sequences.\n        final_states : ``Optional[RnnState]``\n            A Tensor representing the hidden state of the Pytorch Module. This can either\n            be a single tensor of shape (num_layers, num_valid, hidden_size), for instance in\n            the case of a GRU, or a tuple of tensors, such as those required for an LSTM.\n        restoration_indices : ``torch.LongTensor``\n            A tensor of shape ``(batch_size,)``, describing the re-indexing required to transform\n            the outputs back to their original batch order.\n        \"\"\"\n        # In some circumstances you may have sequences of zero length. ``pack_padded_sequence``\n        # requires all sequence lengths to be > 0, so remove sequences of zero length before\n        # calling self._module, then fill with zeros.\n\n        # First count how many sequences are empty.\n        batch_size = mask.size(0)\n        num_valid = torch.sum(mask[:, 0]).int().item()\n\n        sequence_lengths = get_lengths_from_binary_sequence_mask(mask)\n        sorted_inputs, sorted_sequence_lengths, restoration_indices, sorting_indices =\\\n            sort_batch_by_length(inputs, sequence_lengths)\n\n        # Now create a PackedSequence with only the non-empty, sorted sequences.\n        packed_sequence_input = pack_padded_sequence(sorted_inputs[:num_valid, :, :],\n                                                     sorted_sequence_lengths[:num_valid].data.tolist(),\n                                                     batch_first=True)\n        # Prepare the initial states.\n        if not self.stateful:\n            if hidden_state is None:\n                initial_states = hidden_state\n            elif isinstance(hidden_state, tuple):\n                initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]\n            else:\n                initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n\n        else:\n            initial_states = self._get_initial_states(batch_size, num_valid, sorting_indices)\n\n        # Actually call the module on the sorted PackedSequence.\n        module_output, final_states = module(packed_sequence_input, initial_states)\n\n        return module_output, final_states, restoration_indices",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 86,
        "column": 63
      },
      "text": "def sort_and_run_forward(self,\n                             module: Callable[[PackedSequence, Optional[RnnState]],\n                                              Tuple[Union[PackedSequence, torch.Tensor], RnnState]],\n                             inputs: torch.Tensor,\n                             mask: torch.Tensor,\n                             hidden_state: Optional[RnnState] = None):\n        \"\"\"\n        This function exists because Pytorch RNNs require that their inputs be sorted\n        before being passed as input. As all of our Seq2xxxEncoders use this functionality,\n        it is provided in a base class. This method can be called on any module which\n        takes as input a ``PackedSequence`` and some ``hidden_state``, which can either be a\n        tuple of tensors or a tensor.\n\n        As all of our Seq2xxxEncoders have different return types, we return `sorted`\n        outputs from the module, which is called directly. Additionally, we return the\n        indices into the batch dimension required to restore the tensor to it's correct,\n        unsorted order and the number of valid batch elements (i.e the number of elements\n        in the batch which are not completely masked). This un-sorting and re-padding\n        of the module outputs is left to the subclasses because their outputs have different\n        types and handling them smoothly here is difficult.\n\n        Parameters\n        ----------\n        module : ``Callable[[PackedSequence, Optional[RnnState]],\n                            Tuple[Union[PackedSequence, torch.Tensor], RnnState]]``, required.\n            A function to run on the inputs. In most cases, this is a ``torch.nn.Module``.\n        inputs : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length, embedding_size)`` representing\n            the inputs to the Encoder.\n        mask : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length)``, representing masked and\n            non-masked elements of the sequence for each element in the batch.\n        hidden_state : ``Optional[RnnState]``, (default = None).\n            A single tensor of shape (num_layers, batch_size, hidden_size) representing the\n            state of an RNN with or a tuple of\n            tensors of shapes (num_layers, batch_size, hidden_size) and\n            (num_layers, batch_size, memory_size), representing the hidden state and memory\n            state of an LSTM-like RNN.\n\n        Returns\n        -------\n        module_output : ``Union[torch.Tensor, PackedSequence]``.\n            A Tensor or PackedSequence representing the output of the Pytorch Module.\n            The batch size dimension will be equal to ``num_valid``, as sequences of zero\n            length are clipped off before the module is called, as Pytorch cannot handle\n            zero length sequences.\n        final_states : ``Optional[RnnState]``\n            A Tensor representing the hidden state of the Pytorch Module. This can either\n            be a single tensor of shape (num_layers, num_valid, hidden_size), for instance in\n            the case of a GRU, or a tuple of tensors, such as those required for an LSTM.\n        restoration_indices : ``torch.LongTensor``\n            A tensor of shape ``(batch_size,)``, describing the re-indexing required to transform\n            the outputs back to their original batch order.\n        \"\"\"\n        # In some circumstances you may have sequences of zero length. ``pack_padded_sequence``\n        # requires all sequence lengths to be > 0, so remove sequences of zero length before\n        # calling self._module, then fill with zeros.\n\n        # First count how many sequences are empty.\n        batch_size = mask.size(0)\n        num_valid = torch.sum(mask[:, 0]).int().item()\n\n        sequence_lengths = get_lengths_from_binary_sequence_mask(mask)\n        sorted_inputs, sorted_sequence_lengths, restoration_indices, sorting_indices =\\\n            sort_batch_by_length(inputs, sequence_lengths)\n\n        # Now create a PackedSequence with only the non-empty, sorted sequences.\n        packed_sequence_input = pack_padded_sequence(sorted_inputs[:num_valid, :, :],\n                                                     sorted_sequence_lengths[:num_valid].data.tolist(),\n                                                     batch_first=True)\n        # Prepare the initial states.\n        if not self.stateful:\n            if hidden_state is None:\n                initial_states = hidden_state\n            elif isinstance(hidden_state, tuple):\n                initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]\n            else:\n                initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n\n        else:\n            initial_states = self._get_initial_states(batch_size, num_valid, sorting_indices)\n\n        # Actually call the module on the sorted PackedSequence.\n        module_output, final_states = module(packed_sequence_input, initial_states)\n\n        return module_output, final_states, restoration_indices",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 24
          },
          "text": "sort_and_run_forward"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 24
          },
          "end": {
            "row": 5,
            "column": 69
          },
          "text": "(self,\n                             module: Callable[[PackedSequence, Optional[RnnState]],\n                                              Tuple[Union[PackedSequence, torch.Tensor], RnnState]],\n                             inputs: torch.Tensor,\n                             mask: torch.Tensor,\n                             hidden_state: Optional[RnnState] = None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": ","
            },
            {
              "type": "typed_parameter",
              "start": {
                "row": 1,
                "column": 29
              },
              "end": {
                "row": 2,
                "column": 99
              },
              "text": "module: Callable[[PackedSequence, Optional[RnnState]],\n                                              Tuple[Union[PackedSequence, torch.Tensor], RnnState]]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 29
                  },
                  "end": {
                    "row": 1,
                    "column": 35
                  },
                  "text": "module"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 1,
                    "column": 35
                  },
                  "end": {
                    "row": 1,
                    "column": 36
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 1,
                    "column": 37
                  },
                  "end": {
                    "row": 2,
                    "column": 99
                  },
                  "text": "Callable[[PackedSequence, Optional[RnnState]],\n                                              Tuple[Union[PackedSequence, torch.Tensor], RnnState]]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 1,
                        "column": 37
                      },
                      "end": {
                        "row": 2,
                        "column": 99
                      },
                      "text": "Callable[[PackedSequence, Optional[RnnState]],\n                                              Tuple[Union[PackedSequence, torch.Tensor], RnnState]]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 37
                          },
                          "end": {
                            "row": 1,
                            "column": 45
                          },
                          "text": "Callable"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 1,
                            "column": 45
                          },
                          "end": {
                            "row": 2,
                            "column": 99
                          },
                          "text": "[[PackedSequence, Optional[RnnState]],\n                                              Tuple[Union[PackedSequence, torch.Tensor], RnnState]]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 1,
                                "column": 45
                              },
                              "end": {
                                "row": 1,
                                "column": 46
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 1,
                                "column": 46
                              },
                              "end": {
                                "row": 1,
                                "column": 82
                              },
                              "text": "[PackedSequence, Optional[RnnState]]",
                              "children": [
                                {
                                  "type": "list",
                                  "start": {
                                    "row": 1,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 82
                                  },
                                  "text": "[PackedSequence, Optional[RnnState]]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 1,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 47
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 1,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 61
                                      },
                                      "text": "PackedSequence"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 1,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 62
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 1,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 81
                                      },
                                      "text": "Optional[RnnState]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 1,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 1,
                                            "column": 71
                                          },
                                          "text": "Optional"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 1,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 1,
                                            "column": 72
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 1,
                                            "column": 72
                                          },
                                          "end": {
                                            "row": 1,
                                            "column": 80
                                          },
                                          "text": "RnnState"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 1,
                                            "column": 80
                                          },
                                          "end": {
                                            "row": 1,
                                            "column": 81
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 1,
                                        "column": 81
                                      },
                                      "end": {
                                        "row": 1,
                                        "column": 82
                                      },
                                      "text": "]"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 1,
                                "column": 82
                              },
                              "end": {
                                "row": 1,
                                "column": 83
                              },
                              "text": ","
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 2,
                                "column": 46
                              },
                              "end": {
                                "row": 2,
                                "column": 98
                              },
                              "text": "Tuple[Union[PackedSequence, torch.Tensor], RnnState]",
                              "children": [
                                {
                                  "type": "generic_type",
                                  "start": {
                                    "row": 2,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 98
                                  },
                                  "text": "Tuple[Union[PackedSequence, torch.Tensor], RnnState]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 2,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 51
                                      },
                                      "text": "Tuple"
                                    },
                                    {
                                      "type": "type_parameter",
                                      "start": {
                                        "row": 2,
                                        "column": 51
                                      },
                                      "end": {
                                        "row": 2,
                                        "column": 98
                                      },
                                      "text": "[Union[PackedSequence, torch.Tensor], RnnState]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 2,
                                            "column": 51
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 52
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "type",
                                          "start": {
                                            "row": 2,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 87
                                          },
                                          "text": "Union[PackedSequence, torch.Tensor]",
                                          "children": [
                                            {
                                              "type": "generic_type",
                                              "start": {
                                                "row": 2,
                                                "column": 52
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 87
                                              },
                                              "text": "Union[PackedSequence, torch.Tensor]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 2,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 2,
                                                    "column": 57
                                                  },
                                                  "text": "Union"
                                                },
                                                {
                                                  "type": "type_parameter",
                                                  "start": {
                                                    "row": 2,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 2,
                                                    "column": 87
                                                  },
                                                  "text": "[PackedSequence, torch.Tensor]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 2,
                                                        "column": 57
                                                      },
                                                      "end": {
                                                        "row": 2,
                                                        "column": 58
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "type",
                                                      "start": {
                                                        "row": 2,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 2,
                                                        "column": 72
                                                      },
                                                      "text": "PackedSequence",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 2,
                                                            "column": 58
                                                          },
                                                          "end": {
                                                            "row": 2,
                                                            "column": 72
                                                          },
                                                          "text": "PackedSequence"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 2,
                                                        "column": 72
                                                      },
                                                      "end": {
                                                        "row": 2,
                                                        "column": 73
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "type",
                                                      "start": {
                                                        "row": 2,
                                                        "column": 74
                                                      },
                                                      "end": {
                                                        "row": 2,
                                                        "column": 86
                                                      },
                                                      "text": "torch.Tensor",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 2,
                                                            "column": 74
                                                          },
                                                          "end": {
                                                            "row": 2,
                                                            "column": 86
                                                          },
                                                          "text": "torch.Tensor",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 2,
                                                                "column": 74
                                                              },
                                                              "end": {
                                                                "row": 2,
                                                                "column": 79
                                                              },
                                                              "text": "torch"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 2,
                                                                "column": 79
                                                              },
                                                              "end": {
                                                                "row": 2,
                                                                "column": 80
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 2,
                                                                "column": 80
                                                              },
                                                              "end": {
                                                                "row": 2,
                                                                "column": 86
                                                              },
                                                              "text": "Tensor"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 2,
                                                        "column": 86
                                                      },
                                                      "end": {
                                                        "row": 2,
                                                        "column": 87
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 2,
                                            "column": 87
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 88
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "type",
                                          "start": {
                                            "row": 2,
                                            "column": 89
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 97
                                          },
                                          "text": "RnnState",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 2,
                                                "column": 89
                                              },
                                              "end": {
                                                "row": 2,
                                                "column": 97
                                              },
                                              "text": "RnnState"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 2,
                                            "column": 97
                                          },
                                          "end": {
                                            "row": 2,
                                            "column": 98
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 2,
                                "column": 98
                              },
                              "end": {
                                "row": 2,
                                "column": 99
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 99
              },
              "end": {
                "row": 2,
                "column": 100
              },
              "text": ","
            },
            {
              "type": "typed_parameter",
              "start": {
                "row": 3,
                "column": 29
              },
              "end": {
                "row": 3,
                "column": 49
              },
              "text": "inputs: torch.Tensor",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 29
                  },
                  "end": {
                    "row": 3,
                    "column": 35
                  },
                  "text": "inputs"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 3,
                    "column": 35
                  },
                  "end": {
                    "row": 3,
                    "column": 36
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 3,
                    "column": 37
                  },
                  "end": {
                    "row": 3,
                    "column": 49
                  },
                  "text": "torch.Tensor",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 3,
                        "column": 37
                      },
                      "end": {
                        "row": 3,
                        "column": 49
                      },
                      "text": "torch.Tensor",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 37
                          },
                          "end": {
                            "row": 3,
                            "column": 42
                          },
                          "text": "torch"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 3,
                            "column": 42
                          },
                          "end": {
                            "row": 3,
                            "column": 43
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 43
                          },
                          "end": {
                            "row": 3,
                            "column": 49
                          },
                          "text": "Tensor"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 49
              },
              "end": {
                "row": 3,
                "column": 50
              },
              "text": ","
            },
            {
              "type": "typed_parameter",
              "start": {
                "row": 4,
                "column": 29
              },
              "end": {
                "row": 4,
                "column": 47
              },
              "text": "mask: torch.Tensor",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 29
                  },
                  "end": {
                    "row": 4,
                    "column": 33
                  },
                  "text": "mask"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 4,
                    "column": 33
                  },
                  "end": {
                    "row": 4,
                    "column": 34
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 4,
                    "column": 35
                  },
                  "end": {
                    "row": 4,
                    "column": 47
                  },
                  "text": "torch.Tensor",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 4,
                        "column": 35
                      },
                      "end": {
                        "row": 4,
                        "column": 47
                      },
                      "text": "torch.Tensor",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 35
                          },
                          "end": {
                            "row": 4,
                            "column": 40
                          },
                          "text": "torch"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 4,
                            "column": 40
                          },
                          "end": {
                            "row": 4,
                            "column": 41
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 41
                          },
                          "end": {
                            "row": 4,
                            "column": 47
                          },
                          "text": "Tensor"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 47
              },
              "end": {
                "row": 4,
                "column": 48
              },
              "text": ","
            },
            {
              "type": "typed_default_parameter",
              "start": {
                "row": 5,
                "column": 29
              },
              "end": {
                "row": 5,
                "column": 68
              },
              "text": "hidden_state: Optional[RnnState] = None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 29
                  },
                  "end": {
                    "row": 5,
                    "column": 41
                  },
                  "text": "hidden_state"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 5,
                    "column": 41
                  },
                  "end": {
                    "row": 5,
                    "column": 42
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 5,
                    "column": 43
                  },
                  "end": {
                    "row": 5,
                    "column": 61
                  },
                  "text": "Optional[RnnState]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 5,
                        "column": 43
                      },
                      "end": {
                        "row": 5,
                        "column": 61
                      },
                      "text": "Optional[RnnState]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 43
                          },
                          "end": {
                            "row": 5,
                            "column": 51
                          },
                          "text": "Optional"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 5,
                            "column": 51
                          },
                          "end": {
                            "row": 5,
                            "column": 61
                          },
                          "text": "[RnnState]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 5,
                                "column": 51
                              },
                              "end": {
                                "row": 5,
                                "column": 52
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 5,
                                "column": 52
                              },
                              "end": {
                                "row": 5,
                                "column": 60
                              },
                              "text": "RnnState",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 60
                                  },
                                  "text": "RnnState"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 5,
                                "column": 60
                              },
                              "end": {
                                "row": 5,
                                "column": 61
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 62
                  },
                  "end": {
                    "row": 5,
                    "column": 63
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 5,
                    "column": 64
                  },
                  "end": {
                    "row": 5,
                    "column": 68
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 5,
                "column": 68
              },
              "end": {
                "row": 5,
                "column": 69
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 5,
            "column": 69
          },
          "end": {
            "row": 5,
            "column": 70
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 6,
            "column": 8
          },
          "end": {
            "row": 86,
            "column": 63
          },
          "text": "\"\"\"\n        This function exists because Pytorch RNNs require that their inputs be sorted\n        before being passed as input. As all of our Seq2xxxEncoders use this functionality,\n        it is provided in a base class. This method can be called on any module which\n        takes as input a ``PackedSequence`` and some ``hidden_state``, which can either be a\n        tuple of tensors or a tensor.\n\n        As all of our Seq2xxxEncoders have different return types, we return `sorted`\n        outputs from the module, which is called directly. Additionally, we return the\n        indices into the batch dimension required to restore the tensor to it's correct,\n        unsorted order and the number of valid batch elements (i.e the number of elements\n        in the batch which are not completely masked). This un-sorting and re-padding\n        of the module outputs is left to the subclasses because their outputs have different\n        types and handling them smoothly here is difficult.\n\n        Parameters\n        ----------\n        module : ``Callable[[PackedSequence, Optional[RnnState]],\n                            Tuple[Union[PackedSequence, torch.Tensor], RnnState]]``, required.\n            A function to run on the inputs. In most cases, this is a ``torch.nn.Module``.\n        inputs : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length, embedding_size)`` representing\n            the inputs to the Encoder.\n        mask : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length)``, representing masked and\n            non-masked elements of the sequence for each element in the batch.\n        hidden_state : ``Optional[RnnState]``, (default = None).\n            A single tensor of shape (num_layers, batch_size, hidden_size) representing the\n            state of an RNN with or a tuple of\n            tensors of shapes (num_layers, batch_size, hidden_size) and\n            (num_layers, batch_size, memory_size), representing the hidden state and memory\n            state of an LSTM-like RNN.\n\n        Returns\n        -------\n        module_output : ``Union[torch.Tensor, PackedSequence]``.\n            A Tensor or PackedSequence representing the output of the Pytorch Module.\n            The batch size dimension will be equal to ``num_valid``, as sequences of zero\n            length are clipped off before the module is called, as Pytorch cannot handle\n            zero length sequences.\n        final_states : ``Optional[RnnState]``\n            A Tensor representing the hidden state of the Pytorch Module. This can either\n            be a single tensor of shape (num_layers, num_valid, hidden_size), for instance in\n            the case of a GRU, or a tuple of tensors, such as those required for an LSTM.\n        restoration_indices : ``torch.LongTensor``\n            A tensor of shape ``(batch_size,)``, describing the re-indexing required to transform\n            the outputs back to their original batch order.\n        \"\"\"\n        # In some circumstances you may have sequences of zero length. ``pack_padded_sequence``\n        # requires all sequence lengths to be > 0, so remove sequences of zero length before\n        # calling self._module, then fill with zeros.\n\n        # First count how many sequences are empty.\n        batch_size = mask.size(0)\n        num_valid = torch.sum(mask[:, 0]).int().item()\n\n        sequence_lengths = get_lengths_from_binary_sequence_mask(mask)\n        sorted_inputs, sorted_sequence_lengths, restoration_indices, sorting_indices =\\\n            sort_batch_by_length(inputs, sequence_lengths)\n\n        # Now create a PackedSequence with only the non-empty, sorted sequences.\n        packed_sequence_input = pack_padded_sequence(sorted_inputs[:num_valid, :, :],\n                                                     sorted_sequence_lengths[:num_valid].data.tolist(),\n                                                     batch_first=True)\n        # Prepare the initial states.\n        if not self.stateful:\n            if hidden_state is None:\n                initial_states = hidden_state\n            elif isinstance(hidden_state, tuple):\n                initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]\n            else:\n                initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n\n        else:\n            initial_states = self._get_initial_states(batch_size, num_valid, sorting_indices)\n\n        # Actually call the module on the sorted PackedSequence.\n        module_output, final_states = module(packed_sequence_input, initial_states)\n\n        return module_output, final_states, restoration_indices",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 6,
                "column": 8
              },
              "end": {
                "row": 53,
                "column": 11
              },
              "text": "\"\"\"\n        This function exists because Pytorch RNNs require that their inputs be sorted\n        before being passed as input. As all of our Seq2xxxEncoders use this functionality,\n        it is provided in a base class. This method can be called on any module which\n        takes as input a ``PackedSequence`` and some ``hidden_state``, which can either be a\n        tuple of tensors or a tensor.\n\n        As all of our Seq2xxxEncoders have different return types, we return `sorted`\n        outputs from the module, which is called directly. Additionally, we return the\n        indices into the batch dimension required to restore the tensor to it's correct,\n        unsorted order and the number of valid batch elements (i.e the number of elements\n        in the batch which are not completely masked). This un-sorting and re-padding\n        of the module outputs is left to the subclasses because their outputs have different\n        types and handling them smoothly here is difficult.\n\n        Parameters\n        ----------\n        module : ``Callable[[PackedSequence, Optional[RnnState]],\n                            Tuple[Union[PackedSequence, torch.Tensor], RnnState]]``, required.\n            A function to run on the inputs. In most cases, this is a ``torch.nn.Module``.\n        inputs : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length, embedding_size)`` representing\n            the inputs to the Encoder.\n        mask : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length)``, representing masked and\n            non-masked elements of the sequence for each element in the batch.\n        hidden_state : ``Optional[RnnState]``, (default = None).\n            A single tensor of shape (num_layers, batch_size, hidden_size) representing the\n            state of an RNN with or a tuple of\n            tensors of shapes (num_layers, batch_size, hidden_size) and\n            (num_layers, batch_size, memory_size), representing the hidden state and memory\n            state of an LSTM-like RNN.\n\n        Returns\n        -------\n        module_output : ``Union[torch.Tensor, PackedSequence]``.\n            A Tensor or PackedSequence representing the output of the Pytorch Module.\n            The batch size dimension will be equal to ``num_valid``, as sequences of zero\n            length are clipped off before the module is called, as Pytorch cannot handle\n            zero length sequences.\n        final_states : ``Optional[RnnState]``\n            A Tensor representing the hidden state of the Pytorch Module. This can either\n            be a single tensor of shape (num_layers, num_valid, hidden_size), for instance in\n            the case of a GRU, or a tuple of tensors, such as those required for an LSTM.\n        restoration_indices : ``torch.LongTensor``\n            A tensor of shape ``(batch_size,)``, describing the re-indexing required to transform\n            the outputs back to their original batch order.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 53,
                    "column": 11
                  },
                  "text": "\"\"\"\n        This function exists because Pytorch RNNs require that their inputs be sorted\n        before being passed as input. As all of our Seq2xxxEncoders use this functionality,\n        it is provided in a base class. This method can be called on any module which\n        takes as input a ``PackedSequence`` and some ``hidden_state``, which can either be a\n        tuple of tensors or a tensor.\n\n        As all of our Seq2xxxEncoders have different return types, we return `sorted`\n        outputs from the module, which is called directly. Additionally, we return the\n        indices into the batch dimension required to restore the tensor to it's correct,\n        unsorted order and the number of valid batch elements (i.e the number of elements\n        in the batch which are not completely masked). This un-sorting and re-padding\n        of the module outputs is left to the subclasses because their outputs have different\n        types and handling them smoothly here is difficult.\n\n        Parameters\n        ----------\n        module : ``Callable[[PackedSequence, Optional[RnnState]],\n                            Tuple[Union[PackedSequence, torch.Tensor], RnnState]]``, required.\n            A function to run on the inputs. In most cases, this is a ``torch.nn.Module``.\n        inputs : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length, embedding_size)`` representing\n            the inputs to the Encoder.\n        mask : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length)``, representing masked and\n            non-masked elements of the sequence for each element in the batch.\n        hidden_state : ``Optional[RnnState]``, (default = None).\n            A single tensor of shape (num_layers, batch_size, hidden_size) representing the\n            state of an RNN with or a tuple of\n            tensors of shapes (num_layers, batch_size, hidden_size) and\n            (num_layers, batch_size, memory_size), representing the hidden state and memory\n            state of an LSTM-like RNN.\n\n        Returns\n        -------\n        module_output : ``Union[torch.Tensor, PackedSequence]``.\n            A Tensor or PackedSequence representing the output of the Pytorch Module.\n            The batch size dimension will be equal to ``num_valid``, as sequences of zero\n            length are clipped off before the module is called, as Pytorch cannot handle\n            zero length sequences.\n        final_states : ``Optional[RnnState]``\n            A Tensor representing the hidden state of the Pytorch Module. This can either\n            be a single tensor of shape (num_layers, num_valid, hidden_size), for instance in\n            the case of a GRU, or a tuple of tensors, such as those required for an LSTM.\n        restoration_indices : ``torch.LongTensor``\n            A tensor of shape ``(batch_size,)``, describing the re-indexing required to transform\n            the outputs back to their original batch order.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 6,
                        "column": 11
                      },
                      "end": {
                        "row": 53,
                        "column": 8
                      },
                      "text": "\n        This function exists because Pytorch RNNs require that their inputs be sorted\n        before being passed as input. As all of our Seq2xxxEncoders use this functionality,\n        it is provided in a base class. This method can be called on any module which\n        takes as input a ``PackedSequence`` and some ``hidden_state``, which can either be a\n        tuple of tensors or a tensor.\n\n        As all of our Seq2xxxEncoders have different return types, we return `sorted`\n        outputs from the module, which is called directly. Additionally, we return the\n        indices into the batch dimension required to restore the tensor to it's correct,\n        unsorted order and the number of valid batch elements (i.e the number of elements\n        in the batch which are not completely masked). This un-sorting and re-padding\n        of the module outputs is left to the subclasses because their outputs have different\n        types and handling them smoothly here is difficult.\n\n        Parameters\n        ----------\n        module : ``Callable[[PackedSequence, Optional[RnnState]],\n                            Tuple[Union[PackedSequence, torch.Tensor], RnnState]]``, required.\n            A function to run on the inputs. In most cases, this is a ``torch.nn.Module``.\n        inputs : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length, embedding_size)`` representing\n            the inputs to the Encoder.\n        mask : ``torch.Tensor``, required.\n            A tensor of shape ``(batch_size, sequence_length)``, representing masked and\n            non-masked elements of the sequence for each element in the batch.\n        hidden_state : ``Optional[RnnState]``, (default = None).\n            A single tensor of shape (num_layers, batch_size, hidden_size) representing the\n            state of an RNN with or a tuple of\n            tensors of shapes (num_layers, batch_size, hidden_size) and\n            (num_layers, batch_size, memory_size), representing the hidden state and memory\n            state of an LSTM-like RNN.\n\n        Returns\n        -------\n        module_output : ``Union[torch.Tensor, PackedSequence]``.\n            A Tensor or PackedSequence representing the output of the Pytorch Module.\n            The batch size dimension will be equal to ``num_valid``, as sequences of zero\n            length are clipped off before the module is called, as Pytorch cannot handle\n            zero length sequences.\n        final_states : ``Optional[RnnState]``\n            A Tensor representing the hidden state of the Pytorch Module. This can either\n            be a single tensor of shape (num_layers, num_valid, hidden_size), for instance in\n            the case of a GRU, or a tuple of tensors, such as those required for an LSTM.\n        restoration_indices : ``torch.LongTensor``\n            A tensor of shape ``(batch_size,)``, describing the re-indexing required to transform\n            the outputs back to their original batch order.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 53,
                        "column": 8
                      },
                      "end": {
                        "row": 53,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 54,
                "column": 8
              },
              "end": {
                "row": 54,
                "column": 95
              },
              "text": "# In some circumstances you may have sequences of zero length. ``pack_padded_sequence``"
            },
            {
              "type": "comment",
              "start": {
                "row": 55,
                "column": 8
              },
              "end": {
                "row": 55,
                "column": 92
              },
              "text": "# requires all sequence lengths to be > 0, so remove sequences of zero length before"
            },
            {
              "type": "comment",
              "start": {
                "row": 56,
                "column": 8
              },
              "end": {
                "row": 56,
                "column": 53
              },
              "text": "# calling self._module, then fill with zeros."
            },
            {
              "type": "comment",
              "start": {
                "row": 58,
                "column": 8
              },
              "end": {
                "row": 58,
                "column": 51
              },
              "text": "# First count how many sequences are empty."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 59,
                "column": 8
              },
              "end": {
                "row": 59,
                "column": 33
              },
              "text": "batch_size = mask.size(0)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 59,
                    "column": 8
                  },
                  "end": {
                    "row": 59,
                    "column": 33
                  },
                  "text": "batch_size = mask.size(0)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 59,
                        "column": 8
                      },
                      "end": {
                        "row": 59,
                        "column": 18
                      },
                      "text": "batch_size"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 59,
                        "column": 19
                      },
                      "end": {
                        "row": 59,
                        "column": 20
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 59,
                        "column": 21
                      },
                      "end": {
                        "row": 59,
                        "column": 33
                      },
                      "text": "mask.size(0)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 59,
                            "column": 21
                          },
                          "end": {
                            "row": 59,
                            "column": 30
                          },
                          "text": "mask.size",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 59,
                                "column": 21
                              },
                              "end": {
                                "row": 59,
                                "column": 25
                              },
                              "text": "mask"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 59,
                                "column": 25
                              },
                              "end": {
                                "row": 59,
                                "column": 26
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 59,
                                "column": 26
                              },
                              "end": {
                                "row": 59,
                                "column": 30
                              },
                              "text": "size"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 59,
                            "column": 30
                          },
                          "end": {
                            "row": 59,
                            "column": 33
                          },
                          "text": "(0)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 59,
                                "column": 30
                              },
                              "end": {
                                "row": 59,
                                "column": 31
                              },
                              "text": "("
                            },
                            {
                              "type": "integer",
                              "start": {
                                "row": 59,
                                "column": 31
                              },
                              "end": {
                                "row": 59,
                                "column": 32
                              },
                              "text": "0"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 59,
                                "column": 32
                              },
                              "end": {
                                "row": 59,
                                "column": 33
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 60,
                "column": 8
              },
              "end": {
                "row": 60,
                "column": 54
              },
              "text": "num_valid = torch.sum(mask[:, 0]).int().item()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 60,
                    "column": 8
                  },
                  "end": {
                    "row": 60,
                    "column": 54
                  },
                  "text": "num_valid = torch.sum(mask[:, 0]).int().item()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 60,
                        "column": 8
                      },
                      "end": {
                        "row": 60,
                        "column": 17
                      },
                      "text": "num_valid"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 60,
                        "column": 18
                      },
                      "end": {
                        "row": 60,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 60,
                        "column": 20
                      },
                      "end": {
                        "row": 60,
                        "column": 54
                      },
                      "text": "torch.sum(mask[:, 0]).int().item()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 60,
                            "column": 20
                          },
                          "end": {
                            "row": 60,
                            "column": 52
                          },
                          "text": "torch.sum(mask[:, 0]).int().item",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 60,
                                "column": 20
                              },
                              "end": {
                                "row": 60,
                                "column": 47
                              },
                              "text": "torch.sum(mask[:, 0]).int()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 60,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 60,
                                    "column": 45
                                  },
                                  "text": "torch.sum(mask[:, 0]).int",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 60,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 41
                                      },
                                      "text": "torch.sum(mask[:, 0])",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 60,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 29
                                          },
                                          "text": "torch.sum",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 60,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 25
                                              },
                                              "text": "torch"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 60,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 26
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 60,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 29
                                              },
                                              "text": "sum"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 60,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 60,
                                            "column": 41
                                          },
                                          "text": "(mask[:, 0])",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 60,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 30
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "subscript",
                                              "start": {
                                                "row": 60,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 40
                                              },
                                              "text": "mask[:, 0]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 60,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 60,
                                                    "column": 34
                                                  },
                                                  "text": "mask"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 60,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 60,
                                                    "column": 35
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "slice",
                                                  "start": {
                                                    "row": 60,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 60,
                                                    "column": 36
                                                  },
                                                  "text": ":",
                                                  "children": [
                                                    {
                                                      "type": ":",
                                                      "start": {
                                                        "row": 60,
                                                        "column": 35
                                                      },
                                                      "end": {
                                                        "row": 60,
                                                        "column": 36
                                                      },
                                                      "text": ":"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 60,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 60,
                                                    "column": 37
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 60,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 60,
                                                    "column": 39
                                                  },
                                                  "text": "0"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 60,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 60,
                                                    "column": 40
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 60,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 60,
                                                "column": 41
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 60,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 42
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 60,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 45
                                      },
                                      "text": "int"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 60,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 60,
                                    "column": 47
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 60,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 46
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 60,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 60,
                                "column": 47
                              },
                              "end": {
                                "row": 60,
                                "column": 48
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 60,
                                "column": 48
                              },
                              "end": {
                                "row": 60,
                                "column": 52
                              },
                              "text": "item"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 60,
                            "column": 52
                          },
                          "end": {
                            "row": 60,
                            "column": 54
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 60,
                                "column": 52
                              },
                              "end": {
                                "row": 60,
                                "column": 53
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 60,
                                "column": 53
                              },
                              "end": {
                                "row": 60,
                                "column": 54
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 62,
                "column": 8
              },
              "end": {
                "row": 62,
                "column": 70
              },
              "text": "sequence_lengths = get_lengths_from_binary_sequence_mask(mask)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 62,
                    "column": 8
                  },
                  "end": {
                    "row": 62,
                    "column": 70
                  },
                  "text": "sequence_lengths = get_lengths_from_binary_sequence_mask(mask)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 62,
                        "column": 8
                      },
                      "end": {
                        "row": 62,
                        "column": 24
                      },
                      "text": "sequence_lengths"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 62,
                        "column": 25
                      },
                      "end": {
                        "row": 62,
                        "column": 26
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 62,
                        "column": 27
                      },
                      "end": {
                        "row": 62,
                        "column": 70
                      },
                      "text": "get_lengths_from_binary_sequence_mask(mask)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 62,
                            "column": 27
                          },
                          "end": {
                            "row": 62,
                            "column": 64
                          },
                          "text": "get_lengths_from_binary_sequence_mask"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 62,
                            "column": 64
                          },
                          "end": {
                            "row": 62,
                            "column": 70
                          },
                          "text": "(mask)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 62,
                                "column": 64
                              },
                              "end": {
                                "row": 62,
                                "column": 65
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 62,
                                "column": 65
                              },
                              "end": {
                                "row": 62,
                                "column": 69
                              },
                              "text": "mask"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 62,
                                "column": 69
                              },
                              "end": {
                                "row": 62,
                                "column": 70
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 63,
                "column": 8
              },
              "end": {
                "row": 64,
                "column": 58
              },
              "text": "sorted_inputs, sorted_sequence_lengths, restoration_indices, sorting_indices =\\\n            sort_batch_by_length(inputs, sequence_lengths)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 63,
                    "column": 8
                  },
                  "end": {
                    "row": 64,
                    "column": 58
                  },
                  "text": "sorted_inputs, sorted_sequence_lengths, restoration_indices, sorting_indices =\\\n            sort_batch_by_length(inputs, sequence_lengths)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 63,
                        "column": 8
                      },
                      "end": {
                        "row": 63,
                        "column": 84
                      },
                      "text": "sorted_inputs, sorted_sequence_lengths, restoration_indices, sorting_indices",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 63,
                            "column": 8
                          },
                          "end": {
                            "row": 63,
                            "column": 21
                          },
                          "text": "sorted_inputs"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 63,
                            "column": 21
                          },
                          "end": {
                            "row": 63,
                            "column": 22
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 63,
                            "column": 23
                          },
                          "end": {
                            "row": 63,
                            "column": 46
                          },
                          "text": "sorted_sequence_lengths"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 63,
                            "column": 46
                          },
                          "end": {
                            "row": 63,
                            "column": 47
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 63,
                            "column": 48
                          },
                          "end": {
                            "row": 63,
                            "column": 67
                          },
                          "text": "restoration_indices"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 63,
                            "column": 67
                          },
                          "end": {
                            "row": 63,
                            "column": 68
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 63,
                            "column": 69
                          },
                          "end": {
                            "row": 63,
                            "column": 84
                          },
                          "text": "sorting_indices"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 63,
                        "column": 85
                      },
                      "end": {
                        "row": 63,
                        "column": 86
                      },
                      "text": "="
                    },
                    {
                      "type": "line_continuation",
                      "start": {
                        "row": 63,
                        "column": 86
                      },
                      "end": {
                        "row": 64,
                        "column": 0
                      },
                      "text": "\\\n"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 64,
                        "column": 12
                      },
                      "end": {
                        "row": 64,
                        "column": 58
                      },
                      "text": "sort_batch_by_length(inputs, sequence_lengths)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 64,
                            "column": 12
                          },
                          "end": {
                            "row": 64,
                            "column": 32
                          },
                          "text": "sort_batch_by_length"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 64,
                            "column": 32
                          },
                          "end": {
                            "row": 64,
                            "column": 58
                          },
                          "text": "(inputs, sequence_lengths)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 64,
                                "column": 32
                              },
                              "end": {
                                "row": 64,
                                "column": 33
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 64,
                                "column": 33
                              },
                              "end": {
                                "row": 64,
                                "column": 39
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 64,
                                "column": 39
                              },
                              "end": {
                                "row": 64,
                                "column": 40
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 64,
                                "column": 41
                              },
                              "end": {
                                "row": 64,
                                "column": 57
                              },
                              "text": "sequence_lengths"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 64,
                                "column": 57
                              },
                              "end": {
                                "row": 64,
                                "column": 58
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 66,
                "column": 8
              },
              "end": {
                "row": 66,
                "column": 80
              },
              "text": "# Now create a PackedSequence with only the non-empty, sorted sequences."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 67,
                "column": 8
              },
              "end": {
                "row": 69,
                "column": 70
              },
              "text": "packed_sequence_input = pack_padded_sequence(sorted_inputs[:num_valid, :, :],\n                                                     sorted_sequence_lengths[:num_valid].data.tolist(),\n                                                     batch_first=True)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 67,
                    "column": 8
                  },
                  "end": {
                    "row": 69,
                    "column": 70
                  },
                  "text": "packed_sequence_input = pack_padded_sequence(sorted_inputs[:num_valid, :, :],\n                                                     sorted_sequence_lengths[:num_valid].data.tolist(),\n                                                     batch_first=True)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 67,
                        "column": 8
                      },
                      "end": {
                        "row": 67,
                        "column": 29
                      },
                      "text": "packed_sequence_input"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 67,
                        "column": 30
                      },
                      "end": {
                        "row": 67,
                        "column": 31
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 67,
                        "column": 32
                      },
                      "end": {
                        "row": 69,
                        "column": 70
                      },
                      "text": "pack_padded_sequence(sorted_inputs[:num_valid, :, :],\n                                                     sorted_sequence_lengths[:num_valid].data.tolist(),\n                                                     batch_first=True)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 67,
                            "column": 32
                          },
                          "end": {
                            "row": 67,
                            "column": 52
                          },
                          "text": "pack_padded_sequence"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 67,
                            "column": 52
                          },
                          "end": {
                            "row": 69,
                            "column": 70
                          },
                          "text": "(sorted_inputs[:num_valid, :, :],\n                                                     sorted_sequence_lengths[:num_valid].data.tolist(),\n                                                     batch_first=True)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 67,
                                "column": 52
                              },
                              "end": {
                                "row": 67,
                                "column": 53
                              },
                              "text": "("
                            },
                            {
                              "type": "subscript",
                              "start": {
                                "row": 67,
                                "column": 53
                              },
                              "end": {
                                "row": 67,
                                "column": 84
                              },
                              "text": "sorted_inputs[:num_valid, :, :]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 67,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 66
                                  },
                                  "text": "sorted_inputs"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 67,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 67
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "slice",
                                  "start": {
                                    "row": 67,
                                    "column": 67
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 77
                                  },
                                  "text": ":num_valid",
                                  "children": [
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 67,
                                        "column": 67
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 68
                                      },
                                      "text": ":"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 67,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 77
                                      },
                                      "text": "num_valid"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 67,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 78
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "slice",
                                  "start": {
                                    "row": 67,
                                    "column": 79
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 80
                                  },
                                  "text": ":",
                                  "children": [
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 67,
                                        "column": 79
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 80
                                      },
                                      "text": ":"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 67,
                                    "column": 80
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 81
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "slice",
                                  "start": {
                                    "row": 67,
                                    "column": 82
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 83
                                  },
                                  "text": ":",
                                  "children": [
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 67,
                                        "column": 82
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 83
                                      },
                                      "text": ":"
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 67,
                                    "column": 83
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 84
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 67,
                                "column": 84
                              },
                              "end": {
                                "row": 67,
                                "column": 85
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 68,
                                "column": 53
                              },
                              "end": {
                                "row": 68,
                                "column": 102
                              },
                              "text": "sorted_sequence_lengths[:num_valid].data.tolist()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 68,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 100
                                  },
                                  "text": "sorted_sequence_lengths[:num_valid].data.tolist",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 68,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 93
                                      },
                                      "text": "sorted_sequence_lengths[:num_valid].data",
                                      "children": [
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 68,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 68,
                                            "column": 88
                                          },
                                          "text": "sorted_sequence_lengths[:num_valid]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 68,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 76
                                              },
                                              "text": "sorted_sequence_lengths"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 68,
                                                "column": 76
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 77
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "slice",
                                              "start": {
                                                "row": 68,
                                                "column": 77
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 87
                                              },
                                              "text": ":num_valid",
                                              "children": [
                                                {
                                                  "type": ":",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 77
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 78
                                                  },
                                                  "text": ":"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 68,
                                                    "column": 78
                                                  },
                                                  "end": {
                                                    "row": 68,
                                                    "column": 87
                                                  },
                                                  "text": "num_valid"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 68,
                                                "column": 87
                                              },
                                              "end": {
                                                "row": 68,
                                                "column": 88
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 68,
                                            "column": 88
                                          },
                                          "end": {
                                            "row": 68,
                                            "column": 89
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 68,
                                            "column": 89
                                          },
                                          "end": {
                                            "row": 68,
                                            "column": 93
                                          },
                                          "text": "data"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 68,
                                        "column": 93
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 94
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 68,
                                        "column": 94
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 100
                                      },
                                      "text": "tolist"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 68,
                                    "column": 100
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 102
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 68,
                                        "column": 100
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 101
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 68,
                                        "column": 101
                                      },
                                      "end": {
                                        "row": 68,
                                        "column": 102
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 68,
                                "column": 102
                              },
                              "end": {
                                "row": 68,
                                "column": 103
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 69,
                                "column": 53
                              },
                              "end": {
                                "row": 69,
                                "column": 69
                              },
                              "text": "batch_first=True",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 69,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 64
                                  },
                                  "text": "batch_first"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 69,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 65
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "true",
                                  "start": {
                                    "row": 69,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 69
                                  },
                                  "text": "True"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 69,
                                "column": 69
                              },
                              "end": {
                                "row": 69,
                                "column": 70
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 70,
                "column": 8
              },
              "end": {
                "row": 70,
                "column": 37
              },
              "text": "# Prepare the initial states."
            },
            {
              "type": "if_statement",
              "start": {
                "row": 71,
                "column": 8
              },
              "end": {
                "row": 81,
                "column": 93
              },
              "text": "if not self.stateful:\n            if hidden_state is None:\n                initial_states = hidden_state\n            elif isinstance(hidden_state, tuple):\n                initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]\n            else:\n                initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n\n        else:\n            initial_states = self._get_initial_states(batch_size, num_valid, sorting_indices)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 71,
                    "column": 8
                  },
                  "end": {
                    "row": 71,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 71,
                    "column": 11
                  },
                  "end": {
                    "row": 71,
                    "column": 28
                  },
                  "text": "not self.stateful",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 71,
                        "column": 11
                      },
                      "end": {
                        "row": 71,
                        "column": 14
                      },
                      "text": "not"
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 71,
                        "column": 15
                      },
                      "end": {
                        "row": 71,
                        "column": 28
                      },
                      "text": "self.stateful",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 71,
                            "column": 15
                          },
                          "end": {
                            "row": 71,
                            "column": 19
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 71,
                            "column": 19
                          },
                          "end": {
                            "row": 71,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 71,
                            "column": 20
                          },
                          "end": {
                            "row": 71,
                            "column": 28
                          },
                          "text": "stateful"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 71,
                    "column": 28
                  },
                  "end": {
                    "row": 71,
                    "column": 29
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 72,
                    "column": 12
                  },
                  "end": {
                    "row": 78,
                    "column": 109
                  },
                  "text": "if hidden_state is None:\n                initial_states = hidden_state\n            elif isinstance(hidden_state, tuple):\n                initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]\n            else:\n                initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 72,
                        "column": 12
                      },
                      "end": {
                        "row": 78,
                        "column": 109
                      },
                      "text": "if hidden_state is None:\n                initial_states = hidden_state\n            elif isinstance(hidden_state, tuple):\n                initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]\n            else:\n                initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 72,
                            "column": 12
                          },
                          "end": {
                            "row": 72,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 72,
                            "column": 15
                          },
                          "end": {
                            "row": 72,
                            "column": 35
                          },
                          "text": "hidden_state is None",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 72,
                                "column": 15
                              },
                              "end": {
                                "row": 72,
                                "column": 27
                              },
                              "text": "hidden_state"
                            },
                            {
                              "type": "is",
                              "start": {
                                "row": 72,
                                "column": 28
                              },
                              "end": {
                                "row": 72,
                                "column": 30
                              },
                              "text": "is"
                            },
                            {
                              "type": "none",
                              "start": {
                                "row": 72,
                                "column": 31
                              },
                              "end": {
                                "row": 72,
                                "column": 35
                              },
                              "text": "None"
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 72,
                            "column": 35
                          },
                          "end": {
                            "row": 72,
                            "column": 36
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 73,
                            "column": 16
                          },
                          "end": {
                            "row": 73,
                            "column": 45
                          },
                          "text": "initial_states = hidden_state",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 73,
                                "column": 16
                              },
                              "end": {
                                "row": 73,
                                "column": 45
                              },
                              "text": "initial_states = hidden_state",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 73,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 45
                                  },
                                  "text": "initial_states = hidden_state",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 73,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 30
                                      },
                                      "text": "initial_states"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 73,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 32
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 73,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 45
                                      },
                                      "text": "hidden_state"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "elif_clause",
                          "start": {
                            "row": 74,
                            "column": 12
                          },
                          "end": {
                            "row": 76,
                            "column": 60
                          },
                          "text": "elif isinstance(hidden_state, tuple):\n                initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]",
                          "children": [
                            {
                              "type": "elif",
                              "start": {
                                "row": 74,
                                "column": 12
                              },
                              "end": {
                                "row": 74,
                                "column": 16
                              },
                              "text": "elif"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 74,
                                "column": 17
                              },
                              "end": {
                                "row": 74,
                                "column": 48
                              },
                              "text": "isinstance(hidden_state, tuple)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 74,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 27
                                  },
                                  "text": "isinstance"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 74,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 48
                                  },
                                  "text": "(hidden_state, tuple)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 74,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 74,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 40
                                      },
                                      "text": "hidden_state"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 74,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 41
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 74,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 47
                                      },
                                      "text": "tuple"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 74,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 48
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 74,
                                "column": 48
                              },
                              "end": {
                                "row": 74,
                                "column": 49
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 75,
                                "column": 16
                              },
                              "end": {
                                "row": 76,
                                "column": 60
                              },
                              "text": "initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 75,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 76,
                                    "column": 60
                                  },
                                  "text": "initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 75,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 60
                                      },
                                      "text": "initial_states = [state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 75,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 30
                                          },
                                          "text": "initial_states"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 75,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 32
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "list_comprehension",
                                          "start": {
                                            "row": 75,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 76,
                                            "column": 60
                                          },
                                          "text": "[state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()\n                                  for state in hidden_state]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 75,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 34
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 75,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 103
                                              },
                                              "text": "state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 101
                                                  },
                                                  "text": "state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous",
                                                  "children": [
                                                    {
                                                      "type": "subscript",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 90
                                                      },
                                                      "text": "state.index_select(1, sorting_indices)[:, :num_valid, :]",
                                                      "children": [
                                                        {
                                                          "type": "call",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 34
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 72
                                                          },
                                                          "text": "state.index_select(1, sorting_indices)",
                                                          "children": [
                                                            {
                                                              "type": "attribute",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 52
                                                              },
                                                              "text": "state.index_select",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 34
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 39
                                                                  },
                                                                  "text": "state"
                                                                },
                                                                {
                                                                  "type": ".",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 39
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 40
                                                                  },
                                                                  "text": "."
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 40
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 52
                                                                  },
                                                                  "text": "index_select"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "argument_list",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 52
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 72
                                                              },
                                                              "text": "(1, sorting_indices)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 52
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 53
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "integer",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 53
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 54
                                                                  },
                                                                  "text": "1"
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 54
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 55
                                                                  },
                                                                  "text": ","
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 56
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 71
                                                                  },
                                                                  "text": "sorting_indices"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 75,
                                                                    "column": 71
                                                                  },
                                                                  "end": {
                                                                    "row": 75,
                                                                    "column": 72
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 72
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 73
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "slice",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 73
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 74
                                                          },
                                                          "text": ":",
                                                          "children": [
                                                            {
                                                              "type": ":",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 73
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 74
                                                              },
                                                              "text": ":"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 74
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 75
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "slice",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 76
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 86
                                                          },
                                                          "text": ":num_valid",
                                                          "children": [
                                                            {
                                                              "type": ":",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 76
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 77
                                                              },
                                                              "text": ":"
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 77
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 86
                                                              },
                                                              "text": "num_valid"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 86
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 87
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "slice",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 88
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 89
                                                          },
                                                          "text": ":",
                                                          "children": [
                                                            {
                                                              "type": ":",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 88
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 89
                                                              },
                                                              "text": ":"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 89
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 90
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 90
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 91
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 91
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 101
                                                      },
                                                      "text": "contiguous"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 101
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 103
                                                  },
                                                  "text": "()",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 101
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 102
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 102
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 103
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "for_in_clause",
                                              "start": {
                                                "row": 76,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 76,
                                                "column": 59
                                              },
                                              "text": "for state in hidden_state",
                                              "children": [
                                                {
                                                  "type": "for",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 37
                                                  },
                                                  "text": "for"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 43
                                                  },
                                                  "text": "state"
                                                },
                                                {
                                                  "type": "in",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 46
                                                  },
                                                  "text": "in"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 59
                                                  },
                                                  "text": "hidden_state"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 76,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 76,
                                                "column": 60
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 77,
                            "column": 12
                          },
                          "end": {
                            "row": 78,
                            "column": 109
                          },
                          "text": "else:\n                initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 77,
                                "column": 12
                              },
                              "end": {
                                "row": 77,
                                "column": 16
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 77,
                                "column": 16
                              },
                              "end": {
                                "row": 77,
                                "column": 17
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 78,
                                "column": 16
                              },
                              "end": {
                                "row": 78,
                                "column": 109
                              },
                              "text": "initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 78,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 78,
                                    "column": 109
                                  },
                                  "text": "initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 78,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 78,
                                        "column": 109
                                      },
                                      "text": "initial_states = hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 78,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 78,
                                            "column": 30
                                          },
                                          "text": "initial_states"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 78,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 78,
                                            "column": 32
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 78,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 78,
                                            "column": 109
                                          },
                                          "text": "hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 78,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 78,
                                                "column": 107
                                              },
                                              "text": "hidden_state.index_select(1, sorting_indices)[:, :num_valid, :].contiguous",
                                              "children": [
                                                {
                                                  "type": "subscript",
                                                  "start": {
                                                    "row": 78,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 78,
                                                    "column": 96
                                                  },
                                                  "text": "hidden_state.index_select(1, sorting_indices)[:, :num_valid, :]",
                                                  "children": [
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 78
                                                      },
                                                      "text": "hidden_state.index_select(1, sorting_indices)",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 78,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 78,
                                                            "column": 58
                                                          },
                                                          "text": "hidden_state.index_select",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 45
                                                              },
                                                              "text": "hidden_state"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 45
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 46
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 46
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 58
                                                              },
                                                              "text": "index_select"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 78,
                                                            "column": 58
                                                          },
                                                          "end": {
                                                            "row": 78,
                                                            "column": 78
                                                          },
                                                          "text": "(1, sorting_indices)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 58
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 59
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "integer",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 59
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 60
                                                              },
                                                              "text": "1"
                                                            },
                                                            {
                                                              "type": ",",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 60
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 61
                                                              },
                                                              "text": ","
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 62
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 77
                                                              },
                                                              "text": "sorting_indices"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 78,
                                                                "column": 77
                                                              },
                                                              "end": {
                                                                "row": 78,
                                                                "column": 78
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 78
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 79
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "slice",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 79
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 80
                                                      },
                                                      "text": ":",
                                                      "children": [
                                                        {
                                                          "type": ":",
                                                          "start": {
                                                            "row": 78,
                                                            "column": 79
                                                          },
                                                          "end": {
                                                            "row": 78,
                                                            "column": 80
                                                          },
                                                          "text": ":"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 80
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 81
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "slice",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 82
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 92
                                                      },
                                                      "text": ":num_valid",
                                                      "children": [
                                                        {
                                                          "type": ":",
                                                          "start": {
                                                            "row": 78,
                                                            "column": 82
                                                          },
                                                          "end": {
                                                            "row": 78,
                                                            "column": 83
                                                          },
                                                          "text": ":"
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 78,
                                                            "column": 83
                                                          },
                                                          "end": {
                                                            "row": 78,
                                                            "column": 92
                                                          },
                                                          "text": "num_valid"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 92
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 93
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "slice",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 94
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 95
                                                      },
                                                      "text": ":",
                                                      "children": [
                                                        {
                                                          "type": ":",
                                                          "start": {
                                                            "row": 78,
                                                            "column": 94
                                                          },
                                                          "end": {
                                                            "row": 78,
                                                            "column": 95
                                                          },
                                                          "text": ":"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 78,
                                                        "column": 95
                                                      },
                                                      "end": {
                                                        "row": 78,
                                                        "column": 96
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 78,
                                                    "column": 96
                                                  },
                                                  "end": {
                                                    "row": 78,
                                                    "column": 97
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 78,
                                                    "column": 97
                                                  },
                                                  "end": {
                                                    "row": 78,
                                                    "column": 107
                                                  },
                                                  "text": "contiguous"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 78,
                                                "column": 107
                                              },
                                              "end": {
                                                "row": 78,
                                                "column": 109
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 78,
                                                    "column": 107
                                                  },
                                                  "end": {
                                                    "row": 78,
                                                    "column": 108
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 78,
                                                    "column": 108
                                                  },
                                                  "end": {
                                                    "row": 78,
                                                    "column": 109
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 80,
                    "column": 8
                  },
                  "end": {
                    "row": 81,
                    "column": 93
                  },
                  "text": "else:\n            initial_states = self._get_initial_states(batch_size, num_valid, sorting_indices)",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 80,
                        "column": 8
                      },
                      "end": {
                        "row": 80,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 80,
                        "column": 12
                      },
                      "end": {
                        "row": 80,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 81,
                        "column": 12
                      },
                      "end": {
                        "row": 81,
                        "column": 93
                      },
                      "text": "initial_states = self._get_initial_states(batch_size, num_valid, sorting_indices)",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 81,
                            "column": 12
                          },
                          "end": {
                            "row": 81,
                            "column": 93
                          },
                          "text": "initial_states = self._get_initial_states(batch_size, num_valid, sorting_indices)",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 81,
                                "column": 12
                              },
                              "end": {
                                "row": 81,
                                "column": 93
                              },
                              "text": "initial_states = self._get_initial_states(batch_size, num_valid, sorting_indices)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 81,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 26
                                  },
                                  "text": "initial_states"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 81,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 28
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 81,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 93
                                  },
                                  "text": "self._get_initial_states(batch_size, num_valid, sorting_indices)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 81,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 53
                                      },
                                      "text": "self._get_initial_states",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 81,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 33
                                          },
                                          "text": "self"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 81,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 34
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 81,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 53
                                          },
                                          "text": "_get_initial_states"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 81,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 93
                                      },
                                      "text": "(batch_size, num_valid, sorting_indices)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 81,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 54
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 81,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 64
                                          },
                                          "text": "batch_size"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 81,
                                            "column": 64
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 65
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 81,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 75
                                          },
                                          "text": "num_valid"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 81,
                                            "column": 75
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 76
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 81,
                                            "column": 77
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 92
                                          },
                                          "text": "sorting_indices"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 81,
                                            "column": 92
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 93
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 83,
                "column": 8
              },
              "end": {
                "row": 83,
                "column": 64
              },
              "text": "# Actually call the module on the sorted PackedSequence."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 84,
                "column": 8
              },
              "end": {
                "row": 84,
                "column": 83
              },
              "text": "module_output, final_states = module(packed_sequence_input, initial_states)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 84,
                    "column": 8
                  },
                  "end": {
                    "row": 84,
                    "column": 83
                  },
                  "text": "module_output, final_states = module(packed_sequence_input, initial_states)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 84,
                        "column": 8
                      },
                      "end": {
                        "row": 84,
                        "column": 35
                      },
                      "text": "module_output, final_states",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 84,
                            "column": 8
                          },
                          "end": {
                            "row": 84,
                            "column": 21
                          },
                          "text": "module_output"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 84,
                            "column": 21
                          },
                          "end": {
                            "row": 84,
                            "column": 22
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 84,
                            "column": 23
                          },
                          "end": {
                            "row": 84,
                            "column": 35
                          },
                          "text": "final_states"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 84,
                        "column": 36
                      },
                      "end": {
                        "row": 84,
                        "column": 37
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 84,
                        "column": 38
                      },
                      "end": {
                        "row": 84,
                        "column": 83
                      },
                      "text": "module(packed_sequence_input, initial_states)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 84,
                            "column": 38
                          },
                          "end": {
                            "row": 84,
                            "column": 44
                          },
                          "text": "module"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 84,
                            "column": 44
                          },
                          "end": {
                            "row": 84,
                            "column": 83
                          },
                          "text": "(packed_sequence_input, initial_states)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 84,
                                "column": 44
                              },
                              "end": {
                                "row": 84,
                                "column": 45
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 84,
                                "column": 45
                              },
                              "end": {
                                "row": 84,
                                "column": 66
                              },
                              "text": "packed_sequence_input"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 84,
                                "column": 66
                              },
                              "end": {
                                "row": 84,
                                "column": 67
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 84,
                                "column": 68
                              },
                              "end": {
                                "row": 84,
                                "column": 82
                              },
                              "text": "initial_states"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 84,
                                "column": 82
                              },
                              "end": {
                                "row": 84,
                                "column": 83
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 86,
                "column": 8
              },
              "end": {
                "row": 86,
                "column": 63
              },
              "text": "return module_output, final_states, restoration_indices",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 86,
                    "column": 8
                  },
                  "end": {
                    "row": 86,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "expression_list",
                  "start": {
                    "row": 86,
                    "column": 15
                  },
                  "end": {
                    "row": 86,
                    "column": 63
                  },
                  "text": "module_output, final_states, restoration_indices",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 86,
                        "column": 15
                      },
                      "end": {
                        "row": 86,
                        "column": 28
                      },
                      "text": "module_output"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 86,
                        "column": 28
                      },
                      "end": {
                        "row": 86,
                        "column": 29
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 86,
                        "column": 30
                      },
                      "end": {
                        "row": 86,
                        "column": 42
                      },
                      "text": "final_states"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 86,
                        "column": 42
                      },
                      "end": {
                        "row": 86,
                        "column": 43
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 86,
                        "column": 44
                      },
                      "end": {
                        "row": 86,
                        "column": 63
                      },
                      "text": "restoration_indices"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}