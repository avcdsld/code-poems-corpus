{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 31,
    "column": 48
  },
  "text": "def _prefix_from_ip_string(self, ip_str):\n        \"\"\"Turn a netmask/hostmask string into a prefix length\n\n        Args:\n            ip_str: The netmask/hostmask to be converted\n\n        Returns:\n            An integer, the prefix length.\n\n        Raises:\n            NetmaskValueError: If the input is not a valid netmask/hostmask\n        \"\"\"\n        # Parse the netmask/hostmask like an IP address.\n        try:\n            ip_int = self._ip_int_from_string(ip_str)\n        except AddressValueError:\n            self._report_invalid_netmask(ip_str)\n\n        # Try matching a netmask (this would be /1*0*/ as a bitwise regexp).\n        # Note that the two ambiguous cases (all-ones and all-zeroes) are\n        # treated as netmasks.\n        try:\n            return self._prefix_from_ip_int(ip_int)\n        except ValueError:\n            pass\n\n        # Invert the bits, and try matching a /0+1+/ hostmask instead.\n        ip_int ^= self._ALL_ONES\n        try:\n            return self._prefix_from_ip_int(ip_int)\n        except ValueError:\n            self._report_invalid_netmask(ip_str)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 31,
        "column": 48
      },
      "text": "def _prefix_from_ip_string(self, ip_str):\n        \"\"\"Turn a netmask/hostmask string into a prefix length\n\n        Args:\n            ip_str: The netmask/hostmask to be converted\n\n        Returns:\n            An integer, the prefix length.\n\n        Raises:\n            NetmaskValueError: If the input is not a valid netmask/hostmask\n        \"\"\"\n        # Parse the netmask/hostmask like an IP address.\n        try:\n            ip_int = self._ip_int_from_string(ip_str)\n        except AddressValueError:\n            self._report_invalid_netmask(ip_str)\n\n        # Try matching a netmask (this would be /1*0*/ as a bitwise regexp).\n        # Note that the two ambiguous cases (all-ones and all-zeroes) are\n        # treated as netmasks.\n        try:\n            return self._prefix_from_ip_int(ip_int)\n        except ValueError:\n            pass\n\n        # Invert the bits, and try matching a /0+1+/ hostmask instead.\n        ip_int ^= self._ALL_ONES\n        try:\n            return self._prefix_from_ip_int(ip_int)\n        except ValueError:\n            self._report_invalid_netmask(ip_str)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 26
          },
          "text": "_prefix_from_ip_string"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 26
          },
          "end": {
            "row": 0,
            "column": 40
          },
          "text": "(self, ip_str)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": "ip_str"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 40
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 31,
            "column": 48
          },
          "text": "\"\"\"Turn a netmask/hostmask string into a prefix length\n\n        Args:\n            ip_str: The netmask/hostmask to be converted\n\n        Returns:\n            An integer, the prefix length.\n\n        Raises:\n            NetmaskValueError: If the input is not a valid netmask/hostmask\n        \"\"\"\n        # Parse the netmask/hostmask like an IP address.\n        try:\n            ip_int = self._ip_int_from_string(ip_str)\n        except AddressValueError:\n            self._report_invalid_netmask(ip_str)\n\n        # Try matching a netmask (this would be /1*0*/ as a bitwise regexp).\n        # Note that the two ambiguous cases (all-ones and all-zeroes) are\n        # treated as netmasks.\n        try:\n            return self._prefix_from_ip_int(ip_int)\n        except ValueError:\n            pass\n\n        # Invert the bits, and try matching a /0+1+/ hostmask instead.\n        ip_int ^= self._ALL_ONES\n        try:\n            return self._prefix_from_ip_int(ip_int)\n        except ValueError:\n            self._report_invalid_netmask(ip_str)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 11
              },
              "text": "\"\"\"Turn a netmask/hostmask string into a prefix length\n\n        Args:\n            ip_str: The netmask/hostmask to be converted\n\n        Returns:\n            An integer, the prefix length.\n\n        Raises:\n            NetmaskValueError: If the input is not a valid netmask/hostmask\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 11
                  },
                  "text": "\"\"\"Turn a netmask/hostmask string into a prefix length\n\n        Args:\n            ip_str: The netmask/hostmask to be converted\n\n        Returns:\n            An integer, the prefix length.\n\n        Raises:\n            NetmaskValueError: If the input is not a valid netmask/hostmask\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 11,
                        "column": 8
                      },
                      "text": "Turn a netmask/hostmask string into a prefix length\n\n        Args:\n            ip_str: The netmask/hostmask to be converted\n\n        Returns:\n            An integer, the prefix length.\n\n        Raises:\n            NetmaskValueError: If the input is not a valid netmask/hostmask\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 56
              },
              "text": "# Parse the netmask/hostmask like an IP address."
            },
            {
              "type": "try_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 48
              },
              "text": "try:\n            ip_int = self._ip_int_from_string(ip_str)\n        except AddressValueError:\n            self._report_invalid_netmask(ip_str)",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 11
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 13,
                    "column": 11
                  },
                  "end": {
                    "row": 13,
                    "column": 12
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 14,
                    "column": 12
                  },
                  "end": {
                    "row": 14,
                    "column": 53
                  },
                  "text": "ip_int = self._ip_int_from_string(ip_str)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 14,
                        "column": 12
                      },
                      "end": {
                        "row": 14,
                        "column": 53
                      },
                      "text": "ip_int = self._ip_int_from_string(ip_str)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 14,
                            "column": 12
                          },
                          "end": {
                            "row": 14,
                            "column": 53
                          },
                          "text": "ip_int = self._ip_int_from_string(ip_str)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 12
                              },
                              "end": {
                                "row": 14,
                                "column": 18
                              },
                              "text": "ip_int"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 14,
                                "column": 19
                              },
                              "end": {
                                "row": 14,
                                "column": 20
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 14,
                                "column": 21
                              },
                              "end": {
                                "row": 14,
                                "column": 53
                              },
                              "text": "self._ip_int_from_string(ip_str)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 14,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 45
                                  },
                                  "text": "self._ip_int_from_string",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 25
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 14,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 26
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 45
                                      },
                                      "text": "_ip_int_from_string"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 14,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 53
                                  },
                                  "text": "(ip_str)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 14,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 46
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 14,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 52
                                      },
                                      "text": "ip_str"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 14,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 53
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 48
                  },
                  "text": "except AddressValueError:\n            self._report_invalid_netmask(ip_str)",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 14
                      },
                      "text": "except"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 15,
                        "column": 15
                      },
                      "end": {
                        "row": 15,
                        "column": 32
                      },
                      "text": "AddressValueError"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 15,
                        "column": 32
                      },
                      "end": {
                        "row": 15,
                        "column": 33
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 16,
                        "column": 12
                      },
                      "end": {
                        "row": 16,
                        "column": 48
                      },
                      "text": "self._report_invalid_netmask(ip_str)",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 16,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 48
                          },
                          "text": "self._report_invalid_netmask(ip_str)",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 16,
                                "column": 12
                              },
                              "end": {
                                "row": 16,
                                "column": 48
                              },
                              "text": "self._report_invalid_netmask(ip_str)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 16,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 40
                                  },
                                  "text": "self._report_invalid_netmask",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 16
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 16,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 17
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 40
                                      },
                                      "text": "_report_invalid_netmask"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 16,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 48
                                  },
                                  "text": "(ip_str)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 16,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 41
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 47
                                      },
                                      "text": "ip_str"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 16,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 48
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 76
              },
              "text": "# Try matching a netmask (this would be /1*0*/ as a bitwise regexp)."
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 73
              },
              "text": "# Note that the two ambiguous cases (all-ones and all-zeroes) are"
            },
            {
              "type": "comment",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 30
              },
              "text": "# treated as netmasks."
            },
            {
              "type": "try_statement",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 16
              },
              "text": "try:\n            return self._prefix_from_ip_int(ip_int)\n        except ValueError:\n            pass",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 11
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 21,
                    "column": 11
                  },
                  "end": {
                    "row": 21,
                    "column": 12
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 22,
                    "column": 12
                  },
                  "end": {
                    "row": 22,
                    "column": 51
                  },
                  "text": "return self._prefix_from_ip_int(ip_int)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 22,
                        "column": 12
                      },
                      "end": {
                        "row": 22,
                        "column": 51
                      },
                      "text": "return self._prefix_from_ip_int(ip_int)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 22,
                            "column": 12
                          },
                          "end": {
                            "row": 22,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 22,
                            "column": 19
                          },
                          "end": {
                            "row": 22,
                            "column": 51
                          },
                          "text": "self._prefix_from_ip_int(ip_int)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 22,
                                "column": 19
                              },
                              "end": {
                                "row": 22,
                                "column": 43
                              },
                              "text": "self._prefix_from_ip_int",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 23
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 22,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 24
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 43
                                  },
                                  "text": "_prefix_from_ip_int"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 22,
                                "column": 43
                              },
                              "end": {
                                "row": 22,
                                "column": 51
                              },
                              "text": "(ip_int)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 22,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 44
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 22,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 50
                                  },
                                  "text": "ip_int"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 22,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 51
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 24,
                    "column": 16
                  },
                  "text": "except ValueError:\n            pass",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 14
                      },
                      "text": "except"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 15
                      },
                      "end": {
                        "row": 23,
                        "column": 25
                      },
                      "text": "ValueError"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 23,
                        "column": 25
                      },
                      "end": {
                        "row": 23,
                        "column": 26
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 16
                      },
                      "text": "pass",
                      "children": [
                        {
                          "type": "pass_statement",
                          "start": {
                            "row": 24,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 16
                          },
                          "text": "pass",
                          "children": [
                            {
                              "type": "pass",
                              "start": {
                                "row": 24,
                                "column": 12
                              },
                              "end": {
                                "row": 24,
                                "column": 16
                              },
                              "text": "pass"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 26,
                "column": 8
              },
              "end": {
                "row": 26,
                "column": 70
              },
              "text": "# Invert the bits, and try matching a /0+1+/ hostmask instead."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 27,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 32
              },
              "text": "ip_int ^= self._ALL_ONES",
              "children": [
                {
                  "type": "augmented_assignment",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 32
                  },
                  "text": "ip_int ^= self._ALL_ONES",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 27,
                        "column": 8
                      },
                      "end": {
                        "row": 27,
                        "column": 14
                      },
                      "text": "ip_int"
                    },
                    {
                      "type": "^=",
                      "start": {
                        "row": 27,
                        "column": 15
                      },
                      "end": {
                        "row": 27,
                        "column": 17
                      },
                      "text": "^="
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 27,
                        "column": 18
                      },
                      "end": {
                        "row": 27,
                        "column": 32
                      },
                      "text": "self._ALL_ONES",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 18
                          },
                          "end": {
                            "row": 27,
                            "column": 22
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 27,
                            "column": 22
                          },
                          "end": {
                            "row": 27,
                            "column": 23
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 23
                          },
                          "end": {
                            "row": 27,
                            "column": 32
                          },
                          "text": "_ALL_ONES"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 28,
                "column": 8
              },
              "end": {
                "row": 31,
                "column": 48
              },
              "text": "try:\n            return self._prefix_from_ip_int(ip_int)\n        except ValueError:\n            self._report_invalid_netmask(ip_str)",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 28,
                    "column": 8
                  },
                  "end": {
                    "row": 28,
                    "column": 11
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 28,
                    "column": 11
                  },
                  "end": {
                    "row": 28,
                    "column": 12
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 29,
                    "column": 12
                  },
                  "end": {
                    "row": 29,
                    "column": 51
                  },
                  "text": "return self._prefix_from_ip_int(ip_int)",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 29,
                        "column": 12
                      },
                      "end": {
                        "row": 29,
                        "column": 51
                      },
                      "text": "return self._prefix_from_ip_int(ip_int)",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 29,
                            "column": 12
                          },
                          "end": {
                            "row": 29,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 29,
                            "column": 19
                          },
                          "end": {
                            "row": 29,
                            "column": 51
                          },
                          "text": "self._prefix_from_ip_int(ip_int)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 29,
                                "column": 19
                              },
                              "end": {
                                "row": 29,
                                "column": 43
                              },
                              "text": "self._prefix_from_ip_int",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 23
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 29,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 24
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 43
                                  },
                                  "text": "_prefix_from_ip_int"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 29,
                                "column": 43
                              },
                              "end": {
                                "row": 29,
                                "column": 51
                              },
                              "text": "(ip_int)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 29,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 44
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 50
                                  },
                                  "text": "ip_int"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 29,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 51
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 31,
                    "column": 48
                  },
                  "text": "except ValueError:\n            self._report_invalid_netmask(ip_str)",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 30,
                        "column": 8
                      },
                      "end": {
                        "row": 30,
                        "column": 14
                      },
                      "text": "except"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 15
                      },
                      "end": {
                        "row": 30,
                        "column": 25
                      },
                      "text": "ValueError"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 30,
                        "column": 25
                      },
                      "end": {
                        "row": 30,
                        "column": 26
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 31,
                        "column": 12
                      },
                      "end": {
                        "row": 31,
                        "column": 48
                      },
                      "text": "self._report_invalid_netmask(ip_str)",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 31,
                            "column": 12
                          },
                          "end": {
                            "row": 31,
                            "column": 48
                          },
                          "text": "self._report_invalid_netmask(ip_str)",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 31,
                                "column": 12
                              },
                              "end": {
                                "row": 31,
                                "column": 48
                              },
                              "text": "self._report_invalid_netmask(ip_str)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 31,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 40
                                  },
                                  "text": "self._report_invalid_netmask",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 31,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 16
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 31,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 17
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 31,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 40
                                      },
                                      "text": "_report_invalid_netmask"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 31,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 31,
                                    "column": 48
                                  },
                                  "text": "(ip_str)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 31,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 41
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 31,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 47
                                      },
                                      "text": "ip_str"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 31,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 31,
                                        "column": 48
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}