{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 65,
    "column": 22
  },
  "text": "def set_codes(self, codes, level=None, inplace=False,\n                  verify_integrity=True):\n        \"\"\"\n        Set new codes on MultiIndex. Defaults to returning\n        new index.\n\n        .. versionadded:: 0.24.0\n\n           New name for deprecated method `set_labels`.\n\n        Parameters\n        ----------\n        codes : sequence or list of sequence\n            new codes to apply\n        level : int, level name, or sequence of int/level names (default None)\n            level(s) to set (None for all levels)\n        inplace : bool\n            if True, mutates in place\n        verify_integrity : bool (default True)\n            if True, checks that levels and codes are compatible\n\n        Returns\n        -------\n        new index (of same type and class...etc)\n\n        Examples\n        --------\n        >>> idx = pd.MultiIndex.from_tuples([(1, 'one'), (1, 'two'),\n                                            (2, 'one'), (2, 'two')],\n                                            names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([1,0,1,0], level=0)\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 1, 0, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([0,0,1,1], level='bar')\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[0, 0, 1, 1], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]], level=[0,1])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        \"\"\"\n        if level is not None and not is_list_like(level):\n            if not is_list_like(codes):\n                raise TypeError(\"Codes must be list-like\")\n            if is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list-like\")\n            level = [level]\n            codes = [codes]\n        elif level is None or is_list_like(level):\n            if not is_list_like(codes) or not is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list of lists-like\")\n\n        if inplace:\n            idx = self\n        else:\n            idx = self._shallow_copy()\n        idx._reset_identity()\n        idx._set_codes(codes, level=level, verify_integrity=verify_integrity)\n        if not inplace:\n            return idx",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 65,
        "column": 22
      },
      "text": "def set_codes(self, codes, level=None, inplace=False,\n                  verify_integrity=True):\n        \"\"\"\n        Set new codes on MultiIndex. Defaults to returning\n        new index.\n\n        .. versionadded:: 0.24.0\n\n           New name for deprecated method `set_labels`.\n\n        Parameters\n        ----------\n        codes : sequence or list of sequence\n            new codes to apply\n        level : int, level name, or sequence of int/level names (default None)\n            level(s) to set (None for all levels)\n        inplace : bool\n            if True, mutates in place\n        verify_integrity : bool (default True)\n            if True, checks that levels and codes are compatible\n\n        Returns\n        -------\n        new index (of same type and class...etc)\n\n        Examples\n        --------\n        >>> idx = pd.MultiIndex.from_tuples([(1, 'one'), (1, 'two'),\n                                            (2, 'one'), (2, 'two')],\n                                            names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([1,0,1,0], level=0)\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 1, 0, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([0,0,1,1], level='bar')\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[0, 0, 1, 1], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]], level=[0,1])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        \"\"\"\n        if level is not None and not is_list_like(level):\n            if not is_list_like(codes):\n                raise TypeError(\"Codes must be list-like\")\n            if is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list-like\")\n            level = [level]\n            codes = [codes]\n        elif level is None or is_list_like(level):\n            if not is_list_like(codes) or not is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list of lists-like\")\n\n        if inplace:\n            idx = self\n        else:\n            idx = self._shallow_copy()\n        idx._reset_identity()\n        idx._set_codes(codes, level=level, verify_integrity=verify_integrity)\n        if not inplace:\n            return idx",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 13
          },
          "text": "set_codes"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 13
          },
          "end": {
            "row": 1,
            "column": 40
          },
          "text": "(self, codes, level=None, inplace=False,\n                  verify_integrity=True)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "codes"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "level=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 27
                  },
                  "end": {
                    "row": 0,
                    "column": 32
                  },
                  "text": "level"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 33
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 33
                  },
                  "end": {
                    "row": 0,
                    "column": 37
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 52
              },
              "text": "inplace=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 39
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "inplace"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 46
                  },
                  "end": {
                    "row": 0,
                    "column": 47
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 0,
                    "column": 47
                  },
                  "end": {
                    "row": 0,
                    "column": 52
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 52
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 18
              },
              "end": {
                "row": 1,
                "column": 39
              },
              "text": "verify_integrity=True",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 18
                  },
                  "end": {
                    "row": 1,
                    "column": 34
                  },
                  "text": "verify_integrity"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 34
                  },
                  "end": {
                    "row": 1,
                    "column": 35
                  },
                  "text": "="
                },
                {
                  "type": "true",
                  "start": {
                    "row": 1,
                    "column": 35
                  },
                  "end": {
                    "row": 1,
                    "column": 39
                  },
                  "text": "True"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 1,
                "column": 39
              },
              "end": {
                "row": 1,
                "column": 40
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 1,
            "column": 40
          },
          "end": {
            "row": 1,
            "column": 41
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 2,
            "column": 8
          },
          "end": {
            "row": 65,
            "column": 22
          },
          "text": "\"\"\"\n        Set new codes on MultiIndex. Defaults to returning\n        new index.\n\n        .. versionadded:: 0.24.0\n\n           New name for deprecated method `set_labels`.\n\n        Parameters\n        ----------\n        codes : sequence or list of sequence\n            new codes to apply\n        level : int, level name, or sequence of int/level names (default None)\n            level(s) to set (None for all levels)\n        inplace : bool\n            if True, mutates in place\n        verify_integrity : bool (default True)\n            if True, checks that levels and codes are compatible\n\n        Returns\n        -------\n        new index (of same type and class...etc)\n\n        Examples\n        --------\n        >>> idx = pd.MultiIndex.from_tuples([(1, 'one'), (1, 'two'),\n                                            (2, 'one'), (2, 'two')],\n                                            names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([1,0,1,0], level=0)\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 1, 0, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([0,0,1,1], level='bar')\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[0, 0, 1, 1], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]], level=[0,1])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        \"\"\"\n        if level is not None and not is_list_like(level):\n            if not is_list_like(codes):\n                raise TypeError(\"Codes must be list-like\")\n            if is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list-like\")\n            level = [level]\n            codes = [codes]\n        elif level is None or is_list_like(level):\n            if not is_list_like(codes) or not is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list of lists-like\")\n\n        if inplace:\n            idx = self\n        else:\n            idx = self._shallow_copy()\n        idx._reset_identity()\n        idx._set_codes(codes, level=level, verify_integrity=verify_integrity)\n        if not inplace:\n            return idx",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 46,
                "column": 11
              },
              "text": "\"\"\"\n        Set new codes on MultiIndex. Defaults to returning\n        new index.\n\n        .. versionadded:: 0.24.0\n\n           New name for deprecated method `set_labels`.\n\n        Parameters\n        ----------\n        codes : sequence or list of sequence\n            new codes to apply\n        level : int, level name, or sequence of int/level names (default None)\n            level(s) to set (None for all levels)\n        inplace : bool\n            if True, mutates in place\n        verify_integrity : bool (default True)\n            if True, checks that levels and codes are compatible\n\n        Returns\n        -------\n        new index (of same type and class...etc)\n\n        Examples\n        --------\n        >>> idx = pd.MultiIndex.from_tuples([(1, 'one'), (1, 'two'),\n                                            (2, 'one'), (2, 'two')],\n                                            names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([1,0,1,0], level=0)\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 1, 0, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([0,0,1,1], level='bar')\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[0, 0, 1, 1], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]], level=[0,1])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 46,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Set new codes on MultiIndex. Defaults to returning\n        new index.\n\n        .. versionadded:: 0.24.0\n\n           New name for deprecated method `set_labels`.\n\n        Parameters\n        ----------\n        codes : sequence or list of sequence\n            new codes to apply\n        level : int, level name, or sequence of int/level names (default None)\n            level(s) to set (None for all levels)\n        inplace : bool\n            if True, mutates in place\n        verify_integrity : bool (default True)\n            if True, checks that levels and codes are compatible\n\n        Returns\n        -------\n        new index (of same type and class...etc)\n\n        Examples\n        --------\n        >>> idx = pd.MultiIndex.from_tuples([(1, 'one'), (1, 'two'),\n                                            (2, 'one'), (2, 'two')],\n                                            names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([1,0,1,0], level=0)\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 1, 0, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([0,0,1,1], level='bar')\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[0, 0, 1, 1], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]], level=[0,1])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 46,
                        "column": 8
                      },
                      "text": "\n        Set new codes on MultiIndex. Defaults to returning\n        new index.\n\n        .. versionadded:: 0.24.0\n\n           New name for deprecated method `set_labels`.\n\n        Parameters\n        ----------\n        codes : sequence or list of sequence\n            new codes to apply\n        level : int, level name, or sequence of int/level names (default None)\n            level(s) to set (None for all levels)\n        inplace : bool\n            if True, mutates in place\n        verify_integrity : bool (default True)\n            if True, checks that levels and codes are compatible\n\n        Returns\n        -------\n        new index (of same type and class...etc)\n\n        Examples\n        --------\n        >>> idx = pd.MultiIndex.from_tuples([(1, 'one'), (1, 'two'),\n                                            (2, 'one'), (2, 'two')],\n                                            names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([1,0,1,0], level=0)\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 1, 0, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([0,0,1,1], level='bar')\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[0, 0, 1, 1], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        >>> idx.set_codes([[1,0,1,0], [0,0,1,1]], level=[0,1])\n        MultiIndex(levels=[[1, 2], ['one', 'two']],\n                   codes=[[1, 0, 1, 0], [0, 0, 1, 1]],\n                   names=['foo', 'bar'])\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 46,
                        "column": 8
                      },
                      "end": {
                        "row": 46,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 47,
                "column": 8
              },
              "end": {
                "row": 56,
                "column": 67
              },
              "text": "if level is not None and not is_list_like(level):\n            if not is_list_like(codes):\n                raise TypeError(\"Codes must be list-like\")\n            if is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list-like\")\n            level = [level]\n            codes = [codes]\n        elif level is None or is_list_like(level):\n            if not is_list_like(codes) or not is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list of lists-like\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 47,
                    "column": 8
                  },
                  "end": {
                    "row": 47,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 47,
                    "column": 11
                  },
                  "end": {
                    "row": 47,
                    "column": 56
                  },
                  "text": "level is not None and not is_list_like(level)",
                  "children": [
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 47,
                        "column": 11
                      },
                      "end": {
                        "row": 47,
                        "column": 28
                      },
                      "text": "level is not None",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 47,
                            "column": 11
                          },
                          "end": {
                            "row": 47,
                            "column": 16
                          },
                          "text": "level"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 47,
                            "column": 17
                          },
                          "end": {
                            "row": 47,
                            "column": 19
                          },
                          "text": "is"
                        },
                        {
                          "type": "is not",
                          "start": {
                            "row": 47,
                            "column": 20
                          },
                          "end": {
                            "row": 47,
                            "column": 23
                          },
                          "text": "not"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 47,
                            "column": 24
                          },
                          "end": {
                            "row": 47,
                            "column": 28
                          },
                          "text": "None"
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 47,
                        "column": 29
                      },
                      "end": {
                        "row": 47,
                        "column": 32
                      },
                      "text": "and"
                    },
                    {
                      "type": "not_operator",
                      "start": {
                        "row": 47,
                        "column": 33
                      },
                      "end": {
                        "row": 47,
                        "column": 56
                      },
                      "text": "not is_list_like(level)",
                      "children": [
                        {
                          "type": "not",
                          "start": {
                            "row": 47,
                            "column": 33
                          },
                          "end": {
                            "row": 47,
                            "column": 36
                          },
                          "text": "not"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 47,
                            "column": 37
                          },
                          "end": {
                            "row": 47,
                            "column": 56
                          },
                          "text": "is_list_like(level)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 47,
                                "column": 37
                              },
                              "end": {
                                "row": 47,
                                "column": 49
                              },
                              "text": "is_list_like"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 47,
                                "column": 49
                              },
                              "end": {
                                "row": 47,
                                "column": 56
                              },
                              "text": "(level)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 47,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 50
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 47,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 55
                                  },
                                  "text": "level"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 47,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 56
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 47,
                    "column": 56
                  },
                  "end": {
                    "row": 47,
                    "column": 57
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 48,
                    "column": 12
                  },
                  "end": {
                    "row": 53,
                    "column": 27
                  },
                  "text": "if not is_list_like(codes):\n                raise TypeError(\"Codes must be list-like\")\n            if is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list-like\")\n            level = [level]\n            codes = [codes]",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 48,
                        "column": 12
                      },
                      "end": {
                        "row": 49,
                        "column": 58
                      },
                      "text": "if not is_list_like(codes):\n                raise TypeError(\"Codes must be list-like\")",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 48,
                            "column": 12
                          },
                          "end": {
                            "row": 48,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 48,
                            "column": 15
                          },
                          "end": {
                            "row": 48,
                            "column": 38
                          },
                          "text": "not is_list_like(codes)",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 48,
                                "column": 15
                              },
                              "end": {
                                "row": 48,
                                "column": 18
                              },
                              "text": "not"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 48,
                                "column": 19
                              },
                              "end": {
                                "row": 48,
                                "column": 38
                              },
                              "text": "is_list_like(codes)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 48,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 31
                                  },
                                  "text": "is_list_like"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 48,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 48,
                                    "column": 38
                                  },
                                  "text": "(codes)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 48,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 32
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 48,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 37
                                      },
                                      "text": "codes"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 48,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 48,
                                        "column": 38
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 48,
                            "column": 38
                          },
                          "end": {
                            "row": 48,
                            "column": 39
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 49,
                            "column": 16
                          },
                          "end": {
                            "row": 49,
                            "column": 58
                          },
                          "text": "raise TypeError(\"Codes must be list-like\")",
                          "children": [
                            {
                              "type": "raise_statement",
                              "start": {
                                "row": 49,
                                "column": 16
                              },
                              "end": {
                                "row": 49,
                                "column": 58
                              },
                              "text": "raise TypeError(\"Codes must be list-like\")",
                              "children": [
                                {
                                  "type": "raise",
                                  "start": {
                                    "row": 49,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 21
                                  },
                                  "text": "raise"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 49,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 58
                                  },
                                  "text": "TypeError(\"Codes must be list-like\")",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 49,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 31
                                      },
                                      "text": "TypeError"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 49,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 58
                                      },
                                      "text": "(\"Codes must be list-like\")",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 49,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 32
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 49,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 57
                                          },
                                          "text": "\"Codes must be list-like\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 49,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 33
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 49,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 56
                                              },
                                              "text": "Codes must be list-like"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 49,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 57
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 49,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 58
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 50,
                        "column": 12
                      },
                      "end": {
                        "row": 51,
                        "column": 58
                      },
                      "text": "if is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list-like\")",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 50,
                            "column": 12
                          },
                          "end": {
                            "row": 50,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 50,
                            "column": 15
                          },
                          "end": {
                            "row": 50,
                            "column": 37
                          },
                          "text": "is_list_like(codes[0])",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 50,
                                "column": 15
                              },
                              "end": {
                                "row": 50,
                                "column": 27
                              },
                              "text": "is_list_like"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 50,
                                "column": 27
                              },
                              "end": {
                                "row": 50,
                                "column": 37
                              },
                              "text": "(codes[0])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 50,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "subscript",
                                  "start": {
                                    "row": 50,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 36
                                  },
                                  "text": "codes[0]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 50,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 33
                                      },
                                      "text": "codes"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 50,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 34
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 50,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 35
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 50,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 50,
                                        "column": 36
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 50,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 50,
                                    "column": 37
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 50,
                            "column": 37
                          },
                          "end": {
                            "row": 50,
                            "column": 38
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 51,
                            "column": 16
                          },
                          "end": {
                            "row": 51,
                            "column": 58
                          },
                          "text": "raise TypeError(\"Codes must be list-like\")",
                          "children": [
                            {
                              "type": "raise_statement",
                              "start": {
                                "row": 51,
                                "column": 16
                              },
                              "end": {
                                "row": 51,
                                "column": 58
                              },
                              "text": "raise TypeError(\"Codes must be list-like\")",
                              "children": [
                                {
                                  "type": "raise",
                                  "start": {
                                    "row": 51,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 21
                                  },
                                  "text": "raise"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 51,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 58
                                  },
                                  "text": "TypeError(\"Codes must be list-like\")",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 51,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 31
                                      },
                                      "text": "TypeError"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 51,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 58
                                      },
                                      "text": "(\"Codes must be list-like\")",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 51,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 32
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 51,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 57
                                          },
                                          "text": "\"Codes must be list-like\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 51,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 33
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 51,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 56
                                              },
                                              "text": "Codes must be list-like"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 51,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 57
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 51,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 58
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 52,
                        "column": 12
                      },
                      "end": {
                        "row": 52,
                        "column": 27
                      },
                      "text": "level = [level]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 52,
                            "column": 12
                          },
                          "end": {
                            "row": 52,
                            "column": 27
                          },
                          "text": "level = [level]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 52,
                                "column": 12
                              },
                              "end": {
                                "row": 52,
                                "column": 17
                              },
                              "text": "level"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 52,
                                "column": 18
                              },
                              "end": {
                                "row": 52,
                                "column": 19
                              },
                              "text": "="
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 52,
                                "column": 20
                              },
                              "end": {
                                "row": 52,
                                "column": 27
                              },
                              "text": "[level]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 52,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 21
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 52,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 26
                                  },
                                  "text": "level"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 52,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 52,
                                    "column": 27
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 53,
                        "column": 12
                      },
                      "end": {
                        "row": 53,
                        "column": 27
                      },
                      "text": "codes = [codes]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 53,
                            "column": 12
                          },
                          "end": {
                            "row": 53,
                            "column": 27
                          },
                          "text": "codes = [codes]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 53,
                                "column": 12
                              },
                              "end": {
                                "row": 53,
                                "column": 17
                              },
                              "text": "codes"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 53,
                                "column": 18
                              },
                              "end": {
                                "row": 53,
                                "column": 19
                              },
                              "text": "="
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 53,
                                "column": 20
                              },
                              "end": {
                                "row": 53,
                                "column": 27
                              },
                              "text": "[codes]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 53,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 21
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 53,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 26
                                  },
                                  "text": "codes"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 53,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 53,
                                    "column": 27
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "elif_clause",
                  "start": {
                    "row": 54,
                    "column": 8
                  },
                  "end": {
                    "row": 56,
                    "column": 67
                  },
                  "text": "elif level is None or is_list_like(level):\n            if not is_list_like(codes) or not is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list of lists-like\")",
                  "children": [
                    {
                      "type": "elif",
                      "start": {
                        "row": 54,
                        "column": 8
                      },
                      "end": {
                        "row": 54,
                        "column": 12
                      },
                      "text": "elif"
                    },
                    {
                      "type": "boolean_operator",
                      "start": {
                        "row": 54,
                        "column": 13
                      },
                      "end": {
                        "row": 54,
                        "column": 49
                      },
                      "text": "level is None or is_list_like(level)",
                      "children": [
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 54,
                            "column": 13
                          },
                          "end": {
                            "row": 54,
                            "column": 26
                          },
                          "text": "level is None",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 13
                              },
                              "end": {
                                "row": 54,
                                "column": 18
                              },
                              "text": "level"
                            },
                            {
                              "type": "is",
                              "start": {
                                "row": 54,
                                "column": 19
                              },
                              "end": {
                                "row": 54,
                                "column": 21
                              },
                              "text": "is"
                            },
                            {
                              "type": "none",
                              "start": {
                                "row": 54,
                                "column": 22
                              },
                              "end": {
                                "row": 54,
                                "column": 26
                              },
                              "text": "None"
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "start": {
                            "row": 54,
                            "column": 27
                          },
                          "end": {
                            "row": 54,
                            "column": 29
                          },
                          "text": "or"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 54,
                            "column": 30
                          },
                          "end": {
                            "row": 54,
                            "column": 49
                          },
                          "text": "is_list_like(level)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 30
                              },
                              "end": {
                                "row": 54,
                                "column": 42
                              },
                              "text": "is_list_like"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 54,
                                "column": 42
                              },
                              "end": {
                                "row": 54,
                                "column": 49
                              },
                              "text": "(level)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 54,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 43
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 48
                                  },
                                  "text": "level"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 54,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 49
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 54,
                        "column": 49
                      },
                      "end": {
                        "row": 54,
                        "column": 50
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 55,
                        "column": 12
                      },
                      "end": {
                        "row": 56,
                        "column": 67
                      },
                      "text": "if not is_list_like(codes) or not is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list of lists-like\")",
                      "children": [
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 55,
                            "column": 12
                          },
                          "end": {
                            "row": 56,
                            "column": 67
                          },
                          "text": "if not is_list_like(codes) or not is_list_like(codes[0]):\n                raise TypeError(\"Codes must be list of lists-like\")",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 55,
                                "column": 12
                              },
                              "end": {
                                "row": 55,
                                "column": 14
                              },
                              "text": "if"
                            },
                            {
                              "type": "boolean_operator",
                              "start": {
                                "row": 55,
                                "column": 15
                              },
                              "end": {
                                "row": 55,
                                "column": 68
                              },
                              "text": "not is_list_like(codes) or not is_list_like(codes[0])",
                              "children": [
                                {
                                  "type": "not_operator",
                                  "start": {
                                    "row": 55,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 38
                                  },
                                  "text": "not is_list_like(codes)",
                                  "children": [
                                    {
                                      "type": "not",
                                      "start": {
                                        "row": 55,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 18
                                      },
                                      "text": "not"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 55,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 38
                                      },
                                      "text": "is_list_like(codes)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 55,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 31
                                          },
                                          "text": "is_list_like"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 55,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 38
                                          },
                                          "text": "(codes)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 55,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 32
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 55,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 37
                                              },
                                              "text": "codes"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 55,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 38
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "or",
                                  "start": {
                                    "row": 55,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 41
                                  },
                                  "text": "or"
                                },
                                {
                                  "type": "not_operator",
                                  "start": {
                                    "row": 55,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 68
                                  },
                                  "text": "not is_list_like(codes[0])",
                                  "children": [
                                    {
                                      "type": "not",
                                      "start": {
                                        "row": 55,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 45
                                      },
                                      "text": "not"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 55,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 68
                                      },
                                      "text": "is_list_like(codes[0])",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 55,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 58
                                          },
                                          "text": "is_list_like"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 55,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 68
                                          },
                                          "text": "(codes[0])",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 55,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 59
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "subscript",
                                              "start": {
                                                "row": 55,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 67
                                              },
                                              "text": "codes[0]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 59
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 64
                                                  },
                                                  "text": "codes"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 65
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 66
                                                  },
                                                  "text": "0"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 55,
                                                    "column": 66
                                                  },
                                                  "end": {
                                                    "row": 55,
                                                    "column": 67
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 55,
                                                "column": 67
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 68
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 55,
                                "column": 68
                              },
                              "end": {
                                "row": 55,
                                "column": 69
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 56,
                                "column": 16
                              },
                              "end": {
                                "row": 56,
                                "column": 67
                              },
                              "text": "raise TypeError(\"Codes must be list of lists-like\")",
                              "children": [
                                {
                                  "type": "raise_statement",
                                  "start": {
                                    "row": 56,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 56,
                                    "column": 67
                                  },
                                  "text": "raise TypeError(\"Codes must be list of lists-like\")",
                                  "children": [
                                    {
                                      "type": "raise",
                                      "start": {
                                        "row": 56,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 56,
                                        "column": 21
                                      },
                                      "text": "raise"
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 56,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 56,
                                        "column": 67
                                      },
                                      "text": "TypeError(\"Codes must be list of lists-like\")",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 56,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 56,
                                            "column": 31
                                          },
                                          "text": "TypeError"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 56,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 56,
                                            "column": 67
                                          },
                                          "text": "(\"Codes must be list of lists-like\")",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 56,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 56,
                                                "column": 32
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 56,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 56,
                                                "column": 66
                                              },
                                              "text": "\"Codes must be list of lists-like\"",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 33
                                                  },
                                                  "text": "\""
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 65
                                                  },
                                                  "text": "Codes must be list of lists-like"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 56,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 56,
                                                    "column": 66
                                                  },
                                                  "text": "\""
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 56,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 56,
                                                "column": 67
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 58,
                "column": 8
              },
              "end": {
                "row": 61,
                "column": 38
              },
              "text": "if inplace:\n            idx = self\n        else:\n            idx = self._shallow_copy()",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 58,
                    "column": 8
                  },
                  "end": {
                    "row": 58,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 58,
                    "column": 11
                  },
                  "end": {
                    "row": 58,
                    "column": 18
                  },
                  "text": "inplace"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 58,
                    "column": 18
                  },
                  "end": {
                    "row": 58,
                    "column": 19
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 59,
                    "column": 12
                  },
                  "end": {
                    "row": 59,
                    "column": 22
                  },
                  "text": "idx = self",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 59,
                        "column": 12
                      },
                      "end": {
                        "row": 59,
                        "column": 22
                      },
                      "text": "idx = self",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 59,
                            "column": 12
                          },
                          "end": {
                            "row": 59,
                            "column": 22
                          },
                          "text": "idx = self",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 59,
                                "column": 12
                              },
                              "end": {
                                "row": 59,
                                "column": 15
                              },
                              "text": "idx"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 59,
                                "column": 16
                              },
                              "end": {
                                "row": 59,
                                "column": 17
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 59,
                                "column": 18
                              },
                              "end": {
                                "row": 59,
                                "column": 22
                              },
                              "text": "self"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 60,
                    "column": 8
                  },
                  "end": {
                    "row": 61,
                    "column": 38
                  },
                  "text": "else:\n            idx = self._shallow_copy()",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 60,
                        "column": 8
                      },
                      "end": {
                        "row": 60,
                        "column": 12
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 60,
                        "column": 12
                      },
                      "end": {
                        "row": 60,
                        "column": 13
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 61,
                        "column": 12
                      },
                      "end": {
                        "row": 61,
                        "column": 38
                      },
                      "text": "idx = self._shallow_copy()",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 61,
                            "column": 12
                          },
                          "end": {
                            "row": 61,
                            "column": 38
                          },
                          "text": "idx = self._shallow_copy()",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 61,
                                "column": 12
                              },
                              "end": {
                                "row": 61,
                                "column": 38
                              },
                              "text": "idx = self._shallow_copy()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 61,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 15
                                  },
                                  "text": "idx"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 61,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 17
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 61,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 38
                                  },
                                  "text": "self._shallow_copy()",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 61,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 36
                                      },
                                      "text": "self._shallow_copy",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 61,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 22
                                          },
                                          "text": "self"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 61,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 23
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 61,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 36
                                          },
                                          "text": "_shallow_copy"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 61,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 38
                                      },
                                      "text": "()",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 61,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 37
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 61,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 38
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 62,
                "column": 8
              },
              "end": {
                "row": 62,
                "column": 29
              },
              "text": "idx._reset_identity()",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 62,
                    "column": 8
                  },
                  "end": {
                    "row": 62,
                    "column": 29
                  },
                  "text": "idx._reset_identity()",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 62,
                        "column": 8
                      },
                      "end": {
                        "row": 62,
                        "column": 27
                      },
                      "text": "idx._reset_identity",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 62,
                            "column": 8
                          },
                          "end": {
                            "row": 62,
                            "column": 11
                          },
                          "text": "idx"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 62,
                            "column": 11
                          },
                          "end": {
                            "row": 62,
                            "column": 12
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 62,
                            "column": 12
                          },
                          "end": {
                            "row": 62,
                            "column": 27
                          },
                          "text": "_reset_identity"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 62,
                        "column": 27
                      },
                      "end": {
                        "row": 62,
                        "column": 29
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 62,
                            "column": 27
                          },
                          "end": {
                            "row": 62,
                            "column": 28
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 62,
                            "column": 28
                          },
                          "end": {
                            "row": 62,
                            "column": 29
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 63,
                "column": 8
              },
              "end": {
                "row": 63,
                "column": 77
              },
              "text": "idx._set_codes(codes, level=level, verify_integrity=verify_integrity)",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 63,
                    "column": 8
                  },
                  "end": {
                    "row": 63,
                    "column": 77
                  },
                  "text": "idx._set_codes(codes, level=level, verify_integrity=verify_integrity)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 63,
                        "column": 8
                      },
                      "end": {
                        "row": 63,
                        "column": 22
                      },
                      "text": "idx._set_codes",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 63,
                            "column": 8
                          },
                          "end": {
                            "row": 63,
                            "column": 11
                          },
                          "text": "idx"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 63,
                            "column": 11
                          },
                          "end": {
                            "row": 63,
                            "column": 12
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 63,
                            "column": 12
                          },
                          "end": {
                            "row": 63,
                            "column": 22
                          },
                          "text": "_set_codes"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 63,
                        "column": 22
                      },
                      "end": {
                        "row": 63,
                        "column": 77
                      },
                      "text": "(codes, level=level, verify_integrity=verify_integrity)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 63,
                            "column": 22
                          },
                          "end": {
                            "row": 63,
                            "column": 23
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 63,
                            "column": 23
                          },
                          "end": {
                            "row": 63,
                            "column": 28
                          },
                          "text": "codes"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 63,
                            "column": 28
                          },
                          "end": {
                            "row": 63,
                            "column": 29
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 63,
                            "column": 30
                          },
                          "end": {
                            "row": 63,
                            "column": 41
                          },
                          "text": "level=level",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 63,
                                "column": 30
                              },
                              "end": {
                                "row": 63,
                                "column": 35
                              },
                              "text": "level"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 63,
                                "column": 35
                              },
                              "end": {
                                "row": 63,
                                "column": 36
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 63,
                                "column": 36
                              },
                              "end": {
                                "row": 63,
                                "column": 41
                              },
                              "text": "level"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 63,
                            "column": 41
                          },
                          "end": {
                            "row": 63,
                            "column": 42
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 63,
                            "column": 43
                          },
                          "end": {
                            "row": 63,
                            "column": 76
                          },
                          "text": "verify_integrity=verify_integrity",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 63,
                                "column": 43
                              },
                              "end": {
                                "row": 63,
                                "column": 59
                              },
                              "text": "verify_integrity"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 63,
                                "column": 59
                              },
                              "end": {
                                "row": 63,
                                "column": 60
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 63,
                                "column": 60
                              },
                              "end": {
                                "row": 63,
                                "column": 76
                              },
                              "text": "verify_integrity"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 63,
                            "column": 76
                          },
                          "end": {
                            "row": 63,
                            "column": 77
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 64,
                "column": 8
              },
              "end": {
                "row": 65,
                "column": 22
              },
              "text": "if not inplace:\n            return idx",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 64,
                    "column": 8
                  },
                  "end": {
                    "row": 64,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 64,
                    "column": 11
                  },
                  "end": {
                    "row": 64,
                    "column": 22
                  },
                  "text": "not inplace",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 64,
                        "column": 11
                      },
                      "end": {
                        "row": 64,
                        "column": 14
                      },
                      "text": "not"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 64,
                        "column": 15
                      },
                      "end": {
                        "row": 64,
                        "column": 22
                      },
                      "text": "inplace"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 64,
                    "column": 22
                  },
                  "end": {
                    "row": 64,
                    "column": 23
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 65,
                    "column": 12
                  },
                  "end": {
                    "row": 65,
                    "column": 22
                  },
                  "text": "return idx",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 65,
                        "column": 12
                      },
                      "end": {
                        "row": 65,
                        "column": 22
                      },
                      "text": "return idx",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 65,
                            "column": 12
                          },
                          "end": {
                            "row": 65,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 65,
                            "column": 19
                          },
                          "end": {
                            "row": 65,
                            "column": 22
                          },
                          "text": "idx"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}