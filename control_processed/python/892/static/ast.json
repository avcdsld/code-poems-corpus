{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 31,
    "column": 76
  },
  "text": "def _fill(self, direction, limit=None):\n        \"\"\"\n        Shared function for `pad` and `backfill` to call Cython method.\n\n        Parameters\n        ----------\n        direction : {'ffill', 'bfill'}\n            Direction passed to underlying Cython function. `bfill` will cause\n            values to be filled backwards. `ffill` and any other values will\n            default to a forward fill\n        limit : int, default None\n            Maximum number of consecutive values to fill. If `None`, this\n            method will convert to -1 prior to passing to Cython\n\n        Returns\n        -------\n        `Series` or `DataFrame` with filled values\n\n        See Also\n        --------\n        pad\n        backfill\n        \"\"\"\n        # Need int value for Cython\n        if limit is None:\n            limit = -1\n\n        return self._get_cythonized_result('group_fillna_indexer',\n                                           self.grouper, needs_mask=True,\n                                           cython_dtype=np.int64,\n                                           result_is_index=True,\n                                           direction=direction, limit=limit)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 31,
        "column": 76
      },
      "text": "def _fill(self, direction, limit=None):\n        \"\"\"\n        Shared function for `pad` and `backfill` to call Cython method.\n\n        Parameters\n        ----------\n        direction : {'ffill', 'bfill'}\n            Direction passed to underlying Cython function. `bfill` will cause\n            values to be filled backwards. `ffill` and any other values will\n            default to a forward fill\n        limit : int, default None\n            Maximum number of consecutive values to fill. If `None`, this\n            method will convert to -1 prior to passing to Cython\n\n        Returns\n        -------\n        `Series` or `DataFrame` with filled values\n\n        See Also\n        --------\n        pad\n        backfill\n        \"\"\"\n        # Need int value for Cython\n        if limit is None:\n            limit = -1\n\n        return self._get_cythonized_result('group_fillna_indexer',\n                                           self.grouper, needs_mask=True,\n                                           cython_dtype=np.int64,\n                                           result_is_index=True,\n                                           direction=direction, limit=limit)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 9
          },
          "text": "_fill"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 0,
            "column": 38
          },
          "text": "(self, direction, limit=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 10
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "direction"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "limit=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 27
                  },
                  "end": {
                    "row": 0,
                    "column": 32
                  },
                  "text": "limit"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 32
                  },
                  "end": {
                    "row": 0,
                    "column": 33
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 33
                  },
                  "end": {
                    "row": 0,
                    "column": 37
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 38
          },
          "end": {
            "row": 0,
            "column": 39
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 31,
            "column": 76
          },
          "text": "\"\"\"\n        Shared function for `pad` and `backfill` to call Cython method.\n\n        Parameters\n        ----------\n        direction : {'ffill', 'bfill'}\n            Direction passed to underlying Cython function. `bfill` will cause\n            values to be filled backwards. `ffill` and any other values will\n            default to a forward fill\n        limit : int, default None\n            Maximum number of consecutive values to fill. If `None`, this\n            method will convert to -1 prior to passing to Cython\n\n        Returns\n        -------\n        `Series` or `DataFrame` with filled values\n\n        See Also\n        --------\n        pad\n        backfill\n        \"\"\"\n        # Need int value for Cython\n        if limit is None:\n            limit = -1\n\n        return self._get_cythonized_result('group_fillna_indexer',\n                                           self.grouper, needs_mask=True,\n                                           cython_dtype=np.int64,\n                                           result_is_index=True,\n                                           direction=direction, limit=limit)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 22,
                "column": 11
              },
              "text": "\"\"\"\n        Shared function for `pad` and `backfill` to call Cython method.\n\n        Parameters\n        ----------\n        direction : {'ffill', 'bfill'}\n            Direction passed to underlying Cython function. `bfill` will cause\n            values to be filled backwards. `ffill` and any other values will\n            default to a forward fill\n        limit : int, default None\n            Maximum number of consecutive values to fill. If `None`, this\n            method will convert to -1 prior to passing to Cython\n\n        Returns\n        -------\n        `Series` or `DataFrame` with filled values\n\n        See Also\n        --------\n        pad\n        backfill\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Shared function for `pad` and `backfill` to call Cython method.\n\n        Parameters\n        ----------\n        direction : {'ffill', 'bfill'}\n            Direction passed to underlying Cython function. `bfill` will cause\n            values to be filled backwards. `ffill` and any other values will\n            default to a forward fill\n        limit : int, default None\n            Maximum number of consecutive values to fill. If `None`, this\n            method will convert to -1 prior to passing to Cython\n\n        Returns\n        -------\n        `Series` or `DataFrame` with filled values\n\n        See Also\n        --------\n        pad\n        backfill\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 22,
                        "column": 8
                      },
                      "text": "\n        Shared function for `pad` and `backfill` to call Cython method.\n\n        Parameters\n        ----------\n        direction : {'ffill', 'bfill'}\n            Direction passed to underlying Cython function. `bfill` will cause\n            values to be filled backwards. `ffill` and any other values will\n            default to a forward fill\n        limit : int, default None\n            Maximum number of consecutive values to fill. If `None`, this\n            method will convert to -1 prior to passing to Cython\n\n        Returns\n        -------\n        `Series` or `DataFrame` with filled values\n\n        See Also\n        --------\n        pad\n        backfill\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 23,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 35
              },
              "text": "# Need int value for Cython"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 24,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 22
              },
              "text": "if limit is None:\n            limit = -1",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 24,
                    "column": 8
                  },
                  "end": {
                    "row": 24,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 24,
                    "column": 11
                  },
                  "end": {
                    "row": 24,
                    "column": 24
                  },
                  "text": "limit is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 11
                      },
                      "end": {
                        "row": 24,
                        "column": 16
                      },
                      "text": "limit"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 24,
                        "column": 17
                      },
                      "end": {
                        "row": 24,
                        "column": 19
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 24,
                        "column": 20
                      },
                      "end": {
                        "row": 24,
                        "column": 24
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 24,
                    "column": 24
                  },
                  "end": {
                    "row": 24,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 25,
                    "column": 12
                  },
                  "end": {
                    "row": 25,
                    "column": 22
                  },
                  "text": "limit = -1",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 25,
                        "column": 12
                      },
                      "end": {
                        "row": 25,
                        "column": 22
                      },
                      "text": "limit = -1",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 25,
                            "column": 12
                          },
                          "end": {
                            "row": 25,
                            "column": 22
                          },
                          "text": "limit = -1",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 12
                              },
                              "end": {
                                "row": 25,
                                "column": 17
                              },
                              "text": "limit"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 25,
                                "column": 18
                              },
                              "end": {
                                "row": 25,
                                "column": 19
                              },
                              "text": "="
                            },
                            {
                              "type": "unary_operator",
                              "start": {
                                "row": 25,
                                "column": 20
                              },
                              "end": {
                                "row": 25,
                                "column": 22
                              },
                              "text": "-1",
                              "children": [
                                {
                                  "type": "-",
                                  "start": {
                                    "row": 25,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 21
                                  },
                                  "text": "-"
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 25,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 22
                                  },
                                  "text": "1"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 27,
                "column": 8
              },
              "end": {
                "row": 31,
                "column": 76
              },
              "text": "return self._get_cythonized_result('group_fillna_indexer',\n                                           self.grouper, needs_mask=True,\n                                           cython_dtype=np.int64,\n                                           result_is_index=True,\n                                           direction=direction, limit=limit)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 27,
                    "column": 15
                  },
                  "end": {
                    "row": 31,
                    "column": 76
                  },
                  "text": "self._get_cythonized_result('group_fillna_indexer',\n                                           self.grouper, needs_mask=True,\n                                           cython_dtype=np.int64,\n                                           result_is_index=True,\n                                           direction=direction, limit=limit)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 27,
                        "column": 15
                      },
                      "end": {
                        "row": 27,
                        "column": 42
                      },
                      "text": "self._get_cythonized_result",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 15
                          },
                          "end": {
                            "row": 27,
                            "column": 19
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 27,
                            "column": 19
                          },
                          "end": {
                            "row": 27,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 27,
                            "column": 20
                          },
                          "end": {
                            "row": 27,
                            "column": 42
                          },
                          "text": "_get_cythonized_result"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 27,
                        "column": 42
                      },
                      "end": {
                        "row": 31,
                        "column": 76
                      },
                      "text": "('group_fillna_indexer',\n                                           self.grouper, needs_mask=True,\n                                           cython_dtype=np.int64,\n                                           result_is_index=True,\n                                           direction=direction, limit=limit)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 27,
                            "column": 42
                          },
                          "end": {
                            "row": 27,
                            "column": 43
                          },
                          "text": "("
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 27,
                            "column": 43
                          },
                          "end": {
                            "row": 27,
                            "column": 65
                          },
                          "text": "'group_fillna_indexer'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 27,
                                "column": 43
                              },
                              "end": {
                                "row": 27,
                                "column": 44
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 27,
                                "column": 44
                              },
                              "end": {
                                "row": 27,
                                "column": 64
                              },
                              "text": "group_fillna_indexer"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 27,
                                "column": 64
                              },
                              "end": {
                                "row": 27,
                                "column": 65
                              },
                              "text": "'"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 27,
                            "column": 65
                          },
                          "end": {
                            "row": 27,
                            "column": 66
                          },
                          "text": ","
                        },
                        {
                          "type": "attribute",
                          "start": {
                            "row": 28,
                            "column": 43
                          },
                          "end": {
                            "row": 28,
                            "column": 55
                          },
                          "text": "self.grouper",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 28,
                                "column": 43
                              },
                              "end": {
                                "row": 28,
                                "column": 47
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 28,
                                "column": 47
                              },
                              "end": {
                                "row": 28,
                                "column": 48
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 28,
                                "column": 48
                              },
                              "end": {
                                "row": 28,
                                "column": 55
                              },
                              "text": "grouper"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 28,
                            "column": 55
                          },
                          "end": {
                            "row": 28,
                            "column": 56
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 28,
                            "column": 57
                          },
                          "end": {
                            "row": 28,
                            "column": 72
                          },
                          "text": "needs_mask=True",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 28,
                                "column": 57
                              },
                              "end": {
                                "row": 28,
                                "column": 67
                              },
                              "text": "needs_mask"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 28,
                                "column": 67
                              },
                              "end": {
                                "row": 28,
                                "column": 68
                              },
                              "text": "="
                            },
                            {
                              "type": "true",
                              "start": {
                                "row": 28,
                                "column": 68
                              },
                              "end": {
                                "row": 28,
                                "column": 72
                              },
                              "text": "True"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 28,
                            "column": 72
                          },
                          "end": {
                            "row": 28,
                            "column": 73
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 29,
                            "column": 43
                          },
                          "end": {
                            "row": 29,
                            "column": 64
                          },
                          "text": "cython_dtype=np.int64",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 29,
                                "column": 43
                              },
                              "end": {
                                "row": 29,
                                "column": 55
                              },
                              "text": "cython_dtype"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 29,
                                "column": 55
                              },
                              "end": {
                                "row": 29,
                                "column": 56
                              },
                              "text": "="
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 29,
                                "column": 56
                              },
                              "end": {
                                "row": 29,
                                "column": 64
                              },
                              "text": "np.int64",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 58
                                  },
                                  "text": "np"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 29,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 59
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 64
                                  },
                                  "text": "int64"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 29,
                            "column": 64
                          },
                          "end": {
                            "row": 29,
                            "column": 65
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 30,
                            "column": 43
                          },
                          "end": {
                            "row": 30,
                            "column": 63
                          },
                          "text": "result_is_index=True",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 43
                              },
                              "end": {
                                "row": 30,
                                "column": 58
                              },
                              "text": "result_is_index"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 30,
                                "column": 58
                              },
                              "end": {
                                "row": 30,
                                "column": 59
                              },
                              "text": "="
                            },
                            {
                              "type": "true",
                              "start": {
                                "row": 30,
                                "column": 59
                              },
                              "end": {
                                "row": 30,
                                "column": 63
                              },
                              "text": "True"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 30,
                            "column": 63
                          },
                          "end": {
                            "row": 30,
                            "column": 64
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 31,
                            "column": 43
                          },
                          "end": {
                            "row": 31,
                            "column": 62
                          },
                          "text": "direction=direction",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 43
                              },
                              "end": {
                                "row": 31,
                                "column": 52
                              },
                              "text": "direction"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 31,
                                "column": 52
                              },
                              "end": {
                                "row": 31,
                                "column": 53
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 53
                              },
                              "end": {
                                "row": 31,
                                "column": 62
                              },
                              "text": "direction"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 31,
                            "column": 62
                          },
                          "end": {
                            "row": 31,
                            "column": 63
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 31,
                            "column": 64
                          },
                          "end": {
                            "row": 31,
                            "column": 75
                          },
                          "text": "limit=limit",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 64
                              },
                              "end": {
                                "row": 31,
                                "column": 69
                              },
                              "text": "limit"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 31,
                                "column": 69
                              },
                              "end": {
                                "row": 31,
                                "column": 70
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 31,
                                "column": 70
                              },
                              "end": {
                                "row": 31,
                                "column": 75
                              },
                              "text": "limit"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 31,
                            "column": 75
                          },
                          "end": {
                            "row": 31,
                            "column": 76
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}