{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 46,
    "column": 73
  },
  "text": "def op(name,\n       data,\n       display_name=None,\n       description=None,\n       collections=None):\n  \"\"\"Create a legacy text summary op.\n\n  Text data summarized via this plugin will be visible in the Text Dashboard\n  in TensorBoard. The standard TensorBoard Text Dashboard will render markdown\n  in the strings, and will automatically organize 1D and 2D tensors into tables.\n  If a tensor with more than 2 dimensions is provided, a 2D subarray will be\n  displayed along with a warning message. (Note that this behavior is not\n  intrinsic to the text summary API, but rather to the default TensorBoard text\n  plugin.)\n\n  Args:\n    name: A name for the generated node. Will also serve as a series name in\n      TensorBoard.\n    data: A string-type Tensor to summarize. The text must be encoded in UTF-8.\n    display_name: Optional name for this summary in TensorBoard, as a\n      constant `str`. Defaults to `name`.\n    description: Optional long-form description for this summary, as a\n      constant `str`. Markdown is supported. Defaults to empty.\n    collections: Optional list of ops.GraphKeys. The collections to which to add\n      the summary. Defaults to [Graph Keys.SUMMARIES].\n\n  Returns:\n    A TensorSummary op that is configured so that TensorBoard will recognize\n    that it contains textual data. The TensorSummary is a scalar `Tensor` of\n    type `string` which contains `Summary` protobufs.\n\n  Raises:\n    ValueError: If tensor has the wrong type.\n  \"\"\"\n  # TODO(nickfelt): remove on-demand imports once dep situation is fixed.\n  import tensorflow.compat.v1 as tf\n\n  if display_name is None:\n    display_name = name\n  summary_metadata = metadata.create_summary_metadata(\n      display_name=display_name, description=description)\n  with tf.name_scope(name):\n    with tf.control_dependencies([tf.assert_type(data, tf.string)]):\n      return tf.summary.tensor_summary(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 46,
        "column": 73
      },
      "text": "def op(name,\n       data,\n       display_name=None,\n       description=None,\n       collections=None):\n  \"\"\"Create a legacy text summary op.\n\n  Text data summarized via this plugin will be visible in the Text Dashboard\n  in TensorBoard. The standard TensorBoard Text Dashboard will render markdown\n  in the strings, and will automatically organize 1D and 2D tensors into tables.\n  If a tensor with more than 2 dimensions is provided, a 2D subarray will be\n  displayed along with a warning message. (Note that this behavior is not\n  intrinsic to the text summary API, but rather to the default TensorBoard text\n  plugin.)\n\n  Args:\n    name: A name for the generated node. Will also serve as a series name in\n      TensorBoard.\n    data: A string-type Tensor to summarize. The text must be encoded in UTF-8.\n    display_name: Optional name for this summary in TensorBoard, as a\n      constant `str`. Defaults to `name`.\n    description: Optional long-form description for this summary, as a\n      constant `str`. Markdown is supported. Defaults to empty.\n    collections: Optional list of ops.GraphKeys. The collections to which to add\n      the summary. Defaults to [Graph Keys.SUMMARIES].\n\n  Returns:\n    A TensorSummary op that is configured so that TensorBoard will recognize\n    that it contains textual data. The TensorSummary is a scalar `Tensor` of\n    type `string` which contains `Summary` protobufs.\n\n  Raises:\n    ValueError: If tensor has the wrong type.\n  \"\"\"\n  # TODO(nickfelt): remove on-demand imports once dep situation is fixed.\n  import tensorflow.compat.v1 as tf\n\n  if display_name is None:\n    display_name = name\n  summary_metadata = metadata.create_summary_metadata(\n      display_name=display_name, description=description)\n  with tf.name_scope(name):\n    with tf.control_dependencies([tf.assert_type(data, tf.string)]):\n      return tf.summary.tensor_summary(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 6
          },
          "text": "op"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 6
          },
          "end": {
            "row": 4,
            "column": 24
          },
          "text": "(name,\n       data,\n       display_name=None,\n       description=None,\n       collections=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 6
              },
              "end": {
                "row": 0,
                "column": 7
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 7
              },
              "end": {
                "row": 0,
                "column": 11
              },
              "text": "name"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 7
              },
              "end": {
                "row": 1,
                "column": 11
              },
              "text": "data"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 11
              },
              "end": {
                "row": 1,
                "column": 12
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 7
              },
              "end": {
                "row": 2,
                "column": 24
              },
              "text": "display_name=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 7
                  },
                  "end": {
                    "row": 2,
                    "column": 19
                  },
                  "text": "display_name"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 19
                  },
                  "end": {
                    "row": 2,
                    "column": 20
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 2,
                    "column": 20
                  },
                  "end": {
                    "row": 2,
                    "column": 24
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 24
              },
              "end": {
                "row": 2,
                "column": 25
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 7
              },
              "end": {
                "row": 3,
                "column": 23
              },
              "text": "description=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 7
                  },
                  "end": {
                    "row": 3,
                    "column": 18
                  },
                  "text": "description"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 18
                  },
                  "end": {
                    "row": 3,
                    "column": 19
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 3,
                    "column": 19
                  },
                  "end": {
                    "row": 3,
                    "column": 23
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 23
              },
              "end": {
                "row": 3,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 4,
                "column": 7
              },
              "end": {
                "row": 4,
                "column": 23
              },
              "text": "collections=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 7
                  },
                  "end": {
                    "row": 4,
                    "column": 18
                  },
                  "text": "collections"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 18
                  },
                  "end": {
                    "row": 4,
                    "column": 19
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 4,
                    "column": 19
                  },
                  "end": {
                    "row": 4,
                    "column": 23
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 4,
                "column": 23
              },
              "end": {
                "row": 4,
                "column": 24
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 4,
            "column": 24
          },
          "end": {
            "row": 4,
            "column": 25
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 5,
            "column": 2
          },
          "end": {
            "row": 46,
            "column": 73
          },
          "text": "\"\"\"Create a legacy text summary op.\n\n  Text data summarized via this plugin will be visible in the Text Dashboard\n  in TensorBoard. The standard TensorBoard Text Dashboard will render markdown\n  in the strings, and will automatically organize 1D and 2D tensors into tables.\n  If a tensor with more than 2 dimensions is provided, a 2D subarray will be\n  displayed along with a warning message. (Note that this behavior is not\n  intrinsic to the text summary API, but rather to the default TensorBoard text\n  plugin.)\n\n  Args:\n    name: A name for the generated node. Will also serve as a series name in\n      TensorBoard.\n    data: A string-type Tensor to summarize. The text must be encoded in UTF-8.\n    display_name: Optional name for this summary in TensorBoard, as a\n      constant `str`. Defaults to `name`.\n    description: Optional long-form description for this summary, as a\n      constant `str`. Markdown is supported. Defaults to empty.\n    collections: Optional list of ops.GraphKeys. The collections to which to add\n      the summary. Defaults to [Graph Keys.SUMMARIES].\n\n  Returns:\n    A TensorSummary op that is configured so that TensorBoard will recognize\n    that it contains textual data. The TensorSummary is a scalar `Tensor` of\n    type `string` which contains `Summary` protobufs.\n\n  Raises:\n    ValueError: If tensor has the wrong type.\n  \"\"\"\n  # TODO(nickfelt): remove on-demand imports once dep situation is fixed.\n  import tensorflow.compat.v1 as tf\n\n  if display_name is None:\n    display_name = name\n  summary_metadata = metadata.create_summary_metadata(\n      display_name=display_name, description=description)\n  with tf.name_scope(name):\n    with tf.control_dependencies([tf.assert_type(data, tf.string)]):\n      return tf.summary.tensor_summary(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 5,
                "column": 2
              },
              "end": {
                "row": 33,
                "column": 5
              },
              "text": "\"\"\"Create a legacy text summary op.\n\n  Text data summarized via this plugin will be visible in the Text Dashboard\n  in TensorBoard. The standard TensorBoard Text Dashboard will render markdown\n  in the strings, and will automatically organize 1D and 2D tensors into tables.\n  If a tensor with more than 2 dimensions is provided, a 2D subarray will be\n  displayed along with a warning message. (Note that this behavior is not\n  intrinsic to the text summary API, but rather to the default TensorBoard text\n  plugin.)\n\n  Args:\n    name: A name for the generated node. Will also serve as a series name in\n      TensorBoard.\n    data: A string-type Tensor to summarize. The text must be encoded in UTF-8.\n    display_name: Optional name for this summary in TensorBoard, as a\n      constant `str`. Defaults to `name`.\n    description: Optional long-form description for this summary, as a\n      constant `str`. Markdown is supported. Defaults to empty.\n    collections: Optional list of ops.GraphKeys. The collections to which to add\n      the summary. Defaults to [Graph Keys.SUMMARIES].\n\n  Returns:\n    A TensorSummary op that is configured so that TensorBoard will recognize\n    that it contains textual data. The TensorSummary is a scalar `Tensor` of\n    type `string` which contains `Summary` protobufs.\n\n  Raises:\n    ValueError: If tensor has the wrong type.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 5,
                    "column": 2
                  },
                  "end": {
                    "row": 33,
                    "column": 5
                  },
                  "text": "\"\"\"Create a legacy text summary op.\n\n  Text data summarized via this plugin will be visible in the Text Dashboard\n  in TensorBoard. The standard TensorBoard Text Dashboard will render markdown\n  in the strings, and will automatically organize 1D and 2D tensors into tables.\n  If a tensor with more than 2 dimensions is provided, a 2D subarray will be\n  displayed along with a warning message. (Note that this behavior is not\n  intrinsic to the text summary API, but rather to the default TensorBoard text\n  plugin.)\n\n  Args:\n    name: A name for the generated node. Will also serve as a series name in\n      TensorBoard.\n    data: A string-type Tensor to summarize. The text must be encoded in UTF-8.\n    display_name: Optional name for this summary in TensorBoard, as a\n      constant `str`. Defaults to `name`.\n    description: Optional long-form description for this summary, as a\n      constant `str`. Markdown is supported. Defaults to empty.\n    collections: Optional list of ops.GraphKeys. The collections to which to add\n      the summary. Defaults to [Graph Keys.SUMMARIES].\n\n  Returns:\n    A TensorSummary op that is configured so that TensorBoard will recognize\n    that it contains textual data. The TensorSummary is a scalar `Tensor` of\n    type `string` which contains `Summary` protobufs.\n\n  Raises:\n    ValueError: If tensor has the wrong type.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 5,
                        "column": 2
                      },
                      "end": {
                        "row": 5,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 5,
                        "column": 5
                      },
                      "end": {
                        "row": 33,
                        "column": 2
                      },
                      "text": "Create a legacy text summary op.\n\n  Text data summarized via this plugin will be visible in the Text Dashboard\n  in TensorBoard. The standard TensorBoard Text Dashboard will render markdown\n  in the strings, and will automatically organize 1D and 2D tensors into tables.\n  If a tensor with more than 2 dimensions is provided, a 2D subarray will be\n  displayed along with a warning message. (Note that this behavior is not\n  intrinsic to the text summary API, but rather to the default TensorBoard text\n  plugin.)\n\n  Args:\n    name: A name for the generated node. Will also serve as a series name in\n      TensorBoard.\n    data: A string-type Tensor to summarize. The text must be encoded in UTF-8.\n    display_name: Optional name for this summary in TensorBoard, as a\n      constant `str`. Defaults to `name`.\n    description: Optional long-form description for this summary, as a\n      constant `str`. Markdown is supported. Defaults to empty.\n    collections: Optional list of ops.GraphKeys. The collections to which to add\n      the summary. Defaults to [Graph Keys.SUMMARIES].\n\n  Returns:\n    A TensorSummary op that is configured so that TensorBoard will recognize\n    that it contains textual data. The TensorSummary is a scalar `Tensor` of\n    type `string` which contains `Summary` protobufs.\n\n  Raises:\n    ValueError: If tensor has the wrong type.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 33,
                        "column": 2
                      },
                      "end": {
                        "row": 33,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 34,
                "column": 2
              },
              "end": {
                "row": 34,
                "column": 73
              },
              "text": "# TODO(nickfelt): remove on-demand imports once dep situation is fixed."
            },
            {
              "type": "import_statement",
              "start": {
                "row": 35,
                "column": 2
              },
              "end": {
                "row": 35,
                "column": 35
              },
              "text": "import tensorflow.compat.v1 as tf",
              "children": [
                {
                  "type": "import",
                  "start": {
                    "row": 35,
                    "column": 2
                  },
                  "end": {
                    "row": 35,
                    "column": 8
                  },
                  "text": "import"
                },
                {
                  "type": "aliased_import",
                  "start": {
                    "row": 35,
                    "column": 9
                  },
                  "end": {
                    "row": 35,
                    "column": 35
                  },
                  "text": "tensorflow.compat.v1 as tf",
                  "children": [
                    {
                      "type": "dotted_name",
                      "start": {
                        "row": 35,
                        "column": 9
                      },
                      "end": {
                        "row": 35,
                        "column": 29
                      },
                      "text": "tensorflow.compat.v1",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 35,
                            "column": 9
                          },
                          "end": {
                            "row": 35,
                            "column": 19
                          },
                          "text": "tensorflow"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 35,
                            "column": 19
                          },
                          "end": {
                            "row": 35,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 35,
                            "column": 20
                          },
                          "end": {
                            "row": 35,
                            "column": 26
                          },
                          "text": "compat"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 35,
                            "column": 26
                          },
                          "end": {
                            "row": 35,
                            "column": 27
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 35,
                            "column": 27
                          },
                          "end": {
                            "row": 35,
                            "column": 29
                          },
                          "text": "v1"
                        }
                      ]
                    },
                    {
                      "type": "as",
                      "start": {
                        "row": 35,
                        "column": 30
                      },
                      "end": {
                        "row": 35,
                        "column": 32
                      },
                      "text": "as"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 35,
                        "column": 33
                      },
                      "end": {
                        "row": 35,
                        "column": 35
                      },
                      "text": "tf"
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 37,
                "column": 2
              },
              "end": {
                "row": 38,
                "column": 23
              },
              "text": "if display_name is None:\n    display_name = name",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 37,
                    "column": 2
                  },
                  "end": {
                    "row": 37,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 37,
                    "column": 5
                  },
                  "end": {
                    "row": 37,
                    "column": 25
                  },
                  "text": "display_name is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 37,
                        "column": 5
                      },
                      "end": {
                        "row": 37,
                        "column": 17
                      },
                      "text": "display_name"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 37,
                        "column": 18
                      },
                      "end": {
                        "row": 37,
                        "column": 20
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 37,
                        "column": 21
                      },
                      "end": {
                        "row": 37,
                        "column": 25
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 37,
                    "column": 25
                  },
                  "end": {
                    "row": 37,
                    "column": 26
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 38,
                    "column": 4
                  },
                  "end": {
                    "row": 38,
                    "column": 23
                  },
                  "text": "display_name = name",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 38,
                        "column": 4
                      },
                      "end": {
                        "row": 38,
                        "column": 23
                      },
                      "text": "display_name = name",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 38,
                            "column": 4
                          },
                          "end": {
                            "row": 38,
                            "column": 23
                          },
                          "text": "display_name = name",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 4
                              },
                              "end": {
                                "row": 38,
                                "column": 16
                              },
                              "text": "display_name"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 38,
                                "column": 17
                              },
                              "end": {
                                "row": 38,
                                "column": 18
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 19
                              },
                              "end": {
                                "row": 38,
                                "column": 23
                              },
                              "text": "name"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 39,
                "column": 2
              },
              "end": {
                "row": 40,
                "column": 57
              },
              "text": "summary_metadata = metadata.create_summary_metadata(\n      display_name=display_name, description=description)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 39,
                    "column": 2
                  },
                  "end": {
                    "row": 40,
                    "column": 57
                  },
                  "text": "summary_metadata = metadata.create_summary_metadata(\n      display_name=display_name, description=description)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 39,
                        "column": 2
                      },
                      "end": {
                        "row": 39,
                        "column": 18
                      },
                      "text": "summary_metadata"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 39,
                        "column": 19
                      },
                      "end": {
                        "row": 39,
                        "column": 20
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 39,
                        "column": 21
                      },
                      "end": {
                        "row": 40,
                        "column": 57
                      },
                      "text": "metadata.create_summary_metadata(\n      display_name=display_name, description=description)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 39,
                            "column": 21
                          },
                          "end": {
                            "row": 39,
                            "column": 53
                          },
                          "text": "metadata.create_summary_metadata",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 21
                              },
                              "end": {
                                "row": 39,
                                "column": 29
                              },
                              "text": "metadata"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 39,
                                "column": 29
                              },
                              "end": {
                                "row": 39,
                                "column": 30
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 30
                              },
                              "end": {
                                "row": 39,
                                "column": 53
                              },
                              "text": "create_summary_metadata"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 39,
                            "column": 53
                          },
                          "end": {
                            "row": 40,
                            "column": 57
                          },
                          "text": "(\n      display_name=display_name, description=description)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 39,
                                "column": 53
                              },
                              "end": {
                                "row": 39,
                                "column": 54
                              },
                              "text": "("
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 40,
                                "column": 6
                              },
                              "end": {
                                "row": 40,
                                "column": 31
                              },
                              "text": "display_name=display_name",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 18
                                  },
                                  "text": "display_name"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 40,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 19
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 31
                                  },
                                  "text": "display_name"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 40,
                                "column": 31
                              },
                              "end": {
                                "row": 40,
                                "column": 32
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 40,
                                "column": 33
                              },
                              "end": {
                                "row": 40,
                                "column": 56
                              },
                              "text": "description=description",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 44
                                  },
                                  "text": "description"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 40,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 45
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 56
                                  },
                                  "text": "description"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 40,
                                "column": 56
                              },
                              "end": {
                                "row": 40,
                                "column": 57
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "with_statement",
              "start": {
                "row": 41,
                "column": 2
              },
              "end": {
                "row": 46,
                "column": 73
              },
              "text": "with tf.name_scope(name):\n    with tf.control_dependencies([tf.assert_type(data, tf.string)]):\n      return tf.summary.tensor_summary(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
              "children": [
                {
                  "type": "with",
                  "start": {
                    "row": 41,
                    "column": 2
                  },
                  "end": {
                    "row": 41,
                    "column": 6
                  },
                  "text": "with"
                },
                {
                  "type": "with_clause",
                  "start": {
                    "row": 41,
                    "column": 7
                  },
                  "end": {
                    "row": 41,
                    "column": 26
                  },
                  "text": "tf.name_scope(name)",
                  "children": [
                    {
                      "type": "with_item",
                      "start": {
                        "row": 41,
                        "column": 7
                      },
                      "end": {
                        "row": 41,
                        "column": 26
                      },
                      "text": "tf.name_scope(name)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 41,
                            "column": 7
                          },
                          "end": {
                            "row": 41,
                            "column": 26
                          },
                          "text": "tf.name_scope(name)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 41,
                                "column": 7
                              },
                              "end": {
                                "row": 41,
                                "column": 20
                              },
                              "text": "tf.name_scope",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 9
                                  },
                                  "text": "tf"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 41,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 10
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 20
                                  },
                                  "text": "name_scope"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 41,
                                "column": 20
                              },
                              "end": {
                                "row": 41,
                                "column": 26
                              },
                              "text": "(name)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 41,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 41,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 25
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 41,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 26
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 41,
                    "column": 26
                  },
                  "end": {
                    "row": 41,
                    "column": 27
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 42,
                    "column": 4
                  },
                  "end": {
                    "row": 46,
                    "column": 73
                  },
                  "text": "with tf.control_dependencies([tf.assert_type(data, tf.string)]):\n      return tf.summary.tensor_summary(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
                  "children": [
                    {
                      "type": "with_statement",
                      "start": {
                        "row": 42,
                        "column": 4
                      },
                      "end": {
                        "row": 46,
                        "column": 73
                      },
                      "text": "with tf.control_dependencies([tf.assert_type(data, tf.string)]):\n      return tf.summary.tensor_summary(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
                      "children": [
                        {
                          "type": "with",
                          "start": {
                            "row": 42,
                            "column": 4
                          },
                          "end": {
                            "row": 42,
                            "column": 8
                          },
                          "text": "with"
                        },
                        {
                          "type": "with_clause",
                          "start": {
                            "row": 42,
                            "column": 9
                          },
                          "end": {
                            "row": 42,
                            "column": 67
                          },
                          "text": "tf.control_dependencies([tf.assert_type(data, tf.string)])",
                          "children": [
                            {
                              "type": "with_item",
                              "start": {
                                "row": 42,
                                "column": 9
                              },
                              "end": {
                                "row": 42,
                                "column": 67
                              },
                              "text": "tf.control_dependencies([tf.assert_type(data, tf.string)])",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 42,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 67
                                  },
                                  "text": "tf.control_dependencies([tf.assert_type(data, tf.string)])",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 42,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 32
                                      },
                                      "text": "tf.control_dependencies",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 42,
                                            "column": 9
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 11
                                          },
                                          "text": "tf"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 42,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 12
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 42,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 32
                                          },
                                          "text": "control_dependencies"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 42,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 67
                                      },
                                      "text": "([tf.assert_type(data, tf.string)])",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 42,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 33
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "list",
                                          "start": {
                                            "row": 42,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 66
                                          },
                                          "text": "[tf.assert_type(data, tf.string)]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 42,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 34
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 42,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 65
                                              },
                                              "text": "tf.assert_type(data, tf.string)",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 48
                                                  },
                                                  "text": "tf.assert_type",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 36
                                                      },
                                                      "text": "tf"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 37
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 37
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 48
                                                      },
                                                      "text": "assert_type"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 65
                                                  },
                                                  "text": "(data, tf.string)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 48
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 49
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 49
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 53
                                                      },
                                                      "text": "data"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 54
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 64
                                                      },
                                                      "text": "tf.string",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 55
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 57
                                                          },
                                                          "text": "tf"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 57
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 58
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 42,
                                                            "column": 58
                                                          },
                                                          "end": {
                                                            "row": 42,
                                                            "column": 64
                                                          },
                                                          "text": "string"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 42,
                                                        "column": 64
                                                      },
                                                      "end": {
                                                        "row": 42,
                                                        "column": 65
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 42,
                                                "column": 65
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 66
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 42,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 67
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 42,
                            "column": 67
                          },
                          "end": {
                            "row": 42,
                            "column": 68
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 43,
                            "column": 6
                          },
                          "end": {
                            "row": 46,
                            "column": 73
                          },
                          "text": "return tf.summary.tensor_summary(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
                          "children": [
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 43,
                                "column": 6
                              },
                              "end": {
                                "row": 46,
                                "column": 73
                              },
                              "text": "return tf.summary.tensor_summary(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 43,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 12
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 43,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 73
                                  },
                                  "text": "tf.summary.tensor_summary(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 43,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 38
                                      },
                                      "text": "tf.summary.tensor_summary",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 43,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 23
                                          },
                                          "text": "tf.summary",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 43,
                                                "column": 13
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 15
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 43,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 16
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 43,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 23
                                              },
                                              "text": "summary"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 43,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 24
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 43,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 38
                                          },
                                          "text": "tensor_summary"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 43,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 73
                                      },
                                      "text": "(name='text_summary',\n                                       tensor=data,\n                                       collections=collections,\n                                       summary_metadata=summary_metadata)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 43,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 39
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "keyword_argument",
                                          "start": {
                                            "row": 43,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 58
                                          },
                                          "text": "name='text_summary'",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 43,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 43
                                              },
                                              "text": "name"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 43,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 44
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 43,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 58
                                              },
                                              "text": "'text_summary'",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 45
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 57
                                                  },
                                                  "text": "text_summary"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 57
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 58
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 43,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 59
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "keyword_argument",
                                          "start": {
                                            "row": 44,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 50
                                          },
                                          "text": "tensor=data",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 44,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 45
                                              },
                                              "text": "tensor"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 44,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 46
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 44,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 44,
                                                "column": 50
                                              },
                                              "text": "data"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 44,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 51
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "keyword_argument",
                                          "start": {
                                            "row": 45,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 62
                                          },
                                          "text": "collections=collections",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 45,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 50
                                              },
                                              "text": "collections"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 45,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 51
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 45,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 45,
                                                "column": 62
                                              },
                                              "text": "collections"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 45,
                                            "column": 62
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 63
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "keyword_argument",
                                          "start": {
                                            "row": 46,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 72
                                          },
                                          "text": "summary_metadata=summary_metadata",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 46,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 55
                                              },
                                              "text": "summary_metadata"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 46,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 56
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 46,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 46,
                                                "column": 72
                                              },
                                              "text": "summary_metadata"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 46,
                                            "column": 72
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 73
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}