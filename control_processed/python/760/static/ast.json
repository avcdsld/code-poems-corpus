{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 24,
    "column": 38
  },
  "text": "def forward(self, input_ids, mems=None):\n        \"\"\" Params:\n                input_ids :: [bsz, len]\n                mems :: optional mems from previous forwar passes (or init_mems)\n                    list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    Note that the first two dimensions are transposed in `mems` with regards to `input_ids` and `target`\n            Returns:\n                tuple (last_hidden, new_mems) where:\n                    new_mems: list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    last_hidden: output of the last layer:\n                        shape :: [bsz, len, self.config.d_model]\n        \"\"\"\n        # the original code for Transformer-XL used shapes [len, bsz] but we want a unified interface in the library\n        # so we transpose here from shape [bsz, len] to shape [len, bsz]\n        input_ids = input_ids.transpose(0, 1).contiguous()\n\n        if mems is None:\n            mems = self.init_mems(input_ids)\n        last_hidden, new_mems = self._forward(input_ids, mems=mems)\n\n        # We transpose back here to shape [bsz, len, hidden_dim]\n        last_hidden = last_hidden.transpose(0, 1).contiguous()\n        return (last_hidden, new_mems)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 24,
        "column": 38
      },
      "text": "def forward(self, input_ids, mems=None):\n        \"\"\" Params:\n                input_ids :: [bsz, len]\n                mems :: optional mems from previous forwar passes (or init_mems)\n                    list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    Note that the first two dimensions are transposed in `mems` with regards to `input_ids` and `target`\n            Returns:\n                tuple (last_hidden, new_mems) where:\n                    new_mems: list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    last_hidden: output of the last layer:\n                        shape :: [bsz, len, self.config.d_model]\n        \"\"\"\n        # the original code for Transformer-XL used shapes [len, bsz] but we want a unified interface in the library\n        # so we transpose here from shape [bsz, len] to shape [len, bsz]\n        input_ids = input_ids.transpose(0, 1).contiguous()\n\n        if mems is None:\n            mems = self.init_mems(input_ids)\n        last_hidden, new_mems = self._forward(input_ids, mems=mems)\n\n        # We transpose back here to shape [bsz, len, hidden_dim]\n        last_hidden = last_hidden.transpose(0, 1).contiguous()\n        return (last_hidden, new_mems)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "forward"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 11
          },
          "end": {
            "row": 0,
            "column": 39
          },
          "text": "(self, input_ids, mems=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "input_ids"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": "mems=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 29
                  },
                  "end": {
                    "row": 0,
                    "column": 33
                  },
                  "text": "mems"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 33
                  },
                  "end": {
                    "row": 0,
                    "column": 34
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 34
                  },
                  "end": {
                    "row": 0,
                    "column": 38
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 39
          },
          "end": {
            "row": 0,
            "column": 40
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 24,
            "column": 38
          },
          "text": "\"\"\" Params:\n                input_ids :: [bsz, len]\n                mems :: optional mems from previous forwar passes (or init_mems)\n                    list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    Note that the first two dimensions are transposed in `mems` with regards to `input_ids` and `target`\n            Returns:\n                tuple (last_hidden, new_mems) where:\n                    new_mems: list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    last_hidden: output of the last layer:\n                        shape :: [bsz, len, self.config.d_model]\n        \"\"\"\n        # the original code for Transformer-XL used shapes [len, bsz] but we want a unified interface in the library\n        # so we transpose here from shape [bsz, len] to shape [len, bsz]\n        input_ids = input_ids.transpose(0, 1).contiguous()\n\n        if mems is None:\n            mems = self.init_mems(input_ids)\n        last_hidden, new_mems = self._forward(input_ids, mems=mems)\n\n        # We transpose back here to shape [bsz, len, hidden_dim]\n        last_hidden = last_hidden.transpose(0, 1).contiguous()\n        return (last_hidden, new_mems)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 11
              },
              "text": "\"\"\" Params:\n                input_ids :: [bsz, len]\n                mems :: optional mems from previous forwar passes (or init_mems)\n                    list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    Note that the first two dimensions are transposed in `mems` with regards to `input_ids` and `target`\n            Returns:\n                tuple (last_hidden, new_mems) where:\n                    new_mems: list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    last_hidden: output of the last layer:\n                        shape :: [bsz, len, self.config.d_model]\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 11
                  },
                  "text": "\"\"\" Params:\n                input_ids :: [bsz, len]\n                mems :: optional mems from previous forwar passes (or init_mems)\n                    list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    Note that the first two dimensions are transposed in `mems` with regards to `input_ids` and `target`\n            Returns:\n                tuple (last_hidden, new_mems) where:\n                    new_mems: list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    last_hidden: output of the last layer:\n                        shape :: [bsz, len, self.config.d_model]\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 13,
                        "column": 8
                      },
                      "text": " Params:\n                input_ids :: [bsz, len]\n                mems :: optional mems from previous forwar passes (or init_mems)\n                    list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    Note that the first two dimensions are transposed in `mems` with regards to `input_ids` and `target`\n            Returns:\n                tuple (last_hidden, new_mems) where:\n                    new_mems: list (num layers) of mem states at the entry of each layer\n                        shape :: [self.config.mem_len, bsz, self.config.d_model]\n                    last_hidden: output of the last layer:\n                        shape :: [bsz, len, self.config.d_model]\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 116
              },
              "text": "# the original code for Transformer-XL used shapes [len, bsz] but we want a unified interface in the library"
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 72
              },
              "text": "# so we transpose here from shape [bsz, len] to shape [len, bsz]"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 58
              },
              "text": "input_ids = input_ids.transpose(0, 1).contiguous()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 58
                  },
                  "text": "input_ids = input_ids.transpose(0, 1).contiguous()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 16,
                        "column": 17
                      },
                      "text": "input_ids"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 16,
                        "column": 18
                      },
                      "end": {
                        "row": 16,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 16,
                        "column": 20
                      },
                      "end": {
                        "row": 16,
                        "column": 58
                      },
                      "text": "input_ids.transpose(0, 1).contiguous()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 20
                          },
                          "end": {
                            "row": 16,
                            "column": 56
                          },
                          "text": "input_ids.transpose(0, 1).contiguous",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 16,
                                "column": 20
                              },
                              "end": {
                                "row": 16,
                                "column": 45
                              },
                              "text": "input_ids.transpose(0, 1)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 16,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 39
                                  },
                                  "text": "input_ids.transpose",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 29
                                      },
                                      "text": "input_ids"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 16,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 30
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 39
                                      },
                                      "text": "transpose"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 16,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 45
                                  },
                                  "text": "(0, 1)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 16,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 40
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 16,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 41
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 16,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 42
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 16,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 44
                                      },
                                      "text": "1"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 16,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 45
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 45
                              },
                              "end": {
                                "row": 16,
                                "column": 46
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 46
                              },
                              "end": {
                                "row": 16,
                                "column": 56
                              },
                              "text": "contiguous"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 16,
                            "column": 56
                          },
                          "end": {
                            "row": 16,
                            "column": 58
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 16,
                                "column": 56
                              },
                              "end": {
                                "row": 16,
                                "column": 57
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 57
                              },
                              "end": {
                                "row": 16,
                                "column": 58
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 44
              },
              "text": "if mems is None:\n            mems = self.init_mems(input_ids)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 18,
                    "column": 11
                  },
                  "end": {
                    "row": 18,
                    "column": 23
                  },
                  "text": "mems is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 11
                      },
                      "end": {
                        "row": 18,
                        "column": 15
                      },
                      "text": "mems"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 18,
                        "column": 16
                      },
                      "end": {
                        "row": 18,
                        "column": 18
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 18,
                        "column": 19
                      },
                      "end": {
                        "row": 18,
                        "column": 23
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 18,
                    "column": 23
                  },
                  "end": {
                    "row": 18,
                    "column": 24
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 19,
                    "column": 12
                  },
                  "end": {
                    "row": 19,
                    "column": 44
                  },
                  "text": "mems = self.init_mems(input_ids)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 19,
                        "column": 12
                      },
                      "end": {
                        "row": 19,
                        "column": 44
                      },
                      "text": "mems = self.init_mems(input_ids)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 19,
                            "column": 12
                          },
                          "end": {
                            "row": 19,
                            "column": 44
                          },
                          "text": "mems = self.init_mems(input_ids)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 12
                              },
                              "end": {
                                "row": 19,
                                "column": 16
                              },
                              "text": "mems"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 19,
                                "column": 17
                              },
                              "end": {
                                "row": 19,
                                "column": 18
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 19,
                                "column": 19
                              },
                              "end": {
                                "row": 19,
                                "column": 44
                              },
                              "text": "self.init_mems(input_ids)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 19,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 33
                                  },
                                  "text": "self.init_mems",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 19,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 23
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 19,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 24
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 19,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 33
                                      },
                                      "text": "init_mems"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 19,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 44
                                  },
                                  "text": "(input_ids)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 19,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 34
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 19,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 43
                                      },
                                      "text": "input_ids"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 19,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 44
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 67
              },
              "text": "last_hidden, new_mems = self._forward(input_ids, mems=mems)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 67
                  },
                  "text": "last_hidden, new_mems = self._forward(input_ids, mems=mems)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 20,
                        "column": 8
                      },
                      "end": {
                        "row": 20,
                        "column": 29
                      },
                      "text": "last_hidden, new_mems",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 8
                          },
                          "end": {
                            "row": 20,
                            "column": 19
                          },
                          "text": "last_hidden"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 20,
                            "column": 19
                          },
                          "end": {
                            "row": 20,
                            "column": 20
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 21
                          },
                          "end": {
                            "row": 20,
                            "column": 29
                          },
                          "text": "new_mems"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 30
                      },
                      "end": {
                        "row": 20,
                        "column": 31
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 20,
                        "column": 32
                      },
                      "end": {
                        "row": 20,
                        "column": 67
                      },
                      "text": "self._forward(input_ids, mems=mems)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 20,
                            "column": 32
                          },
                          "end": {
                            "row": 20,
                            "column": 45
                          },
                          "text": "self._forward",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 32
                              },
                              "end": {
                                "row": 20,
                                "column": 36
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 20,
                                "column": 36
                              },
                              "end": {
                                "row": 20,
                                "column": 37
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 37
                              },
                              "end": {
                                "row": 20,
                                "column": 45
                              },
                              "text": "_forward"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 20,
                            "column": 45
                          },
                          "end": {
                            "row": 20,
                            "column": 67
                          },
                          "text": "(input_ids, mems=mems)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 20,
                                "column": 45
                              },
                              "end": {
                                "row": 20,
                                "column": 46
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 46
                              },
                              "end": {
                                "row": 20,
                                "column": 55
                              },
                              "text": "input_ids"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 20,
                                "column": 55
                              },
                              "end": {
                                "row": 20,
                                "column": 56
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 20,
                                "column": 57
                              },
                              "end": {
                                "row": 20,
                                "column": 66
                              },
                              "text": "mems=mems",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 61
                                  },
                                  "text": "mems"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 20,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 62
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 66
                                  },
                                  "text": "mems"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 20,
                                "column": 66
                              },
                              "end": {
                                "row": 20,
                                "column": 67
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 22,
                "column": 8
              },
              "end": {
                "row": 22,
                "column": 64
              },
              "text": "# We transpose back here to shape [bsz, len, hidden_dim]"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 23,
                "column": 8
              },
              "end": {
                "row": 23,
                "column": 62
              },
              "text": "last_hidden = last_hidden.transpose(0, 1).contiguous()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 62
                  },
                  "text": "last_hidden = last_hidden.transpose(0, 1).contiguous()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 19
                      },
                      "text": "last_hidden"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 23,
                        "column": 20
                      },
                      "end": {
                        "row": 23,
                        "column": 21
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 23,
                        "column": 22
                      },
                      "end": {
                        "row": 23,
                        "column": 62
                      },
                      "text": "last_hidden.transpose(0, 1).contiguous()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 23,
                            "column": 22
                          },
                          "end": {
                            "row": 23,
                            "column": 60
                          },
                          "text": "last_hidden.transpose(0, 1).contiguous",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 23,
                                "column": 22
                              },
                              "end": {
                                "row": 23,
                                "column": 49
                              },
                              "text": "last_hidden.transpose(0, 1)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 23,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 43
                                  },
                                  "text": "last_hidden.transpose",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 33
                                      },
                                      "text": "last_hidden"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 23,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 34
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 43
                                      },
                                      "text": "transpose"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 23,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 49
                                  },
                                  "text": "(0, 1)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 23,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 44
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 23,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 45
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 23,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 46
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 23,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 48
                                      },
                                      "text": "1"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 23,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 49
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 23,
                                "column": 49
                              },
                              "end": {
                                "row": 23,
                                "column": 50
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 50
                              },
                              "end": {
                                "row": 23,
                                "column": 60
                              },
                              "text": "contiguous"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 23,
                            "column": 60
                          },
                          "end": {
                            "row": 23,
                            "column": 62
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 23,
                                "column": 60
                              },
                              "end": {
                                "row": 23,
                                "column": 61
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 23,
                                "column": 61
                              },
                              "end": {
                                "row": 23,
                                "column": 62
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 24,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 38
              },
              "text": "return (last_hidden, new_mems)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 24,
                    "column": 8
                  },
                  "end": {
                    "row": 24,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "tuple",
                  "start": {
                    "row": 24,
                    "column": 15
                  },
                  "end": {
                    "row": 24,
                    "column": 38
                  },
                  "text": "(last_hidden, new_mems)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 24,
                        "column": 15
                      },
                      "end": {
                        "row": 24,
                        "column": 16
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 16
                      },
                      "end": {
                        "row": 24,
                        "column": 27
                      },
                      "text": "last_hidden"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 24,
                        "column": 27
                      },
                      "end": {
                        "row": 24,
                        "column": 28
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 29
                      },
                      "end": {
                        "row": 24,
                        "column": 37
                      },
                      "text": "new_mems"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 24,
                        "column": 37
                      },
                      "end": {
                        "row": 24,
                        "column": 38
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}