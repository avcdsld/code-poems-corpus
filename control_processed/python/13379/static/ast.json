{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 42,
    "column": 31
  },
  "text": "def get_num_gpu():\n    \"\"\"\n    Returns:\n        int: #available GPUs in CUDA_VISIBLE_DEVICES, or in the system.\n    \"\"\"\n\n    def warn_return(ret, message):\n        try:\n            import tensorflow as tf\n        except ImportError:\n            return ret\n\n        built_with_cuda = tf.test.is_built_with_cuda()\n        if not built_with_cuda and ret > 0:\n            logger.warn(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")\n        return ret\n\n    env = os.environ.get('CUDA_VISIBLE_DEVICES', None)\n    if env:\n        return warn_return(len(env.split(',')), \"Found non-empty CUDA_VISIBLE_DEVICES. \")\n    output, code = subproc_call(\"nvidia-smi -L\", timeout=5)\n    if code == 0:\n        output = output.decode('utf-8')\n        return warn_return(len(output.strip().split('\\n')), \"Found nvidia-smi. \")\n    try:\n        # Use NVML to query device properties\n        with NVMLContext() as ctx:\n            return warn_return(ctx.num_devices(), \"NVML found nvidia devices. \")\n    except Exception:\n        # Fallback\n        logger.info(\"Loading local devices by TensorFlow ...\")\n\n        try:\n            import tensorflow as tf\n            # available since TF 1.14\n            gpu_devices = tf.config.experimental.list_physical_devices('GPU')\n        except AttributeError:\n            from tensorflow.python.client import device_lib\n            local_device_protos = device_lib.list_local_devices()\n            # Note this will initialize all GPUs and therefore has side effect\n            # https://github.com/tensorflow/tensorflow/issues/8136\n            gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']\n        return len(gpu_devices)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 42,
        "column": 31
      },
      "text": "def get_num_gpu():\n    \"\"\"\n    Returns:\n        int: #available GPUs in CUDA_VISIBLE_DEVICES, or in the system.\n    \"\"\"\n\n    def warn_return(ret, message):\n        try:\n            import tensorflow as tf\n        except ImportError:\n            return ret\n\n        built_with_cuda = tf.test.is_built_with_cuda()\n        if not built_with_cuda and ret > 0:\n            logger.warn(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")\n        return ret\n\n    env = os.environ.get('CUDA_VISIBLE_DEVICES', None)\n    if env:\n        return warn_return(len(env.split(',')), \"Found non-empty CUDA_VISIBLE_DEVICES. \")\n    output, code = subproc_call(\"nvidia-smi -L\", timeout=5)\n    if code == 0:\n        output = output.decode('utf-8')\n        return warn_return(len(output.strip().split('\\n')), \"Found nvidia-smi. \")\n    try:\n        # Use NVML to query device properties\n        with NVMLContext() as ctx:\n            return warn_return(ctx.num_devices(), \"NVML found nvidia devices. \")\n    except Exception:\n        # Fallback\n        logger.info(\"Loading local devices by TensorFlow ...\")\n\n        try:\n            import tensorflow as tf\n            # available since TF 1.14\n            gpu_devices = tf.config.experimental.list_physical_devices('GPU')\n        except AttributeError:\n            from tensorflow.python.client import device_lib\n            local_device_protos = device_lib.list_local_devices()\n            # Note this will initialize all GPUs and therefore has side effect\n            # https://github.com/tensorflow/tensorflow/issues/8136\n            gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']\n        return len(gpu_devices)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 15
          },
          "text": "get_num_gpu"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 15
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "()",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "("
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 17
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 42,
            "column": 31
          },
          "text": "\"\"\"\n    Returns:\n        int: #available GPUs in CUDA_VISIBLE_DEVICES, or in the system.\n    \"\"\"\n\n    def warn_return(ret, message):\n        try:\n            import tensorflow as tf\n        except ImportError:\n            return ret\n\n        built_with_cuda = tf.test.is_built_with_cuda()\n        if not built_with_cuda and ret > 0:\n            logger.warn(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")\n        return ret\n\n    env = os.environ.get('CUDA_VISIBLE_DEVICES', None)\n    if env:\n        return warn_return(len(env.split(',')), \"Found non-empty CUDA_VISIBLE_DEVICES. \")\n    output, code = subproc_call(\"nvidia-smi -L\", timeout=5)\n    if code == 0:\n        output = output.decode('utf-8')\n        return warn_return(len(output.strip().split('\\n')), \"Found nvidia-smi. \")\n    try:\n        # Use NVML to query device properties\n        with NVMLContext() as ctx:\n            return warn_return(ctx.num_devices(), \"NVML found nvidia devices. \")\n    except Exception:\n        # Fallback\n        logger.info(\"Loading local devices by TensorFlow ...\")\n\n        try:\n            import tensorflow as tf\n            # available since TF 1.14\n            gpu_devices = tf.config.experimental.list_physical_devices('GPU')\n        except AttributeError:\n            from tensorflow.python.client import device_lib\n            local_device_protos = device_lib.list_local_devices()\n            # Note this will initialize all GPUs and therefore has side effect\n            # https://github.com/tensorflow/tensorflow/issues/8136\n            gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']\n        return len(gpu_devices)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 7
              },
              "text": "\"\"\"\n    Returns:\n        int: #available GPUs in CUDA_VISIBLE_DEVICES, or in the system.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 4,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Returns:\n        int: #available GPUs in CUDA_VISIBLE_DEVICES, or in the system.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 4,
                        "column": 4
                      },
                      "text": "\n    Returns:\n        int: #available GPUs in CUDA_VISIBLE_DEVICES, or in the system.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 4,
                        "column": 4
                      },
                      "end": {
                        "row": 4,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 15,
                "column": 18
              },
              "text": "def warn_return(ret, message):\n        try:\n            import tensorflow as tf\n        except ImportError:\n            return ret\n\n        built_with_cuda = tf.test.is_built_with_cuda()\n        if not built_with_cuda and ret > 0:\n            logger.warn(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")\n        return ret",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 6,
                    "column": 7
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 19
                  },
                  "text": "warn_return"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 6,
                    "column": 19
                  },
                  "end": {
                    "row": 6,
                    "column": 33
                  },
                  "text": "(ret, message)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 6,
                        "column": 19
                      },
                      "end": {
                        "row": 6,
                        "column": 20
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 20
                      },
                      "end": {
                        "row": 6,
                        "column": 23
                      },
                      "text": "ret"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 6,
                        "column": 23
                      },
                      "end": {
                        "row": 6,
                        "column": 24
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 25
                      },
                      "end": {
                        "row": 6,
                        "column": 32
                      },
                      "text": "message"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 6,
                        "column": 32
                      },
                      "end": {
                        "row": 6,
                        "column": 33
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 6,
                    "column": 33
                  },
                  "end": {
                    "row": 6,
                    "column": 34
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 18
                  },
                  "text": "try:\n            import tensorflow as tf\n        except ImportError:\n            return ret\n\n        built_with_cuda = tf.test.is_built_with_cuda()\n        if not built_with_cuda and ret > 0:\n            logger.warn(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")\n        return ret",
                  "children": [
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 10,
                        "column": 22
                      },
                      "text": "try:\n            import tensorflow as tf\n        except ImportError:\n            return ret",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 7,
                            "column": 8
                          },
                          "end": {
                            "row": 7,
                            "column": 11
                          },
                          "text": "try"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 7,
                            "column": 11
                          },
                          "end": {
                            "row": 7,
                            "column": 12
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 8,
                            "column": 12
                          },
                          "end": {
                            "row": 8,
                            "column": 35
                          },
                          "text": "import tensorflow as tf",
                          "children": [
                            {
                              "type": "import_statement",
                              "start": {
                                "row": 8,
                                "column": 12
                              },
                              "end": {
                                "row": 8,
                                "column": 35
                              },
                              "text": "import tensorflow as tf",
                              "children": [
                                {
                                  "type": "import",
                                  "start": {
                                    "row": 8,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 18
                                  },
                                  "text": "import"
                                },
                                {
                                  "type": "aliased_import",
                                  "start": {
                                    "row": 8,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 35
                                  },
                                  "text": "tensorflow as tf",
                                  "children": [
                                    {
                                      "type": "dotted_name",
                                      "start": {
                                        "row": 8,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 29
                                      },
                                      "text": "tensorflow",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 8,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 29
                                          },
                                          "text": "tensorflow"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "as",
                                      "start": {
                                        "row": 8,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 32
                                      },
                                      "text": "as"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 8,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 35
                                      },
                                      "text": "tf"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "except_clause",
                          "start": {
                            "row": 9,
                            "column": 8
                          },
                          "end": {
                            "row": 10,
                            "column": 22
                          },
                          "text": "except ImportError:\n            return ret",
                          "children": [
                            {
                              "type": "except",
                              "start": {
                                "row": 9,
                                "column": 8
                              },
                              "end": {
                                "row": 9,
                                "column": 14
                              },
                              "text": "except"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 15
                              },
                              "end": {
                                "row": 9,
                                "column": 26
                              },
                              "text": "ImportError"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 9,
                                "column": 26
                              },
                              "end": {
                                "row": 9,
                                "column": 27
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 10,
                                "column": 12
                              },
                              "end": {
                                "row": 10,
                                "column": 22
                              },
                              "text": "return ret",
                              "children": [
                                {
                                  "type": "return_statement",
                                  "start": {
                                    "row": 10,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 10,
                                    "column": 22
                                  },
                                  "text": "return ret",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start": {
                                        "row": 10,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 18
                                      },
                                      "text": "return"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 10,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 10,
                                        "column": 22
                                      },
                                      "text": "ret"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 12,
                        "column": 8
                      },
                      "end": {
                        "row": 12,
                        "column": 54
                      },
                      "text": "built_with_cuda = tf.test.is_built_with_cuda()",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 12,
                            "column": 8
                          },
                          "end": {
                            "row": 12,
                            "column": 54
                          },
                          "text": "built_with_cuda = tf.test.is_built_with_cuda()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 8
                              },
                              "end": {
                                "row": 12,
                                "column": 23
                              },
                              "text": "built_with_cuda"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 12,
                                "column": 24
                              },
                              "end": {
                                "row": 12,
                                "column": 25
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 12,
                                "column": 26
                              },
                              "end": {
                                "row": 12,
                                "column": 54
                              },
                              "text": "tf.test.is_built_with_cuda()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 12,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 52
                                  },
                                  "text": "tf.test.is_built_with_cuda",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 12,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 33
                                      },
                                      "text": "tf.test",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 28
                                          },
                                          "text": "tf"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 12,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 29
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 12,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 33
                                          },
                                          "text": "test"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 12,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 34
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 52
                                      },
                                      "text": "is_built_with_cuda"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 12,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 54
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 12,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 53
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 12,
                                        "column": 53
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 54
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 107
                      },
                      "text": "if not built_with_cuda and ret > 0:\n            logger.warn(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 13,
                            "column": 8
                          },
                          "end": {
                            "row": 13,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "boolean_operator",
                          "start": {
                            "row": 13,
                            "column": 11
                          },
                          "end": {
                            "row": 13,
                            "column": 42
                          },
                          "text": "not built_with_cuda and ret > 0",
                          "children": [
                            {
                              "type": "not_operator",
                              "start": {
                                "row": 13,
                                "column": 11
                              },
                              "end": {
                                "row": 13,
                                "column": 30
                              },
                              "text": "not built_with_cuda",
                              "children": [
                                {
                                  "type": "not",
                                  "start": {
                                    "row": 13,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 14
                                  },
                                  "text": "not"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 30
                                  },
                                  "text": "built_with_cuda"
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "start": {
                                "row": 13,
                                "column": 31
                              },
                              "end": {
                                "row": 13,
                                "column": 34
                              },
                              "text": "and"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 13,
                                "column": 35
                              },
                              "end": {
                                "row": 13,
                                "column": 42
                              },
                              "text": "ret > 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 13,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 38
                                  },
                                  "text": "ret"
                                },
                                {
                                  "type": ">",
                                  "start": {
                                    "row": 13,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 40
                                  },
                                  "text": ">"
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 13,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 13,
                                    "column": 42
                                  },
                                  "text": "0"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 13,
                            "column": 42
                          },
                          "end": {
                            "row": 13,
                            "column": 43
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 14,
                            "column": 12
                          },
                          "end": {
                            "row": 14,
                            "column": 107
                          },
                          "text": "logger.warn(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 14,
                                "column": 12
                              },
                              "end": {
                                "row": 14,
                                "column": 107
                              },
                              "text": "logger.warn(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 14,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 107
                                  },
                                  "text": "logger.warn(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 14,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 23
                                      },
                                      "text": "logger.warn",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 18
                                          },
                                          "text": "logger"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 14,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 19
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 14,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 23
                                          },
                                          "text": "warn"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 14,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 107
                                      },
                                      "text": "(message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\")",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 14,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 24
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_operator",
                                          "start": {
                                            "row": 14,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 106
                                          },
                                          "text": "message + \"But TensorFlow was not built with CUDA support and could not use GPUs!\"",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 14,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 31
                                              },
                                              "text": "message"
                                            },
                                            {
                                              "type": "+",
                                              "start": {
                                                "row": 14,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 33
                                              },
                                              "text": "+"
                                            },
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 14,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 14,
                                                "column": 106
                                              },
                                              "text": "\"But TensorFlow was not built with CUDA support and could not use GPUs!\"",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 35
                                                  },
                                                  "text": "\""
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 105
                                                  },
                                                  "text": "But TensorFlow was not built with CUDA support and could not use GPUs!"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 14,
                                                    "column": 105
                                                  },
                                                  "end": {
                                                    "row": 14,
                                                    "column": 106
                                                  },
                                                  "text": "\""
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 14,
                                            "column": 106
                                          },
                                          "end": {
                                            "row": 14,
                                            "column": 107
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 18
                      },
                      "text": "return ret",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 15
                          },
                          "end": {
                            "row": 15,
                            "column": 18
                          },
                          "text": "ret"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 17,
                "column": 54
              },
              "text": "env = os.environ.get('CUDA_VISIBLE_DEVICES', None)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 54
                  },
                  "text": "env = os.environ.get('CUDA_VISIBLE_DEVICES', None)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 4
                      },
                      "end": {
                        "row": 17,
                        "column": 7
                      },
                      "text": "env"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 17,
                        "column": 10
                      },
                      "end": {
                        "row": 17,
                        "column": 54
                      },
                      "text": "os.environ.get('CUDA_VISIBLE_DEVICES', None)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 17,
                            "column": 10
                          },
                          "end": {
                            "row": 17,
                            "column": 24
                          },
                          "text": "os.environ.get",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 17,
                                "column": 10
                              },
                              "end": {
                                "row": 17,
                                "column": 20
                              },
                              "text": "os.environ",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 12
                                  },
                                  "text": "os"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 17,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 13
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 17,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 20
                                  },
                                  "text": "environ"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 17,
                                "column": 20
                              },
                              "end": {
                                "row": 17,
                                "column": 21
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 21
                              },
                              "end": {
                                "row": 17,
                                "column": 24
                              },
                              "text": "get"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 17,
                            "column": 24
                          },
                          "end": {
                            "row": 17,
                            "column": 54
                          },
                          "text": "('CUDA_VISIBLE_DEVICES', None)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 17,
                                "column": 24
                              },
                              "end": {
                                "row": 17,
                                "column": 25
                              },
                              "text": "("
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 17,
                                "column": 25
                              },
                              "end": {
                                "row": 17,
                                "column": 47
                              },
                              "text": "'CUDA_VISIBLE_DEVICES'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 17,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 26
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 17,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 46
                                  },
                                  "text": "CUDA_VISIBLE_DEVICES"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 17,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 47
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 17,
                                "column": 47
                              },
                              "end": {
                                "row": 17,
                                "column": 48
                              },
                              "text": ","
                            },
                            {
                              "type": "none",
                              "start": {
                                "row": 17,
                                "column": 49
                              },
                              "end": {
                                "row": 17,
                                "column": 53
                              },
                              "text": "None"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 17,
                                "column": 53
                              },
                              "end": {
                                "row": 17,
                                "column": 54
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 18,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 89
              },
              "text": "if env:\n        return warn_return(len(env.split(',')), \"Found non-empty CUDA_VISIBLE_DEVICES. \")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 18,
                    "column": 4
                  },
                  "end": {
                    "row": 18,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 18,
                    "column": 7
                  },
                  "end": {
                    "row": 18,
                    "column": 10
                  },
                  "text": "env"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 18,
                    "column": 10
                  },
                  "end": {
                    "row": 18,
                    "column": 11
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 89
                  },
                  "text": "return warn_return(len(env.split(',')), \"Found non-empty CUDA_VISIBLE_DEVICES. \")",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 19,
                        "column": 8
                      },
                      "end": {
                        "row": 19,
                        "column": 89
                      },
                      "text": "return warn_return(len(env.split(',')), \"Found non-empty CUDA_VISIBLE_DEVICES. \")",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 19,
                            "column": 8
                          },
                          "end": {
                            "row": 19,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 19,
                            "column": 15
                          },
                          "end": {
                            "row": 19,
                            "column": 89
                          },
                          "text": "warn_return(len(env.split(',')), \"Found non-empty CUDA_VISIBLE_DEVICES. \")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 15
                              },
                              "end": {
                                "row": 19,
                                "column": 26
                              },
                              "text": "warn_return"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 19,
                                "column": 26
                              },
                              "end": {
                                "row": 19,
                                "column": 89
                              },
                              "text": "(len(env.split(',')), \"Found non-empty CUDA_VISIBLE_DEVICES. \")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 19,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 27
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 19,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 46
                                  },
                                  "text": "len(env.split(','))",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 19,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 30
                                      },
                                      "text": "len"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 19,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 46
                                      },
                                      "text": "(env.split(','))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 19,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 31
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 19,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 45
                                          },
                                          "text": "env.split(',')",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 19,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 40
                                              },
                                              "text": "env.split",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 34
                                                  },
                                                  "text": "env"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 35
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 40
                                                  },
                                                  "text": "split"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 19,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 19,
                                                "column": 45
                                              },
                                              "text": "(',')",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 41
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 44
                                                  },
                                                  "text": "','",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 41
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 42
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 42
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 43
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 19,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 19,
                                                        "column": 44
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 19,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 19,
                                                    "column": 45
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 19,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 19,
                                            "column": 46
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 19,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 47
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 19,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 88
                                  },
                                  "text": "\"Found non-empty CUDA_VISIBLE_DEVICES. \"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 19,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 49
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 19,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 87
                                      },
                                      "text": "Found non-empty CUDA_VISIBLE_DEVICES. "
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 19,
                                        "column": 87
                                      },
                                      "end": {
                                        "row": 19,
                                        "column": 88
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 19,
                                    "column": 88
                                  },
                                  "end": {
                                    "row": 19,
                                    "column": 89
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 59
              },
              "text": "output, code = subproc_call(\"nvidia-smi -L\", timeout=5)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 59
                  },
                  "text": "output, code = subproc_call(\"nvidia-smi -L\", timeout=5)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 20,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 16
                      },
                      "text": "output, code",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 4
                          },
                          "end": {
                            "row": 20,
                            "column": 10
                          },
                          "text": "output"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 20,
                            "column": 10
                          },
                          "end": {
                            "row": 20,
                            "column": 11
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 12
                          },
                          "end": {
                            "row": 20,
                            "column": 16
                          },
                          "text": "code"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 20,
                        "column": 17
                      },
                      "end": {
                        "row": 20,
                        "column": 18
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 20,
                        "column": 19
                      },
                      "end": {
                        "row": 20,
                        "column": 59
                      },
                      "text": "subproc_call(\"nvidia-smi -L\", timeout=5)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 19
                          },
                          "end": {
                            "row": 20,
                            "column": 31
                          },
                          "text": "subproc_call"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 20,
                            "column": 31
                          },
                          "end": {
                            "row": 20,
                            "column": 59
                          },
                          "text": "(\"nvidia-smi -L\", timeout=5)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 20,
                                "column": 31
                              },
                              "end": {
                                "row": 20,
                                "column": 32
                              },
                              "text": "("
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 20,
                                "column": 32
                              },
                              "end": {
                                "row": 20,
                                "column": 47
                              },
                              "text": "\"nvidia-smi -L\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 20,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 33
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 20,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 46
                                  },
                                  "text": "nvidia-smi -L"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 20,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 47
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 20,
                                "column": 47
                              },
                              "end": {
                                "row": 20,
                                "column": 48
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 20,
                                "column": 49
                              },
                              "end": {
                                "row": 20,
                                "column": 58
                              },
                              "text": "timeout=5",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 56
                                  },
                                  "text": "timeout"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 20,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 57
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 20,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 58
                                  },
                                  "text": "5"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 20,
                                "column": 58
                              },
                              "end": {
                                "row": 20,
                                "column": 59
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 23,
                "column": 81
              },
              "text": "if code == 0:\n        output = output.decode('utf-8')\n        return warn_return(len(output.strip().split('\\n')), \"Found nvidia-smi. \")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 21,
                    "column": 4
                  },
                  "end": {
                    "row": 21,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 21,
                    "column": 7
                  },
                  "end": {
                    "row": 21,
                    "column": 16
                  },
                  "text": "code == 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 7
                      },
                      "end": {
                        "row": 21,
                        "column": 11
                      },
                      "text": "code"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 21,
                        "column": 12
                      },
                      "end": {
                        "row": 21,
                        "column": 14
                      },
                      "text": "=="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 21,
                        "column": 15
                      },
                      "end": {
                        "row": 21,
                        "column": 16
                      },
                      "text": "0"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 21,
                    "column": 16
                  },
                  "end": {
                    "row": 21,
                    "column": 17
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 81
                  },
                  "text": "output = output.decode('utf-8')\n        return warn_return(len(output.strip().split('\\n')), \"Found nvidia-smi. \")",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 39
                      },
                      "text": "output = output.decode('utf-8')",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 22,
                            "column": 8
                          },
                          "end": {
                            "row": 22,
                            "column": 39
                          },
                          "text": "output = output.decode('utf-8')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 8
                              },
                              "end": {
                                "row": 22,
                                "column": 14
                              },
                              "text": "output"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 22,
                                "column": 15
                              },
                              "end": {
                                "row": 22,
                                "column": 16
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 22,
                                "column": 17
                              },
                              "end": {
                                "row": 22,
                                "column": 39
                              },
                              "text": "output.decode('utf-8')",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 22,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 30
                                  },
                                  "text": "output.decode",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 23
                                      },
                                      "text": "output"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 22,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 24
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 30
                                      },
                                      "text": "decode"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 22,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 39
                                  },
                                  "text": "('utf-8')",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 22,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 31
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 22,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 38
                                      },
                                      "text": "'utf-8'",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 22,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 32
                                          },
                                          "text": "'"
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 22,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 37
                                          },
                                          "text": "utf-8"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 22,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 38
                                          },
                                          "text": "'"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 22,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 39
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 81
                      },
                      "text": "return warn_return(len(output.strip().split('\\n')), \"Found nvidia-smi. \")",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 23,
                            "column": 8
                          },
                          "end": {
                            "row": 23,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 23,
                            "column": 15
                          },
                          "end": {
                            "row": 23,
                            "column": 81
                          },
                          "text": "warn_return(len(output.strip().split('\\n')), \"Found nvidia-smi. \")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 15
                              },
                              "end": {
                                "row": 23,
                                "column": 26
                              },
                              "text": "warn_return"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 23,
                                "column": 26
                              },
                              "end": {
                                "row": 23,
                                "column": 81
                              },
                              "text": "(len(output.strip().split('\\n')), \"Found nvidia-smi. \")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 23,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 27
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 23,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 58
                                  },
                                  "text": "len(output.strip().split('\\n'))",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 30
                                      },
                                      "text": "len"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 23,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 58
                                      },
                                      "text": "(output.strip().split('\\n'))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 23,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 31
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 23,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 57
                                          },
                                          "text": "output.strip().split('\\n')",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 23,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 51
                                              },
                                              "text": "output.strip().split",
                                              "children": [
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 45
                                                  },
                                                  "text": "output.strip()",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 43
                                                      },
                                                      "text": "output.strip",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 31
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 37
                                                          },
                                                          "text": "output"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 38
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 38
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 43
                                                          },
                                                          "text": "strip"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 45
                                                      },
                                                      "text": "()",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 43
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 44
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 44
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 45
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 46
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 51
                                                  },
                                                  "text": "split"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 23,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 23,
                                                "column": 57
                                              },
                                              "text": "('\\n')",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 52
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 52
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 56
                                                  },
                                                  "text": "'\\n'",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 52
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 53
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 53
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 55
                                                      },
                                                      "text": "\\n",
                                                      "children": [
                                                        {
                                                          "type": "escape_sequence",
                                                          "start": {
                                                            "row": 23,
                                                            "column": 53
                                                          },
                                                          "end": {
                                                            "row": 23,
                                                            "column": 55
                                                          },
                                                          "text": "\\n"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 23,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 23,
                                                        "column": 56
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 23,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 23,
                                                    "column": 57
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 23,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 23,
                                            "column": 58
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 23,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 59
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 23,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 80
                                  },
                                  "text": "\"Found nvidia-smi. \"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 23,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 61
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 23,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 79
                                      },
                                      "text": "Found nvidia-smi. "
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 23,
                                        "column": 79
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 80
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 23,
                                    "column": 80
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 81
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 24,
                "column": 4
              },
              "end": {
                "row": 42,
                "column": 31
              },
              "text": "try:\n        # Use NVML to query device properties\n        with NVMLContext() as ctx:\n            return warn_return(ctx.num_devices(), \"NVML found nvidia devices. \")\n    except Exception:\n        # Fallback\n        logger.info(\"Loading local devices by TensorFlow ...\")\n\n        try:\n            import tensorflow as tf\n            # available since TF 1.14\n            gpu_devices = tf.config.experimental.list_physical_devices('GPU')\n        except AttributeError:\n            from tensorflow.python.client import device_lib\n            local_device_protos = device_lib.list_local_devices()\n            # Note this will initialize all GPUs and therefore has side effect\n            # https://github.com/tensorflow/tensorflow/issues/8136\n            gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']\n        return len(gpu_devices)",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 24,
                    "column": 4
                  },
                  "end": {
                    "row": 24,
                    "column": 7
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 24,
                    "column": 7
                  },
                  "end": {
                    "row": 24,
                    "column": 8
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 45
                  },
                  "text": "# Use NVML to query device properties"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 26,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 80
                  },
                  "text": "with NVMLContext() as ctx:\n            return warn_return(ctx.num_devices(), \"NVML found nvidia devices. \")",
                  "children": [
                    {
                      "type": "with_statement",
                      "start": {
                        "row": 26,
                        "column": 8
                      },
                      "end": {
                        "row": 27,
                        "column": 80
                      },
                      "text": "with NVMLContext() as ctx:\n            return warn_return(ctx.num_devices(), \"NVML found nvidia devices. \")",
                      "children": [
                        {
                          "type": "with",
                          "start": {
                            "row": 26,
                            "column": 8
                          },
                          "end": {
                            "row": 26,
                            "column": 12
                          },
                          "text": "with"
                        },
                        {
                          "type": "with_clause",
                          "start": {
                            "row": 26,
                            "column": 13
                          },
                          "end": {
                            "row": 26,
                            "column": 33
                          },
                          "text": "NVMLContext() as ctx",
                          "children": [
                            {
                              "type": "with_item",
                              "start": {
                                "row": 26,
                                "column": 13
                              },
                              "end": {
                                "row": 26,
                                "column": 33
                              },
                              "text": "NVMLContext() as ctx",
                              "children": [
                                {
                                  "type": "as_pattern",
                                  "start": {
                                    "row": 26,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 33
                                  },
                                  "text": "NVMLContext() as ctx",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 26,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 26
                                      },
                                      "text": "NVMLContext()",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 24
                                          },
                                          "text": "NVMLContext"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 26,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 26
                                          },
                                          "text": "()",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 26,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 25
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 26,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 26
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "as",
                                      "start": {
                                        "row": 26,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 29
                                      },
                                      "text": "as"
                                    },
                                    {
                                      "type": "as_pattern_target",
                                      "start": {
                                        "row": 26,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 33
                                      },
                                      "text": "ctx",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 26,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 33
                                          },
                                          "text": "ctx"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 26,
                            "column": 33
                          },
                          "end": {
                            "row": 26,
                            "column": 34
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 27,
                            "column": 12
                          },
                          "end": {
                            "row": 27,
                            "column": 80
                          },
                          "text": "return warn_return(ctx.num_devices(), \"NVML found nvidia devices. \")",
                          "children": [
                            {
                              "type": "return_statement",
                              "start": {
                                "row": 27,
                                "column": 12
                              },
                              "end": {
                                "row": 27,
                                "column": 80
                              },
                              "text": "return warn_return(ctx.num_devices(), \"NVML found nvidia devices. \")",
                              "children": [
                                {
                                  "type": "return",
                                  "start": {
                                    "row": 27,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 18
                                  },
                                  "text": "return"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 27,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 80
                                  },
                                  "text": "warn_return(ctx.num_devices(), \"NVML found nvidia devices. \")",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 30
                                      },
                                      "text": "warn_return"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 27,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 80
                                      },
                                      "text": "(ctx.num_devices(), \"NVML found nvidia devices. \")",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 27,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 31
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 27,
                                            "column": 31
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 48
                                          },
                                          "text": "ctx.num_devices()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 27,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 46
                                              },
                                              "text": "ctx.num_devices",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 27,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 27,
                                                    "column": 34
                                                  },
                                                  "text": "ctx"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 27,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 27,
                                                    "column": 35
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 27,
                                                    "column": 35
                                                  },
                                                  "end": {
                                                    "row": 27,
                                                    "column": 46
                                                  },
                                                  "text": "num_devices"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 27,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 48
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 27,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 27,
                                                    "column": 47
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 27,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 27,
                                                    "column": 48
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 27,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 49
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 27,
                                            "column": 50
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 79
                                          },
                                          "text": "\"NVML found nvidia devices. \"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 27,
                                                "column": 50
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 51
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 27,
                                                "column": 51
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 78
                                              },
                                              "text": "NVML found nvidia devices. "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 27,
                                                "column": 78
                                              },
                                              "end": {
                                                "row": 27,
                                                "column": 79
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 27,
                                            "column": 79
                                          },
                                          "end": {
                                            "row": 27,
                                            "column": 80
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 28,
                    "column": 4
                  },
                  "end": {
                    "row": 42,
                    "column": 31
                  },
                  "text": "except Exception:\n        # Fallback\n        logger.info(\"Loading local devices by TensorFlow ...\")\n\n        try:\n            import tensorflow as tf\n            # available since TF 1.14\n            gpu_devices = tf.config.experimental.list_physical_devices('GPU')\n        except AttributeError:\n            from tensorflow.python.client import device_lib\n            local_device_protos = device_lib.list_local_devices()\n            # Note this will initialize all GPUs and therefore has side effect\n            # https://github.com/tensorflow/tensorflow/issues/8136\n            gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']\n        return len(gpu_devices)",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 28,
                        "column": 4
                      },
                      "end": {
                        "row": 28,
                        "column": 10
                      },
                      "text": "except"
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 28,
                        "column": 11
                      },
                      "end": {
                        "row": 28,
                        "column": 20
                      },
                      "text": "Exception"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 28,
                        "column": 20
                      },
                      "end": {
                        "row": 28,
                        "column": 21
                      },
                      "text": ":"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 29,
                        "column": 8
                      },
                      "end": {
                        "row": 29,
                        "column": 18
                      },
                      "text": "# Fallback"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 30,
                        "column": 8
                      },
                      "end": {
                        "row": 42,
                        "column": 31
                      },
                      "text": "logger.info(\"Loading local devices by TensorFlow ...\")\n\n        try:\n            import tensorflow as tf\n            # available since TF 1.14\n            gpu_devices = tf.config.experimental.list_physical_devices('GPU')\n        except AttributeError:\n            from tensorflow.python.client import device_lib\n            local_device_protos = device_lib.list_local_devices()\n            # Note this will initialize all GPUs and therefore has side effect\n            # https://github.com/tensorflow/tensorflow/issues/8136\n            gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']\n        return len(gpu_devices)",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 30,
                            "column": 8
                          },
                          "end": {
                            "row": 30,
                            "column": 62
                          },
                          "text": "logger.info(\"Loading local devices by TensorFlow ...\")",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 30,
                                "column": 8
                              },
                              "end": {
                                "row": 30,
                                "column": 62
                              },
                              "text": "logger.info(\"Loading local devices by TensorFlow ...\")",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 30,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 19
                                  },
                                  "text": "logger.info",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 30,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 14
                                      },
                                      "text": "logger"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 30,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 15
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 30,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 19
                                      },
                                      "text": "info"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 30,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 62
                                  },
                                  "text": "(\"Loading local devices by TensorFlow ...\")",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 30,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 20
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 30,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 61
                                      },
                                      "text": "\"Loading local devices by TensorFlow ...\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 30,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 21
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 30,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 60
                                          },
                                          "text": "Loading local devices by TensorFlow ..."
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 30,
                                            "column": 60
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 61
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 30,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 62
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "try_statement",
                          "start": {
                            "row": 32,
                            "column": 8
                          },
                          "end": {
                            "row": 41,
                            "column": 89
                          },
                          "text": "try:\n            import tensorflow as tf\n            # available since TF 1.14\n            gpu_devices = tf.config.experimental.list_physical_devices('GPU')\n        except AttributeError:\n            from tensorflow.python.client import device_lib\n            local_device_protos = device_lib.list_local_devices()\n            # Note this will initialize all GPUs and therefore has side effect\n            # https://github.com/tensorflow/tensorflow/issues/8136\n            gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']",
                          "children": [
                            {
                              "type": "try",
                              "start": {
                                "row": 32,
                                "column": 8
                              },
                              "end": {
                                "row": 32,
                                "column": 11
                              },
                              "text": "try"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 32,
                                "column": 11
                              },
                              "end": {
                                "row": 32,
                                "column": 12
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 33,
                                "column": 12
                              },
                              "end": {
                                "row": 35,
                                "column": 77
                              },
                              "text": "import tensorflow as tf\n            # available since TF 1.14\n            gpu_devices = tf.config.experimental.list_physical_devices('GPU')",
                              "children": [
                                {
                                  "type": "import_statement",
                                  "start": {
                                    "row": 33,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 35
                                  },
                                  "text": "import tensorflow as tf",
                                  "children": [
                                    {
                                      "type": "import",
                                      "start": {
                                        "row": 33,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 18
                                      },
                                      "text": "import"
                                    },
                                    {
                                      "type": "aliased_import",
                                      "start": {
                                        "row": 33,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 35
                                      },
                                      "text": "tensorflow as tf",
                                      "children": [
                                        {
                                          "type": "dotted_name",
                                          "start": {
                                            "row": 33,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 29
                                          },
                                          "text": "tensorflow",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 33,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 33,
                                                "column": 29
                                              },
                                              "text": "tensorflow"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "as",
                                          "start": {
                                            "row": 33,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 32
                                          },
                                          "text": "as"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 33,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 35
                                          },
                                          "text": "tf"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "comment",
                                  "start": {
                                    "row": 34,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 37
                                  },
                                  "text": "# available since TF 1.14"
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 35,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 77
                                  },
                                  "text": "gpu_devices = tf.config.experimental.list_physical_devices('GPU')",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 35,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 77
                                      },
                                      "text": "gpu_devices = tf.config.experimental.list_physical_devices('GPU')",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 35,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 23
                                          },
                                          "text": "gpu_devices"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 35,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 25
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 35,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 77
                                          },
                                          "text": "tf.config.experimental.list_physical_devices('GPU')",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 35,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 70
                                              },
                                              "text": "tf.config.experimental.list_physical_devices",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 48
                                                  },
                                                  "text": "tf.config.experimental",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 26
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 35
                                                      },
                                                      "text": "tf.config",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 35,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 35,
                                                            "column": 28
                                                          },
                                                          "text": "tf"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 35,
                                                            "column": 28
                                                          },
                                                          "end": {
                                                            "row": 35,
                                                            "column": 29
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 35,
                                                            "column": 29
                                                          },
                                                          "end": {
                                                            "row": 35,
                                                            "column": 35
                                                          },
                                                          "text": "config"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 35
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 36
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 48
                                                      },
                                                      "text": "experimental"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 49
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 70
                                                  },
                                                  "text": "list_physical_devices"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 35,
                                                "column": 70
                                              },
                                              "end": {
                                                "row": 35,
                                                "column": 77
                                              },
                                              "text": "('GPU')",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 70
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 71
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 71
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 76
                                                  },
                                                  "text": "'GPU'",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 71
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 72
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 72
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 75
                                                      },
                                                      "text": "GPU"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 35,
                                                        "column": 75
                                                      },
                                                      "end": {
                                                        "row": 35,
                                                        "column": 76
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 35,
                                                    "column": 76
                                                  },
                                                  "end": {
                                                    "row": 35,
                                                    "column": 77
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "except_clause",
                              "start": {
                                "row": 36,
                                "column": 8
                              },
                              "end": {
                                "row": 41,
                                "column": 89
                              },
                              "text": "except AttributeError:\n            from tensorflow.python.client import device_lib\n            local_device_protos = device_lib.list_local_devices()\n            # Note this will initialize all GPUs and therefore has side effect\n            # https://github.com/tensorflow/tensorflow/issues/8136\n            gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']",
                              "children": [
                                {
                                  "type": "except",
                                  "start": {
                                    "row": 36,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 14
                                  },
                                  "text": "except"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 36,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 29
                                  },
                                  "text": "AttributeError"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 36,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 30
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 37,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 89
                                  },
                                  "text": "from tensorflow.python.client import device_lib\n            local_device_protos = device_lib.list_local_devices()\n            # Note this will initialize all GPUs and therefore has side effect\n            # https://github.com/tensorflow/tensorflow/issues/8136\n            gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']",
                                  "children": [
                                    {
                                      "type": "import_from_statement",
                                      "start": {
                                        "row": 37,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 59
                                      },
                                      "text": "from tensorflow.python.client import device_lib",
                                      "children": [
                                        {
                                          "type": "from",
                                          "start": {
                                            "row": 37,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 16
                                          },
                                          "text": "from"
                                        },
                                        {
                                          "type": "dotted_name",
                                          "start": {
                                            "row": 37,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 41
                                          },
                                          "text": "tensorflow.python.client",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 27
                                              },
                                              "text": "tensorflow"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 37,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 28
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 34
                                              },
                                              "text": "python"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 37,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 35
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 41
                                              },
                                              "text": "client"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "import",
                                          "start": {
                                            "row": 37,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 48
                                          },
                                          "text": "import"
                                        },
                                        {
                                          "type": "dotted_name",
                                          "start": {
                                            "row": 37,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 37,
                                            "column": 59
                                          },
                                          "text": "device_lib",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 37,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 37,
                                                "column": 59
                                              },
                                              "text": "device_lib"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 38,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 65
                                      },
                                      "text": "local_device_protos = device_lib.list_local_devices()",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 38,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 38,
                                            "column": 65
                                          },
                                          "text": "local_device_protos = device_lib.list_local_devices()",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 38,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 38,
                                                "column": 31
                                              },
                                              "text": "local_device_protos"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 38,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 38,
                                                "column": 33
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 38,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 38,
                                                "column": 65
                                              },
                                              "text": "device_lib.list_local_devices()",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 63
                                                  },
                                                  "text": "device_lib.list_local_devices",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 44
                                                      },
                                                      "text": "device_lib"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 45
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 45
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 63
                                                      },
                                                      "text": "list_local_devices"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 38,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 38,
                                                    "column": 65
                                                  },
                                                  "text": "()",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 63
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 64
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 38,
                                                        "column": 64
                                                      },
                                                      "end": {
                                                        "row": 38,
                                                        "column": 65
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 39,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 78
                                      },
                                      "text": "# Note this will initialize all GPUs and therefore has side effect"
                                    },
                                    {
                                      "type": "comment",
                                      "start": {
                                        "row": 40,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 66
                                      },
                                      "text": "# https://github.com/tensorflow/tensorflow/issues/8136"
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 41,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 89
                                      },
                                      "text": "gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 41,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 89
                                          },
                                          "text": "gpu_devices = [x.name for x in local_device_protos if x.device_type == 'GPU']",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 41,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 23
                                              },
                                              "text": "gpu_devices"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 41,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 25
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "list_comprehension",
                                              "start": {
                                                "row": 41,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 89
                                              },
                                              "text": "[x.name for x in local_device_protos if x.device_type == 'GPU']",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 27
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 27
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 33
                                                  },
                                                  "text": "x.name",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 27
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 28
                                                      },
                                                      "text": "x"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 29
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 33
                                                      },
                                                      "text": "name"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "for_in_clause",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 62
                                                  },
                                                  "text": "for x in local_device_protos",
                                                  "children": [
                                                    {
                                                      "type": "for",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 37
                                                      },
                                                      "text": "for"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 39
                                                      },
                                                      "text": "x"
                                                    },
                                                    {
                                                      "type": "in",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 40
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 42
                                                      },
                                                      "text": "in"
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 43
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 62
                                                      },
                                                      "text": "local_device_protos"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "if_clause",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 88
                                                  },
                                                  "text": "if x.device_type == 'GPU'",
                                                  "children": [
                                                    {
                                                      "type": "if",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 63
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 65
                                                      },
                                                      "text": "if"
                                                    },
                                                    {
                                                      "type": "comparison_operator",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 66
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 88
                                                      },
                                                      "text": "x.device_type == 'GPU'",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 66
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 79
                                                          },
                                                          "text": "x.device_type",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 41,
                                                                "column": 66
                                                              },
                                                              "end": {
                                                                "row": 41,
                                                                "column": 67
                                                              },
                                                              "text": "x"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 41,
                                                                "column": 67
                                                              },
                                                              "end": {
                                                                "row": 41,
                                                                "column": 68
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 41,
                                                                "column": 68
                                                              },
                                                              "end": {
                                                                "row": 41,
                                                                "column": 79
                                                              },
                                                              "text": "device_type"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "==",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 80
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 82
                                                          },
                                                          "text": "=="
                                                        },
                                                        {
                                                          "type": "string",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 83
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 88
                                                          },
                                                          "text": "'GPU'",
                                                          "children": [
                                                            {
                                                              "type": "string_start",
                                                              "start": {
                                                                "row": 41,
                                                                "column": 83
                                                              },
                                                              "end": {
                                                                "row": 41,
                                                                "column": 84
                                                              },
                                                              "text": "'"
                                                            },
                                                            {
                                                              "type": "string_content",
                                                              "start": {
                                                                "row": 41,
                                                                "column": 84
                                                              },
                                                              "end": {
                                                                "row": 41,
                                                                "column": 87
                                                              },
                                                              "text": "GPU"
                                                            },
                                                            {
                                                              "type": "string_end",
                                                              "start": {
                                                                "row": 41,
                                                                "column": 87
                                                              },
                                                              "end": {
                                                                "row": 41,
                                                                "column": 88
                                                              },
                                                              "text": "'"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 88
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 89
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start": {
                            "row": 42,
                            "column": 8
                          },
                          "end": {
                            "row": 42,
                            "column": 31
                          },
                          "text": "return len(gpu_devices)",
                          "children": [
                            {
                              "type": "return",
                              "start": {
                                "row": 42,
                                "column": 8
                              },
                              "end": {
                                "row": 42,
                                "column": 14
                              },
                              "text": "return"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 42,
                                "column": 15
                              },
                              "end": {
                                "row": 42,
                                "column": 31
                              },
                              "text": "len(gpu_devices)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 42,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 18
                                  },
                                  "text": "len"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 42,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 42,
                                    "column": 31
                                  },
                                  "text": "(gpu_devices)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 42,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 19
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 42,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 30
                                      },
                                      "text": "gpu_devices"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 42,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 31
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}