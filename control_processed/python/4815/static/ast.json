{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 13,
    "column": 31
  },
  "text": "def dropout_no_scaling(x, keep_prob):\n  \"\"\"Like tf.nn.dropout, but does not scale up.  Works on integers also.\n\n  Args:\n    x: a Tensor\n    keep_prob: a floating point number\n\n  Returns:\n    Tensor of the same shape as x.\n  \"\"\"\n  if keep_prob == 1.0:\n    return x\n  mask = tf.less(tf.random_uniform(tf.shape(x)), keep_prob)\n  return x * cast_like(mask, x)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 13,
        "column": 31
      },
      "text": "def dropout_no_scaling(x, keep_prob):\n  \"\"\"Like tf.nn.dropout, but does not scale up.  Works on integers also.\n\n  Args:\n    x: a Tensor\n    keep_prob: a floating point number\n\n  Returns:\n    Tensor of the same shape as x.\n  \"\"\"\n  if keep_prob == 1.0:\n    return x\n  mask = tf.less(tf.random_uniform(tf.shape(x)), keep_prob)\n  return x * cast_like(mask, x)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": "dropout_no_scaling"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 36
          },
          "text": "(x, keep_prob)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": "x"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "keep_prob"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 36
          },
          "end": {
            "row": 0,
            "column": 37
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 2
          },
          "end": {
            "row": 13,
            "column": 31
          },
          "text": "\"\"\"Like tf.nn.dropout, but does not scale up.  Works on integers also.\n\n  Args:\n    x: a Tensor\n    keep_prob: a floating point number\n\n  Returns:\n    Tensor of the same shape as x.\n  \"\"\"\n  if keep_prob == 1.0:\n    return x\n  mask = tf.less(tf.random_uniform(tf.shape(x)), keep_prob)\n  return x * cast_like(mask, x)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 9,
                "column": 5
              },
              "text": "\"\"\"Like tf.nn.dropout, but does not scale up.  Works on integers also.\n\n  Args:\n    x: a Tensor\n    keep_prob: a floating point number\n\n  Returns:\n    Tensor of the same shape as x.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 9,
                    "column": 5
                  },
                  "text": "\"\"\"Like tf.nn.dropout, but does not scale up.  Works on integers also.\n\n  Args:\n    x: a Tensor\n    keep_prob: a floating point number\n\n  Returns:\n    Tensor of the same shape as x.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 5
                      },
                      "end": {
                        "row": 9,
                        "column": 2
                      },
                      "text": "Like tf.nn.dropout, but does not scale up.  Works on integers also.\n\n  Args:\n    x: a Tensor\n    keep_prob: a floating point number\n\n  Returns:\n    Tensor of the same shape as x.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 9,
                        "column": 2
                      },
                      "end": {
                        "row": 9,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 10,
                "column": 2
              },
              "end": {
                "row": 11,
                "column": 12
              },
              "text": "if keep_prob == 1.0:\n    return x",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 10,
                    "column": 2
                  },
                  "end": {
                    "row": 10,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 10,
                    "column": 5
                  },
                  "end": {
                    "row": 10,
                    "column": 21
                  },
                  "text": "keep_prob == 1.0",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 10,
                        "column": 5
                      },
                      "end": {
                        "row": 10,
                        "column": 14
                      },
                      "text": "keep_prob"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 10,
                        "column": 15
                      },
                      "end": {
                        "row": 10,
                        "column": 17
                      },
                      "text": "=="
                    },
                    {
                      "type": "float",
                      "start": {
                        "row": 10,
                        "column": 18
                      },
                      "end": {
                        "row": 10,
                        "column": 21
                      },
                      "text": "1.0"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 10,
                    "column": 21
                  },
                  "end": {
                    "row": 10,
                    "column": 22
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 11,
                    "column": 4
                  },
                  "end": {
                    "row": 11,
                    "column": 12
                  },
                  "text": "return x",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 11,
                        "column": 4
                      },
                      "end": {
                        "row": 11,
                        "column": 12
                      },
                      "text": "return x",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 11,
                            "column": 4
                          },
                          "end": {
                            "row": 11,
                            "column": 10
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 11
                          },
                          "end": {
                            "row": 11,
                            "column": 12
                          },
                          "text": "x"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 12,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 59
              },
              "text": "mask = tf.less(tf.random_uniform(tf.shape(x)), keep_prob)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 12,
                    "column": 2
                  },
                  "end": {
                    "row": 12,
                    "column": 59
                  },
                  "text": "mask = tf.less(tf.random_uniform(tf.shape(x)), keep_prob)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 12,
                        "column": 2
                      },
                      "end": {
                        "row": 12,
                        "column": 6
                      },
                      "text": "mask"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 12,
                        "column": 7
                      },
                      "end": {
                        "row": 12,
                        "column": 8
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 12,
                        "column": 9
                      },
                      "end": {
                        "row": 12,
                        "column": 59
                      },
                      "text": "tf.less(tf.random_uniform(tf.shape(x)), keep_prob)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 12,
                            "column": 9
                          },
                          "end": {
                            "row": 12,
                            "column": 16
                          },
                          "text": "tf.less",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 9
                              },
                              "end": {
                                "row": 12,
                                "column": 11
                              },
                              "text": "tf"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 12,
                                "column": 11
                              },
                              "end": {
                                "row": 12,
                                "column": 12
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 12
                              },
                              "end": {
                                "row": 12,
                                "column": 16
                              },
                              "text": "less"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 12,
                            "column": 16
                          },
                          "end": {
                            "row": 12,
                            "column": 59
                          },
                          "text": "(tf.random_uniform(tf.shape(x)), keep_prob)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 12,
                                "column": 16
                              },
                              "end": {
                                "row": 12,
                                "column": 17
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 12,
                                "column": 17
                              },
                              "end": {
                                "row": 12,
                                "column": 47
                              },
                              "text": "tf.random_uniform(tf.shape(x))",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 12,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 34
                                  },
                                  "text": "tf.random_uniform",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 19
                                      },
                                      "text": "tf"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 12,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 20
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 12,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 34
                                      },
                                      "text": "random_uniform"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 12,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 12,
                                    "column": 47
                                  },
                                  "text": "(tf.shape(x))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 12,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 35
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 12,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 46
                                      },
                                      "text": "tf.shape(x)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 12,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 43
                                          },
                                          "text": "tf.shape",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 37
                                              },
                                              "text": "tf"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 12,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 38
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 43
                                              },
                                              "text": "shape"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 12,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 12,
                                            "column": 46
                                          },
                                          "text": "(x)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 12,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 44
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 12,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 45
                                              },
                                              "text": "x"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 12,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 12,
                                                "column": 46
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 12,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 12,
                                "column": 47
                              },
                              "end": {
                                "row": 12,
                                "column": 48
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 12,
                                "column": 49
                              },
                              "end": {
                                "row": 12,
                                "column": 58
                              },
                              "text": "keep_prob"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 12,
                                "column": 58
                              },
                              "end": {
                                "row": 12,
                                "column": 59
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 13,
                "column": 2
              },
              "end": {
                "row": 13,
                "column": 31
              },
              "text": "return x * cast_like(mask, x)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 13,
                    "column": 2
                  },
                  "end": {
                    "row": 13,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "binary_operator",
                  "start": {
                    "row": 13,
                    "column": 9
                  },
                  "end": {
                    "row": 13,
                    "column": 31
                  },
                  "text": "x * cast_like(mask, x)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 9
                      },
                      "end": {
                        "row": 13,
                        "column": 10
                      },
                      "text": "x"
                    },
                    {
                      "type": "*",
                      "start": {
                        "row": 13,
                        "column": 11
                      },
                      "end": {
                        "row": 13,
                        "column": 12
                      },
                      "text": "*"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 13,
                        "column": 13
                      },
                      "end": {
                        "row": 13,
                        "column": 31
                      },
                      "text": "cast_like(mask, x)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 13
                          },
                          "end": {
                            "row": 13,
                            "column": 22
                          },
                          "text": "cast_like"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 13,
                            "column": 22
                          },
                          "end": {
                            "row": 13,
                            "column": 31
                          },
                          "text": "(mask, x)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 13,
                                "column": 22
                              },
                              "end": {
                                "row": 13,
                                "column": 23
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 23
                              },
                              "end": {
                                "row": 13,
                                "column": 27
                              },
                              "text": "mask"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 13,
                                "column": 27
                              },
                              "end": {
                                "row": 13,
                                "column": 28
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 13,
                                "column": 29
                              },
                              "end": {
                                "row": 13,
                                "column": 30
                              },
                              "text": "x"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 13,
                                "column": 30
                              },
                              "end": {
                                "row": 13,
                                "column": 31
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}