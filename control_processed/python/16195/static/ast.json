{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 65,
    "column": 83
  },
  "text": "def dropna_split(self, columns=None, how='any'):\n        \"\"\"\n        Split rows with missing values from this SFrame. This function has the\n        same functionality as :py:func:`~turicreate.SFrame.dropna`, but returns a\n        tuple of two SFrames.  The first item is the expected output from\n        :py:func:`~turicreate.SFrame.dropna`, and the second item contains all the\n        rows filtered out by the `dropna` algorithm.\n\n        Parameters\n        ----------\n        columns : list or str, optional\n            The columns to use when looking for missing values. By default, all\n            columns are used.\n\n        how : {'any', 'all'}, optional\n            Specifies whether a row should be dropped if at least one column\n            has missing values, or if all columns have missing values.  'any' is\n            default.\n\n        Returns\n        -------\n        out : (SFrame, SFrame)\n            (SFrame with missing values removed,\n             SFrame with the removed missing values)\n\n        See Also\n        --------\n        dropna\n\n        Examples\n        --------\n        >>> sf = turicreate.SFrame({'a': [1, None, None], 'b': ['a', 'b', None]})\n        >>> good, bad = sf.dropna_split()\n        >>> good\n        +---+---+\n        | a | b |\n        +---+---+\n        | 1 | a |\n        +---+---+\n        [1 rows x 2 columns]\n\n        >>> bad\n        +------+------+\n        |  a   |  b   |\n        +------+------+\n        | None |  b   |\n        | None | None |\n        +------+------+\n        [2 rows x 2 columns]\n        \"\"\"\n\n        # If the user gives me an empty list (the indicator to use all columns)\n        # NA values being dropped would not be the expected behavior. This\n        # is a NOOP, so let's not bother the server\n        if type(columns) is list and len(columns) == 0:\n            return (SFrame(_proxy=self.__proxy__), SFrame())\n\n        (columns, all_behavior) = self.__dropna_errchk(columns, how)\n\n        sframe_tuple = self.__proxy__.drop_missing_values(columns, all_behavior, True)\n\n        if len(sframe_tuple) != 2:\n            raise RuntimeError(\"Did not return two SFrames!\")\n\n        with cython_context():\n            return (SFrame(_proxy=sframe_tuple[0]), SFrame(_proxy=sframe_tuple[1]))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 65,
        "column": 83
      },
      "text": "def dropna_split(self, columns=None, how='any'):\n        \"\"\"\n        Split rows with missing values from this SFrame. This function has the\n        same functionality as :py:func:`~turicreate.SFrame.dropna`, but returns a\n        tuple of two SFrames.  The first item is the expected output from\n        :py:func:`~turicreate.SFrame.dropna`, and the second item contains all the\n        rows filtered out by the `dropna` algorithm.\n\n        Parameters\n        ----------\n        columns : list or str, optional\n            The columns to use when looking for missing values. By default, all\n            columns are used.\n\n        how : {'any', 'all'}, optional\n            Specifies whether a row should be dropped if at least one column\n            has missing values, or if all columns have missing values.  'any' is\n            default.\n\n        Returns\n        -------\n        out : (SFrame, SFrame)\n            (SFrame with missing values removed,\n             SFrame with the removed missing values)\n\n        See Also\n        --------\n        dropna\n\n        Examples\n        --------\n        >>> sf = turicreate.SFrame({'a': [1, None, None], 'b': ['a', 'b', None]})\n        >>> good, bad = sf.dropna_split()\n        >>> good\n        +---+---+\n        | a | b |\n        +---+---+\n        | 1 | a |\n        +---+---+\n        [1 rows x 2 columns]\n\n        >>> bad\n        +------+------+\n        |  a   |  b   |\n        +------+------+\n        | None |  b   |\n        | None | None |\n        +------+------+\n        [2 rows x 2 columns]\n        \"\"\"\n\n        # If the user gives me an empty list (the indicator to use all columns)\n        # NA values being dropped would not be the expected behavior. This\n        # is a NOOP, so let's not bother the server\n        if type(columns) is list and len(columns) == 0:\n            return (SFrame(_proxy=self.__proxy__), SFrame())\n\n        (columns, all_behavior) = self.__dropna_errchk(columns, how)\n\n        sframe_tuple = self.__proxy__.drop_missing_values(columns, all_behavior, True)\n\n        if len(sframe_tuple) != 2:\n            raise RuntimeError(\"Did not return two SFrames!\")\n\n        with cython_context():\n            return (SFrame(_proxy=sframe_tuple[0]), SFrame(_proxy=sframe_tuple[1]))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 16
          },
          "text": "dropna_split"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 16
          },
          "end": {
            "row": 0,
            "column": 47
          },
          "text": "(self, columns=None, how='any')",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "columns=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 23
                  },
                  "end": {
                    "row": 0,
                    "column": 30
                  },
                  "text": "columns"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 31
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 31
                  },
                  "end": {
                    "row": 0,
                    "column": 35
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": "how='any'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 40
                  },
                  "text": "how"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 40
                  },
                  "end": {
                    "row": 0,
                    "column": 41
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 0,
                    "column": 41
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "'any'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 0,
                        "column": 41
                      },
                      "end": {
                        "row": 0,
                        "column": 42
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 0,
                        "column": 42
                      },
                      "end": {
                        "row": 0,
                        "column": 45
                      },
                      "text": "any"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 0,
                        "column": 45
                      },
                      "end": {
                        "row": 0,
                        "column": 46
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 47
          },
          "end": {
            "row": 0,
            "column": 48
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 65,
            "column": 83
          },
          "text": "\"\"\"\n        Split rows with missing values from this SFrame. This function has the\n        same functionality as :py:func:`~turicreate.SFrame.dropna`, but returns a\n        tuple of two SFrames.  The first item is the expected output from\n        :py:func:`~turicreate.SFrame.dropna`, and the second item contains all the\n        rows filtered out by the `dropna` algorithm.\n\n        Parameters\n        ----------\n        columns : list or str, optional\n            The columns to use when looking for missing values. By default, all\n            columns are used.\n\n        how : {'any', 'all'}, optional\n            Specifies whether a row should be dropped if at least one column\n            has missing values, or if all columns have missing values.  'any' is\n            default.\n\n        Returns\n        -------\n        out : (SFrame, SFrame)\n            (SFrame with missing values removed,\n             SFrame with the removed missing values)\n\n        See Also\n        --------\n        dropna\n\n        Examples\n        --------\n        >>> sf = turicreate.SFrame({'a': [1, None, None], 'b': ['a', 'b', None]})\n        >>> good, bad = sf.dropna_split()\n        >>> good\n        +---+---+\n        | a | b |\n        +---+---+\n        | 1 | a |\n        +---+---+\n        [1 rows x 2 columns]\n\n        >>> bad\n        +------+------+\n        |  a   |  b   |\n        +------+------+\n        | None |  b   |\n        | None | None |\n        +------+------+\n        [2 rows x 2 columns]\n        \"\"\"\n\n        # If the user gives me an empty list (the indicator to use all columns)\n        # NA values being dropped would not be the expected behavior. This\n        # is a NOOP, so let's not bother the server\n        if type(columns) is list and len(columns) == 0:\n            return (SFrame(_proxy=self.__proxy__), SFrame())\n\n        (columns, all_behavior) = self.__dropna_errchk(columns, how)\n\n        sframe_tuple = self.__proxy__.drop_missing_values(columns, all_behavior, True)\n\n        if len(sframe_tuple) != 2:\n            raise RuntimeError(\"Did not return two SFrames!\")\n\n        with cython_context():\n            return (SFrame(_proxy=sframe_tuple[0]), SFrame(_proxy=sframe_tuple[1]))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 49,
                "column": 11
              },
              "text": "\"\"\"\n        Split rows with missing values from this SFrame. This function has the\n        same functionality as :py:func:`~turicreate.SFrame.dropna`, but returns a\n        tuple of two SFrames.  The first item is the expected output from\n        :py:func:`~turicreate.SFrame.dropna`, and the second item contains all the\n        rows filtered out by the `dropna` algorithm.\n\n        Parameters\n        ----------\n        columns : list or str, optional\n            The columns to use when looking for missing values. By default, all\n            columns are used.\n\n        how : {'any', 'all'}, optional\n            Specifies whether a row should be dropped if at least one column\n            has missing values, or if all columns have missing values.  'any' is\n            default.\n\n        Returns\n        -------\n        out : (SFrame, SFrame)\n            (SFrame with missing values removed,\n             SFrame with the removed missing values)\n\n        See Also\n        --------\n        dropna\n\n        Examples\n        --------\n        >>> sf = turicreate.SFrame({'a': [1, None, None], 'b': ['a', 'b', None]})\n        >>> good, bad = sf.dropna_split()\n        >>> good\n        +---+---+\n        | a | b |\n        +---+---+\n        | 1 | a |\n        +---+---+\n        [1 rows x 2 columns]\n\n        >>> bad\n        +------+------+\n        |  a   |  b   |\n        +------+------+\n        | None |  b   |\n        | None | None |\n        +------+------+\n        [2 rows x 2 columns]\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 49,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Split rows with missing values from this SFrame. This function has the\n        same functionality as :py:func:`~turicreate.SFrame.dropna`, but returns a\n        tuple of two SFrames.  The first item is the expected output from\n        :py:func:`~turicreate.SFrame.dropna`, and the second item contains all the\n        rows filtered out by the `dropna` algorithm.\n\n        Parameters\n        ----------\n        columns : list or str, optional\n            The columns to use when looking for missing values. By default, all\n            columns are used.\n\n        how : {'any', 'all'}, optional\n            Specifies whether a row should be dropped if at least one column\n            has missing values, or if all columns have missing values.  'any' is\n            default.\n\n        Returns\n        -------\n        out : (SFrame, SFrame)\n            (SFrame with missing values removed,\n             SFrame with the removed missing values)\n\n        See Also\n        --------\n        dropna\n\n        Examples\n        --------\n        >>> sf = turicreate.SFrame({'a': [1, None, None], 'b': ['a', 'b', None]})\n        >>> good, bad = sf.dropna_split()\n        >>> good\n        +---+---+\n        | a | b |\n        +---+---+\n        | 1 | a |\n        +---+---+\n        [1 rows x 2 columns]\n\n        >>> bad\n        +------+------+\n        |  a   |  b   |\n        +------+------+\n        | None |  b   |\n        | None | None |\n        +------+------+\n        [2 rows x 2 columns]\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 49,
                        "column": 8
                      },
                      "text": "\n        Split rows with missing values from this SFrame. This function has the\n        same functionality as :py:func:`~turicreate.SFrame.dropna`, but returns a\n        tuple of two SFrames.  The first item is the expected output from\n        :py:func:`~turicreate.SFrame.dropna`, and the second item contains all the\n        rows filtered out by the `dropna` algorithm.\n\n        Parameters\n        ----------\n        columns : list or str, optional\n            The columns to use when looking for missing values. By default, all\n            columns are used.\n\n        how : {'any', 'all'}, optional\n            Specifies whether a row should be dropped if at least one column\n            has missing values, or if all columns have missing values.  'any' is\n            default.\n\n        Returns\n        -------\n        out : (SFrame, SFrame)\n            (SFrame with missing values removed,\n             SFrame with the removed missing values)\n\n        See Also\n        --------\n        dropna\n\n        Examples\n        --------\n        >>> sf = turicreate.SFrame({'a': [1, None, None], 'b': ['a', 'b', None]})\n        >>> good, bad = sf.dropna_split()\n        >>> good\n        +---+---+\n        | a | b |\n        +---+---+\n        | 1 | a |\n        +---+---+\n        [1 rows x 2 columns]\n\n        >>> bad\n        +------+------+\n        |  a   |  b   |\n        +------+------+\n        | None |  b   |\n        | None | None |\n        +------+------+\n        [2 rows x 2 columns]\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 49,
                        "column": 8
                      },
                      "end": {
                        "row": 49,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 51,
                "column": 8
              },
              "end": {
                "row": 51,
                "column": 79
              },
              "text": "# If the user gives me an empty list (the indicator to use all columns)"
            },
            {
              "type": "comment",
              "start": {
                "row": 52,
                "column": 8
              },
              "end": {
                "row": 52,
                "column": 74
              },
              "text": "# NA values being dropped would not be the expected behavior. This"
            },
            {
              "type": "comment",
              "start": {
                "row": 53,
                "column": 8
              },
              "end": {
                "row": 53,
                "column": 51
              },
              "text": "# is a NOOP, so let's not bother the server"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 54,
                "column": 8
              },
              "end": {
                "row": 55,
                "column": 60
              },
              "text": "if type(columns) is list and len(columns) == 0:\n            return (SFrame(_proxy=self.__proxy__), SFrame())",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 54,
                    "column": 8
                  },
                  "end": {
                    "row": 54,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 54,
                    "column": 11
                  },
                  "end": {
                    "row": 54,
                    "column": 54
                  },
                  "text": "type(columns) is list and len(columns) == 0",
                  "children": [
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 54,
                        "column": 11
                      },
                      "end": {
                        "row": 54,
                        "column": 32
                      },
                      "text": "type(columns) is list",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 54,
                            "column": 11
                          },
                          "end": {
                            "row": 54,
                            "column": 24
                          },
                          "text": "type(columns)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 11
                              },
                              "end": {
                                "row": 54,
                                "column": 15
                              },
                              "text": "type"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 54,
                                "column": 15
                              },
                              "end": {
                                "row": 54,
                                "column": 24
                              },
                              "text": "(columns)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 54,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 16
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 23
                                  },
                                  "text": "columns"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 54,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 24
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "is",
                          "start": {
                            "row": 54,
                            "column": 25
                          },
                          "end": {
                            "row": 54,
                            "column": 27
                          },
                          "text": "is"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 54,
                            "column": 28
                          },
                          "end": {
                            "row": 54,
                            "column": 32
                          },
                          "text": "list"
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 54,
                        "column": 33
                      },
                      "end": {
                        "row": 54,
                        "column": 36
                      },
                      "text": "and"
                    },
                    {
                      "type": "comparison_operator",
                      "start": {
                        "row": 54,
                        "column": 37
                      },
                      "end": {
                        "row": 54,
                        "column": 54
                      },
                      "text": "len(columns) == 0",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 54,
                            "column": 37
                          },
                          "end": {
                            "row": 54,
                            "column": 49
                          },
                          "text": "len(columns)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 54,
                                "column": 37
                              },
                              "end": {
                                "row": 54,
                                "column": 40
                              },
                              "text": "len"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 54,
                                "column": 40
                              },
                              "end": {
                                "row": 54,
                                "column": 49
                              },
                              "text": "(columns)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 54,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 41
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 54,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 48
                                  },
                                  "text": "columns"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 54,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 54,
                                    "column": 49
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start": {
                            "row": 54,
                            "column": 50
                          },
                          "end": {
                            "row": 54,
                            "column": 52
                          },
                          "text": "=="
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 54,
                            "column": 53
                          },
                          "end": {
                            "row": 54,
                            "column": 54
                          },
                          "text": "0"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 54,
                    "column": 54
                  },
                  "end": {
                    "row": 54,
                    "column": 55
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 55,
                    "column": 12
                  },
                  "end": {
                    "row": 55,
                    "column": 60
                  },
                  "text": "return (SFrame(_proxy=self.__proxy__), SFrame())",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 55,
                        "column": 12
                      },
                      "end": {
                        "row": 55,
                        "column": 60
                      },
                      "text": "return (SFrame(_proxy=self.__proxy__), SFrame())",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 55,
                            "column": 12
                          },
                          "end": {
                            "row": 55,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "tuple",
                          "start": {
                            "row": 55,
                            "column": 19
                          },
                          "end": {
                            "row": 55,
                            "column": 60
                          },
                          "text": "(SFrame(_proxy=self.__proxy__), SFrame())",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 55,
                                "column": 19
                              },
                              "end": {
                                "row": 55,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 55,
                                "column": 20
                              },
                              "end": {
                                "row": 55,
                                "column": 49
                              },
                              "text": "SFrame(_proxy=self.__proxy__)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 55,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 26
                                  },
                                  "text": "SFrame"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 55,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 49
                                  },
                                  "text": "(_proxy=self.__proxy__)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 55,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 27
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 55,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 48
                                      },
                                      "text": "_proxy=self.__proxy__",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 55,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 33
                                          },
                                          "text": "_proxy"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 55,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 34
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 55,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 55,
                                            "column": 48
                                          },
                                          "text": "self.__proxy__",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 55,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 38
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 55,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 39
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 55,
                                                "column": 39
                                              },
                                              "end": {
                                                "row": 55,
                                                "column": 48
                                              },
                                              "text": "__proxy__"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 55,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 49
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 55,
                                "column": 49
                              },
                              "end": {
                                "row": 55,
                                "column": 50
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 55,
                                "column": 51
                              },
                              "end": {
                                "row": 55,
                                "column": 59
                              },
                              "text": "SFrame()",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 55,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 57
                                  },
                                  "text": "SFrame"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 55,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 55,
                                    "column": 59
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 55,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 58
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 55,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 55,
                                        "column": 59
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 55,
                                "column": 59
                              },
                              "end": {
                                "row": 55,
                                "column": 60
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 57,
                "column": 8
              },
              "end": {
                "row": 57,
                "column": 68
              },
              "text": "(columns, all_behavior) = self.__dropna_errchk(columns, how)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 57,
                    "column": 8
                  },
                  "end": {
                    "row": 57,
                    "column": 68
                  },
                  "text": "(columns, all_behavior) = self.__dropna_errchk(columns, how)",
                  "children": [
                    {
                      "type": "tuple_pattern",
                      "start": {
                        "row": 57,
                        "column": 8
                      },
                      "end": {
                        "row": 57,
                        "column": 31
                      },
                      "text": "(columns, all_behavior)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 57,
                            "column": 8
                          },
                          "end": {
                            "row": 57,
                            "column": 9
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 57,
                            "column": 9
                          },
                          "end": {
                            "row": 57,
                            "column": 16
                          },
                          "text": "columns"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 57,
                            "column": 16
                          },
                          "end": {
                            "row": 57,
                            "column": 17
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 57,
                            "column": 18
                          },
                          "end": {
                            "row": 57,
                            "column": 30
                          },
                          "text": "all_behavior"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 57,
                            "column": 30
                          },
                          "end": {
                            "row": 57,
                            "column": 31
                          },
                          "text": ")"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 57,
                        "column": 32
                      },
                      "end": {
                        "row": 57,
                        "column": 33
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 57,
                        "column": 34
                      },
                      "end": {
                        "row": 57,
                        "column": 68
                      },
                      "text": "self.__dropna_errchk(columns, how)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 57,
                            "column": 34
                          },
                          "end": {
                            "row": 57,
                            "column": 54
                          },
                          "text": "self.__dropna_errchk",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 57,
                                "column": 34
                              },
                              "end": {
                                "row": 57,
                                "column": 38
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 57,
                                "column": 38
                              },
                              "end": {
                                "row": 57,
                                "column": 39
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 57,
                                "column": 39
                              },
                              "end": {
                                "row": 57,
                                "column": 54
                              },
                              "text": "__dropna_errchk"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 57,
                            "column": 54
                          },
                          "end": {
                            "row": 57,
                            "column": 68
                          },
                          "text": "(columns, how)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 57,
                                "column": 54
                              },
                              "end": {
                                "row": 57,
                                "column": 55
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 57,
                                "column": 55
                              },
                              "end": {
                                "row": 57,
                                "column": 62
                              },
                              "text": "columns"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 57,
                                "column": 62
                              },
                              "end": {
                                "row": 57,
                                "column": 63
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 57,
                                "column": 64
                              },
                              "end": {
                                "row": 57,
                                "column": 67
                              },
                              "text": "how"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 57,
                                "column": 67
                              },
                              "end": {
                                "row": 57,
                                "column": 68
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 59,
                "column": 8
              },
              "end": {
                "row": 59,
                "column": 86
              },
              "text": "sframe_tuple = self.__proxy__.drop_missing_values(columns, all_behavior, True)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 59,
                    "column": 8
                  },
                  "end": {
                    "row": 59,
                    "column": 86
                  },
                  "text": "sframe_tuple = self.__proxy__.drop_missing_values(columns, all_behavior, True)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 59,
                        "column": 8
                      },
                      "end": {
                        "row": 59,
                        "column": 20
                      },
                      "text": "sframe_tuple"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 59,
                        "column": 21
                      },
                      "end": {
                        "row": 59,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 59,
                        "column": 23
                      },
                      "end": {
                        "row": 59,
                        "column": 86
                      },
                      "text": "self.__proxy__.drop_missing_values(columns, all_behavior, True)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 59,
                            "column": 23
                          },
                          "end": {
                            "row": 59,
                            "column": 57
                          },
                          "text": "self.__proxy__.drop_missing_values",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 59,
                                "column": 23
                              },
                              "end": {
                                "row": 59,
                                "column": 37
                              },
                              "text": "self.__proxy__",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 59,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 27
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 59,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 28
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 59,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 59,
                                    "column": 37
                                  },
                                  "text": "__proxy__"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 59,
                                "column": 37
                              },
                              "end": {
                                "row": 59,
                                "column": 38
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 59,
                                "column": 38
                              },
                              "end": {
                                "row": 59,
                                "column": 57
                              },
                              "text": "drop_missing_values"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 59,
                            "column": 57
                          },
                          "end": {
                            "row": 59,
                            "column": 86
                          },
                          "text": "(columns, all_behavior, True)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 59,
                                "column": 57
                              },
                              "end": {
                                "row": 59,
                                "column": 58
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 59,
                                "column": 58
                              },
                              "end": {
                                "row": 59,
                                "column": 65
                              },
                              "text": "columns"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 59,
                                "column": 65
                              },
                              "end": {
                                "row": 59,
                                "column": 66
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 59,
                                "column": 67
                              },
                              "end": {
                                "row": 59,
                                "column": 79
                              },
                              "text": "all_behavior"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 59,
                                "column": 79
                              },
                              "end": {
                                "row": 59,
                                "column": 80
                              },
                              "text": ","
                            },
                            {
                              "type": "true",
                              "start": {
                                "row": 59,
                                "column": 81
                              },
                              "end": {
                                "row": 59,
                                "column": 85
                              },
                              "text": "True"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 59,
                                "column": 85
                              },
                              "end": {
                                "row": 59,
                                "column": 86
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 61,
                "column": 8
              },
              "end": {
                "row": 62,
                "column": 61
              },
              "text": "if len(sframe_tuple) != 2:\n            raise RuntimeError(\"Did not return two SFrames!\")",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 61,
                    "column": 8
                  },
                  "end": {
                    "row": 61,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 61,
                    "column": 11
                  },
                  "end": {
                    "row": 61,
                    "column": 33
                  },
                  "text": "len(sframe_tuple) != 2",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 61,
                        "column": 11
                      },
                      "end": {
                        "row": 61,
                        "column": 28
                      },
                      "text": "len(sframe_tuple)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 61,
                            "column": 11
                          },
                          "end": {
                            "row": 61,
                            "column": 14
                          },
                          "text": "len"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 61,
                            "column": 14
                          },
                          "end": {
                            "row": 61,
                            "column": 28
                          },
                          "text": "(sframe_tuple)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 61,
                                "column": 14
                              },
                              "end": {
                                "row": 61,
                                "column": 15
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 61,
                                "column": 15
                              },
                              "end": {
                                "row": 61,
                                "column": 27
                              },
                              "text": "sframe_tuple"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 61,
                                "column": 27
                              },
                              "end": {
                                "row": 61,
                                "column": 28
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 61,
                        "column": 29
                      },
                      "end": {
                        "row": 61,
                        "column": 31
                      },
                      "text": "!="
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 61,
                        "column": 32
                      },
                      "end": {
                        "row": 61,
                        "column": 33
                      },
                      "text": "2"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 61,
                    "column": 33
                  },
                  "end": {
                    "row": 61,
                    "column": 34
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 62,
                    "column": 12
                  },
                  "end": {
                    "row": 62,
                    "column": 61
                  },
                  "text": "raise RuntimeError(\"Did not return two SFrames!\")",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 62,
                        "column": 12
                      },
                      "end": {
                        "row": 62,
                        "column": 61
                      },
                      "text": "raise RuntimeError(\"Did not return two SFrames!\")",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 62,
                            "column": 12
                          },
                          "end": {
                            "row": 62,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 62,
                            "column": 18
                          },
                          "end": {
                            "row": 62,
                            "column": 61
                          },
                          "text": "RuntimeError(\"Did not return two SFrames!\")",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 62,
                                "column": 18
                              },
                              "end": {
                                "row": 62,
                                "column": 30
                              },
                              "text": "RuntimeError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 62,
                                "column": 30
                              },
                              "end": {
                                "row": 62,
                                "column": 61
                              },
                              "text": "(\"Did not return two SFrames!\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 62,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 31
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 62,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 60
                                  },
                                  "text": "\"Did not return two SFrames!\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 62,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 32
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 62,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 59
                                      },
                                      "text": "Did not return two SFrames!"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 62,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 60
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 62,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 61
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "with_statement",
              "start": {
                "row": 64,
                "column": 8
              },
              "end": {
                "row": 65,
                "column": 83
              },
              "text": "with cython_context():\n            return (SFrame(_proxy=sframe_tuple[0]), SFrame(_proxy=sframe_tuple[1]))",
              "children": [
                {
                  "type": "with",
                  "start": {
                    "row": 64,
                    "column": 8
                  },
                  "end": {
                    "row": 64,
                    "column": 12
                  },
                  "text": "with"
                },
                {
                  "type": "with_clause",
                  "start": {
                    "row": 64,
                    "column": 13
                  },
                  "end": {
                    "row": 64,
                    "column": 29
                  },
                  "text": "cython_context()",
                  "children": [
                    {
                      "type": "with_item",
                      "start": {
                        "row": 64,
                        "column": 13
                      },
                      "end": {
                        "row": 64,
                        "column": 29
                      },
                      "text": "cython_context()",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 64,
                            "column": 13
                          },
                          "end": {
                            "row": 64,
                            "column": 29
                          },
                          "text": "cython_context()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 64,
                                "column": 13
                              },
                              "end": {
                                "row": 64,
                                "column": 27
                              },
                              "text": "cython_context"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 64,
                                "column": 27
                              },
                              "end": {
                                "row": 64,
                                "column": 29
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 64,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 28
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 64,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 29
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 64,
                    "column": 29
                  },
                  "end": {
                    "row": 64,
                    "column": 30
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 65,
                    "column": 12
                  },
                  "end": {
                    "row": 65,
                    "column": 83
                  },
                  "text": "return (SFrame(_proxy=sframe_tuple[0]), SFrame(_proxy=sframe_tuple[1]))",
                  "children": [
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 65,
                        "column": 12
                      },
                      "end": {
                        "row": 65,
                        "column": 83
                      },
                      "text": "return (SFrame(_proxy=sframe_tuple[0]), SFrame(_proxy=sframe_tuple[1]))",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 65,
                            "column": 12
                          },
                          "end": {
                            "row": 65,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "tuple",
                          "start": {
                            "row": 65,
                            "column": 19
                          },
                          "end": {
                            "row": 65,
                            "column": 83
                          },
                          "text": "(SFrame(_proxy=sframe_tuple[0]), SFrame(_proxy=sframe_tuple[1]))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 65,
                                "column": 19
                              },
                              "end": {
                                "row": 65,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 65,
                                "column": 20
                              },
                              "end": {
                                "row": 65,
                                "column": 50
                              },
                              "text": "SFrame(_proxy=sframe_tuple[0])",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 65,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 26
                                  },
                                  "text": "SFrame"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 65,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 50
                                  },
                                  "text": "(_proxy=sframe_tuple[0])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 65,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 27
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 65,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 49
                                      },
                                      "text": "_proxy=sframe_tuple[0]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 65,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 33
                                          },
                                          "text": "_proxy"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 65,
                                            "column": 33
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 34
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 65,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 49
                                          },
                                          "text": "sframe_tuple[0]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 65,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 46
                                              },
                                              "text": "sframe_tuple"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 65,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 47
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 65,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 48
                                              },
                                              "text": "0"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 65,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 49
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 65,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 50
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 65,
                                "column": 50
                              },
                              "end": {
                                "row": 65,
                                "column": 51
                              },
                              "text": ","
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 65,
                                "column": 52
                              },
                              "end": {
                                "row": 65,
                                "column": 82
                              },
                              "text": "SFrame(_proxy=sframe_tuple[1])",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 65,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 58
                                  },
                                  "text": "SFrame"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 65,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 65,
                                    "column": 82
                                  },
                                  "text": "(_proxy=sframe_tuple[1])",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 65,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 59
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 65,
                                        "column": 59
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 81
                                      },
                                      "text": "_proxy=sframe_tuple[1]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 65,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 65
                                          },
                                          "text": "_proxy"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 65,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 66
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 65,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 65,
                                            "column": 81
                                          },
                                          "text": "sframe_tuple[1]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 65,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 78
                                              },
                                              "text": "sframe_tuple"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 65,
                                                "column": 78
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 79
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "integer",
                                              "start": {
                                                "row": 65,
                                                "column": 79
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 80
                                              },
                                              "text": "1"
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 65,
                                                "column": 80
                                              },
                                              "end": {
                                                "row": 65,
                                                "column": 81
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 65,
                                        "column": 81
                                      },
                                      "end": {
                                        "row": 65,
                                        "column": 82
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 65,
                                "column": 82
                              },
                              "end": {
                                "row": 65,
                                "column": 83
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}