{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 25,
    "column": 21
  },
  "text": "def parse_statements(self, end_tokens, drop_needle=False):\n        \"\"\"Parse multiple statements into a list until one of the end tokens\n        is reached.  This is used to parse the body of statements as it also\n        parses template data if appropriate.  The parser checks first if the\n        current token is a colon and skips it if there is one.  Then it checks\n        for the block end and parses until if one of the `end_tokens` is\n        reached.  Per default the active token in the stream at the end of\n        the call is the matched end token.  If this is not wanted `drop_needle`\n        can be set to `True` and the end token is removed.\n        \"\"\"\n        # the first token may be a colon for python compatibility\n        self.stream.skip_if('colon')\n\n        # in the future it would be possible to add whole code sections\n        # by adding some sort of end of statement token and parsing those here.\n        self.stream.expect('block_end')\n        result = self.subparse(end_tokens)\n\n        # we reached the end of the template too early, the subparser\n        # does not check for this, so we do that now\n        if self.stream.current.type == 'eof':\n            self.fail_eof(end_tokens)\n\n        if drop_needle:\n            next(self.stream)\n        return result",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 25,
        "column": 21
      },
      "text": "def parse_statements(self, end_tokens, drop_needle=False):\n        \"\"\"Parse multiple statements into a list until one of the end tokens\n        is reached.  This is used to parse the body of statements as it also\n        parses template data if appropriate.  The parser checks first if the\n        current token is a colon and skips it if there is one.  Then it checks\n        for the block end and parses until if one of the `end_tokens` is\n        reached.  Per default the active token in the stream at the end of\n        the call is the matched end token.  If this is not wanted `drop_needle`\n        can be set to `True` and the end token is removed.\n        \"\"\"\n        # the first token may be a colon for python compatibility\n        self.stream.skip_if('colon')\n\n        # in the future it would be possible to add whole code sections\n        # by adding some sort of end of statement token and parsing those here.\n        self.stream.expect('block_end')\n        result = self.subparse(end_tokens)\n\n        # we reached the end of the template too early, the subparser\n        # does not check for this, so we do that now\n        if self.stream.current.type == 'eof':\n            self.fail_eof(end_tokens)\n\n        if drop_needle:\n            next(self.stream)\n        return result",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "parse_statements"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 0,
            "column": 57
          },
          "text": "(self, end_tokens, drop_needle=False)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 37
              },
              "text": "end_tokens"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 39
              },
              "end": {
                "row": 0,
                "column": 56
              },
              "text": "drop_needle=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 39
                  },
                  "end": {
                    "row": 0,
                    "column": 50
                  },
                  "text": "drop_needle"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 50
                  },
                  "end": {
                    "row": 0,
                    "column": 51
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 0,
                    "column": 51
                  },
                  "end": {
                    "row": 0,
                    "column": 56
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 56
              },
              "end": {
                "row": 0,
                "column": 57
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 57
          },
          "end": {
            "row": 0,
            "column": 58
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 25,
            "column": 21
          },
          "text": "\"\"\"Parse multiple statements into a list until one of the end tokens\n        is reached.  This is used to parse the body of statements as it also\n        parses template data if appropriate.  The parser checks first if the\n        current token is a colon and skips it if there is one.  Then it checks\n        for the block end and parses until if one of the `end_tokens` is\n        reached.  Per default the active token in the stream at the end of\n        the call is the matched end token.  If this is not wanted `drop_needle`\n        can be set to `True` and the end token is removed.\n        \"\"\"\n        # the first token may be a colon for python compatibility\n        self.stream.skip_if('colon')\n\n        # in the future it would be possible to add whole code sections\n        # by adding some sort of end of statement token and parsing those here.\n        self.stream.expect('block_end')\n        result = self.subparse(end_tokens)\n\n        # we reached the end of the template too early, the subparser\n        # does not check for this, so we do that now\n        if self.stream.current.type == 'eof':\n            self.fail_eof(end_tokens)\n\n        if drop_needle:\n            next(self.stream)\n        return result",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 9,
                "column": 11
              },
              "text": "\"\"\"Parse multiple statements into a list until one of the end tokens\n        is reached.  This is used to parse the body of statements as it also\n        parses template data if appropriate.  The parser checks first if the\n        current token is a colon and skips it if there is one.  Then it checks\n        for the block end and parses until if one of the `end_tokens` is\n        reached.  Per default the active token in the stream at the end of\n        the call is the matched end token.  If this is not wanted `drop_needle`\n        can be set to `True` and the end token is removed.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 9,
                    "column": 11
                  },
                  "text": "\"\"\"Parse multiple statements into a list until one of the end tokens\n        is reached.  This is used to parse the body of statements as it also\n        parses template data if appropriate.  The parser checks first if the\n        current token is a colon and skips it if there is one.  Then it checks\n        for the block end and parses until if one of the `end_tokens` is\n        reached.  Per default the active token in the stream at the end of\n        the call is the matched end token.  If this is not wanted `drop_needle`\n        can be set to `True` and the end token is removed.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 9,
                        "column": 8
                      },
                      "text": "Parse multiple statements into a list until one of the end tokens\n        is reached.  This is used to parse the body of statements as it also\n        parses template data if appropriate.  The parser checks first if the\n        current token is a colon and skips it if there is one.  Then it checks\n        for the block end and parses until if one of the `end_tokens` is\n        reached.  Per default the active token in the stream at the end of\n        the call is the matched end token.  If this is not wanted `drop_needle`\n        can be set to `True` and the end token is removed.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 9,
                        "column": 8
                      },
                      "end": {
                        "row": 9,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 10,
                "column": 8
              },
              "end": {
                "row": 10,
                "column": 65
              },
              "text": "# the first token may be a colon for python compatibility"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 11,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 36
              },
              "text": "self.stream.skip_if('colon')",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 11,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 36
                  },
                  "text": "self.stream.skip_if('colon')",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 27
                      },
                      "text": "self.stream.skip_if",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 11,
                            "column": 8
                          },
                          "end": {
                            "row": 11,
                            "column": 19
                          },
                          "text": "self.stream",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 8
                              },
                              "end": {
                                "row": 11,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 11,
                                "column": 12
                              },
                              "end": {
                                "row": 11,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 11,
                                "column": 13
                              },
                              "end": {
                                "row": 11,
                                "column": 19
                              },
                              "text": "stream"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 11,
                            "column": 19
                          },
                          "end": {
                            "row": 11,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 11,
                            "column": 20
                          },
                          "end": {
                            "row": 11,
                            "column": 27
                          },
                          "text": "skip_if"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 11,
                        "column": 27
                      },
                      "end": {
                        "row": 11,
                        "column": 36
                      },
                      "text": "('colon')",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 11,
                            "column": 27
                          },
                          "end": {
                            "row": 11,
                            "column": 28
                          },
                          "text": "("
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 11,
                            "column": 28
                          },
                          "end": {
                            "row": 11,
                            "column": 35
                          },
                          "text": "'colon'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 11,
                                "column": 28
                              },
                              "end": {
                                "row": 11,
                                "column": 29
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 11,
                                "column": 29
                              },
                              "end": {
                                "row": 11,
                                "column": 34
                              },
                              "text": "colon"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 11,
                                "column": 34
                              },
                              "end": {
                                "row": 11,
                                "column": 35
                              },
                              "text": "'"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 11,
                            "column": 35
                          },
                          "end": {
                            "row": 11,
                            "column": 36
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 71
              },
              "text": "# in the future it would be possible to add whole code sections"
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 79
              },
              "text": "# by adding some sort of end of statement token and parsing those here."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 39
              },
              "text": "self.stream.expect('block_end')",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 39
                  },
                  "text": "self.stream.expect('block_end')",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 26
                      },
                      "text": "self.stream.expect",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 19
                          },
                          "text": "self.stream",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 8
                              },
                              "end": {
                                "row": 15,
                                "column": 12
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 15,
                                "column": 12
                              },
                              "end": {
                                "row": 15,
                                "column": 13
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 13
                              },
                              "end": {
                                "row": 15,
                                "column": 19
                              },
                              "text": "stream"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 15,
                            "column": 19
                          },
                          "end": {
                            "row": 15,
                            "column": 20
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 20
                          },
                          "end": {
                            "row": 15,
                            "column": 26
                          },
                          "text": "expect"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 15,
                        "column": 26
                      },
                      "end": {
                        "row": 15,
                        "column": 39
                      },
                      "text": "('block_end')",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 15,
                            "column": 26
                          },
                          "end": {
                            "row": 15,
                            "column": 27
                          },
                          "text": "("
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 15,
                            "column": 27
                          },
                          "end": {
                            "row": 15,
                            "column": 38
                          },
                          "text": "'block_end'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 15,
                                "column": 27
                              },
                              "end": {
                                "row": 15,
                                "column": 28
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 15,
                                "column": 28
                              },
                              "end": {
                                "row": 15,
                                "column": 37
                              },
                              "text": "block_end"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 15,
                                "column": 37
                              },
                              "end": {
                                "row": 15,
                                "column": 38
                              },
                              "text": "'"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 15,
                            "column": 38
                          },
                          "end": {
                            "row": 15,
                            "column": 39
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 42
              },
              "text": "result = self.subparse(end_tokens)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 42
                  },
                  "text": "result = self.subparse(end_tokens)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 8
                      },
                      "end": {
                        "row": 16,
                        "column": 14
                      },
                      "text": "result"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 16,
                        "column": 15
                      },
                      "end": {
                        "row": 16,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 16,
                        "column": 17
                      },
                      "end": {
                        "row": 16,
                        "column": 42
                      },
                      "text": "self.subparse(end_tokens)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 17
                          },
                          "end": {
                            "row": 16,
                            "column": 30
                          },
                          "text": "self.subparse",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 17
                              },
                              "end": {
                                "row": 16,
                                "column": 21
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 21
                              },
                              "end": {
                                "row": 16,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 22
                              },
                              "end": {
                                "row": 16,
                                "column": 30
                              },
                              "text": "subparse"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 16,
                            "column": 30
                          },
                          "end": {
                            "row": 16,
                            "column": 42
                          },
                          "text": "(end_tokens)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 16,
                                "column": 30
                              },
                              "end": {
                                "row": 16,
                                "column": 31
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 31
                              },
                              "end": {
                                "row": 16,
                                "column": 41
                              },
                              "text": "end_tokens"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 41
                              },
                              "end": {
                                "row": 16,
                                "column": 42
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 69
              },
              "text": "# we reached the end of the template too early, the subparser"
            },
            {
              "type": "comment",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 19,
                "column": 52
              },
              "text": "# does not check for this, so we do that now"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 20,
                "column": 8
              },
              "end": {
                "row": 21,
                "column": 37
              },
              "text": "if self.stream.current.type == 'eof':\n            self.fail_eof(end_tokens)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 20,
                    "column": 8
                  },
                  "end": {
                    "row": 20,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 20,
                    "column": 11
                  },
                  "end": {
                    "row": 20,
                    "column": 44
                  },
                  "text": "self.stream.current.type == 'eof'",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 20,
                        "column": 11
                      },
                      "end": {
                        "row": 20,
                        "column": 35
                      },
                      "text": "self.stream.current.type",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 20,
                            "column": 11
                          },
                          "end": {
                            "row": 20,
                            "column": 30
                          },
                          "text": "self.stream.current",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 20,
                                "column": 11
                              },
                              "end": {
                                "row": 20,
                                "column": 22
                              },
                              "text": "self.stream",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 15
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 22
                                  },
                                  "text": "stream"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 20,
                                "column": 22
                              },
                              "end": {
                                "row": 20,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 20,
                                "column": 23
                              },
                              "end": {
                                "row": 20,
                                "column": 30
                              },
                              "text": "current"
                            }
                          ]
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 20,
                            "column": 30
                          },
                          "end": {
                            "row": 20,
                            "column": 31
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 20,
                            "column": 31
                          },
                          "end": {
                            "row": 20,
                            "column": 35
                          },
                          "text": "type"
                        }
                      ]
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 20,
                        "column": 36
                      },
                      "end": {
                        "row": 20,
                        "column": 38
                      },
                      "text": "=="
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 20,
                        "column": 39
                      },
                      "end": {
                        "row": 20,
                        "column": 44
                      },
                      "text": "'eof'",
                      "children": [
                        {
                          "type": "string_start",
                          "start": {
                            "row": 20,
                            "column": 39
                          },
                          "end": {
                            "row": 20,
                            "column": 40
                          },
                          "text": "'"
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 20,
                            "column": 40
                          },
                          "end": {
                            "row": 20,
                            "column": 43
                          },
                          "text": "eof"
                        },
                        {
                          "type": "string_end",
                          "start": {
                            "row": 20,
                            "column": 43
                          },
                          "end": {
                            "row": 20,
                            "column": 44
                          },
                          "text": "'"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 20,
                    "column": 44
                  },
                  "end": {
                    "row": 20,
                    "column": 45
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 21,
                    "column": 12
                  },
                  "end": {
                    "row": 21,
                    "column": 37
                  },
                  "text": "self.fail_eof(end_tokens)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 21,
                        "column": 12
                      },
                      "end": {
                        "row": 21,
                        "column": 37
                      },
                      "text": "self.fail_eof(end_tokens)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 21,
                            "column": 12
                          },
                          "end": {
                            "row": 21,
                            "column": 37
                          },
                          "text": "self.fail_eof(end_tokens)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 21,
                                "column": 12
                              },
                              "end": {
                                "row": 21,
                                "column": 25
                              },
                              "text": "self.fail_eof",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 16
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 21,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 25
                                  },
                                  "text": "fail_eof"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 21,
                                "column": 25
                              },
                              "end": {
                                "row": 21,
                                "column": 37
                              },
                              "text": "(end_tokens)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 21,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 26
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 21,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 36
                                  },
                                  "text": "end_tokens"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 21,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 37
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 23,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 29
              },
              "text": "if drop_needle:\n            next(self.stream)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 23,
                    "column": 11
                  },
                  "end": {
                    "row": 23,
                    "column": 22
                  },
                  "text": "drop_needle"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 23,
                    "column": 22
                  },
                  "end": {
                    "row": 23,
                    "column": 23
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 24,
                    "column": 12
                  },
                  "end": {
                    "row": 24,
                    "column": 29
                  },
                  "text": "next(self.stream)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 29
                      },
                      "text": "next(self.stream)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 24,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 29
                          },
                          "text": "next(self.stream)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 12
                              },
                              "end": {
                                "row": 24,
                                "column": 16
                              },
                              "text": "next"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 24,
                                "column": 16
                              },
                              "end": {
                                "row": 24,
                                "column": 29
                              },
                              "text": "(self.stream)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 17
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 24,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 28
                                  },
                                  "text": "self.stream",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 24,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 21
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 24,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 22
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 24,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 24,
                                        "column": 28
                                      },
                                      "text": "stream"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 24,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 29
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 21
              },
              "text": "return result",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 25,
                    "column": 15
                  },
                  "end": {
                    "row": 25,
                    "column": 21
                  },
                  "text": "result"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}