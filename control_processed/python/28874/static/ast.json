{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 25,
    "column": 36
  },
  "text": "def __reg_query_value(handle, value_name):\n        '''\n        Calls RegQueryValueEx\n\n        If PY2 ensure unicode string and expand REG_EXPAND_SZ before returning\n        Remember to catch not found exceptions when calling.\n\n        Args:\n            handle (object): open registry handle.\n            value_name (str): Name of the value you wished returned\n\n        Returns:\n            tuple: type, value\n        '''\n        # item_value, item_type = win32api.RegQueryValueEx(self.__reg_uninstall_handle, value_name)\n        item_value, item_type = win32api.RegQueryValueEx(handle, value_name)  # pylint: disable=no-member\n        if six.PY2 and isinstance(item_value, six.string_types) and not isinstance(item_value, six.text_type):\n            try:\n                item_value = six.text_type(item_value, encoding='mbcs')\n            except UnicodeError:\n                pass\n        if item_type == win32con.REG_EXPAND_SZ:\n            # expects Unicode input\n            win32api.ExpandEnvironmentStrings(item_value)  # pylint: disable=no-member\n            item_type = win32con.REG_SZ\n        return item_value, item_type",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 25,
        "column": 36
      },
      "text": "def __reg_query_value(handle, value_name):\n        '''\n        Calls RegQueryValueEx\n\n        If PY2 ensure unicode string and expand REG_EXPAND_SZ before returning\n        Remember to catch not found exceptions when calling.\n\n        Args:\n            handle (object): open registry handle.\n            value_name (str): Name of the value you wished returned\n\n        Returns:\n            tuple: type, value\n        '''\n        # item_value, item_type = win32api.RegQueryValueEx(self.__reg_uninstall_handle, value_name)\n        item_value, item_type = win32api.RegQueryValueEx(handle, value_name)  # pylint: disable=no-member\n        if six.PY2 and isinstance(item_value, six.string_types) and not isinstance(item_value, six.text_type):\n            try:\n                item_value = six.text_type(item_value, encoding='mbcs')\n            except UnicodeError:\n                pass\n        if item_type == win32con.REG_EXPAND_SZ:\n            # expects Unicode input\n            win32api.ExpandEnvironmentStrings(item_value)  # pylint: disable=no-member\n            item_type = win32con.REG_SZ\n        return item_value, item_type",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "__reg_query_value"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 41
          },
          "text": "(handle, value_name)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "handle"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 40
              },
              "text": "value_name"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 41
          },
          "end": {
            "row": 0,
            "column": 42
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 25,
            "column": 36
          },
          "text": "'''\n        Calls RegQueryValueEx\n\n        If PY2 ensure unicode string and expand REG_EXPAND_SZ before returning\n        Remember to catch not found exceptions when calling.\n\n        Args:\n            handle (object): open registry handle.\n            value_name (str): Name of the value you wished returned\n\n        Returns:\n            tuple: type, value\n        '''\n        # item_value, item_type = win32api.RegQueryValueEx(self.__reg_uninstall_handle, value_name)\n        item_value, item_type = win32api.RegQueryValueEx(handle, value_name)  # pylint: disable=no-member\n        if six.PY2 and isinstance(item_value, six.string_types) and not isinstance(item_value, six.text_type):\n            try:\n                item_value = six.text_type(item_value, encoding='mbcs')\n            except UnicodeError:\n                pass\n        if item_type == win32con.REG_EXPAND_SZ:\n            # expects Unicode input\n            win32api.ExpandEnvironmentStrings(item_value)  # pylint: disable=no-member\n            item_type = win32con.REG_SZ\n        return item_value, item_type",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 11
              },
              "text": "'''\n        Calls RegQueryValueEx\n\n        If PY2 ensure unicode string and expand REG_EXPAND_SZ before returning\n        Remember to catch not found exceptions when calling.\n\n        Args:\n            handle (object): open registry handle.\n            value_name (str): Name of the value you wished returned\n\n        Returns:\n            tuple: type, value\n        '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 11
                  },
                  "text": "'''\n        Calls RegQueryValueEx\n\n        If PY2 ensure unicode string and expand REG_EXPAND_SZ before returning\n        Remember to catch not found exceptions when calling.\n\n        Args:\n            handle (object): open registry handle.\n            value_name (str): Name of the value you wished returned\n\n        Returns:\n            tuple: type, value\n        '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 13,
                        "column": 8
                      },
                      "text": "\n        Calls RegQueryValueEx\n\n        If PY2 ensure unicode string and expand REG_EXPAND_SZ before returning\n        Remember to catch not found exceptions when calling.\n\n        Args:\n            handle (object): open registry handle.\n            value_name (str): Name of the value you wished returned\n\n        Returns:\n            tuple: type, value\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 11
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 99
              },
              "text": "# item_value, item_type = win32api.RegQueryValueEx(self.__reg_uninstall_handle, value_name)"
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 15,
                "column": 76
              },
              "text": "item_value, item_type = win32api.RegQueryValueEx(handle, value_name)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 76
                  },
                  "text": "item_value, item_type = win32api.RegQueryValueEx(handle, value_name)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 15,
                        "column": 8
                      },
                      "end": {
                        "row": 15,
                        "column": 29
                      },
                      "text": "item_value, item_type",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 8
                          },
                          "end": {
                            "row": 15,
                            "column": 18
                          },
                          "text": "item_value"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 15,
                            "column": 18
                          },
                          "end": {
                            "row": 15,
                            "column": 19
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 20
                          },
                          "end": {
                            "row": 15,
                            "column": 29
                          },
                          "text": "item_type"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 15,
                        "column": 30
                      },
                      "end": {
                        "row": 15,
                        "column": 31
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 15,
                        "column": 32
                      },
                      "end": {
                        "row": 15,
                        "column": 76
                      },
                      "text": "win32api.RegQueryValueEx(handle, value_name)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 15,
                            "column": 32
                          },
                          "end": {
                            "row": 15,
                            "column": 56
                          },
                          "text": "win32api.RegQueryValueEx",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 32
                              },
                              "end": {
                                "row": 15,
                                "column": 40
                              },
                              "text": "win32api"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 15,
                                "column": 40
                              },
                              "end": {
                                "row": 15,
                                "column": 41
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 41
                              },
                              "end": {
                                "row": 15,
                                "column": 56
                              },
                              "text": "RegQueryValueEx"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 15,
                            "column": 56
                          },
                          "end": {
                            "row": 15,
                            "column": 76
                          },
                          "text": "(handle, value_name)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 15,
                                "column": 56
                              },
                              "end": {
                                "row": 15,
                                "column": 57
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 57
                              },
                              "end": {
                                "row": 15,
                                "column": 63
                              },
                              "text": "handle"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 15,
                                "column": 63
                              },
                              "end": {
                                "row": 15,
                                "column": 64
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 65
                              },
                              "end": {
                                "row": 15,
                                "column": 75
                              },
                              "text": "value_name"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 15,
                                "column": 75
                              },
                              "end": {
                                "row": 15,
                                "column": 76
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 15,
                "column": 78
              },
              "end": {
                "row": 15,
                "column": 105
              },
              "text": "# pylint: disable=no-member"
            },
            {
              "type": "if_statement",
              "start": {
                "row": 16,
                "column": 8
              },
              "end": {
                "row": 20,
                "column": 20
              },
              "text": "if six.PY2 and isinstance(item_value, six.string_types) and not isinstance(item_value, six.text_type):\n            try:\n                item_value = six.text_type(item_value, encoding='mbcs')\n            except UnicodeError:\n                pass",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 16,
                    "column": 8
                  },
                  "end": {
                    "row": 16,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "boolean_operator",
                  "start": {
                    "row": 16,
                    "column": 11
                  },
                  "end": {
                    "row": 16,
                    "column": 109
                  },
                  "text": "six.PY2 and isinstance(item_value, six.string_types) and not isinstance(item_value, six.text_type)",
                  "children": [
                    {
                      "type": "boolean_operator",
                      "start": {
                        "row": 16,
                        "column": 11
                      },
                      "end": {
                        "row": 16,
                        "column": 63
                      },
                      "text": "six.PY2 and isinstance(item_value, six.string_types)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 11
                          },
                          "end": {
                            "row": 16,
                            "column": 18
                          },
                          "text": "six.PY2",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 11
                              },
                              "end": {
                                "row": 16,
                                "column": 14
                              },
                              "text": "six"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 14
                              },
                              "end": {
                                "row": 16,
                                "column": 15
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 15
                              },
                              "end": {
                                "row": 16,
                                "column": 18
                              },
                              "text": "PY2"
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "start": {
                            "row": 16,
                            "column": 19
                          },
                          "end": {
                            "row": 16,
                            "column": 22
                          },
                          "text": "and"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 16,
                            "column": 23
                          },
                          "end": {
                            "row": 16,
                            "column": 63
                          },
                          "text": "isinstance(item_value, six.string_types)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 23
                              },
                              "end": {
                                "row": 16,
                                "column": 33
                              },
                              "text": "isinstance"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 16,
                                "column": 33
                              },
                              "end": {
                                "row": 16,
                                "column": 63
                              },
                              "text": "(item_value, six.string_types)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 16,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 44
                                  },
                                  "text": "item_value"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 16,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 45
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 16,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 62
                                  },
                                  "text": "six.string_types",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 49
                                      },
                                      "text": "six"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 16,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 50
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 62
                                      },
                                      "text": "string_types"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 63
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "start": {
                        "row": 16,
                        "column": 64
                      },
                      "end": {
                        "row": 16,
                        "column": 67
                      },
                      "text": "and"
                    },
                    {
                      "type": "not_operator",
                      "start": {
                        "row": 16,
                        "column": 68
                      },
                      "end": {
                        "row": 16,
                        "column": 109
                      },
                      "text": "not isinstance(item_value, six.text_type)",
                      "children": [
                        {
                          "type": "not",
                          "start": {
                            "row": 16,
                            "column": 68
                          },
                          "end": {
                            "row": 16,
                            "column": 71
                          },
                          "text": "not"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 16,
                            "column": 72
                          },
                          "end": {
                            "row": 16,
                            "column": 109
                          },
                          "text": "isinstance(item_value, six.text_type)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 72
                              },
                              "end": {
                                "row": 16,
                                "column": 82
                              },
                              "text": "isinstance"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 16,
                                "column": 82
                              },
                              "end": {
                                "row": 16,
                                "column": 109
                              },
                              "text": "(item_value, six.text_type)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 16,
                                    "column": 82
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 83
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 16,
                                    "column": 83
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 93
                                  },
                                  "text": "item_value"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 16,
                                    "column": 93
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 94
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 16,
                                    "column": 95
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 108
                                  },
                                  "text": "six.text_type",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 95
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 98
                                      },
                                      "text": "six"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 16,
                                        "column": 98
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 99
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 16,
                                        "column": 99
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 108
                                      },
                                      "text": "text_type"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 108
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 109
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 16,
                    "column": 109
                  },
                  "end": {
                    "row": 16,
                    "column": 110
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 17,
                    "column": 12
                  },
                  "end": {
                    "row": 20,
                    "column": 20
                  },
                  "text": "try:\n                item_value = six.text_type(item_value, encoding='mbcs')\n            except UnicodeError:\n                pass",
                  "children": [
                    {
                      "type": "try_statement",
                      "start": {
                        "row": 17,
                        "column": 12
                      },
                      "end": {
                        "row": 20,
                        "column": 20
                      },
                      "text": "try:\n                item_value = six.text_type(item_value, encoding='mbcs')\n            except UnicodeError:\n                pass",
                      "children": [
                        {
                          "type": "try",
                          "start": {
                            "row": 17,
                            "column": 12
                          },
                          "end": {
                            "row": 17,
                            "column": 15
                          },
                          "text": "try"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 17,
                            "column": 15
                          },
                          "end": {
                            "row": 17,
                            "column": 16
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 18,
                            "column": 16
                          },
                          "end": {
                            "row": 18,
                            "column": 71
                          },
                          "text": "item_value = six.text_type(item_value, encoding='mbcs')",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 18,
                                "column": 16
                              },
                              "end": {
                                "row": 18,
                                "column": 71
                              },
                              "text": "item_value = six.text_type(item_value, encoding='mbcs')",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 18,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 71
                                  },
                                  "text": "item_value = six.text_type(item_value, encoding='mbcs')",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 26
                                      },
                                      "text": "item_value"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 18,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 28
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 18,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 71
                                      },
                                      "text": "six.text_type(item_value, encoding='mbcs')",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 18,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 42
                                          },
                                          "text": "six.text_type",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 32
                                              },
                                              "text": "six"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 18,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 33
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 42
                                              },
                                              "text": "text_type"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 18,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 18,
                                            "column": 71
                                          },
                                          "text": "(item_value, encoding='mbcs')",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 18,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 43
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 18,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 53
                                              },
                                              "text": "item_value"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 18,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 54
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 18,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 70
                                              },
                                              "text": "encoding='mbcs'",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 63
                                                  },
                                                  "text": "encoding"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 64
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 18,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 18,
                                                    "column": 70
                                                  },
                                                  "text": "'mbcs'",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 64
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 65
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 69
                                                      },
                                                      "text": "mbcs"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 18,
                                                        "column": 69
                                                      },
                                                      "end": {
                                                        "row": 18,
                                                        "column": 70
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 18,
                                                "column": 70
                                              },
                                              "end": {
                                                "row": 18,
                                                "column": 71
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "except_clause",
                          "start": {
                            "row": 19,
                            "column": 12
                          },
                          "end": {
                            "row": 20,
                            "column": 20
                          },
                          "text": "except UnicodeError:\n                pass",
                          "children": [
                            {
                              "type": "except",
                              "start": {
                                "row": 19,
                                "column": 12
                              },
                              "end": {
                                "row": 19,
                                "column": 18
                              },
                              "text": "except"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 19,
                                "column": 19
                              },
                              "end": {
                                "row": 19,
                                "column": 31
                              },
                              "text": "UnicodeError"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 19,
                                "column": 31
                              },
                              "end": {
                                "row": 19,
                                "column": 32
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 20,
                                "column": 16
                              },
                              "end": {
                                "row": 20,
                                "column": 20
                              },
                              "text": "pass",
                              "children": [
                                {
                                  "type": "pass_statement",
                                  "start": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 20
                                  },
                                  "text": "pass",
                                  "children": [
                                    {
                                      "type": "pass",
                                      "start": {
                                        "row": 20,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 20
                                      },
                                      "text": "pass"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 21,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 39
              },
              "text": "if item_type == win32con.REG_EXPAND_SZ:\n            # expects Unicode input\n            win32api.ExpandEnvironmentStrings(item_value)  # pylint: disable=no-member\n            item_type = win32con.REG_SZ",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 21,
                    "column": 8
                  },
                  "end": {
                    "row": 21,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 21,
                    "column": 11
                  },
                  "end": {
                    "row": 21,
                    "column": 46
                  },
                  "text": "item_type == win32con.REG_EXPAND_SZ",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 11
                      },
                      "end": {
                        "row": 21,
                        "column": 20
                      },
                      "text": "item_type"
                    },
                    {
                      "type": "==",
                      "start": {
                        "row": 21,
                        "column": 21
                      },
                      "end": {
                        "row": 21,
                        "column": 23
                      },
                      "text": "=="
                    },
                    {
                      "type": "attribute",
                      "start": {
                        "row": 21,
                        "column": 24
                      },
                      "end": {
                        "row": 21,
                        "column": 46
                      },
                      "text": "win32con.REG_EXPAND_SZ",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 24
                          },
                          "end": {
                            "row": 21,
                            "column": 32
                          },
                          "text": "win32con"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 21,
                            "column": 32
                          },
                          "end": {
                            "row": 21,
                            "column": 33
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 33
                          },
                          "end": {
                            "row": 21,
                            "column": 46
                          },
                          "text": "REG_EXPAND_SZ"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 21,
                    "column": 46
                  },
                  "end": {
                    "row": 21,
                    "column": 47
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 22,
                    "column": 12
                  },
                  "end": {
                    "row": 22,
                    "column": 35
                  },
                  "text": "# expects Unicode input"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 23,
                    "column": 12
                  },
                  "end": {
                    "row": 24,
                    "column": 39
                  },
                  "text": "win32api.ExpandEnvironmentStrings(item_value)  # pylint: disable=no-member\n            item_type = win32con.REG_SZ",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 23,
                        "column": 12
                      },
                      "end": {
                        "row": 23,
                        "column": 57
                      },
                      "text": "win32api.ExpandEnvironmentStrings(item_value)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 23,
                            "column": 12
                          },
                          "end": {
                            "row": 23,
                            "column": 57
                          },
                          "text": "win32api.ExpandEnvironmentStrings(item_value)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 45
                              },
                              "text": "win32api.ExpandEnvironmentStrings",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 20
                                  },
                                  "text": "win32api"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 23,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 21
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 45
                                  },
                                  "text": "ExpandEnvironmentStrings"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 23,
                                "column": 45
                              },
                              "end": {
                                "row": 23,
                                "column": 57
                              },
                              "text": "(item_value)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 23,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 46
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 23,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 56
                                  },
                                  "text": "item_value"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 23,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 57
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 23,
                        "column": 59
                      },
                      "end": {
                        "row": 23,
                        "column": 86
                      },
                      "text": "# pylint: disable=no-member"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 39
                      },
                      "text": "item_type = win32con.REG_SZ",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 24,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 39
                          },
                          "text": "item_type = win32con.REG_SZ",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 12
                              },
                              "end": {
                                "row": 24,
                                "column": 21
                              },
                              "text": "item_type"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 24,
                                "column": 22
                              },
                              "end": {
                                "row": 24,
                                "column": 23
                              },
                              "text": "="
                            },
                            {
                              "type": "attribute",
                              "start": {
                                "row": 24,
                                "column": 24
                              },
                              "end": {
                                "row": 24,
                                "column": 39
                              },
                              "text": "win32con.REG_SZ",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 32
                                  },
                                  "text": "win32con"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 24,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 33
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 39
                                  },
                                  "text": "REG_SZ"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 36
              },
              "text": "return item_value, item_type",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "expression_list",
                  "start": {
                    "row": 25,
                    "column": 15
                  },
                  "end": {
                    "row": 25,
                    "column": 36
                  },
                  "text": "item_value, item_type",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 15
                      },
                      "end": {
                        "row": 25,
                        "column": 25
                      },
                      "text": "item_value"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 25,
                        "column": 25
                      },
                      "end": {
                        "row": 25,
                        "column": 26
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 27
                      },
                      "end": {
                        "row": 25,
                        "column": 36
                      },
                      "text": "item_type"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}