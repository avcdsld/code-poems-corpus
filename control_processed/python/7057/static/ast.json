{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 28,
    "column": 15
  },
  "text": "def _apply_weighting(F, loss, weight=None, sample_weight=None):\n    \"\"\"Apply weighting to loss.\n\n    Parameters\n    ----------\n    loss : Symbol\n        The loss to be weighted.\n    weight : float or None\n        Global scalar weight for loss.\n    sample_weight : Symbol or None\n        Per sample weighting. Must be broadcastable to\n        the same shape as loss. For example, if loss has\n        shape (64, 10) and you want to weight each sample\n        in the batch separately, `sample_weight` should have\n        shape (64, 1).\n\n    Returns\n    -------\n    loss : Symbol\n        Weighted loss\n    \"\"\"\n    if sample_weight is not None:\n        loss = F.broadcast_mul(loss, sample_weight)\n\n    if weight is not None:\n        assert isinstance(weight, numeric_types), \"weight must be a number\"\n        loss = loss * weight\n\n    return loss",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 28,
        "column": 15
      },
      "text": "def _apply_weighting(F, loss, weight=None, sample_weight=None):\n    \"\"\"Apply weighting to loss.\n\n    Parameters\n    ----------\n    loss : Symbol\n        The loss to be weighted.\n    weight : float or None\n        Global scalar weight for loss.\n    sample_weight : Symbol or None\n        Per sample weighting. Must be broadcastable to\n        the same shape as loss. For example, if loss has\n        shape (64, 10) and you want to weight each sample\n        in the batch separately, `sample_weight` should have\n        shape (64, 1).\n\n    Returns\n    -------\n    loss : Symbol\n        Weighted loss\n    \"\"\"\n    if sample_weight is not None:\n        loss = F.broadcast_mul(loss, sample_weight)\n\n    if weight is not None:\n        assert isinstance(weight, numeric_types), \"weight must be a number\"\n        loss = loss * weight\n\n    return loss",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "_apply_weighting"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 0,
            "column": 62
          },
          "text": "(F, loss, weight=None, sample_weight=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "F"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "loss"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": "weight=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 36
                  },
                  "text": "weight"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 36
                  },
                  "end": {
                    "row": 0,
                    "column": 37
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 41
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 43
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": "sample_weight=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 43
                  },
                  "end": {
                    "row": 0,
                    "column": 56
                  },
                  "text": "sample_weight"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 56
                  },
                  "end": {
                    "row": 0,
                    "column": 57
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 57
                  },
                  "end": {
                    "row": 0,
                    "column": 61
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 61
              },
              "end": {
                "row": 0,
                "column": 62
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 62
          },
          "end": {
            "row": 0,
            "column": 63
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 28,
            "column": 15
          },
          "text": "\"\"\"Apply weighting to loss.\n\n    Parameters\n    ----------\n    loss : Symbol\n        The loss to be weighted.\n    weight : float or None\n        Global scalar weight for loss.\n    sample_weight : Symbol or None\n        Per sample weighting. Must be broadcastable to\n        the same shape as loss. For example, if loss has\n        shape (64, 10) and you want to weight each sample\n        in the batch separately, `sample_weight` should have\n        shape (64, 1).\n\n    Returns\n    -------\n    loss : Symbol\n        Weighted loss\n    \"\"\"\n    if sample_weight is not None:\n        loss = F.broadcast_mul(loss, sample_weight)\n\n    if weight is not None:\n        assert isinstance(weight, numeric_types), \"weight must be a number\"\n        loss = loss * weight\n\n    return loss",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 7
              },
              "text": "\"\"\"Apply weighting to loss.\n\n    Parameters\n    ----------\n    loss : Symbol\n        The loss to be weighted.\n    weight : float or None\n        Global scalar weight for loss.\n    sample_weight : Symbol or None\n        Per sample weighting. Must be broadcastable to\n        the same shape as loss. For example, if loss has\n        shape (64, 10) and you want to weight each sample\n        in the batch separately, `sample_weight` should have\n        shape (64, 1).\n\n    Returns\n    -------\n    loss : Symbol\n        Weighted loss\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 7
                  },
                  "text": "\"\"\"Apply weighting to loss.\n\n    Parameters\n    ----------\n    loss : Symbol\n        The loss to be weighted.\n    weight : float or None\n        Global scalar weight for loss.\n    sample_weight : Symbol or None\n        Per sample weighting. Must be broadcastable to\n        the same shape as loss. For example, if loss has\n        shape (64, 10) and you want to weight each sample\n        in the batch separately, `sample_weight` should have\n        shape (64, 1).\n\n    Returns\n    -------\n    loss : Symbol\n        Weighted loss\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 20,
                        "column": 4
                      },
                      "text": "Apply weighting to loss.\n\n    Parameters\n    ----------\n    loss : Symbol\n        The loss to be weighted.\n    weight : float or None\n        Global scalar weight for loss.\n    sample_weight : Symbol or None\n        Per sample weighting. Must be broadcastable to\n        the same shape as loss. For example, if loss has\n        shape (64, 10) and you want to weight each sample\n        in the batch separately, `sample_weight` should have\n        shape (64, 1).\n\n    Returns\n    -------\n    loss : Symbol\n        Weighted loss\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 20,
                        "column": 4
                      },
                      "end": {
                        "row": 20,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 21,
                "column": 4
              },
              "end": {
                "row": 22,
                "column": 51
              },
              "text": "if sample_weight is not None:\n        loss = F.broadcast_mul(loss, sample_weight)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 21,
                    "column": 4
                  },
                  "end": {
                    "row": 21,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 21,
                    "column": 7
                  },
                  "end": {
                    "row": 21,
                    "column": 32
                  },
                  "text": "sample_weight is not None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 21,
                        "column": 7
                      },
                      "end": {
                        "row": 21,
                        "column": 20
                      },
                      "text": "sample_weight"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 21,
                        "column": 21
                      },
                      "end": {
                        "row": 21,
                        "column": 23
                      },
                      "text": "is"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 21,
                        "column": 24
                      },
                      "end": {
                        "row": 21,
                        "column": 27
                      },
                      "text": "not"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 21,
                        "column": 28
                      },
                      "end": {
                        "row": 21,
                        "column": 32
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 21,
                    "column": 32
                  },
                  "end": {
                    "row": 21,
                    "column": 33
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 51
                  },
                  "text": "loss = F.broadcast_mul(loss, sample_weight)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 51
                      },
                      "text": "loss = F.broadcast_mul(loss, sample_weight)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 22,
                            "column": 8
                          },
                          "end": {
                            "row": 22,
                            "column": 51
                          },
                          "text": "loss = F.broadcast_mul(loss, sample_weight)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 22,
                                "column": 8
                              },
                              "end": {
                                "row": 22,
                                "column": 12
                              },
                              "text": "loss"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 22,
                                "column": 13
                              },
                              "end": {
                                "row": 22,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 22,
                                "column": 15
                              },
                              "end": {
                                "row": 22,
                                "column": 51
                              },
                              "text": "F.broadcast_mul(loss, sample_weight)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 22,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 30
                                  },
                                  "text": "F.broadcast_mul",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 16
                                      },
                                      "text": "F"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 22,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 17
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 30
                                      },
                                      "text": "broadcast_mul"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 22,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 51
                                  },
                                  "text": "(loss, sample_weight)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 22,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 31
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 35
                                      },
                                      "text": "loss"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 22,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 36
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 22,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 50
                                      },
                                      "text": "sample_weight"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 22,
                                        "column": 50
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 51
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 24,
                "column": 4
              },
              "end": {
                "row": 26,
                "column": 28
              },
              "text": "if weight is not None:\n        assert isinstance(weight, numeric_types), \"weight must be a number\"\n        loss = loss * weight",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 24,
                    "column": 4
                  },
                  "end": {
                    "row": 24,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 24,
                    "column": 7
                  },
                  "end": {
                    "row": 24,
                    "column": 25
                  },
                  "text": "weight is not None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 24,
                        "column": 7
                      },
                      "end": {
                        "row": 24,
                        "column": 13
                      },
                      "text": "weight"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 24,
                        "column": 14
                      },
                      "end": {
                        "row": 24,
                        "column": 16
                      },
                      "text": "is"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 24,
                        "column": 17
                      },
                      "end": {
                        "row": 24,
                        "column": 20
                      },
                      "text": "not"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 24,
                        "column": 21
                      },
                      "end": {
                        "row": 24,
                        "column": 25
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 24,
                    "column": 25
                  },
                  "end": {
                    "row": 24,
                    "column": 26
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 28
                  },
                  "text": "assert isinstance(weight, numeric_types), \"weight must be a number\"\n        loss = loss * weight",
                  "children": [
                    {
                      "type": "assert_statement",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 75
                      },
                      "text": "assert isinstance(weight, numeric_types), \"weight must be a number\"",
                      "children": [
                        {
                          "type": "assert",
                          "start": {
                            "row": 25,
                            "column": 8
                          },
                          "end": {
                            "row": 25,
                            "column": 14
                          },
                          "text": "assert"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 25,
                            "column": 15
                          },
                          "end": {
                            "row": 25,
                            "column": 48
                          },
                          "text": "isinstance(weight, numeric_types)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 15
                              },
                              "end": {
                                "row": 25,
                                "column": 25
                              },
                              "text": "isinstance"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 25,
                                "column": 25
                              },
                              "end": {
                                "row": 25,
                                "column": 48
                              },
                              "text": "(weight, numeric_types)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 25,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 26
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 32
                                  },
                                  "text": "weight"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 25,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 33
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 25,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 47
                                  },
                                  "text": "numeric_types"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 25,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 48
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 25,
                            "column": 48
                          },
                          "end": {
                            "row": 25,
                            "column": 49
                          },
                          "text": ","
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 25,
                            "column": 50
                          },
                          "end": {
                            "row": 25,
                            "column": 75
                          },
                          "text": "\"weight must be a number\"",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 25,
                                "column": 50
                              },
                              "end": {
                                "row": 25,
                                "column": 51
                              },
                              "text": "\""
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 25,
                                "column": 51
                              },
                              "end": {
                                "row": 25,
                                "column": 74
                              },
                              "text": "weight must be a number"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 25,
                                "column": 74
                              },
                              "end": {
                                "row": 25,
                                "column": 75
                              },
                              "text": "\""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 26,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 28
                      },
                      "text": "loss = loss * weight",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 26,
                            "column": 8
                          },
                          "end": {
                            "row": 26,
                            "column": 28
                          },
                          "text": "loss = loss * weight",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 8
                              },
                              "end": {
                                "row": 26,
                                "column": 12
                              },
                              "text": "loss"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 26,
                                "column": 13
                              },
                              "end": {
                                "row": 26,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 26,
                                "column": 15
                              },
                              "end": {
                                "row": 26,
                                "column": 28
                              },
                              "text": "loss * weight",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 19
                                  },
                                  "text": "loss"
                                },
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 26,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 21
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 28
                                  },
                                  "text": "weight"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 28,
                "column": 4
              },
              "end": {
                "row": 28,
                "column": 15
              },
              "text": "return loss",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 28,
                    "column": 4
                  },
                  "end": {
                    "row": 28,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 28,
                    "column": 11
                  },
                  "end": {
                    "row": 28,
                    "column": 15
                  },
                  "text": "loss"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}