{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 19,
    "column": 15
  },
  "text": "def format_sympy_expr(sympy_expr, functions=None):\n  \"\"\"Convert sympy expression into a string which can be encoded.\n\n  Args:\n    sympy_expr: Any sympy expression tree or string.\n    functions: Defines special functions. A dict mapping human readable string\n        names, like \"log\", \"exp\", \"sin\", \"cos\", etc., to single chars. Each\n        function gets a unique token, like \"L\" for \"log\".\n\n  Returns:\n    A string representation of the expression suitable for encoding as a\n        sequence input.\n  \"\"\"\n  if functions is None:\n    functions = {}\n  str_expr = str(sympy_expr)\n  result = str_expr.replace(\" \", \"\")\n  for fn_name, char in six.iteritems(functions):\n    result = result.replace(fn_name, char)\n  return result",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 19,
        "column": 15
      },
      "text": "def format_sympy_expr(sympy_expr, functions=None):\n  \"\"\"Convert sympy expression into a string which can be encoded.\n\n  Args:\n    sympy_expr: Any sympy expression tree or string.\n    functions: Defines special functions. A dict mapping human readable string\n        names, like \"log\", \"exp\", \"sin\", \"cos\", etc., to single chars. Each\n        function gets a unique token, like \"L\" for \"log\".\n\n  Returns:\n    A string representation of the expression suitable for encoding as a\n        sequence input.\n  \"\"\"\n  if functions is None:\n    functions = {}\n  str_expr = str(sympy_expr)\n  result = str_expr.replace(\" \", \"\")\n  for fn_name, char in six.iteritems(functions):\n    result = result.replace(fn_name, char)\n  return result",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "format_sympy_expr"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 0,
            "column": 49
          },
          "text": "(sympy_expr, functions=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "sympy_expr"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 48
              },
              "text": "functions=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 34
                  },
                  "end": {
                    "row": 0,
                    "column": 43
                  },
                  "text": "functions"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 43
                  },
                  "end": {
                    "row": 0,
                    "column": 44
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 44
                  },
                  "end": {
                    "row": 0,
                    "column": 48
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 48
              },
              "end": {
                "row": 0,
                "column": 49
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 49
          },
          "end": {
            "row": 0,
            "column": 50
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 2
          },
          "end": {
            "row": 19,
            "column": 15
          },
          "text": "\"\"\"Convert sympy expression into a string which can be encoded.\n\n  Args:\n    sympy_expr: Any sympy expression tree or string.\n    functions: Defines special functions. A dict mapping human readable string\n        names, like \"log\", \"exp\", \"sin\", \"cos\", etc., to single chars. Each\n        function gets a unique token, like \"L\" for \"log\".\n\n  Returns:\n    A string representation of the expression suitable for encoding as a\n        sequence input.\n  \"\"\"\n  if functions is None:\n    functions = {}\n  str_expr = str(sympy_expr)\n  result = str_expr.replace(\" \", \"\")\n  for fn_name, char in six.iteritems(functions):\n    result = result.replace(fn_name, char)\n  return result",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 12,
                "column": 5
              },
              "text": "\"\"\"Convert sympy expression into a string which can be encoded.\n\n  Args:\n    sympy_expr: Any sympy expression tree or string.\n    functions: Defines special functions. A dict mapping human readable string\n        names, like \"log\", \"exp\", \"sin\", \"cos\", etc., to single chars. Each\n        function gets a unique token, like \"L\" for \"log\".\n\n  Returns:\n    A string representation of the expression suitable for encoding as a\n        sequence input.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 12,
                    "column": 5
                  },
                  "text": "\"\"\"Convert sympy expression into a string which can be encoded.\n\n  Args:\n    sympy_expr: Any sympy expression tree or string.\n    functions: Defines special functions. A dict mapping human readable string\n        names, like \"log\", \"exp\", \"sin\", \"cos\", etc., to single chars. Each\n        function gets a unique token, like \"L\" for \"log\".\n\n  Returns:\n    A string representation of the expression suitable for encoding as a\n        sequence input.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 5
                      },
                      "end": {
                        "row": 12,
                        "column": 2
                      },
                      "text": "Convert sympy expression into a string which can be encoded.\n\n  Args:\n    sympy_expr: Any sympy expression tree or string.\n    functions: Defines special functions. A dict mapping human readable string\n        names, like \"log\", \"exp\", \"sin\", \"cos\", etc., to single chars. Each\n        function gets a unique token, like \"L\" for \"log\".\n\n  Returns:\n    A string representation of the expression suitable for encoding as a\n        sequence input.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 12,
                        "column": 2
                      },
                      "end": {
                        "row": 12,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 13,
                "column": 2
              },
              "end": {
                "row": 14,
                "column": 18
              },
              "text": "if functions is None:\n    functions = {}",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 13,
                    "column": 2
                  },
                  "end": {
                    "row": 13,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 13,
                    "column": 5
                  },
                  "end": {
                    "row": 13,
                    "column": 22
                  },
                  "text": "functions is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 5
                      },
                      "end": {
                        "row": 13,
                        "column": 14
                      },
                      "text": "functions"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 13,
                        "column": 15
                      },
                      "end": {
                        "row": 13,
                        "column": 17
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 13,
                        "column": 18
                      },
                      "end": {
                        "row": 13,
                        "column": 22
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 13,
                    "column": 22
                  },
                  "end": {
                    "row": 13,
                    "column": 23
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 14,
                    "column": 4
                  },
                  "end": {
                    "row": 14,
                    "column": 18
                  },
                  "text": "functions = {}",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 14,
                        "column": 4
                      },
                      "end": {
                        "row": 14,
                        "column": 18
                      },
                      "text": "functions = {}",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 14,
                            "column": 4
                          },
                          "end": {
                            "row": 14,
                            "column": 18
                          },
                          "text": "functions = {}",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 14,
                                "column": 4
                              },
                              "end": {
                                "row": 14,
                                "column": 13
                              },
                              "text": "functions"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 14,
                                "column": 14
                              },
                              "end": {
                                "row": 14,
                                "column": 15
                              },
                              "text": "="
                            },
                            {
                              "type": "dictionary",
                              "start": {
                                "row": 14,
                                "column": 16
                              },
                              "end": {
                                "row": 14,
                                "column": 18
                              },
                              "text": "{}",
                              "children": [
                                {
                                  "type": "{",
                                  "start": {
                                    "row": 14,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 17
                                  },
                                  "text": "{"
                                },
                                {
                                  "type": "}",
                                  "start": {
                                    "row": 14,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 18
                                  },
                                  "text": "}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 15,
                "column": 2
              },
              "end": {
                "row": 15,
                "column": 28
              },
              "text": "str_expr = str(sympy_expr)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 15,
                    "column": 2
                  },
                  "end": {
                    "row": 15,
                    "column": 28
                  },
                  "text": "str_expr = str(sympy_expr)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 15,
                        "column": 2
                      },
                      "end": {
                        "row": 15,
                        "column": 10
                      },
                      "text": "str_expr"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 15,
                        "column": 11
                      },
                      "end": {
                        "row": 15,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 15,
                        "column": 13
                      },
                      "end": {
                        "row": 15,
                        "column": 28
                      },
                      "text": "str(sympy_expr)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 15,
                            "column": 13
                          },
                          "end": {
                            "row": 15,
                            "column": 16
                          },
                          "text": "str"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 15,
                            "column": 16
                          },
                          "end": {
                            "row": 15,
                            "column": 28
                          },
                          "text": "(sympy_expr)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 15,
                                "column": 16
                              },
                              "end": {
                                "row": 15,
                                "column": 17
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 15,
                                "column": 17
                              },
                              "end": {
                                "row": 15,
                                "column": 27
                              },
                              "text": "sympy_expr"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 15,
                                "column": 27
                              },
                              "end": {
                                "row": 15,
                                "column": 28
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 16,
                "column": 2
              },
              "end": {
                "row": 16,
                "column": 36
              },
              "text": "result = str_expr.replace(\" \", \"\")",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 16,
                    "column": 2
                  },
                  "end": {
                    "row": 16,
                    "column": 36
                  },
                  "text": "result = str_expr.replace(\" \", \"\")",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 16,
                        "column": 2
                      },
                      "end": {
                        "row": 16,
                        "column": 8
                      },
                      "text": "result"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 16,
                        "column": 9
                      },
                      "end": {
                        "row": 16,
                        "column": 10
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 16,
                        "column": 11
                      },
                      "end": {
                        "row": 16,
                        "column": 36
                      },
                      "text": "str_expr.replace(\" \", \"\")",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 16,
                            "column": 11
                          },
                          "end": {
                            "row": 16,
                            "column": 27
                          },
                          "text": "str_expr.replace",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 11
                              },
                              "end": {
                                "row": 16,
                                "column": 19
                              },
                              "text": "str_expr"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 16,
                                "column": 19
                              },
                              "end": {
                                "row": 16,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 20
                              },
                              "end": {
                                "row": 16,
                                "column": 27
                              },
                              "text": "replace"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 16,
                            "column": 27
                          },
                          "end": {
                            "row": 16,
                            "column": 36
                          },
                          "text": "(\" \", \"\")",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 16,
                                "column": 27
                              },
                              "end": {
                                "row": 16,
                                "column": 28
                              },
                              "text": "("
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 16,
                                "column": 28
                              },
                              "end": {
                                "row": 16,
                                "column": 31
                              },
                              "text": "\" \"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 16,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 29
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 16,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 30
                                  },
                                  "text": " "
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 16,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 31
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 16,
                                "column": 31
                              },
                              "end": {
                                "row": 16,
                                "column": 32
                              },
                              "text": ","
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 16,
                                "column": 33
                              },
                              "end": {
                                "row": 16,
                                "column": 35
                              },
                              "text": "\"\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 16,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 16,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 35
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 16,
                                "column": 35
                              },
                              "end": {
                                "row": 16,
                                "column": 36
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 17,
                "column": 2
              },
              "end": {
                "row": 18,
                "column": 42
              },
              "text": "for fn_name, char in six.iteritems(functions):\n    result = result.replace(fn_name, char)",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 17,
                    "column": 2
                  },
                  "end": {
                    "row": 17,
                    "column": 5
                  },
                  "text": "for"
                },
                {
                  "type": "pattern_list",
                  "start": {
                    "row": 17,
                    "column": 6
                  },
                  "end": {
                    "row": 17,
                    "column": 19
                  },
                  "text": "fn_name, char",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 6
                      },
                      "end": {
                        "row": 17,
                        "column": 13
                      },
                      "text": "fn_name"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 17,
                        "column": 13
                      },
                      "end": {
                        "row": 17,
                        "column": 14
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 15
                      },
                      "end": {
                        "row": 17,
                        "column": 19
                      },
                      "text": "char"
                    }
                  ]
                },
                {
                  "type": "in",
                  "start": {
                    "row": 17,
                    "column": 20
                  },
                  "end": {
                    "row": 17,
                    "column": 22
                  },
                  "text": "in"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 17,
                    "column": 23
                  },
                  "end": {
                    "row": 17,
                    "column": 47
                  },
                  "text": "six.iteritems(functions)",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 17,
                        "column": 23
                      },
                      "end": {
                        "row": 17,
                        "column": 36
                      },
                      "text": "six.iteritems",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 23
                          },
                          "end": {
                            "row": 17,
                            "column": 26
                          },
                          "text": "six"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 17,
                            "column": 26
                          },
                          "end": {
                            "row": 17,
                            "column": 27
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 27
                          },
                          "end": {
                            "row": 17,
                            "column": 36
                          },
                          "text": "iteritems"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 17,
                        "column": 36
                      },
                      "end": {
                        "row": 17,
                        "column": 47
                      },
                      "text": "(functions)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 17,
                            "column": 36
                          },
                          "end": {
                            "row": 17,
                            "column": 37
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 37
                          },
                          "end": {
                            "row": 17,
                            "column": 46
                          },
                          "text": "functions"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 17,
                            "column": 46
                          },
                          "end": {
                            "row": 17,
                            "column": 47
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 17,
                    "column": 47
                  },
                  "end": {
                    "row": 17,
                    "column": 48
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 18,
                    "column": 4
                  },
                  "end": {
                    "row": 18,
                    "column": 42
                  },
                  "text": "result = result.replace(fn_name, char)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 18,
                        "column": 4
                      },
                      "end": {
                        "row": 18,
                        "column": 42
                      },
                      "text": "result = result.replace(fn_name, char)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 18,
                            "column": 4
                          },
                          "end": {
                            "row": 18,
                            "column": 42
                          },
                          "text": "result = result.replace(fn_name, char)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 4
                              },
                              "end": {
                                "row": 18,
                                "column": 10
                              },
                              "text": "result"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 18,
                                "column": 11
                              },
                              "end": {
                                "row": 18,
                                "column": 12
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 18,
                                "column": 13
                              },
                              "end": {
                                "row": 18,
                                "column": 42
                              },
                              "text": "result.replace(fn_name, char)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 18,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 27
                                  },
                                  "text": "result.replace",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 19
                                      },
                                      "text": "result"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 18,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 20
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 27
                                      },
                                      "text": "replace"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 18,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 42
                                  },
                                  "text": "(fn_name, char)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 18,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 35
                                      },
                                      "text": "fn_name"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 18,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 36
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 18,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 41
                                      },
                                      "text": "char"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 18,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 42
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 19,
                "column": 2
              },
              "end": {
                "row": 19,
                "column": 15
              },
              "text": "return result",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 19,
                    "column": 2
                  },
                  "end": {
                    "row": 19,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 19,
                    "column": 9
                  },
                  "end": {
                    "row": 19,
                    "column": 15
                  },
                  "text": "result"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}