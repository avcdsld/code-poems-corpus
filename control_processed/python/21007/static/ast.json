{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 45,
    "column": 33
  },
  "text": "def cache_key(working_directory, arguments, configure_kwargs):\n  \"\"\"Compute a `TensorBoardInfo.cache_key` field.\n\n  The format returned by this function is opaque. Clients may only\n  inspect it by comparing it for equality with other results from this\n  function.\n\n  Args:\n    working_directory: The directory from which TensorBoard was launched\n      and relative to which paths like `--logdir` and `--db` are\n      resolved.\n    arguments: The command-line args to TensorBoard, as `sys.argv[1:]`.\n      Should be a list (or tuple), not an unparsed string. If you have a\n      raw shell command, use `shlex.split` before passing it to this\n      function.\n    configure_kwargs: A dictionary of additional argument values to\n      override the textual `arguments`, with the same semantics as in\n      `tensorboard.program.TensorBoard.configure`. May be an empty\n      dictionary.\n\n  Returns:\n    A string such that if two (prospective or actual) TensorBoard\n    invocations have the same cache key then it is safe to use one in\n    place of the other. The converse is not guaranteed: it is often safe\n    to change the order of TensorBoard arguments, or to explicitly set\n    them to their default values, or to move them between `arguments`\n    and `configure_kwargs`, but such invocations may yield distinct\n    cache keys.\n  \"\"\"\n  if not isinstance(arguments, (list, tuple)):\n    raise TypeError(\n        \"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"\n        % (arguments,)\n    )\n  datum = {\n      \"working_directory\": working_directory,\n      \"arguments\": arguments,\n      \"configure_kwargs\": configure_kwargs,\n  }\n  raw = base64.b64encode(\n      json.dumps(datum, sort_keys=True, separators=(\",\", \":\")).encode(\"utf-8\")\n  )\n  # `raw` is of type `bytes`, even though it only contains ASCII\n  # characters; we want it to be `str` in both Python 2 and 3.\n  return str(raw.decode(\"ascii\"))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 45,
        "column": 33
      },
      "text": "def cache_key(working_directory, arguments, configure_kwargs):\n  \"\"\"Compute a `TensorBoardInfo.cache_key` field.\n\n  The format returned by this function is opaque. Clients may only\n  inspect it by comparing it for equality with other results from this\n  function.\n\n  Args:\n    working_directory: The directory from which TensorBoard was launched\n      and relative to which paths like `--logdir` and `--db` are\n      resolved.\n    arguments: The command-line args to TensorBoard, as `sys.argv[1:]`.\n      Should be a list (or tuple), not an unparsed string. If you have a\n      raw shell command, use `shlex.split` before passing it to this\n      function.\n    configure_kwargs: A dictionary of additional argument values to\n      override the textual `arguments`, with the same semantics as in\n      `tensorboard.program.TensorBoard.configure`. May be an empty\n      dictionary.\n\n  Returns:\n    A string such that if two (prospective or actual) TensorBoard\n    invocations have the same cache key then it is safe to use one in\n    place of the other. The converse is not guaranteed: it is often safe\n    to change the order of TensorBoard arguments, or to explicitly set\n    them to their default values, or to move them between `arguments`\n    and `configure_kwargs`, but such invocations may yield distinct\n    cache keys.\n  \"\"\"\n  if not isinstance(arguments, (list, tuple)):\n    raise TypeError(\n        \"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"\n        % (arguments,)\n    )\n  datum = {\n      \"working_directory\": working_directory,\n      \"arguments\": arguments,\n      \"configure_kwargs\": configure_kwargs,\n  }\n  raw = base64.b64encode(\n      json.dumps(datum, sort_keys=True, separators=(\",\", \":\")).encode(\"utf-8\")\n  )\n  # `raw` is of type `bytes`, even though it only contains ASCII\n  # characters; we want it to be `str` in both Python 2 and 3.\n  return str(raw.decode(\"ascii\"))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 13
          },
          "text": "cache_key"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 13
          },
          "end": {
            "row": 0,
            "column": 61
          },
          "text": "(working_directory, arguments, configure_kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 31
              },
              "text": "working_directory"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": "arguments"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 42
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 44
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": "configure_kwargs"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 60
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 61
          },
          "end": {
            "row": 0,
            "column": 62
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 2
          },
          "end": {
            "row": 45,
            "column": 33
          },
          "text": "\"\"\"Compute a `TensorBoardInfo.cache_key` field.\n\n  The format returned by this function is opaque. Clients may only\n  inspect it by comparing it for equality with other results from this\n  function.\n\n  Args:\n    working_directory: The directory from which TensorBoard was launched\n      and relative to which paths like `--logdir` and `--db` are\n      resolved.\n    arguments: The command-line args to TensorBoard, as `sys.argv[1:]`.\n      Should be a list (or tuple), not an unparsed string. If you have a\n      raw shell command, use `shlex.split` before passing it to this\n      function.\n    configure_kwargs: A dictionary of additional argument values to\n      override the textual `arguments`, with the same semantics as in\n      `tensorboard.program.TensorBoard.configure`. May be an empty\n      dictionary.\n\n  Returns:\n    A string such that if two (prospective or actual) TensorBoard\n    invocations have the same cache key then it is safe to use one in\n    place of the other. The converse is not guaranteed: it is often safe\n    to change the order of TensorBoard arguments, or to explicitly set\n    them to their default values, or to move them between `arguments`\n    and `configure_kwargs`, but such invocations may yield distinct\n    cache keys.\n  \"\"\"\n  if not isinstance(arguments, (list, tuple)):\n    raise TypeError(\n        \"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"\n        % (arguments,)\n    )\n  datum = {\n      \"working_directory\": working_directory,\n      \"arguments\": arguments,\n      \"configure_kwargs\": configure_kwargs,\n  }\n  raw = base64.b64encode(\n      json.dumps(datum, sort_keys=True, separators=(\",\", \":\")).encode(\"utf-8\")\n  )\n  # `raw` is of type `bytes`, even though it only contains ASCII\n  # characters; we want it to be `str` in both Python 2 and 3.\n  return str(raw.decode(\"ascii\"))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 2
              },
              "end": {
                "row": 28,
                "column": 5
              },
              "text": "\"\"\"Compute a `TensorBoardInfo.cache_key` field.\n\n  The format returned by this function is opaque. Clients may only\n  inspect it by comparing it for equality with other results from this\n  function.\n\n  Args:\n    working_directory: The directory from which TensorBoard was launched\n      and relative to which paths like `--logdir` and `--db` are\n      resolved.\n    arguments: The command-line args to TensorBoard, as `sys.argv[1:]`.\n      Should be a list (or tuple), not an unparsed string. If you have a\n      raw shell command, use `shlex.split` before passing it to this\n      function.\n    configure_kwargs: A dictionary of additional argument values to\n      override the textual `arguments`, with the same semantics as in\n      `tensorboard.program.TensorBoard.configure`. May be an empty\n      dictionary.\n\n  Returns:\n    A string such that if two (prospective or actual) TensorBoard\n    invocations have the same cache key then it is safe to use one in\n    place of the other. The converse is not guaranteed: it is often safe\n    to change the order of TensorBoard arguments, or to explicitly set\n    them to their default values, or to move them between `arguments`\n    and `configure_kwargs`, but such invocations may yield distinct\n    cache keys.\n  \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 2
                  },
                  "end": {
                    "row": 28,
                    "column": 5
                  },
                  "text": "\"\"\"Compute a `TensorBoardInfo.cache_key` field.\n\n  The format returned by this function is opaque. Clients may only\n  inspect it by comparing it for equality with other results from this\n  function.\n\n  Args:\n    working_directory: The directory from which TensorBoard was launched\n      and relative to which paths like `--logdir` and `--db` are\n      resolved.\n    arguments: The command-line args to TensorBoard, as `sys.argv[1:]`.\n      Should be a list (or tuple), not an unparsed string. If you have a\n      raw shell command, use `shlex.split` before passing it to this\n      function.\n    configure_kwargs: A dictionary of additional argument values to\n      override the textual `arguments`, with the same semantics as in\n      `tensorboard.program.TensorBoard.configure`. May be an empty\n      dictionary.\n\n  Returns:\n    A string such that if two (prospective or actual) TensorBoard\n    invocations have the same cache key then it is safe to use one in\n    place of the other. The converse is not guaranteed: it is often safe\n    to change the order of TensorBoard arguments, or to explicitly set\n    them to their default values, or to move them between `arguments`\n    and `configure_kwargs`, but such invocations may yield distinct\n    cache keys.\n  \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 2
                      },
                      "end": {
                        "row": 1,
                        "column": 5
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 5
                      },
                      "end": {
                        "row": 28,
                        "column": 2
                      },
                      "text": "Compute a `TensorBoardInfo.cache_key` field.\n\n  The format returned by this function is opaque. Clients may only\n  inspect it by comparing it for equality with other results from this\n  function.\n\n  Args:\n    working_directory: The directory from which TensorBoard was launched\n      and relative to which paths like `--logdir` and `--db` are\n      resolved.\n    arguments: The command-line args to TensorBoard, as `sys.argv[1:]`.\n      Should be a list (or tuple), not an unparsed string. If you have a\n      raw shell command, use `shlex.split` before passing it to this\n      function.\n    configure_kwargs: A dictionary of additional argument values to\n      override the textual `arguments`, with the same semantics as in\n      `tensorboard.program.TensorBoard.configure`. May be an empty\n      dictionary.\n\n  Returns:\n    A string such that if two (prospective or actual) TensorBoard\n    invocations have the same cache key then it is safe to use one in\n    place of the other. The converse is not guaranteed: it is often safe\n    to change the order of TensorBoard arguments, or to explicitly set\n    them to their default values, or to move them between `arguments`\n    and `configure_kwargs`, but such invocations may yield distinct\n    cache keys.\n  "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 28,
                        "column": 2
                      },
                      "end": {
                        "row": 28,
                        "column": 5
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 29,
                "column": 2
              },
              "end": {
                "row": 34,
                "column": 5
              },
              "text": "if not isinstance(arguments, (list, tuple)):\n    raise TypeError(\n        \"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"\n        % (arguments,)\n    )",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 29,
                    "column": 2
                  },
                  "end": {
                    "row": 29,
                    "column": 4
                  },
                  "text": "if"
                },
                {
                  "type": "not_operator",
                  "start": {
                    "row": 29,
                    "column": 5
                  },
                  "end": {
                    "row": 29,
                    "column": 45
                  },
                  "text": "not isinstance(arguments, (list, tuple))",
                  "children": [
                    {
                      "type": "not",
                      "start": {
                        "row": 29,
                        "column": 5
                      },
                      "end": {
                        "row": 29,
                        "column": 8
                      },
                      "text": "not"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 29,
                        "column": 9
                      },
                      "end": {
                        "row": 29,
                        "column": 45
                      },
                      "text": "isinstance(arguments, (list, tuple))",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 29,
                            "column": 9
                          },
                          "end": {
                            "row": 29,
                            "column": 19
                          },
                          "text": "isinstance"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 29,
                            "column": 19
                          },
                          "end": {
                            "row": 29,
                            "column": 45
                          },
                          "text": "(arguments, (list, tuple))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 29,
                                "column": 19
                              },
                              "end": {
                                "row": 29,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 29,
                                "column": 20
                              },
                              "end": {
                                "row": 29,
                                "column": 29
                              },
                              "text": "arguments"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 29,
                                "column": 29
                              },
                              "end": {
                                "row": 29,
                                "column": 30
                              },
                              "text": ","
                            },
                            {
                              "type": "tuple",
                              "start": {
                                "row": 29,
                                "column": 31
                              },
                              "end": {
                                "row": 29,
                                "column": 44
                              },
                              "text": "(list, tuple)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 29,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 32
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 36
                                  },
                                  "text": "list"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 29,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 37
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 43
                                  },
                                  "text": "tuple"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 29,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 44
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 29,
                                "column": 44
                              },
                              "end": {
                                "row": 29,
                                "column": 45
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 29,
                    "column": 45
                  },
                  "end": {
                    "row": 29,
                    "column": 46
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 30,
                    "column": 4
                  },
                  "end": {
                    "row": 34,
                    "column": 5
                  },
                  "text": "raise TypeError(\n        \"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"\n        % (arguments,)\n    )",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 30,
                        "column": 4
                      },
                      "end": {
                        "row": 34,
                        "column": 5
                      },
                      "text": "raise TypeError(\n        \"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"\n        % (arguments,)\n    )",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 30,
                            "column": 4
                          },
                          "end": {
                            "row": 30,
                            "column": 9
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 30,
                            "column": 10
                          },
                          "end": {
                            "row": 34,
                            "column": 5
                          },
                          "text": "TypeError(\n        \"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"\n        % (arguments,)\n    )",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 10
                              },
                              "end": {
                                "row": 30,
                                "column": 19
                              },
                              "text": "TypeError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 30,
                                "column": 19
                              },
                              "end": {
                                "row": 34,
                                "column": 5
                              },
                              "text": "(\n        \"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"\n        % (arguments,)\n    )",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 30,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 20
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "binary_operator",
                                  "start": {
                                    "row": 31,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 33,
                                    "column": 22
                                  },
                                  "text": "\"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"\n        % (arguments,)",
                                  "children": [
                                    {
                                      "type": "concatenated_string",
                                      "start": {
                                        "row": 31,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 32,
                                        "column": 47
                                      },
                                      "text": "\"'arguments' should be a list of arguments, but found: %r \"\n        \"(use `shlex.split` if given a string)\"",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 31,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 31,
                                            "column": 67
                                          },
                                          "text": "\"'arguments' should be a list of arguments, but found: %r \"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 31,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 9
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 31,
                                                "column": 9
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 66
                                              },
                                              "text": "'arguments' should be a list of arguments, but found: %r "
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 31,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 31,
                                                "column": 67
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 32,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 32,
                                            "column": 47
                                          },
                                          "text": "\"(use `shlex.split` if given a string)\"",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 32,
                                                "column": 8
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 9
                                              },
                                              "text": "\""
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 32,
                                                "column": 9
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 46
                                              },
                                              "text": "(use `shlex.split` if given a string)"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 32,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 32,
                                                "column": 47
                                              },
                                              "text": "\""
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "%",
                                      "start": {
                                        "row": 33,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 9
                                      },
                                      "text": "%"
                                    },
                                    {
                                      "type": "tuple",
                                      "start": {
                                        "row": 33,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 33,
                                        "column": 22
                                      },
                                      "text": "(arguments,)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 33,
                                            "column": 10
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 11
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 33,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 20
                                          },
                                          "text": "arguments"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 33,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 21
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 33,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 33,
                                            "column": 22
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 34,
                                    "column": 4
                                  },
                                  "end": {
                                    "row": 34,
                                    "column": 5
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 35,
                "column": 2
              },
              "end": {
                "row": 39,
                "column": 3
              },
              "text": "datum = {\n      \"working_directory\": working_directory,\n      \"arguments\": arguments,\n      \"configure_kwargs\": configure_kwargs,\n  }",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 35,
                    "column": 2
                  },
                  "end": {
                    "row": 39,
                    "column": 3
                  },
                  "text": "datum = {\n      \"working_directory\": working_directory,\n      \"arguments\": arguments,\n      \"configure_kwargs\": configure_kwargs,\n  }",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 35,
                        "column": 2
                      },
                      "end": {
                        "row": 35,
                        "column": 7
                      },
                      "text": "datum"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 35,
                        "column": 8
                      },
                      "end": {
                        "row": 35,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "dictionary",
                      "start": {
                        "row": 35,
                        "column": 10
                      },
                      "end": {
                        "row": 39,
                        "column": 3
                      },
                      "text": "{\n      \"working_directory\": working_directory,\n      \"arguments\": arguments,\n      \"configure_kwargs\": configure_kwargs,\n  }",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 35,
                            "column": 10
                          },
                          "end": {
                            "row": 35,
                            "column": 11
                          },
                          "text": "{"
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 36,
                            "column": 6
                          },
                          "end": {
                            "row": 36,
                            "column": 44
                          },
                          "text": "\"working_directory\": working_directory",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 36,
                                "column": 6
                              },
                              "end": {
                                "row": 36,
                                "column": 25
                              },
                              "text": "\"working_directory\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 36,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 7
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 36,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 24
                                  },
                                  "text": "working_directory"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 36,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 25
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 36,
                                "column": 25
                              },
                              "end": {
                                "row": 36,
                                "column": 26
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 27
                              },
                              "end": {
                                "row": 36,
                                "column": 44
                              },
                              "text": "working_directory"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 36,
                            "column": 44
                          },
                          "end": {
                            "row": 36,
                            "column": 45
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 37,
                            "column": 6
                          },
                          "end": {
                            "row": 37,
                            "column": 28
                          },
                          "text": "\"arguments\": arguments",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 37,
                                "column": 6
                              },
                              "end": {
                                "row": 37,
                                "column": 17
                              },
                              "text": "\"arguments\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 37,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 7
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 37,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 16
                                  },
                                  "text": "arguments"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 37,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 17
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 37,
                                "column": 17
                              },
                              "end": {
                                "row": 37,
                                "column": 18
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 37,
                                "column": 19
                              },
                              "end": {
                                "row": 37,
                                "column": 28
                              },
                              "text": "arguments"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 37,
                            "column": 28
                          },
                          "end": {
                            "row": 37,
                            "column": 29
                          },
                          "text": ","
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 38,
                            "column": 6
                          },
                          "end": {
                            "row": 38,
                            "column": 42
                          },
                          "text": "\"configure_kwargs\": configure_kwargs",
                          "children": [
                            {
                              "type": "string",
                              "start": {
                                "row": 38,
                                "column": 6
                              },
                              "end": {
                                "row": 38,
                                "column": 24
                              },
                              "text": "\"configure_kwargs\"",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 38,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 7
                                  },
                                  "text": "\""
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 38,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 23
                                  },
                                  "text": "configure_kwargs"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 38,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 24
                                  },
                                  "text": "\""
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 38,
                                "column": 24
                              },
                              "end": {
                                "row": 38,
                                "column": 25
                              },
                              "text": ":"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 26
                              },
                              "end": {
                                "row": 38,
                                "column": 42
                              },
                              "text": "configure_kwargs"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 38,
                            "column": 42
                          },
                          "end": {
                            "row": 38,
                            "column": 43
                          },
                          "text": ","
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 39,
                            "column": 2
                          },
                          "end": {
                            "row": 39,
                            "column": 3
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 40,
                "column": 2
              },
              "end": {
                "row": 42,
                "column": 3
              },
              "text": "raw = base64.b64encode(\n      json.dumps(datum, sort_keys=True, separators=(\",\", \":\")).encode(\"utf-8\")\n  )",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 40,
                    "column": 2
                  },
                  "end": {
                    "row": 42,
                    "column": 3
                  },
                  "text": "raw = base64.b64encode(\n      json.dumps(datum, sort_keys=True, separators=(\",\", \":\")).encode(\"utf-8\")\n  )",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 40,
                        "column": 2
                      },
                      "end": {
                        "row": 40,
                        "column": 5
                      },
                      "text": "raw"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 40,
                        "column": 6
                      },
                      "end": {
                        "row": 40,
                        "column": 7
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 40,
                        "column": 8
                      },
                      "end": {
                        "row": 42,
                        "column": 3
                      },
                      "text": "base64.b64encode(\n      json.dumps(datum, sort_keys=True, separators=(\",\", \":\")).encode(\"utf-8\")\n  )",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 40,
                            "column": 8
                          },
                          "end": {
                            "row": 40,
                            "column": 24
                          },
                          "text": "base64.b64encode",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 8
                              },
                              "end": {
                                "row": 40,
                                "column": 14
                              },
                              "text": "base64"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 40,
                                "column": 14
                              },
                              "end": {
                                "row": 40,
                                "column": 15
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 15
                              },
                              "end": {
                                "row": 40,
                                "column": 24
                              },
                              "text": "b64encode"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 40,
                            "column": 24
                          },
                          "end": {
                            "row": 42,
                            "column": 3
                          },
                          "text": "(\n      json.dumps(datum, sort_keys=True, separators=(\",\", \":\")).encode(\"utf-8\")\n  )",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 40,
                                "column": 24
                              },
                              "end": {
                                "row": 40,
                                "column": 25
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 41,
                                "column": 6
                              },
                              "end": {
                                "row": 41,
                                "column": 78
                              },
                              "text": "json.dumps(datum, sort_keys=True, separators=(\",\", \":\")).encode(\"utf-8\")",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 41,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 69
                                  },
                                  "text": "json.dumps(datum, sort_keys=True, separators=(\",\", \":\")).encode",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 41,
                                        "column": 6
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 62
                                      },
                                      "text": "json.dumps(datum, sort_keys=True, separators=(\",\", \":\"))",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 41,
                                            "column": 6
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 16
                                          },
                                          "text": "json.dumps",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 41,
                                                "column": 6
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 10
                                              },
                                              "text": "json"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 41,
                                                "column": 10
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 11
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 41,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 16
                                              },
                                              "text": "dumps"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 41,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 62
                                          },
                                          "text": "(datum, sort_keys=True, separators=(\",\", \":\"))",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 41,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 17
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 41,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 22
                                              },
                                              "text": "datum"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 41,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 23
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 41,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 38
                                              },
                                              "text": "sort_keys=True",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 33
                                                  },
                                                  "text": "sort_keys"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 34
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "true",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 38
                                                  },
                                                  "text": "True"
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 41,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 39
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "keyword_argument",
                                              "start": {
                                                "row": 41,
                                                "column": 40
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 61
                                              },
                                              "text": "separators=(\",\", \":\")",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 50
                                                  },
                                                  "text": "separators"
                                                },
                                                {
                                                  "type": "=",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 51
                                                  },
                                                  "text": "="
                                                },
                                                {
                                                  "type": "tuple",
                                                  "start": {
                                                    "row": 41,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 41,
                                                    "column": 61
                                                  },
                                                  "text": "(\",\", \":\")",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 51
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 52
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 52
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 55
                                                      },
                                                      "text": "\",\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 52
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 53
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 53
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 54
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 54
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 55
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 55
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 56
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 57
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 60
                                                      },
                                                      "text": "\":\"",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 57
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 58
                                                          },
                                                          "text": "\""
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 58
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 59
                                                          },
                                                          "text": ":"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 41,
                                                            "column": 59
                                                          },
                                                          "end": {
                                                            "row": 41,
                                                            "column": 60
                                                          },
                                                          "text": "\""
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 41,
                                                        "column": 60
                                                      },
                                                      "end": {
                                                        "row": 41,
                                                        "column": 61
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 41,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 41,
                                                "column": 62
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 41,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 63
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 41,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 69
                                      },
                                      "text": "encode"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 41,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 41,
                                    "column": 78
                                  },
                                  "text": "(\"utf-8\")",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 41,
                                        "column": 69
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 70
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "string",
                                      "start": {
                                        "row": 41,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 77
                                      },
                                      "text": "\"utf-8\"",
                                      "children": [
                                        {
                                          "type": "string_start",
                                          "start": {
                                            "row": 41,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 71
                                          },
                                          "text": "\""
                                        },
                                        {
                                          "type": "string_content",
                                          "start": {
                                            "row": 41,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 76
                                          },
                                          "text": "utf-8"
                                        },
                                        {
                                          "type": "string_end",
                                          "start": {
                                            "row": 41,
                                            "column": 76
                                          },
                                          "end": {
                                            "row": 41,
                                            "column": 77
                                          },
                                          "text": "\""
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 41,
                                        "column": 77
                                      },
                                      "end": {
                                        "row": 41,
                                        "column": 78
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 42,
                                "column": 2
                              },
                              "end": {
                                "row": 42,
                                "column": 3
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 43,
                "column": 2
              },
              "end": {
                "row": 43,
                "column": 64
              },
              "text": "# `raw` is of type `bytes`, even though it only contains ASCII"
            },
            {
              "type": "comment",
              "start": {
                "row": 44,
                "column": 2
              },
              "end": {
                "row": 44,
                "column": 62
              },
              "text": "# characters; we want it to be `str` in both Python 2 and 3."
            },
            {
              "type": "return_statement",
              "start": {
                "row": 45,
                "column": 2
              },
              "end": {
                "row": 45,
                "column": 33
              },
              "text": "return str(raw.decode(\"ascii\"))",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 45,
                    "column": 2
                  },
                  "end": {
                    "row": 45,
                    "column": 8
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 45,
                    "column": 9
                  },
                  "end": {
                    "row": 45,
                    "column": 33
                  },
                  "text": "str(raw.decode(\"ascii\"))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 45,
                        "column": 9
                      },
                      "end": {
                        "row": 45,
                        "column": 12
                      },
                      "text": "str"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 45,
                        "column": 12
                      },
                      "end": {
                        "row": 45,
                        "column": 33
                      },
                      "text": "(raw.decode(\"ascii\"))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 45,
                            "column": 12
                          },
                          "end": {
                            "row": 45,
                            "column": 13
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 45,
                            "column": 13
                          },
                          "end": {
                            "row": 45,
                            "column": 32
                          },
                          "text": "raw.decode(\"ascii\")",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 45,
                                "column": 13
                              },
                              "end": {
                                "row": 45,
                                "column": 23
                              },
                              "text": "raw.decode",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 16
                                  },
                                  "text": "raw"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 45,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 45,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 23
                                  },
                                  "text": "decode"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 45,
                                "column": 23
                              },
                              "end": {
                                "row": 45,
                                "column": 32
                              },
                              "text": "(\"ascii\")",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 45,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 24
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 45,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 31
                                  },
                                  "text": "\"ascii\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 45,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 25
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 45,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 30
                                      },
                                      "text": "ascii"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 45,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 31
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 45,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 45,
                                    "column": 32
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 45,
                            "column": 32
                          },
                          "end": {
                            "row": 45,
                            "column": 33
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}