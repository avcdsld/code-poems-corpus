{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 28,
    "column": 21
  },
  "text": "def read_until_close(self) -> Awaitable[bytes]:\n        \"\"\"Asynchronously reads all data from the socket until it is closed.\n\n        This will buffer all available data until ``max_buffer_size``\n        is reached. If flow control or cancellation are desired, use a\n        loop with `read_bytes(partial=True) <.read_bytes>` instead.\n\n        .. versionchanged:: 4.0\n            The callback argument is now optional and a `.Future` will\n            be returned if it is omitted.\n\n        .. versionchanged:: 6.0\n\n           The ``callback`` and ``streaming_callback`` arguments have\n           been removed. Use the returned `.Future` (and `read_bytes`\n           with ``partial=True`` for ``streaming_callback``) instead.\n\n        \"\"\"\n        future = self._start_read()\n        if self.closed():\n            self._finish_read(self._read_buffer_size, False)\n            return future\n        self._read_until_close = True\n        try:\n            self._try_inline_read()\n        except:\n            future.add_done_callback(lambda f: f.exception())\n            raise\n        return future",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 28,
        "column": 21
      },
      "text": "def read_until_close(self) -> Awaitable[bytes]:\n        \"\"\"Asynchronously reads all data from the socket until it is closed.\n\n        This will buffer all available data until ``max_buffer_size``\n        is reached. If flow control or cancellation are desired, use a\n        loop with `read_bytes(partial=True) <.read_bytes>` instead.\n\n        .. versionchanged:: 4.0\n            The callback argument is now optional and a `.Future` will\n            be returned if it is omitted.\n\n        .. versionchanged:: 6.0\n\n           The ``callback`` and ``streaming_callback`` arguments have\n           been removed. Use the returned `.Future` (and `read_bytes`\n           with ``partial=True`` for ``streaming_callback``) instead.\n\n        \"\"\"\n        future = self._start_read()\n        if self.closed():\n            self._finish_read(self._read_buffer_size, False)\n            return future\n        self._read_until_close = True\n        try:\n            self._try_inline_read()\n        except:\n            future.add_done_callback(lambda f: f.exception())\n            raise\n        return future",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 20
          },
          "text": "read_until_close"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 20
          },
          "end": {
            "row": 0,
            "column": 26
          },
          "text": "(self)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 21
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": "self"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "->",
          "start": {
            "row": 0,
            "column": 27
          },
          "end": {
            "row": 0,
            "column": 29
          },
          "text": "->"
        },
        {
          "type": "type",
          "start": {
            "row": 0,
            "column": 30
          },
          "end": {
            "row": 0,
            "column": 46
          },
          "text": "Awaitable[bytes]",
          "children": [
            {
              "type": "generic_type",
              "start": {
                "row": 0,
                "column": 30
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": "Awaitable[bytes]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 30
                  },
                  "end": {
                    "row": 0,
                    "column": 39
                  },
                  "text": "Awaitable"
                },
                {
                  "type": "type_parameter",
                  "start": {
                    "row": 0,
                    "column": 39
                  },
                  "end": {
                    "row": 0,
                    "column": 46
                  },
                  "text": "[bytes]",
                  "children": [
                    {
                      "type": "[",
                      "start": {
                        "row": 0,
                        "column": 39
                      },
                      "end": {
                        "row": 0,
                        "column": 40
                      },
                      "text": "["
                    },
                    {
                      "type": "type",
                      "start": {
                        "row": 0,
                        "column": 40
                      },
                      "end": {
                        "row": 0,
                        "column": 45
                      },
                      "text": "bytes",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 0,
                            "column": 40
                          },
                          "end": {
                            "row": 0,
                            "column": 45
                          },
                          "text": "bytes"
                        }
                      ]
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 0,
                        "column": 45
                      },
                      "end": {
                        "row": 0,
                        "column": 46
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 46
          },
          "end": {
            "row": 0,
            "column": 47
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 28,
            "column": 21
          },
          "text": "\"\"\"Asynchronously reads all data from the socket until it is closed.\n\n        This will buffer all available data until ``max_buffer_size``\n        is reached. If flow control or cancellation are desired, use a\n        loop with `read_bytes(partial=True) <.read_bytes>` instead.\n\n        .. versionchanged:: 4.0\n            The callback argument is now optional and a `.Future` will\n            be returned if it is omitted.\n\n        .. versionchanged:: 6.0\n\n           The ``callback`` and ``streaming_callback`` arguments have\n           been removed. Use the returned `.Future` (and `read_bytes`\n           with ``partial=True`` for ``streaming_callback``) instead.\n\n        \"\"\"\n        future = self._start_read()\n        if self.closed():\n            self._finish_read(self._read_buffer_size, False)\n            return future\n        self._read_until_close = True\n        try:\n            self._try_inline_read()\n        except:\n            future.add_done_callback(lambda f: f.exception())\n            raise\n        return future",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 11
              },
              "text": "\"\"\"Asynchronously reads all data from the socket until it is closed.\n\n        This will buffer all available data until ``max_buffer_size``\n        is reached. If flow control or cancellation are desired, use a\n        loop with `read_bytes(partial=True) <.read_bytes>` instead.\n\n        .. versionchanged:: 4.0\n            The callback argument is now optional and a `.Future` will\n            be returned if it is omitted.\n\n        .. versionchanged:: 6.0\n\n           The ``callback`` and ``streaming_callback`` arguments have\n           been removed. Use the returned `.Future` (and `read_bytes`\n           with ``partial=True`` for ``streaming_callback``) instead.\n\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 11
                  },
                  "text": "\"\"\"Asynchronously reads all data from the socket until it is closed.\n\n        This will buffer all available data until ``max_buffer_size``\n        is reached. If flow control or cancellation are desired, use a\n        loop with `read_bytes(partial=True) <.read_bytes>` instead.\n\n        .. versionchanged:: 4.0\n            The callback argument is now optional and a `.Future` will\n            be returned if it is omitted.\n\n        .. versionchanged:: 6.0\n\n           The ``callback`` and ``streaming_callback`` arguments have\n           been removed. Use the returned `.Future` (and `read_bytes`\n           with ``partial=True`` for ``streaming_callback``) instead.\n\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 17,
                        "column": 8
                      },
                      "text": "Asynchronously reads all data from the socket until it is closed.\n\n        This will buffer all available data until ``max_buffer_size``\n        is reached. If flow control or cancellation are desired, use a\n        loop with `read_bytes(partial=True) <.read_bytes>` instead.\n\n        .. versionchanged:: 4.0\n            The callback argument is now optional and a `.Future` will\n            be returned if it is omitted.\n\n        .. versionchanged:: 6.0\n\n           The ``callback`` and ``streaming_callback`` arguments have\n           been removed. Use the returned `.Future` (and `read_bytes`\n           with ``partial=True`` for ``streaming_callback``) instead.\n\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 35
              },
              "text": "future = self._start_read()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 35
                  },
                  "text": "future = self._start_read()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 18,
                        "column": 8
                      },
                      "end": {
                        "row": 18,
                        "column": 14
                      },
                      "text": "future"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 18,
                        "column": 15
                      },
                      "end": {
                        "row": 18,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 18,
                        "column": 17
                      },
                      "end": {
                        "row": 18,
                        "column": 35
                      },
                      "text": "self._start_read()",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 18,
                            "column": 17
                          },
                          "end": {
                            "row": 18,
                            "column": 33
                          },
                          "text": "self._start_read",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 17
                              },
                              "end": {
                                "row": 18,
                                "column": 21
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 18,
                                "column": 21
                              },
                              "end": {
                                "row": 18,
                                "column": 22
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 22
                              },
                              "end": {
                                "row": 18,
                                "column": 33
                              },
                              "text": "_start_read"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 18,
                            "column": 33
                          },
                          "end": {
                            "row": 18,
                            "column": 35
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 18,
                                "column": 33
                              },
                              "end": {
                                "row": 18,
                                "column": 34
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 18,
                                "column": 34
                              },
                              "end": {
                                "row": 18,
                                "column": 35
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 19,
                "column": 8
              },
              "end": {
                "row": 21,
                "column": 25
              },
              "text": "if self.closed():\n            self._finish_read(self._read_buffer_size, False)\n            return future",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 19,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 19,
                    "column": 11
                  },
                  "end": {
                    "row": 19,
                    "column": 24
                  },
                  "text": "self.closed()",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 19,
                        "column": 11
                      },
                      "end": {
                        "row": 19,
                        "column": 22
                      },
                      "text": "self.closed",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 11
                          },
                          "end": {
                            "row": 19,
                            "column": 15
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 19,
                            "column": 15
                          },
                          "end": {
                            "row": 19,
                            "column": 16
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 16
                          },
                          "end": {
                            "row": 19,
                            "column": 22
                          },
                          "text": "closed"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 19,
                        "column": 22
                      },
                      "end": {
                        "row": 19,
                        "column": 24
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 19,
                            "column": 22
                          },
                          "end": {
                            "row": 19,
                            "column": 23
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 19,
                            "column": 23
                          },
                          "end": {
                            "row": 19,
                            "column": 24
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 19,
                    "column": 24
                  },
                  "end": {
                    "row": 19,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 20,
                    "column": 12
                  },
                  "end": {
                    "row": 21,
                    "column": 25
                  },
                  "text": "self._finish_read(self._read_buffer_size, False)\n            return future",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 20,
                        "column": 12
                      },
                      "end": {
                        "row": 20,
                        "column": 60
                      },
                      "text": "self._finish_read(self._read_buffer_size, False)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 20,
                            "column": 12
                          },
                          "end": {
                            "row": 20,
                            "column": 60
                          },
                          "text": "self._finish_read(self._read_buffer_size, False)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 20,
                                "column": 12
                              },
                              "end": {
                                "row": 20,
                                "column": 29
                              },
                              "text": "self._finish_read",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 20,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 20,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 29
                                  },
                                  "text": "_finish_read"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 20,
                                "column": 29
                              },
                              "end": {
                                "row": 20,
                                "column": 60
                              },
                              "text": "(self._read_buffer_size, False)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 20,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 30
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 20,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 52
                                  },
                                  "text": "self._read_buffer_size",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 20,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 34
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 20,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 35
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 20,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 20,
                                        "column": 52
                                      },
                                      "text": "_read_buffer_size"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 20,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 53
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "false",
                                  "start": {
                                    "row": 20,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 59
                                  },
                                  "text": "False"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 20,
                                    "column": 59
                                  },
                                  "end": {
                                    "row": 20,
                                    "column": 60
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 21,
                        "column": 12
                      },
                      "end": {
                        "row": 21,
                        "column": 25
                      },
                      "text": "return future",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 21,
                            "column": 12
                          },
                          "end": {
                            "row": 21,
                            "column": 18
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 21,
                            "column": 19
                          },
                          "end": {
                            "row": 21,
                            "column": 25
                          },
                          "text": "future"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 22,
                "column": 8
              },
              "end": {
                "row": 22,
                "column": 37
              },
              "text": "self._read_until_close = True",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 22,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 37
                  },
                  "text": "self._read_until_close = True",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 30
                      },
                      "text": "self._read_until_close",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 8
                          },
                          "end": {
                            "row": 22,
                            "column": 12
                          },
                          "text": "self"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 22,
                            "column": 12
                          },
                          "end": {
                            "row": 22,
                            "column": 13
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 22,
                            "column": 13
                          },
                          "end": {
                            "row": 22,
                            "column": 30
                          },
                          "text": "_read_until_close"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 22,
                        "column": 31
                      },
                      "end": {
                        "row": 22,
                        "column": 32
                      },
                      "text": "="
                    },
                    {
                      "type": "true",
                      "start": {
                        "row": 22,
                        "column": 33
                      },
                      "end": {
                        "row": 22,
                        "column": 37
                      },
                      "text": "True"
                    }
                  ]
                }
              ]
            },
            {
              "type": "try_statement",
              "start": {
                "row": 23,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 17
              },
              "text": "try:\n            self._try_inline_read()\n        except:\n            future.add_done_callback(lambda f: f.exception())\n            raise",
              "children": [
                {
                  "type": "try",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 23,
                    "column": 11
                  },
                  "text": "try"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 23,
                    "column": 11
                  },
                  "end": {
                    "row": 23,
                    "column": 12
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 24,
                    "column": 12
                  },
                  "end": {
                    "row": 24,
                    "column": 35
                  },
                  "text": "self._try_inline_read()",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 35
                      },
                      "text": "self._try_inline_read()",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 24,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 35
                          },
                          "text": "self._try_inline_read()",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 24,
                                "column": 12
                              },
                              "end": {
                                "row": 24,
                                "column": 33
                              },
                              "text": "self._try_inline_read",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 24,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 17
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 24,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 33
                                  },
                                  "text": "_try_inline_read"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 24,
                                "column": 33
                              },
                              "end": {
                                "row": 24,
                                "column": 35
                              },
                              "text": "()",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 24,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 34
                                  },
                                  "text": "("
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 24,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 24,
                                    "column": 35
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "except_clause",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 17
                  },
                  "text": "except:\n            future.add_done_callback(lambda f: f.exception())\n            raise",
                  "children": [
                    {
                      "type": "except",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 14
                      },
                      "text": "except"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 25,
                        "column": 14
                      },
                      "end": {
                        "row": 25,
                        "column": 15
                      },
                      "text": ":"
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 26,
                        "column": 12
                      },
                      "end": {
                        "row": 27,
                        "column": 17
                      },
                      "text": "future.add_done_callback(lambda f: f.exception())\n            raise",
                      "children": [
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 26,
                            "column": 12
                          },
                          "end": {
                            "row": 26,
                            "column": 61
                          },
                          "text": "future.add_done_callback(lambda f: f.exception())",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 26,
                                "column": 12
                              },
                              "end": {
                                "row": 26,
                                "column": 61
                              },
                              "text": "future.add_done_callback(lambda f: f.exception())",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 26,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 36
                                  },
                                  "text": "future.add_done_callback",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 18
                                      },
                                      "text": "future"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 26,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 19
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 26,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 36
                                      },
                                      "text": "add_done_callback"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 26,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 61
                                  },
                                  "text": "(lambda f: f.exception())",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 26,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 37
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "lambda",
                                      "start": {
                                        "row": 26,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 60
                                      },
                                      "text": "lambda f: f.exception()",
                                      "children": [
                                        {
                                          "type": "lambda",
                                          "start": {
                                            "row": 26,
                                            "column": 37
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 43
                                          },
                                          "text": "lambda"
                                        },
                                        {
                                          "type": "lambda_parameters",
                                          "start": {
                                            "row": 26,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 45
                                          },
                                          "text": "f",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 26,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 45
                                              },
                                              "text": "f"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 26,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 46
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 26,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 26,
                                            "column": 60
                                          },
                                          "text": "f.exception()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 26,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 58
                                              },
                                              "text": "f.exception",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 47
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 48
                                                  },
                                                  "text": "f"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 49
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 58
                                                  },
                                                  "text": "exception"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 26,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 26,
                                                "column": 60
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 59
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 26,
                                                    "column": 59
                                                  },
                                                  "end": {
                                                    "row": 26,
                                                    "column": 60
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 26,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 26,
                                        "column": 61
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "raise_statement",
                          "start": {
                            "row": 27,
                            "column": 12
                          },
                          "end": {
                            "row": 27,
                            "column": 17
                          },
                          "text": "raise",
                          "children": [
                            {
                              "type": "raise",
                              "start": {
                                "row": 27,
                                "column": 12
                              },
                              "end": {
                                "row": 27,
                                "column": 17
                              },
                              "text": "raise"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 28,
                "column": 8
              },
              "end": {
                "row": 28,
                "column": 21
              },
              "text": "return future",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 28,
                    "column": 8
                  },
                  "end": {
                    "row": 28,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 28,
                    "column": 15
                  },
                  "end": {
                    "row": 28,
                    "column": 21
                  },
                  "text": "future"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}