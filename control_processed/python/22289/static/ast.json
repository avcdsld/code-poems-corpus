{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 50,
    "column": 49
  },
  "text": "def decode_seq(self, inputs, states, valid_length=None):\n        \"\"\"Decode the decoder inputs. This function is only used for training.\n\n        Parameters\n        ----------\n        inputs : NDArray, Shape (batch_size, length, C_in)\n        states : list of NDArrays or None\n            Initial states. The list of initial decoder states\n        valid_length : NDArray or None\n            Valid lengths of each sequence. This is usually used when part of sequence has\n            been padded. Shape (batch_size,)\n\n        Returns\n        -------\n        output : NDArray, Shape (batch_size, length, C_out)\n        states : list\n            The decoder states, includes:\n\n            - rnn_states : NDArray\n            - attention_vec : NDArray\n            - mem_value : NDArray\n            - mem_masks : NDArray, optional\n        additional_outputs : list\n            Either be an empty list or contains the attention weights in this step.\n            The attention weights will have shape (batch_size, length, mem_length) or\n            (batch_size, num_heads, length, mem_length)\n        \"\"\"\n        length = inputs.shape[1]\n        output = []\n        additional_outputs = []\n        inputs = _as_list(mx.nd.split(inputs, num_outputs=length, axis=1, squeeze_axis=True))\n        rnn_states_l = []\n        attention_output_l = []\n        fixed_states = states[2:]\n        for i in range(length):\n            ele_output, states, ele_additional_outputs = self.forward(inputs[i], states)\n            rnn_states_l.append(states[0])\n            attention_output_l.append(states[1])\n            output.append(ele_output)\n            additional_outputs.extend(ele_additional_outputs)\n        output = mx.nd.stack(*output, axis=1)\n        if valid_length is not None:\n            states = [_nested_sequence_last(rnn_states_l, valid_length),\n                      _nested_sequence_last(attention_output_l, valid_length)] + fixed_states\n            output = mx.nd.SequenceMask(output,\n                                        sequence_length=valid_length,\n                                        use_sequence_length=True,\n                                        axis=1)\n        if self._output_attention:\n            additional_outputs = [mx.nd.concat(*additional_outputs, dim=-2)]\n        return output, states, additional_outputs",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 50,
        "column": 49
      },
      "text": "def decode_seq(self, inputs, states, valid_length=None):\n        \"\"\"Decode the decoder inputs. This function is only used for training.\n\n        Parameters\n        ----------\n        inputs : NDArray, Shape (batch_size, length, C_in)\n        states : list of NDArrays or None\n            Initial states. The list of initial decoder states\n        valid_length : NDArray or None\n            Valid lengths of each sequence. This is usually used when part of sequence has\n            been padded. Shape (batch_size,)\n\n        Returns\n        -------\n        output : NDArray, Shape (batch_size, length, C_out)\n        states : list\n            The decoder states, includes:\n\n            - rnn_states : NDArray\n            - attention_vec : NDArray\n            - mem_value : NDArray\n            - mem_masks : NDArray, optional\n        additional_outputs : list\n            Either be an empty list or contains the attention weights in this step.\n            The attention weights will have shape (batch_size, length, mem_length) or\n            (batch_size, num_heads, length, mem_length)\n        \"\"\"\n        length = inputs.shape[1]\n        output = []\n        additional_outputs = []\n        inputs = _as_list(mx.nd.split(inputs, num_outputs=length, axis=1, squeeze_axis=True))\n        rnn_states_l = []\n        attention_output_l = []\n        fixed_states = states[2:]\n        for i in range(length):\n            ele_output, states, ele_additional_outputs = self.forward(inputs[i], states)\n            rnn_states_l.append(states[0])\n            attention_output_l.append(states[1])\n            output.append(ele_output)\n            additional_outputs.extend(ele_additional_outputs)\n        output = mx.nd.stack(*output, axis=1)\n        if valid_length is not None:\n            states = [_nested_sequence_last(rnn_states_l, valid_length),\n                      _nested_sequence_last(attention_output_l, valid_length)] + fixed_states\n            output = mx.nd.SequenceMask(output,\n                                        sequence_length=valid_length,\n                                        use_sequence_length=True,\n                                        axis=1)\n        if self._output_attention:\n            additional_outputs = [mx.nd.concat(*additional_outputs, dim=-2)]\n        return output, states, additional_outputs",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 14
          },
          "text": "decode_seq"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 14
          },
          "end": {
            "row": 0,
            "column": 55
          },
          "text": "(self, inputs, states, valid_length=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 14
              },
              "end": {
                "row": 0,
                "column": 15
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 15
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "inputs"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": "states"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 35
              },
              "end": {
                "row": 0,
                "column": 36
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 37
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": "valid_length=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 37
                  },
                  "end": {
                    "row": 0,
                    "column": 49
                  },
                  "text": "valid_length"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 49
                  },
                  "end": {
                    "row": 0,
                    "column": 50
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 50
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 54
              },
              "end": {
                "row": 0,
                "column": 55
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 55
          },
          "end": {
            "row": 0,
            "column": 56
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 50,
            "column": 49
          },
          "text": "\"\"\"Decode the decoder inputs. This function is only used for training.\n\n        Parameters\n        ----------\n        inputs : NDArray, Shape (batch_size, length, C_in)\n        states : list of NDArrays or None\n            Initial states. The list of initial decoder states\n        valid_length : NDArray or None\n            Valid lengths of each sequence. This is usually used when part of sequence has\n            been padded. Shape (batch_size,)\n\n        Returns\n        -------\n        output : NDArray, Shape (batch_size, length, C_out)\n        states : list\n            The decoder states, includes:\n\n            - rnn_states : NDArray\n            - attention_vec : NDArray\n            - mem_value : NDArray\n            - mem_masks : NDArray, optional\n        additional_outputs : list\n            Either be an empty list or contains the attention weights in this step.\n            The attention weights will have shape (batch_size, length, mem_length) or\n            (batch_size, num_heads, length, mem_length)\n        \"\"\"\n        length = inputs.shape[1]\n        output = []\n        additional_outputs = []\n        inputs = _as_list(mx.nd.split(inputs, num_outputs=length, axis=1, squeeze_axis=True))\n        rnn_states_l = []\n        attention_output_l = []\n        fixed_states = states[2:]\n        for i in range(length):\n            ele_output, states, ele_additional_outputs = self.forward(inputs[i], states)\n            rnn_states_l.append(states[0])\n            attention_output_l.append(states[1])\n            output.append(ele_output)\n            additional_outputs.extend(ele_additional_outputs)\n        output = mx.nd.stack(*output, axis=1)\n        if valid_length is not None:\n            states = [_nested_sequence_last(rnn_states_l, valid_length),\n                      _nested_sequence_last(attention_output_l, valid_length)] + fixed_states\n            output = mx.nd.SequenceMask(output,\n                                        sequence_length=valid_length,\n                                        use_sequence_length=True,\n                                        axis=1)\n        if self._output_attention:\n            additional_outputs = [mx.nd.concat(*additional_outputs, dim=-2)]\n        return output, states, additional_outputs",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 26,
                "column": 11
              },
              "text": "\"\"\"Decode the decoder inputs. This function is only used for training.\n\n        Parameters\n        ----------\n        inputs : NDArray, Shape (batch_size, length, C_in)\n        states : list of NDArrays or None\n            Initial states. The list of initial decoder states\n        valid_length : NDArray or None\n            Valid lengths of each sequence. This is usually used when part of sequence has\n            been padded. Shape (batch_size,)\n\n        Returns\n        -------\n        output : NDArray, Shape (batch_size, length, C_out)\n        states : list\n            The decoder states, includes:\n\n            - rnn_states : NDArray\n            - attention_vec : NDArray\n            - mem_value : NDArray\n            - mem_masks : NDArray, optional\n        additional_outputs : list\n            Either be an empty list or contains the attention weights in this step.\n            The attention weights will have shape (batch_size, length, mem_length) or\n            (batch_size, num_heads, length, mem_length)\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 11
                  },
                  "text": "\"\"\"Decode the decoder inputs. This function is only used for training.\n\n        Parameters\n        ----------\n        inputs : NDArray, Shape (batch_size, length, C_in)\n        states : list of NDArrays or None\n            Initial states. The list of initial decoder states\n        valid_length : NDArray or None\n            Valid lengths of each sequence. This is usually used when part of sequence has\n            been padded. Shape (batch_size,)\n\n        Returns\n        -------\n        output : NDArray, Shape (batch_size, length, C_out)\n        states : list\n            The decoder states, includes:\n\n            - rnn_states : NDArray\n            - attention_vec : NDArray\n            - mem_value : NDArray\n            - mem_masks : NDArray, optional\n        additional_outputs : list\n            Either be an empty list or contains the attention weights in this step.\n            The attention weights will have shape (batch_size, length, mem_length) or\n            (batch_size, num_heads, length, mem_length)\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 26,
                        "column": 8
                      },
                      "text": "Decode the decoder inputs. This function is only used for training.\n\n        Parameters\n        ----------\n        inputs : NDArray, Shape (batch_size, length, C_in)\n        states : list of NDArrays or None\n            Initial states. The list of initial decoder states\n        valid_length : NDArray or None\n            Valid lengths of each sequence. This is usually used when part of sequence has\n            been padded. Shape (batch_size,)\n\n        Returns\n        -------\n        output : NDArray, Shape (batch_size, length, C_out)\n        states : list\n            The decoder states, includes:\n\n            - rnn_states : NDArray\n            - attention_vec : NDArray\n            - mem_value : NDArray\n            - mem_masks : NDArray, optional\n        additional_outputs : list\n            Either be an empty list or contains the attention weights in this step.\n            The attention weights will have shape (batch_size, length, mem_length) or\n            (batch_size, num_heads, length, mem_length)\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 26,
                        "column": 8
                      },
                      "end": {
                        "row": 26,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 27,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 32
              },
              "text": "length = inputs.shape[1]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 27,
                    "column": 8
                  },
                  "end": {
                    "row": 27,
                    "column": 32
                  },
                  "text": "length = inputs.shape[1]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 27,
                        "column": 8
                      },
                      "end": {
                        "row": 27,
                        "column": 14
                      },
                      "text": "length"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 27,
                        "column": 15
                      },
                      "end": {
                        "row": 27,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 27,
                        "column": 17
                      },
                      "end": {
                        "row": 27,
                        "column": 32
                      },
                      "text": "inputs.shape[1]",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 27,
                            "column": 17
                          },
                          "end": {
                            "row": 27,
                            "column": 29
                          },
                          "text": "inputs.shape",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 17
                              },
                              "end": {
                                "row": 27,
                                "column": 23
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 27,
                                "column": 23
                              },
                              "end": {
                                "row": 27,
                                "column": 24
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 24
                              },
                              "end": {
                                "row": 27,
                                "column": 29
                              },
                              "text": "shape"
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 27,
                            "column": 29
                          },
                          "end": {
                            "row": 27,
                            "column": 30
                          },
                          "text": "["
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 27,
                            "column": 30
                          },
                          "end": {
                            "row": 27,
                            "column": 31
                          },
                          "text": "1"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 27,
                            "column": 31
                          },
                          "end": {
                            "row": 27,
                            "column": 32
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 28,
                "column": 8
              },
              "end": {
                "row": 28,
                "column": 19
              },
              "text": "output = []",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 28,
                    "column": 8
                  },
                  "end": {
                    "row": 28,
                    "column": 19
                  },
                  "text": "output = []",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 28,
                        "column": 8
                      },
                      "end": {
                        "row": 28,
                        "column": 14
                      },
                      "text": "output"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 28,
                        "column": 15
                      },
                      "end": {
                        "row": 28,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 28,
                        "column": 17
                      },
                      "end": {
                        "row": 28,
                        "column": 19
                      },
                      "text": "[]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 28,
                            "column": 17
                          },
                          "end": {
                            "row": 28,
                            "column": 18
                          },
                          "text": "["
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 28,
                            "column": 18
                          },
                          "end": {
                            "row": 28,
                            "column": 19
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 29,
                "column": 8
              },
              "end": {
                "row": 29,
                "column": 31
              },
              "text": "additional_outputs = []",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 29,
                    "column": 8
                  },
                  "end": {
                    "row": 29,
                    "column": 31
                  },
                  "text": "additional_outputs = []",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 29,
                        "column": 8
                      },
                      "end": {
                        "row": 29,
                        "column": 26
                      },
                      "text": "additional_outputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 29,
                        "column": 27
                      },
                      "end": {
                        "row": 29,
                        "column": 28
                      },
                      "text": "="
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 29,
                        "column": 29
                      },
                      "end": {
                        "row": 29,
                        "column": 31
                      },
                      "text": "[]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 29,
                            "column": 29
                          },
                          "end": {
                            "row": 29,
                            "column": 30
                          },
                          "text": "["
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 29,
                            "column": 30
                          },
                          "end": {
                            "row": 29,
                            "column": 31
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 30,
                "column": 8
              },
              "end": {
                "row": 30,
                "column": 93
              },
              "text": "inputs = _as_list(mx.nd.split(inputs, num_outputs=length, axis=1, squeeze_axis=True))",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 30,
                    "column": 93
                  },
                  "text": "inputs = _as_list(mx.nd.split(inputs, num_outputs=length, axis=1, squeeze_axis=True))",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 8
                      },
                      "end": {
                        "row": 30,
                        "column": 14
                      },
                      "text": "inputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 30,
                        "column": 15
                      },
                      "end": {
                        "row": 30,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 30,
                        "column": 17
                      },
                      "end": {
                        "row": 30,
                        "column": 93
                      },
                      "text": "_as_list(mx.nd.split(inputs, num_outputs=length, axis=1, squeeze_axis=True))",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 30,
                            "column": 17
                          },
                          "end": {
                            "row": 30,
                            "column": 25
                          },
                          "text": "_as_list"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 30,
                            "column": 25
                          },
                          "end": {
                            "row": 30,
                            "column": 93
                          },
                          "text": "(mx.nd.split(inputs, num_outputs=length, axis=1, squeeze_axis=True))",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 30,
                                "column": 25
                              },
                              "end": {
                                "row": 30,
                                "column": 26
                              },
                              "text": "("
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 30,
                                "column": 26
                              },
                              "end": {
                                "row": 30,
                                "column": 92
                              },
                              "text": "mx.nd.split(inputs, num_outputs=length, axis=1, squeeze_axis=True)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 30,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 37
                                  },
                                  "text": "mx.nd.split",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 30,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 31
                                      },
                                      "text": "mx.nd",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 28
                                          },
                                          "text": "mx"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 30,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 29
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 31
                                          },
                                          "text": "nd"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 30,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 32
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 30,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 37
                                      },
                                      "text": "split"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 30,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 30,
                                    "column": 92
                                  },
                                  "text": "(inputs, num_outputs=length, axis=1, squeeze_axis=True)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 30,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 38
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 30,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 44
                                      },
                                      "text": "inputs"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 30,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 45
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 30,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 64
                                      },
                                      "text": "num_outputs=length",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 57
                                          },
                                          "text": "num_outputs"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 30,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 58
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 64
                                          },
                                          "text": "length"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 30,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 65
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 30,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 72
                                      },
                                      "text": "axis=1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 70
                                          },
                                          "text": "axis"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 30,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 71
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 30,
                                            "column": 71
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 72
                                          },
                                          "text": "1"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 30,
                                        "column": 72
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 73
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 30,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 91
                                      },
                                      "text": "squeeze_axis=True",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 30,
                                            "column": 74
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 86
                                          },
                                          "text": "squeeze_axis"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 30,
                                            "column": 86
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 87
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "true",
                                          "start": {
                                            "row": 30,
                                            "column": 87
                                          },
                                          "end": {
                                            "row": 30,
                                            "column": 91
                                          },
                                          "text": "True"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 30,
                                        "column": 91
                                      },
                                      "end": {
                                        "row": 30,
                                        "column": 92
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 30,
                                "column": 92
                              },
                              "end": {
                                "row": 30,
                                "column": 93
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 31,
                "column": 8
              },
              "end": {
                "row": 31,
                "column": 25
              },
              "text": "rnn_states_l = []",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 31,
                    "column": 8
                  },
                  "end": {
                    "row": 31,
                    "column": 25
                  },
                  "text": "rnn_states_l = []",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 31,
                        "column": 8
                      },
                      "end": {
                        "row": 31,
                        "column": 20
                      },
                      "text": "rnn_states_l"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 31,
                        "column": 21
                      },
                      "end": {
                        "row": 31,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 31,
                        "column": 23
                      },
                      "end": {
                        "row": 31,
                        "column": 25
                      },
                      "text": "[]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 31,
                            "column": 23
                          },
                          "end": {
                            "row": 31,
                            "column": 24
                          },
                          "text": "["
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 31,
                            "column": 24
                          },
                          "end": {
                            "row": 31,
                            "column": 25
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 32,
                "column": 8
              },
              "end": {
                "row": 32,
                "column": 31
              },
              "text": "attention_output_l = []",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 32,
                    "column": 8
                  },
                  "end": {
                    "row": 32,
                    "column": 31
                  },
                  "text": "attention_output_l = []",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 32,
                        "column": 8
                      },
                      "end": {
                        "row": 32,
                        "column": 26
                      },
                      "text": "attention_output_l"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 32,
                        "column": 27
                      },
                      "end": {
                        "row": 32,
                        "column": 28
                      },
                      "text": "="
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 32,
                        "column": 29
                      },
                      "end": {
                        "row": 32,
                        "column": 31
                      },
                      "text": "[]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 32,
                            "column": 29
                          },
                          "end": {
                            "row": 32,
                            "column": 30
                          },
                          "text": "["
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 32,
                            "column": 30
                          },
                          "end": {
                            "row": 32,
                            "column": 31
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 33,
                "column": 8
              },
              "end": {
                "row": 33,
                "column": 33
              },
              "text": "fixed_states = states[2:]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 33,
                    "column": 8
                  },
                  "end": {
                    "row": 33,
                    "column": 33
                  },
                  "text": "fixed_states = states[2:]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 33,
                        "column": 8
                      },
                      "end": {
                        "row": 33,
                        "column": 20
                      },
                      "text": "fixed_states"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 33,
                        "column": 21
                      },
                      "end": {
                        "row": 33,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 33,
                        "column": 23
                      },
                      "end": {
                        "row": 33,
                        "column": 33
                      },
                      "text": "states[2:]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 33,
                            "column": 23
                          },
                          "end": {
                            "row": 33,
                            "column": 29
                          },
                          "text": "states"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 33,
                            "column": 29
                          },
                          "end": {
                            "row": 33,
                            "column": 30
                          },
                          "text": "["
                        },
                        {
                          "type": "slice",
                          "start": {
                            "row": 33,
                            "column": 30
                          },
                          "end": {
                            "row": 33,
                            "column": 32
                          },
                          "text": "2:",
                          "children": [
                            {
                              "type": "integer",
                              "start": {
                                "row": 33,
                                "column": 30
                              },
                              "end": {
                                "row": 33,
                                "column": 31
                              },
                              "text": "2"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 33,
                                "column": 31
                              },
                              "end": {
                                "row": 33,
                                "column": 32
                              },
                              "text": ":"
                            }
                          ]
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 33,
                            "column": 32
                          },
                          "end": {
                            "row": 33,
                            "column": 33
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 34,
                "column": 8
              },
              "end": {
                "row": 39,
                "column": 61
              },
              "text": "for i in range(length):\n            ele_output, states, ele_additional_outputs = self.forward(inputs[i], states)\n            rnn_states_l.append(states[0])\n            attention_output_l.append(states[1])\n            output.append(ele_output)\n            additional_outputs.extend(ele_additional_outputs)",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 34,
                    "column": 8
                  },
                  "end": {
                    "row": 34,
                    "column": 11
                  },
                  "text": "for"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 34,
                    "column": 12
                  },
                  "end": {
                    "row": 34,
                    "column": 13
                  },
                  "text": "i"
                },
                {
                  "type": "in",
                  "start": {
                    "row": 34,
                    "column": 14
                  },
                  "end": {
                    "row": 34,
                    "column": 16
                  },
                  "text": "in"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 34,
                    "column": 17
                  },
                  "end": {
                    "row": 34,
                    "column": 30
                  },
                  "text": "range(length)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 34,
                        "column": 17
                      },
                      "end": {
                        "row": 34,
                        "column": 22
                      },
                      "text": "range"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 34,
                        "column": 22
                      },
                      "end": {
                        "row": 34,
                        "column": 30
                      },
                      "text": "(length)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 34,
                            "column": 22
                          },
                          "end": {
                            "row": 34,
                            "column": 23
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 34,
                            "column": 23
                          },
                          "end": {
                            "row": 34,
                            "column": 29
                          },
                          "text": "length"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 34,
                            "column": 29
                          },
                          "end": {
                            "row": 34,
                            "column": 30
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 34,
                    "column": 30
                  },
                  "end": {
                    "row": 34,
                    "column": 31
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 35,
                    "column": 12
                  },
                  "end": {
                    "row": 39,
                    "column": 61
                  },
                  "text": "ele_output, states, ele_additional_outputs = self.forward(inputs[i], states)\n            rnn_states_l.append(states[0])\n            attention_output_l.append(states[1])\n            output.append(ele_output)\n            additional_outputs.extend(ele_additional_outputs)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 35,
                        "column": 12
                      },
                      "end": {
                        "row": 35,
                        "column": 88
                      },
                      "text": "ele_output, states, ele_additional_outputs = self.forward(inputs[i], states)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 35,
                            "column": 12
                          },
                          "end": {
                            "row": 35,
                            "column": 88
                          },
                          "text": "ele_output, states, ele_additional_outputs = self.forward(inputs[i], states)",
                          "children": [
                            {
                              "type": "pattern_list",
                              "start": {
                                "row": 35,
                                "column": 12
                              },
                              "end": {
                                "row": 35,
                                "column": 54
                              },
                              "text": "ele_output, states, ele_additional_outputs",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 22
                                  },
                                  "text": "ele_output"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 35,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 23
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 30
                                  },
                                  "text": "states"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 35,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 31
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 54
                                  },
                                  "text": "ele_additional_outputs"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 35,
                                "column": 55
                              },
                              "end": {
                                "row": 35,
                                "column": 56
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 35,
                                "column": 57
                              },
                              "end": {
                                "row": 35,
                                "column": 88
                              },
                              "text": "self.forward(inputs[i], states)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 35,
                                    "column": 57
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 69
                                  },
                                  "text": "self.forward",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 61
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 35,
                                        "column": 61
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 62
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 62
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 69
                                      },
                                      "text": "forward"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 35,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 88
                                  },
                                  "text": "(inputs[i], states)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 35,
                                        "column": 69
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 70
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 35,
                                        "column": 70
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 79
                                      },
                                      "text": "inputs[i]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 35,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 76
                                          },
                                          "text": "inputs"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 35,
                                            "column": 76
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 77
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 35,
                                            "column": 77
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 78
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 35,
                                            "column": 78
                                          },
                                          "end": {
                                            "row": 35,
                                            "column": 79
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 35,
                                        "column": 79
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 80
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 35,
                                        "column": 81
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 87
                                      },
                                      "text": "states"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 35,
                                        "column": 87
                                      },
                                      "end": {
                                        "row": 35,
                                        "column": 88
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 36,
                        "column": 12
                      },
                      "end": {
                        "row": 36,
                        "column": 42
                      },
                      "text": "rnn_states_l.append(states[0])",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 36,
                            "column": 12
                          },
                          "end": {
                            "row": 36,
                            "column": 42
                          },
                          "text": "rnn_states_l.append(states[0])",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 36,
                                "column": 12
                              },
                              "end": {
                                "row": 36,
                                "column": 31
                              },
                              "text": "rnn_states_l.append",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 36,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 24
                                  },
                                  "text": "rnn_states_l"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 36,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 25
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 36,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 31
                                  },
                                  "text": "append"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 36,
                                "column": 31
                              },
                              "end": {
                                "row": 36,
                                "column": 42
                              },
                              "text": "(states[0])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 36,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 32
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "subscript",
                                  "start": {
                                    "row": 36,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 41
                                  },
                                  "text": "states[0]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 36,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 38
                                      },
                                      "text": "states"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 36,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 39
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 36,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 40
                                      },
                                      "text": "0"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 36,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 41
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 36,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 42
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 37,
                        "column": 12
                      },
                      "end": {
                        "row": 37,
                        "column": 48
                      },
                      "text": "attention_output_l.append(states[1])",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 37,
                            "column": 12
                          },
                          "end": {
                            "row": 37,
                            "column": 48
                          },
                          "text": "attention_output_l.append(states[1])",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 37,
                                "column": 12
                              },
                              "end": {
                                "row": 37,
                                "column": 37
                              },
                              "text": "attention_output_l.append",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 30
                                  },
                                  "text": "attention_output_l"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 37,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 31
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 37
                                  },
                                  "text": "append"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 37,
                                "column": 37
                              },
                              "end": {
                                "row": 37,
                                "column": 48
                              },
                              "text": "(states[1])",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 37,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 38
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "subscript",
                                  "start": {
                                    "row": 37,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 47
                                  },
                                  "text": "states[1]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 37,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 44
                                      },
                                      "text": "states"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 37,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 45
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 37,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 46
                                      },
                                      "text": "1"
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 37,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 37,
                                        "column": 47
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 37,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 48
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 38,
                        "column": 12
                      },
                      "end": {
                        "row": 38,
                        "column": 37
                      },
                      "text": "output.append(ele_output)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 38,
                            "column": 12
                          },
                          "end": {
                            "row": 38,
                            "column": 37
                          },
                          "text": "output.append(ele_output)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 38,
                                "column": 12
                              },
                              "end": {
                                "row": 38,
                                "column": 25
                              },
                              "text": "output.append",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 18
                                  },
                                  "text": "output"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 38,
                                    "column": 18
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 19
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 25
                                  },
                                  "text": "append"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 38,
                                "column": 25
                              },
                              "end": {
                                "row": 38,
                                "column": 37
                              },
                              "text": "(ele_output)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 38,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 26
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 36
                                  },
                                  "text": "ele_output"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 38,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 37
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 39,
                        "column": 12
                      },
                      "end": {
                        "row": 39,
                        "column": 61
                      },
                      "text": "additional_outputs.extend(ele_additional_outputs)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 39,
                            "column": 12
                          },
                          "end": {
                            "row": 39,
                            "column": 61
                          },
                          "text": "additional_outputs.extend(ele_additional_outputs)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 39,
                                "column": 12
                              },
                              "end": {
                                "row": 39,
                                "column": 37
                              },
                              "text": "additional_outputs.extend",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 30
                                  },
                                  "text": "additional_outputs"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 39,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 31
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 37
                                  },
                                  "text": "extend"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 39,
                                "column": 37
                              },
                              "end": {
                                "row": 39,
                                "column": 61
                              },
                              "text": "(ele_additional_outputs)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 39,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 38
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 39,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 60
                                  },
                                  "text": "ele_additional_outputs"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 39,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 39,
                                    "column": 61
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 40,
                "column": 8
              },
              "end": {
                "row": 40,
                "column": 45
              },
              "text": "output = mx.nd.stack(*output, axis=1)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 40,
                    "column": 8
                  },
                  "end": {
                    "row": 40,
                    "column": 45
                  },
                  "text": "output = mx.nd.stack(*output, axis=1)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 40,
                        "column": 8
                      },
                      "end": {
                        "row": 40,
                        "column": 14
                      },
                      "text": "output"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 40,
                        "column": 15
                      },
                      "end": {
                        "row": 40,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 40,
                        "column": 17
                      },
                      "end": {
                        "row": 40,
                        "column": 45
                      },
                      "text": "mx.nd.stack(*output, axis=1)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 40,
                            "column": 17
                          },
                          "end": {
                            "row": 40,
                            "column": 28
                          },
                          "text": "mx.nd.stack",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 40,
                                "column": 17
                              },
                              "end": {
                                "row": 40,
                                "column": 22
                              },
                              "text": "mx.nd",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 19
                                  },
                                  "text": "mx"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 40,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 20
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 22
                                  },
                                  "text": "nd"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 40,
                                "column": 22
                              },
                              "end": {
                                "row": 40,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 23
                              },
                              "end": {
                                "row": 40,
                                "column": 28
                              },
                              "text": "stack"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 40,
                            "column": 28
                          },
                          "end": {
                            "row": 40,
                            "column": 45
                          },
                          "text": "(*output, axis=1)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 40,
                                "column": 28
                              },
                              "end": {
                                "row": 40,
                                "column": 29
                              },
                              "text": "("
                            },
                            {
                              "type": "list_splat",
                              "start": {
                                "row": 40,
                                "column": 29
                              },
                              "end": {
                                "row": 40,
                                "column": 36
                              },
                              "text": "*output",
                              "children": [
                                {
                                  "type": "*",
                                  "start": {
                                    "row": 40,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 30
                                  },
                                  "text": "*"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 36
                                  },
                                  "text": "output"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 40,
                                "column": 36
                              },
                              "end": {
                                "row": 40,
                                "column": 37
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 40,
                                "column": 38
                              },
                              "end": {
                                "row": 40,
                                "column": 44
                              },
                              "text": "axis=1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 40,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 42
                                  },
                                  "text": "axis"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 40,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 43
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 40,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 44
                                  },
                                  "text": "1"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 40,
                                "column": 44
                              },
                              "end": {
                                "row": 40,
                                "column": 45
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 41,
                "column": 8
              },
              "end": {
                "row": 47,
                "column": 47
              },
              "text": "if valid_length is not None:\n            states = [_nested_sequence_last(rnn_states_l, valid_length),\n                      _nested_sequence_last(attention_output_l, valid_length)] + fixed_states\n            output = mx.nd.SequenceMask(output,\n                                        sequence_length=valid_length,\n                                        use_sequence_length=True,\n                                        axis=1)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 41,
                    "column": 8
                  },
                  "end": {
                    "row": 41,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 41,
                    "column": 11
                  },
                  "end": {
                    "row": 41,
                    "column": 35
                  },
                  "text": "valid_length is not None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 41,
                        "column": 11
                      },
                      "end": {
                        "row": 41,
                        "column": 23
                      },
                      "text": "valid_length"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 41,
                        "column": 24
                      },
                      "end": {
                        "row": 41,
                        "column": 26
                      },
                      "text": "is"
                    },
                    {
                      "type": "is not",
                      "start": {
                        "row": 41,
                        "column": 27
                      },
                      "end": {
                        "row": 41,
                        "column": 30
                      },
                      "text": "not"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 41,
                        "column": 31
                      },
                      "end": {
                        "row": 41,
                        "column": 35
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 41,
                    "column": 35
                  },
                  "end": {
                    "row": 41,
                    "column": 36
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 42,
                    "column": 12
                  },
                  "end": {
                    "row": 47,
                    "column": 47
                  },
                  "text": "states = [_nested_sequence_last(rnn_states_l, valid_length),\n                      _nested_sequence_last(attention_output_l, valid_length)] + fixed_states\n            output = mx.nd.SequenceMask(output,\n                                        sequence_length=valid_length,\n                                        use_sequence_length=True,\n                                        axis=1)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 42,
                        "column": 12
                      },
                      "end": {
                        "row": 43,
                        "column": 93
                      },
                      "text": "states = [_nested_sequence_last(rnn_states_l, valid_length),\n                      _nested_sequence_last(attention_output_l, valid_length)] + fixed_states",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 42,
                            "column": 12
                          },
                          "end": {
                            "row": 43,
                            "column": 93
                          },
                          "text": "states = [_nested_sequence_last(rnn_states_l, valid_length),\n                      _nested_sequence_last(attention_output_l, valid_length)] + fixed_states",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 42,
                                "column": 12
                              },
                              "end": {
                                "row": 42,
                                "column": 18
                              },
                              "text": "states"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 42,
                                "column": 19
                              },
                              "end": {
                                "row": 42,
                                "column": 20
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 42,
                                "column": 21
                              },
                              "end": {
                                "row": 43,
                                "column": 93
                              },
                              "text": "[_nested_sequence_last(rnn_states_l, valid_length),\n                      _nested_sequence_last(attention_output_l, valid_length)] + fixed_states",
                              "children": [
                                {
                                  "type": "list",
                                  "start": {
                                    "row": 42,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 78
                                  },
                                  "text": "[_nested_sequence_last(rnn_states_l, valid_length),\n                      _nested_sequence_last(attention_output_l, valid_length)]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 42,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 22
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 42,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 71
                                      },
                                      "text": "_nested_sequence_last(rnn_states_l, valid_length)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 42,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 43
                                          },
                                          "text": "_nested_sequence_last"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 42,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 71
                                          },
                                          "text": "(rnn_states_l, valid_length)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 42,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 44
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 42,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 56
                                              },
                                              "text": "rnn_states_l"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 42,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 57
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 42,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 70
                                              },
                                              "text": "valid_length"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 42,
                                                "column": 70
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 71
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 42,
                                        "column": 71
                                      },
                                      "end": {
                                        "row": 42,
                                        "column": 72
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 43,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 77
                                      },
                                      "text": "_nested_sequence_last(attention_output_l, valid_length)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 43,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 43
                                          },
                                          "text": "_nested_sequence_last"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 43,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 77
                                          },
                                          "text": "(attention_output_l, valid_length)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 43,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 44
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 43,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 62
                                              },
                                              "text": "attention_output_l"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 43,
                                                "column": 62
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 63
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 43,
                                                "column": 64
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 76
                                              },
                                              "text": "valid_length"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 43,
                                                "column": 76
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 77
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 43,
                                        "column": 77
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 78
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 43,
                                    "column": 79
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 80
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 43,
                                    "column": 81
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 93
                                  },
                                  "text": "fixed_states"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 44,
                        "column": 12
                      },
                      "end": {
                        "row": 47,
                        "column": 47
                      },
                      "text": "output = mx.nd.SequenceMask(output,\n                                        sequence_length=valid_length,\n                                        use_sequence_length=True,\n                                        axis=1)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 44,
                            "column": 12
                          },
                          "end": {
                            "row": 47,
                            "column": 47
                          },
                          "text": "output = mx.nd.SequenceMask(output,\n                                        sequence_length=valid_length,\n                                        use_sequence_length=True,\n                                        axis=1)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 44,
                                "column": 12
                              },
                              "end": {
                                "row": 44,
                                "column": 18
                              },
                              "text": "output"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 44,
                                "column": 19
                              },
                              "end": {
                                "row": 44,
                                "column": 20
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 44,
                                "column": 21
                              },
                              "end": {
                                "row": 47,
                                "column": 47
                              },
                              "text": "mx.nd.SequenceMask(output,\n                                        sequence_length=valid_length,\n                                        use_sequence_length=True,\n                                        axis=1)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 44,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 39
                                  },
                                  "text": "mx.nd.SequenceMask",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 44,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 26
                                      },
                                      "text": "mx.nd",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 44,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 23
                                          },
                                          "text": "mx"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 44,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 24
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 44,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 44,
                                            "column": 26
                                          },
                                          "text": "nd"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 44,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 27
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 44,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 39
                                      },
                                      "text": "SequenceMask"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 44,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 47
                                  },
                                  "text": "(output,\n                                        sequence_length=valid_length,\n                                        use_sequence_length=True,\n                                        axis=1)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 44,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 40
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 44,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 46
                                      },
                                      "text": "output"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 44,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 44,
                                        "column": 47
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 45,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 68
                                      },
                                      "text": "sequence_length=valid_length",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 45,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 55
                                          },
                                          "text": "sequence_length"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 45,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 56
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 45,
                                            "column": 56
                                          },
                                          "end": {
                                            "row": 45,
                                            "column": 68
                                          },
                                          "text": "valid_length"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 45,
                                        "column": 68
                                      },
                                      "end": {
                                        "row": 45,
                                        "column": 69
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 46,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 64
                                      },
                                      "text": "use_sequence_length=True",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 59
                                          },
                                          "text": "use_sequence_length"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 46,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 60
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "true",
                                          "start": {
                                            "row": 46,
                                            "column": 60
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 64
                                          },
                                          "text": "True"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 46,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 65
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "keyword_argument",
                                      "start": {
                                        "row": 47,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 46
                                      },
                                      "text": "axis=1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 47,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 44
                                          },
                                          "text": "axis"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 47,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 45
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "integer",
                                          "start": {
                                            "row": 47,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 46
                                          },
                                          "text": "1"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 47,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 47
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 48,
                "column": 8
              },
              "end": {
                "row": 49,
                "column": 76
              },
              "text": "if self._output_attention:\n            additional_outputs = [mx.nd.concat(*additional_outputs, dim=-2)]",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 48,
                    "column": 8
                  },
                  "end": {
                    "row": 48,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 48,
                    "column": 11
                  },
                  "end": {
                    "row": 48,
                    "column": 33
                  },
                  "text": "self._output_attention",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 48,
                        "column": 11
                      },
                      "end": {
                        "row": 48,
                        "column": 15
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 48,
                        "column": 15
                      },
                      "end": {
                        "row": 48,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 48,
                        "column": 16
                      },
                      "end": {
                        "row": 48,
                        "column": 33
                      },
                      "text": "_output_attention"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 48,
                    "column": 33
                  },
                  "end": {
                    "row": 48,
                    "column": 34
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 49,
                    "column": 12
                  },
                  "end": {
                    "row": 49,
                    "column": 76
                  },
                  "text": "additional_outputs = [mx.nd.concat(*additional_outputs, dim=-2)]",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 49,
                        "column": 12
                      },
                      "end": {
                        "row": 49,
                        "column": 76
                      },
                      "text": "additional_outputs = [mx.nd.concat(*additional_outputs, dim=-2)]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 49,
                            "column": 12
                          },
                          "end": {
                            "row": 49,
                            "column": 76
                          },
                          "text": "additional_outputs = [mx.nd.concat(*additional_outputs, dim=-2)]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 49,
                                "column": 12
                              },
                              "end": {
                                "row": 49,
                                "column": 30
                              },
                              "text": "additional_outputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 49,
                                "column": 31
                              },
                              "end": {
                                "row": 49,
                                "column": 32
                              },
                              "text": "="
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 49,
                                "column": 33
                              },
                              "end": {
                                "row": 49,
                                "column": 76
                              },
                              "text": "[mx.nd.concat(*additional_outputs, dim=-2)]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 49,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 34
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 49,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 75
                                  },
                                  "text": "mx.nd.concat(*additional_outputs, dim=-2)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 49,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 46
                                      },
                                      "text": "mx.nd.concat",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 49,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 39
                                          },
                                          "text": "mx.nd",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 49,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 36
                                              },
                                              "text": "mx"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 49,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 37
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 49,
                                                "column": 37
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 39
                                              },
                                              "text": "nd"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 49,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 40
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 49,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 46
                                          },
                                          "text": "concat"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 49,
                                        "column": 46
                                      },
                                      "end": {
                                        "row": 49,
                                        "column": 75
                                      },
                                      "text": "(*additional_outputs, dim=-2)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 49,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 47
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "list_splat",
                                          "start": {
                                            "row": 49,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 66
                                          },
                                          "text": "*additional_outputs",
                                          "children": [
                                            {
                                              "type": "*",
                                              "start": {
                                                "row": 49,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 48
                                              },
                                              "text": "*"
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 49,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 66
                                              },
                                              "text": "additional_outputs"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 49,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 67
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "keyword_argument",
                                          "start": {
                                            "row": 49,
                                            "column": 68
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 74
                                          },
                                          "text": "dim=-2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 49,
                                                "column": 68
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 71
                                              },
                                              "text": "dim"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 49,
                                                "column": 71
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 72
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "unary_operator",
                                              "start": {
                                                "row": 49,
                                                "column": 72
                                              },
                                              "end": {
                                                "row": 49,
                                                "column": 74
                                              },
                                              "text": "-2",
                                              "children": [
                                                {
                                                  "type": "-",
                                                  "start": {
                                                    "row": 49,
                                                    "column": 72
                                                  },
                                                  "end": {
                                                    "row": 49,
                                                    "column": 73
                                                  },
                                                  "text": "-"
                                                },
                                                {
                                                  "type": "integer",
                                                  "start": {
                                                    "row": 49,
                                                    "column": 73
                                                  },
                                                  "end": {
                                                    "row": 49,
                                                    "column": 74
                                                  },
                                                  "text": "2"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 49,
                                            "column": 74
                                          },
                                          "end": {
                                            "row": 49,
                                            "column": 75
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 49,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 49,
                                    "column": 76
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 50,
                "column": 8
              },
              "end": {
                "row": 50,
                "column": 49
              },
              "text": "return output, states, additional_outputs",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 50,
                    "column": 8
                  },
                  "end": {
                    "row": 50,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "expression_list",
                  "start": {
                    "row": 50,
                    "column": 15
                  },
                  "end": {
                    "row": 50,
                    "column": 49
                  },
                  "text": "output, states, additional_outputs",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 50,
                        "column": 15
                      },
                      "end": {
                        "row": 50,
                        "column": 21
                      },
                      "text": "output"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 50,
                        "column": 21
                      },
                      "end": {
                        "row": 50,
                        "column": 22
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 50,
                        "column": 23
                      },
                      "end": {
                        "row": 50,
                        "column": 29
                      },
                      "text": "states"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 50,
                        "column": 29
                      },
                      "end": {
                        "row": 50,
                        "column": 30
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 50,
                        "column": 31
                      },
                      "end": {
                        "row": 50,
                        "column": 49
                      },
                      "text": "additional_outputs"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}