{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 49,
    "column": 25
  },
  "text": "def get_adjusted_value(self, asset, field, dt,\n                           perspective_dt,\n                           data_frequency,\n                           spot_value=None):\n        \"\"\"\n        Returns a scalar value representing the value\n        of the desired asset's field at the given dt with adjustments applied.\n\n        Parameters\n        ----------\n        asset : Asset\n            The asset whose data is desired.\n        field : {'open', 'high', 'low', 'close', 'volume', \\\n                 'price', 'last_traded'}\n            The desired field of the asset.\n        dt : pd.Timestamp\n            The timestamp for the desired value.\n        perspective_dt : pd.Timestamp\n            The timestamp from which the data is being viewed back from.\n        data_frequency : str\n            The frequency of the data to query; i.e. whether the data is\n            'daily' or 'minute' bars\n\n        Returns\n        -------\n        value : float, int, or pd.Timestamp\n            The value of the given ``field`` for ``asset`` at ``dt`` with any\n            adjustments known by ``perspective_dt`` applied. The return type is\n            based on the ``field`` requested. If the field is one of 'open',\n            'high', 'low', 'close', or 'price', the value will be a float. If\n            the ``field`` is 'volume' the value will be a int. If the ``field``\n            is 'last_traded' the value will be a Timestamp.\n        \"\"\"\n        if spot_value is None:\n            # if this a fetcher field, we want to use perspective_dt (not dt)\n            # because we want the new value as of midnight (fetcher only works\n            # on a daily basis, all timestamps are on midnight)\n            if self._is_extra_source(asset, field,\n                                     self._augmented_sources_map):\n                spot_value = self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)\n            else:\n                spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)\n\n        if isinstance(asset, Equity):\n            ratio = self.get_adjustments(asset, field, dt, perspective_dt)[0]\n            spot_value *= ratio\n\n        return spot_value",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 49,
        "column": 25
      },
      "text": "def get_adjusted_value(self, asset, field, dt,\n                           perspective_dt,\n                           data_frequency,\n                           spot_value=None):\n        \"\"\"\n        Returns a scalar value representing the value\n        of the desired asset's field at the given dt with adjustments applied.\n\n        Parameters\n        ----------\n        asset : Asset\n            The asset whose data is desired.\n        field : {'open', 'high', 'low', 'close', 'volume', \\\n                 'price', 'last_traded'}\n            The desired field of the asset.\n        dt : pd.Timestamp\n            The timestamp for the desired value.\n        perspective_dt : pd.Timestamp\n            The timestamp from which the data is being viewed back from.\n        data_frequency : str\n            The frequency of the data to query; i.e. whether the data is\n            'daily' or 'minute' bars\n\n        Returns\n        -------\n        value : float, int, or pd.Timestamp\n            The value of the given ``field`` for ``asset`` at ``dt`` with any\n            adjustments known by ``perspective_dt`` applied. The return type is\n            based on the ``field`` requested. If the field is one of 'open',\n            'high', 'low', 'close', or 'price', the value will be a float. If\n            the ``field`` is 'volume' the value will be a int. If the ``field``\n            is 'last_traded' the value will be a Timestamp.\n        \"\"\"\n        if spot_value is None:\n            # if this a fetcher field, we want to use perspective_dt (not dt)\n            # because we want the new value as of midnight (fetcher only works\n            # on a daily basis, all timestamps are on midnight)\n            if self._is_extra_source(asset, field,\n                                     self._augmented_sources_map):\n                spot_value = self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)\n            else:\n                spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)\n\n        if isinstance(asset, Equity):\n            ratio = self.get_adjustments(asset, field, dt, perspective_dt)[0]\n            spot_value *= ratio\n\n        return spot_value",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": "get_adjusted_value"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 3,
            "column": 43
          },
          "text": "(self, asset, field, dt,\n                           perspective_dt,\n                           data_frequency,\n                           spot_value=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": "asset"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 41
              },
              "text": "field"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 41
              },
              "end": {
                "row": 0,
                "column": 42
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 43
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": "dt"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 27
              },
              "end": {
                "row": 1,
                "column": 41
              },
              "text": "perspective_dt"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 41
              },
              "end": {
                "row": 1,
                "column": 42
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 2,
                "column": 27
              },
              "end": {
                "row": 2,
                "column": 41
              },
              "text": "data_frequency"
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 41
              },
              "end": {
                "row": 2,
                "column": 42
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 27
              },
              "end": {
                "row": 3,
                "column": 42
              },
              "text": "spot_value=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 27
                  },
                  "end": {
                    "row": 3,
                    "column": 37
                  },
                  "text": "spot_value"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 37
                  },
                  "end": {
                    "row": 3,
                    "column": 38
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 3,
                    "column": 38
                  },
                  "end": {
                    "row": 3,
                    "column": 42
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 3,
                "column": 42
              },
              "end": {
                "row": 3,
                "column": 43
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 3,
            "column": 43
          },
          "end": {
            "row": 3,
            "column": 44
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 4,
            "column": 8
          },
          "end": {
            "row": 49,
            "column": 25
          },
          "text": "\"\"\"\n        Returns a scalar value representing the value\n        of the desired asset's field at the given dt with adjustments applied.\n\n        Parameters\n        ----------\n        asset : Asset\n            The asset whose data is desired.\n        field : {'open', 'high', 'low', 'close', 'volume', \\\n                 'price', 'last_traded'}\n            The desired field of the asset.\n        dt : pd.Timestamp\n            The timestamp for the desired value.\n        perspective_dt : pd.Timestamp\n            The timestamp from which the data is being viewed back from.\n        data_frequency : str\n            The frequency of the data to query; i.e. whether the data is\n            'daily' or 'minute' bars\n\n        Returns\n        -------\n        value : float, int, or pd.Timestamp\n            The value of the given ``field`` for ``asset`` at ``dt`` with any\n            adjustments known by ``perspective_dt`` applied. The return type is\n            based on the ``field`` requested. If the field is one of 'open',\n            'high', 'low', 'close', or 'price', the value will be a float. If\n            the ``field`` is 'volume' the value will be a int. If the ``field``\n            is 'last_traded' the value will be a Timestamp.\n        \"\"\"\n        if spot_value is None:\n            # if this a fetcher field, we want to use perspective_dt (not dt)\n            # because we want the new value as of midnight (fetcher only works\n            # on a daily basis, all timestamps are on midnight)\n            if self._is_extra_source(asset, field,\n                                     self._augmented_sources_map):\n                spot_value = self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)\n            else:\n                spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)\n\n        if isinstance(asset, Equity):\n            ratio = self.get_adjustments(asset, field, dt, perspective_dt)[0]\n            spot_value *= ratio\n\n        return spot_value",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 4,
                "column": 8
              },
              "end": {
                "row": 32,
                "column": 11
              },
              "text": "\"\"\"\n        Returns a scalar value representing the value\n        of the desired asset's field at the given dt with adjustments applied.\n\n        Parameters\n        ----------\n        asset : Asset\n            The asset whose data is desired.\n        field : {'open', 'high', 'low', 'close', 'volume', \\\n                 'price', 'last_traded'}\n            The desired field of the asset.\n        dt : pd.Timestamp\n            The timestamp for the desired value.\n        perspective_dt : pd.Timestamp\n            The timestamp from which the data is being viewed back from.\n        data_frequency : str\n            The frequency of the data to query; i.e. whether the data is\n            'daily' or 'minute' bars\n\n        Returns\n        -------\n        value : float, int, or pd.Timestamp\n            The value of the given ``field`` for ``asset`` at ``dt`` with any\n            adjustments known by ``perspective_dt`` applied. The return type is\n            based on the ``field`` requested. If the field is one of 'open',\n            'high', 'low', 'close', or 'price', the value will be a float. If\n            the ``field`` is 'volume' the value will be a int. If the ``field``\n            is 'last_traded' the value will be a Timestamp.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 4,
                    "column": 8
                  },
                  "end": {
                    "row": 32,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Returns a scalar value representing the value\n        of the desired asset's field at the given dt with adjustments applied.\n\n        Parameters\n        ----------\n        asset : Asset\n            The asset whose data is desired.\n        field : {'open', 'high', 'low', 'close', 'volume', \\\n                 'price', 'last_traded'}\n            The desired field of the asset.\n        dt : pd.Timestamp\n            The timestamp for the desired value.\n        perspective_dt : pd.Timestamp\n            The timestamp from which the data is being viewed back from.\n        data_frequency : str\n            The frequency of the data to query; i.e. whether the data is\n            'daily' or 'minute' bars\n\n        Returns\n        -------\n        value : float, int, or pd.Timestamp\n            The value of the given ``field`` for ``asset`` at ``dt`` with any\n            adjustments known by ``perspective_dt`` applied. The return type is\n            based on the ``field`` requested. If the field is one of 'open',\n            'high', 'low', 'close', or 'price', the value will be a float. If\n            the ``field`` is 'volume' the value will be a int. If the ``field``\n            is 'last_traded' the value will be a Timestamp.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 4,
                        "column": 8
                      },
                      "end": {
                        "row": 4,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 4,
                        "column": 11
                      },
                      "end": {
                        "row": 32,
                        "column": 8
                      },
                      "text": "\n        Returns a scalar value representing the value\n        of the desired asset's field at the given dt with adjustments applied.\n\n        Parameters\n        ----------\n        asset : Asset\n            The asset whose data is desired.\n        field : {'open', 'high', 'low', 'close', 'volume', \\\n                 'price', 'last_traded'}\n            The desired field of the asset.\n        dt : pd.Timestamp\n            The timestamp for the desired value.\n        perspective_dt : pd.Timestamp\n            The timestamp from which the data is being viewed back from.\n        data_frequency : str\n            The frequency of the data to query; i.e. whether the data is\n            'daily' or 'minute' bars\n\n        Returns\n        -------\n        value : float, int, or pd.Timestamp\n            The value of the given ``field`` for ``asset`` at ``dt`` with any\n            adjustments known by ``perspective_dt`` applied. The return type is\n            based on the ``field`` requested. If the field is one of 'open',\n            'high', 'low', 'close', or 'price', the value will be a float. If\n            the ``field`` is 'volume' the value will be a int. If the ``field``\n            is 'last_traded' the value will be a Timestamp.\n        ",
                      "children": [
                        {
                          "type": "escape_sequence",
                          "start": {
                            "row": 12,
                            "column": 59
                          },
                          "end": {
                            "row": 13,
                            "column": 0
                          },
                          "text": "\\\n"
                        }
                      ]
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 32,
                        "column": 8
                      },
                      "end": {
                        "row": 32,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 33,
                "column": 8
              },
              "end": {
                "row": 43,
                "column": 64
              },
              "text": "if spot_value is None:\n            # if this a fetcher field, we want to use perspective_dt (not dt)\n            # because we want the new value as of midnight (fetcher only works\n            # on a daily basis, all timestamps are on midnight)\n            if self._is_extra_source(asset, field,\n                                     self._augmented_sources_map):\n                spot_value = self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)\n            else:\n                spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 33,
                    "column": 8
                  },
                  "end": {
                    "row": 33,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 33,
                    "column": 11
                  },
                  "end": {
                    "row": 33,
                    "column": 29
                  },
                  "text": "spot_value is None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 33,
                        "column": 11
                      },
                      "end": {
                        "row": 33,
                        "column": 21
                      },
                      "text": "spot_value"
                    },
                    {
                      "type": "is",
                      "start": {
                        "row": 33,
                        "column": 22
                      },
                      "end": {
                        "row": 33,
                        "column": 24
                      },
                      "text": "is"
                    },
                    {
                      "type": "none",
                      "start": {
                        "row": 33,
                        "column": 25
                      },
                      "end": {
                        "row": 33,
                        "column": 29
                      },
                      "text": "None"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 33,
                    "column": 29
                  },
                  "end": {
                    "row": 33,
                    "column": 30
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 34,
                    "column": 12
                  },
                  "end": {
                    "row": 34,
                    "column": 77
                  },
                  "text": "# if this a fetcher field, we want to use perspective_dt (not dt)"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 35,
                    "column": 12
                  },
                  "end": {
                    "row": 35,
                    "column": 78
                  },
                  "text": "# because we want the new value as of midnight (fetcher only works"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 36,
                    "column": 12
                  },
                  "end": {
                    "row": 36,
                    "column": 63
                  },
                  "text": "# on a daily basis, all timestamps are on midnight)"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 37,
                    "column": 12
                  },
                  "end": {
                    "row": 43,
                    "column": 64
                  },
                  "text": "if self._is_extra_source(asset, field,\n                                     self._augmented_sources_map):\n                spot_value = self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)\n            else:\n                spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 37,
                        "column": 12
                      },
                      "end": {
                        "row": 43,
                        "column": 64
                      },
                      "text": "if self._is_extra_source(asset, field,\n                                     self._augmented_sources_map):\n                spot_value = self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)\n            else:\n                spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 37,
                            "column": 12
                          },
                          "end": {
                            "row": 37,
                            "column": 14
                          },
                          "text": "if"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 37,
                            "column": 15
                          },
                          "end": {
                            "row": 38,
                            "column": 65
                          },
                          "text": "self._is_extra_source(asset, field,\n                                     self._augmented_sources_map)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 37,
                                "column": 15
                              },
                              "end": {
                                "row": 37,
                                "column": 36
                              },
                              "text": "self._is_extra_source",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 19
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 37,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 20
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 36
                                  },
                                  "text": "_is_extra_source"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 37,
                                "column": 36
                              },
                              "end": {
                                "row": 38,
                                "column": 65
                              },
                              "text": "(asset, field,\n                                     self._augmented_sources_map)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 37,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 37
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 42
                                  },
                                  "text": "asset"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 37,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 43
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 37,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 49
                                  },
                                  "text": "field"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 37,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 37,
                                    "column": 50
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 38,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 64
                                  },
                                  "text": "self._augmented_sources_map",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 38,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 41
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 38,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 42
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 38,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 38,
                                        "column": 64
                                      },
                                      "text": "_augmented_sources_map"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 38,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 65
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 38,
                            "column": 65
                          },
                          "end": {
                            "row": 38,
                            "column": 66
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 39,
                            "column": 16
                          },
                          "end": {
                            "row": 40,
                            "column": 64
                          },
                          "text": "spot_value = self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 39,
                                "column": 16
                              },
                              "end": {
                                "row": 40,
                                "column": 64
                              },
                              "text": "spot_value = self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 39,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 40,
                                    "column": 64
                                  },
                                  "text": "spot_value = self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 39,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 26
                                      },
                                      "text": "spot_value"
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 39,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 39,
                                        "column": 28
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 39,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 40,
                                        "column": 64
                                      },
                                      "text": "self.get_spot_value(asset, field, perspective_dt,\n                                                 data_frequency)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 39,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 39,
                                            "column": 48
                                          },
                                          "text": "self.get_spot_value",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 39,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 33
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 39,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 34
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 39,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 48
                                              },
                                              "text": "get_spot_value"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 39,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 40,
                                            "column": 64
                                          },
                                          "text": "(asset, field, perspective_dt,\n                                                 data_frequency)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 39,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 49
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 39,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 54
                                              },
                                              "text": "asset"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 39,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 55
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 39,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 61
                                              },
                                              "text": "field"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 39,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 62
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 39,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 77
                                              },
                                              "text": "perspective_dt"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 39,
                                                "column": 77
                                              },
                                              "end": {
                                                "row": 39,
                                                "column": 78
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 40,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 63
                                              },
                                              "text": "data_frequency"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 40,
                                                "column": 63
                                              },
                                              "end": {
                                                "row": 40,
                                                "column": 64
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start": {
                            "row": 41,
                            "column": 12
                          },
                          "end": {
                            "row": 43,
                            "column": 64
                          },
                          "text": "else:\n                spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)",
                          "children": [
                            {
                              "type": "else",
                              "start": {
                                "row": 41,
                                "column": 12
                              },
                              "end": {
                                "row": 41,
                                "column": 16
                              },
                              "text": "else"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 41,
                                "column": 16
                              },
                              "end": {
                                "row": 41,
                                "column": 17
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 42,
                                "column": 16
                              },
                              "end": {
                                "row": 43,
                                "column": 64
                              },
                              "text": "spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 42,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 64
                                  },
                                  "text": "spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 42,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 43,
                                        "column": 64
                                      },
                                      "text": "spot_value = self.get_spot_value(asset, field, dt,\n                                                 data_frequency)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 42,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 26
                                          },
                                          "text": "spot_value"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 42,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 42,
                                            "column": 28
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 42,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 43,
                                            "column": 64
                                          },
                                          "text": "self.get_spot_value(asset, field, dt,\n                                                 data_frequency)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 42,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 42,
                                                "column": 48
                                              },
                                              "text": "self.get_spot_value",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 33
                                                  },
                                                  "text": "self"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 34
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 34
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 48
                                                  },
                                                  "text": "get_spot_value"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 42,
                                                "column": 48
                                              },
                                              "end": {
                                                "row": 43,
                                                "column": 64
                                              },
                                              "text": "(asset, field, dt,\n                                                 data_frequency)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 49
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 54
                                                  },
                                                  "text": "asset"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 54
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 55
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 61
                                                  },
                                                  "text": "field"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 61
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 62
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 65
                                                  },
                                                  "text": "dt"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 42,
                                                    "column": 65
                                                  },
                                                  "end": {
                                                    "row": 42,
                                                    "column": 66
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 63
                                                  },
                                                  "text": "data_frequency"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 43,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 43,
                                                    "column": 64
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 45,
                "column": 8
              },
              "end": {
                "row": 47,
                "column": 31
              },
              "text": "if isinstance(asset, Equity):\n            ratio = self.get_adjustments(asset, field, dt, perspective_dt)[0]\n            spot_value *= ratio",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 45,
                    "column": 8
                  },
                  "end": {
                    "row": 45,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 45,
                    "column": 11
                  },
                  "end": {
                    "row": 45,
                    "column": 36
                  },
                  "text": "isinstance(asset, Equity)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 45,
                        "column": 11
                      },
                      "end": {
                        "row": 45,
                        "column": 21
                      },
                      "text": "isinstance"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 45,
                        "column": 21
                      },
                      "end": {
                        "row": 45,
                        "column": 36
                      },
                      "text": "(asset, Equity)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 45,
                            "column": 21
                          },
                          "end": {
                            "row": 45,
                            "column": 22
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 45,
                            "column": 22
                          },
                          "end": {
                            "row": 45,
                            "column": 27
                          },
                          "text": "asset"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 45,
                            "column": 27
                          },
                          "end": {
                            "row": 45,
                            "column": 28
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 45,
                            "column": 29
                          },
                          "end": {
                            "row": 45,
                            "column": 35
                          },
                          "text": "Equity"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 45,
                            "column": 35
                          },
                          "end": {
                            "row": 45,
                            "column": 36
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 45,
                    "column": 36
                  },
                  "end": {
                    "row": 45,
                    "column": 37
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 46,
                    "column": 12
                  },
                  "end": {
                    "row": 47,
                    "column": 31
                  },
                  "text": "ratio = self.get_adjustments(asset, field, dt, perspective_dt)[0]\n            spot_value *= ratio",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 46,
                        "column": 12
                      },
                      "end": {
                        "row": 46,
                        "column": 77
                      },
                      "text": "ratio = self.get_adjustments(asset, field, dt, perspective_dt)[0]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 46,
                            "column": 12
                          },
                          "end": {
                            "row": 46,
                            "column": 77
                          },
                          "text": "ratio = self.get_adjustments(asset, field, dt, perspective_dt)[0]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 46,
                                "column": 12
                              },
                              "end": {
                                "row": 46,
                                "column": 17
                              },
                              "text": "ratio"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 46,
                                "column": 18
                              },
                              "end": {
                                "row": 46,
                                "column": 19
                              },
                              "text": "="
                            },
                            {
                              "type": "subscript",
                              "start": {
                                "row": 46,
                                "column": 20
                              },
                              "end": {
                                "row": 46,
                                "column": 77
                              },
                              "text": "self.get_adjustments(asset, field, dt, perspective_dt)[0]",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 46,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 74
                                  },
                                  "text": "self.get_adjustments(asset, field, dt, perspective_dt)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 46,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 40
                                      },
                                      "text": "self.get_adjustments",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 24
                                          },
                                          "text": "self"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 46,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 25
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 40
                                          },
                                          "text": "get_adjustments"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 46,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 46,
                                        "column": 74
                                      },
                                      "text": "(asset, field, dt, perspective_dt)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 46,
                                            "column": 40
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 41
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 46
                                          },
                                          "text": "asset"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 46,
                                            "column": 46
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 47
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 53
                                          },
                                          "text": "field"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 46,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 54
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 55
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 57
                                          },
                                          "text": "dt"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 46,
                                            "column": 57
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 58
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 46,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 73
                                          },
                                          "text": "perspective_dt"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 46,
                                            "column": 73
                                          },
                                          "end": {
                                            "row": 46,
                                            "column": 74
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 46,
                                    "column": 74
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 75
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 46,
                                    "column": 75
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 76
                                  },
                                  "text": "0"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 46,
                                    "column": 76
                                  },
                                  "end": {
                                    "row": 46,
                                    "column": 77
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 47,
                        "column": 12
                      },
                      "end": {
                        "row": 47,
                        "column": 31
                      },
                      "text": "spot_value *= ratio",
                      "children": [
                        {
                          "type": "augmented_assignment",
                          "start": {
                            "row": 47,
                            "column": 12
                          },
                          "end": {
                            "row": 47,
                            "column": 31
                          },
                          "text": "spot_value *= ratio",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 47,
                                "column": 12
                              },
                              "end": {
                                "row": 47,
                                "column": 22
                              },
                              "text": "spot_value"
                            },
                            {
                              "type": "*=",
                              "start": {
                                "row": 47,
                                "column": 23
                              },
                              "end": {
                                "row": 47,
                                "column": 25
                              },
                              "text": "*="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 47,
                                "column": 26
                              },
                              "end": {
                                "row": 47,
                                "column": 31
                              },
                              "text": "ratio"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 49,
                "column": 8
              },
              "end": {
                "row": 49,
                "column": 25
              },
              "text": "return spot_value",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 49,
                    "column": 8
                  },
                  "end": {
                    "row": 49,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 49,
                    "column": 15
                  },
                  "end": {
                    "row": 49,
                    "column": 25
                  },
                  "text": "spot_value"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}