{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 45,
    "column": 42
  },
  "text": "def hybrid_forward(self, F, inputs, mem_value, mask=None, mem_mask=None):  #pylint: disable=unused-argument\n        #  pylint: disable=arguments-differ\n        \"\"\"Transformer Decoder Attention Cell.\n\n        Parameters\n        ----------\n        inputs : Symbol or NDArray\n            Input sequence. Shape (batch_size, length, C_in)\n        mem_value : Symbol or NDArrays\n            Memory value, i.e. output of the encoder. Shape (batch_size, mem_length, C_in)\n        mask : Symbol or NDArray or None\n            Mask for inputs. Shape (batch_size, length, length)\n        mem_mask : Symbol or NDArray or None\n            Mask for mem_value. Shape (batch_size, length, mem_length)\n\n        Returns\n        -------\n        decoder_cell_outputs: list\n            Outputs of the decoder cell. Contains:\n\n            - outputs of the transformer decoder cell. Shape (batch_size, length, C_out)\n            - additional_outputs of all the transformer decoder cell\n        \"\"\"\n        outputs, attention_in_outputs =\\\n            self.attention_cell_in(inputs, inputs, inputs, mask)\n        outputs = self.proj_in(outputs)\n        if self._dropout:\n            outputs = self.dropout_layer(outputs)\n        if self._use_residual:\n            outputs = outputs + inputs\n        outputs = self.layer_norm_in(outputs)\n        inputs = outputs\n        outputs, attention_inter_outputs = \\\n            self.attention_cell_inter(inputs, mem_value, mem_value, mem_mask)\n        outputs = self.proj_inter(outputs)\n        if self._dropout:\n            outputs = self.dropout_layer(outputs)\n        if self._use_residual:\n            outputs = outputs + inputs\n        outputs = self.layer_norm_inter(outputs)\n        outputs = self.ffn(outputs)\n        additional_outputs = []\n        if self._output_attention:\n            additional_outputs.append(attention_in_outputs)\n            additional_outputs.append(attention_inter_outputs)\n        return outputs, additional_outputs",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 45,
        "column": 42
      },
      "text": "def hybrid_forward(self, F, inputs, mem_value, mask=None, mem_mask=None):  #pylint: disable=unused-argument\n        #  pylint: disable=arguments-differ\n        \"\"\"Transformer Decoder Attention Cell.\n\n        Parameters\n        ----------\n        inputs : Symbol or NDArray\n            Input sequence. Shape (batch_size, length, C_in)\n        mem_value : Symbol or NDArrays\n            Memory value, i.e. output of the encoder. Shape (batch_size, mem_length, C_in)\n        mask : Symbol or NDArray or None\n            Mask for inputs. Shape (batch_size, length, length)\n        mem_mask : Symbol or NDArray or None\n            Mask for mem_value. Shape (batch_size, length, mem_length)\n\n        Returns\n        -------\n        decoder_cell_outputs: list\n            Outputs of the decoder cell. Contains:\n\n            - outputs of the transformer decoder cell. Shape (batch_size, length, C_out)\n            - additional_outputs of all the transformer decoder cell\n        \"\"\"\n        outputs, attention_in_outputs =\\\n            self.attention_cell_in(inputs, inputs, inputs, mask)\n        outputs = self.proj_in(outputs)\n        if self._dropout:\n            outputs = self.dropout_layer(outputs)\n        if self._use_residual:\n            outputs = outputs + inputs\n        outputs = self.layer_norm_in(outputs)\n        inputs = outputs\n        outputs, attention_inter_outputs = \\\n            self.attention_cell_inter(inputs, mem_value, mem_value, mem_mask)\n        outputs = self.proj_inter(outputs)\n        if self._dropout:\n            outputs = self.dropout_layer(outputs)\n        if self._use_residual:\n            outputs = outputs + inputs\n        outputs = self.layer_norm_inter(outputs)\n        outputs = self.ffn(outputs)\n        additional_outputs = []\n        if self._output_attention:\n            additional_outputs.append(attention_in_outputs)\n            additional_outputs.append(attention_inter_outputs)\n        return outputs, additional_outputs",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 18
          },
          "text": "hybrid_forward"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 18
          },
          "end": {
            "row": 0,
            "column": 72
          },
          "text": "(self, F, inputs, mem_value, mask=None, mem_mask=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 19
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 25
              },
              "end": {
                "row": 0,
                "column": 26
              },
              "text": "F"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 27
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": "inputs"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 45
              },
              "text": "mem_value"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 47
              },
              "end": {
                "row": 0,
                "column": 56
              },
              "text": "mask=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 47
                  },
                  "end": {
                    "row": 0,
                    "column": 51
                  },
                  "text": "mask"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 51
                  },
                  "end": {
                    "row": 0,
                    "column": 52
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 52
                  },
                  "end": {
                    "row": 0,
                    "column": 56
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 56
              },
              "end": {
                "row": 0,
                "column": 57
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 58
              },
              "end": {
                "row": 0,
                "column": 71
              },
              "text": "mem_mask=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 58
                  },
                  "end": {
                    "row": 0,
                    "column": 66
                  },
                  "text": "mem_mask"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 66
                  },
                  "end": {
                    "row": 0,
                    "column": 67
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 67
                  },
                  "end": {
                    "row": 0,
                    "column": 71
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 71
              },
              "end": {
                "row": 0,
                "column": 72
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 72
          },
          "end": {
            "row": 0,
            "column": 73
          },
          "text": ":"
        },
        {
          "type": "comment",
          "start": {
            "row": 0,
            "column": 75
          },
          "end": {
            "row": 0,
            "column": 107
          },
          "text": "#pylint: disable=unused-argument"
        },
        {
          "type": "comment",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 1,
            "column": 43
          },
          "text": "#  pylint: disable=arguments-differ"
        },
        {
          "type": "block",
          "start": {
            "row": 2,
            "column": 8
          },
          "end": {
            "row": 45,
            "column": 42
          },
          "text": "\"\"\"Transformer Decoder Attention Cell.\n\n        Parameters\n        ----------\n        inputs : Symbol or NDArray\n            Input sequence. Shape (batch_size, length, C_in)\n        mem_value : Symbol or NDArrays\n            Memory value, i.e. output of the encoder. Shape (batch_size, mem_length, C_in)\n        mask : Symbol or NDArray or None\n            Mask for inputs. Shape (batch_size, length, length)\n        mem_mask : Symbol or NDArray or None\n            Mask for mem_value. Shape (batch_size, length, mem_length)\n\n        Returns\n        -------\n        decoder_cell_outputs: list\n            Outputs of the decoder cell. Contains:\n\n            - outputs of the transformer decoder cell. Shape (batch_size, length, C_out)\n            - additional_outputs of all the transformer decoder cell\n        \"\"\"\n        outputs, attention_in_outputs =\\\n            self.attention_cell_in(inputs, inputs, inputs, mask)\n        outputs = self.proj_in(outputs)\n        if self._dropout:\n            outputs = self.dropout_layer(outputs)\n        if self._use_residual:\n            outputs = outputs + inputs\n        outputs = self.layer_norm_in(outputs)\n        inputs = outputs\n        outputs, attention_inter_outputs = \\\n            self.attention_cell_inter(inputs, mem_value, mem_value, mem_mask)\n        outputs = self.proj_inter(outputs)\n        if self._dropout:\n            outputs = self.dropout_layer(outputs)\n        if self._use_residual:\n            outputs = outputs + inputs\n        outputs = self.layer_norm_inter(outputs)\n        outputs = self.ffn(outputs)\n        additional_outputs = []\n        if self._output_attention:\n            additional_outputs.append(attention_in_outputs)\n            additional_outputs.append(attention_inter_outputs)\n        return outputs, additional_outputs",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 2,
                "column": 8
              },
              "end": {
                "row": 22,
                "column": 11
              },
              "text": "\"\"\"Transformer Decoder Attention Cell.\n\n        Parameters\n        ----------\n        inputs : Symbol or NDArray\n            Input sequence. Shape (batch_size, length, C_in)\n        mem_value : Symbol or NDArrays\n            Memory value, i.e. output of the encoder. Shape (batch_size, mem_length, C_in)\n        mask : Symbol or NDArray or None\n            Mask for inputs. Shape (batch_size, length, length)\n        mem_mask : Symbol or NDArray or None\n            Mask for mem_value. Shape (batch_size, length, mem_length)\n\n        Returns\n        -------\n        decoder_cell_outputs: list\n            Outputs of the decoder cell. Contains:\n\n            - outputs of the transformer decoder cell. Shape (batch_size, length, C_out)\n            - additional_outputs of all the transformer decoder cell\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 8
                  },
                  "end": {
                    "row": 22,
                    "column": 11
                  },
                  "text": "\"\"\"Transformer Decoder Attention Cell.\n\n        Parameters\n        ----------\n        inputs : Symbol or NDArray\n            Input sequence. Shape (batch_size, length, C_in)\n        mem_value : Symbol or NDArrays\n            Memory value, i.e. output of the encoder. Shape (batch_size, mem_length, C_in)\n        mask : Symbol or NDArray or None\n            Mask for inputs. Shape (batch_size, length, length)\n        mem_mask : Symbol or NDArray or None\n            Mask for mem_value. Shape (batch_size, length, mem_length)\n\n        Returns\n        -------\n        decoder_cell_outputs: list\n            Outputs of the decoder cell. Contains:\n\n            - outputs of the transformer decoder cell. Shape (batch_size, length, C_out)\n            - additional_outputs of all the transformer decoder cell\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 8
                      },
                      "end": {
                        "row": 2,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 2,
                        "column": 11
                      },
                      "end": {
                        "row": 22,
                        "column": 8
                      },
                      "text": "Transformer Decoder Attention Cell.\n\n        Parameters\n        ----------\n        inputs : Symbol or NDArray\n            Input sequence. Shape (batch_size, length, C_in)\n        mem_value : Symbol or NDArrays\n            Memory value, i.e. output of the encoder. Shape (batch_size, mem_length, C_in)\n        mask : Symbol or NDArray or None\n            Mask for inputs. Shape (batch_size, length, length)\n        mem_mask : Symbol or NDArray or None\n            Mask for mem_value. Shape (batch_size, length, mem_length)\n\n        Returns\n        -------\n        decoder_cell_outputs: list\n            Outputs of the decoder cell. Contains:\n\n            - outputs of the transformer decoder cell. Shape (batch_size, length, C_out)\n            - additional_outputs of all the transformer decoder cell\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 22,
                        "column": 8
                      },
                      "end": {
                        "row": 22,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 23,
                "column": 8
              },
              "end": {
                "row": 24,
                "column": 64
              },
              "text": "outputs, attention_in_outputs =\\\n            self.attention_cell_in(inputs, inputs, inputs, mask)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 23,
                    "column": 8
                  },
                  "end": {
                    "row": 24,
                    "column": 64
                  },
                  "text": "outputs, attention_in_outputs =\\\n            self.attention_cell_in(inputs, inputs, inputs, mask)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 23,
                        "column": 8
                      },
                      "end": {
                        "row": 23,
                        "column": 37
                      },
                      "text": "outputs, attention_in_outputs",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 8
                          },
                          "end": {
                            "row": 23,
                            "column": 15
                          },
                          "text": "outputs"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 23,
                            "column": 15
                          },
                          "end": {
                            "row": 23,
                            "column": 16
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 23,
                            "column": 17
                          },
                          "end": {
                            "row": 23,
                            "column": 37
                          },
                          "text": "attention_in_outputs"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 23,
                        "column": 38
                      },
                      "end": {
                        "row": 23,
                        "column": 39
                      },
                      "text": "="
                    },
                    {
                      "type": "line_continuation",
                      "start": {
                        "row": 23,
                        "column": 39
                      },
                      "end": {
                        "row": 24,
                        "column": 0
                      },
                      "text": "\\\n"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 24,
                        "column": 12
                      },
                      "end": {
                        "row": 24,
                        "column": 64
                      },
                      "text": "self.attention_cell_in(inputs, inputs, inputs, mask)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 24,
                            "column": 12
                          },
                          "end": {
                            "row": 24,
                            "column": 34
                          },
                          "text": "self.attention_cell_in",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 12
                              },
                              "end": {
                                "row": 24,
                                "column": 16
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 24,
                                "column": 16
                              },
                              "end": {
                                "row": 24,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 17
                              },
                              "end": {
                                "row": 24,
                                "column": 34
                              },
                              "text": "attention_cell_in"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 24,
                            "column": 34
                          },
                          "end": {
                            "row": 24,
                            "column": 64
                          },
                          "text": "(inputs, inputs, inputs, mask)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 24,
                                "column": 34
                              },
                              "end": {
                                "row": 24,
                                "column": 35
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 35
                              },
                              "end": {
                                "row": 24,
                                "column": 41
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 24,
                                "column": 41
                              },
                              "end": {
                                "row": 24,
                                "column": 42
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 43
                              },
                              "end": {
                                "row": 24,
                                "column": 49
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 24,
                                "column": 49
                              },
                              "end": {
                                "row": 24,
                                "column": 50
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 51
                              },
                              "end": {
                                "row": 24,
                                "column": 57
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 24,
                                "column": 57
                              },
                              "end": {
                                "row": 24,
                                "column": 58
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 59
                              },
                              "end": {
                                "row": 24,
                                "column": 63
                              },
                              "text": "mask"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 24,
                                "column": 63
                              },
                              "end": {
                                "row": 24,
                                "column": 64
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 25,
                "column": 8
              },
              "end": {
                "row": 25,
                "column": 39
              },
              "text": "outputs = self.proj_in(outputs)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 25,
                    "column": 8
                  },
                  "end": {
                    "row": 25,
                    "column": 39
                  },
                  "text": "outputs = self.proj_in(outputs)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 25,
                        "column": 8
                      },
                      "end": {
                        "row": 25,
                        "column": 15
                      },
                      "text": "outputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 25,
                        "column": 16
                      },
                      "end": {
                        "row": 25,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 25,
                        "column": 18
                      },
                      "end": {
                        "row": 25,
                        "column": 39
                      },
                      "text": "self.proj_in(outputs)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 25,
                            "column": 18
                          },
                          "end": {
                            "row": 25,
                            "column": 30
                          },
                          "text": "self.proj_in",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 18
                              },
                              "end": {
                                "row": 25,
                                "column": 22
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 25,
                                "column": 22
                              },
                              "end": {
                                "row": 25,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 23
                              },
                              "end": {
                                "row": 25,
                                "column": 30
                              },
                              "text": "proj_in"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 25,
                            "column": 30
                          },
                          "end": {
                            "row": 25,
                            "column": 39
                          },
                          "text": "(outputs)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 25,
                                "column": 30
                              },
                              "end": {
                                "row": 25,
                                "column": 31
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 25,
                                "column": 31
                              },
                              "end": {
                                "row": 25,
                                "column": 38
                              },
                              "text": "outputs"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 25,
                                "column": 38
                              },
                              "end": {
                                "row": 25,
                                "column": 39
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 26,
                "column": 8
              },
              "end": {
                "row": 27,
                "column": 49
              },
              "text": "if self._dropout:\n            outputs = self.dropout_layer(outputs)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 26,
                    "column": 8
                  },
                  "end": {
                    "row": 26,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 26,
                    "column": 11
                  },
                  "end": {
                    "row": 26,
                    "column": 24
                  },
                  "text": "self._dropout",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 26,
                        "column": 11
                      },
                      "end": {
                        "row": 26,
                        "column": 15
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 26,
                        "column": 15
                      },
                      "end": {
                        "row": 26,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 26,
                        "column": 16
                      },
                      "end": {
                        "row": 26,
                        "column": 24
                      },
                      "text": "_dropout"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 26,
                    "column": 24
                  },
                  "end": {
                    "row": 26,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 27,
                    "column": 12
                  },
                  "end": {
                    "row": 27,
                    "column": 49
                  },
                  "text": "outputs = self.dropout_layer(outputs)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 27,
                        "column": 12
                      },
                      "end": {
                        "row": 27,
                        "column": 49
                      },
                      "text": "outputs = self.dropout_layer(outputs)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 27,
                            "column": 12
                          },
                          "end": {
                            "row": 27,
                            "column": 49
                          },
                          "text": "outputs = self.dropout_layer(outputs)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 27,
                                "column": 12
                              },
                              "end": {
                                "row": 27,
                                "column": 19
                              },
                              "text": "outputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 27,
                                "column": 20
                              },
                              "end": {
                                "row": 27,
                                "column": 21
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 27,
                                "column": 22
                              },
                              "end": {
                                "row": 27,
                                "column": 49
                              },
                              "text": "self.dropout_layer(outputs)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 27,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 40
                                  },
                                  "text": "self.dropout_layer",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 26
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 27,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 27
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 40
                                      },
                                      "text": "dropout_layer"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 27,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 27,
                                    "column": 49
                                  },
                                  "text": "(outputs)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 27,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 41
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 27,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 48
                                      },
                                      "text": "outputs"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 27,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 27,
                                        "column": 49
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 28,
                "column": 8
              },
              "end": {
                "row": 29,
                "column": 38
              },
              "text": "if self._use_residual:\n            outputs = outputs + inputs",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 28,
                    "column": 8
                  },
                  "end": {
                    "row": 28,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 28,
                    "column": 11
                  },
                  "end": {
                    "row": 28,
                    "column": 29
                  },
                  "text": "self._use_residual",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 28,
                        "column": 11
                      },
                      "end": {
                        "row": 28,
                        "column": 15
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 28,
                        "column": 15
                      },
                      "end": {
                        "row": 28,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 28,
                        "column": 16
                      },
                      "end": {
                        "row": 28,
                        "column": 29
                      },
                      "text": "_use_residual"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 28,
                    "column": 29
                  },
                  "end": {
                    "row": 28,
                    "column": 30
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 29,
                    "column": 12
                  },
                  "end": {
                    "row": 29,
                    "column": 38
                  },
                  "text": "outputs = outputs + inputs",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 29,
                        "column": 12
                      },
                      "end": {
                        "row": 29,
                        "column": 38
                      },
                      "text": "outputs = outputs + inputs",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 29,
                            "column": 12
                          },
                          "end": {
                            "row": 29,
                            "column": 38
                          },
                          "text": "outputs = outputs + inputs",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 29,
                                "column": 12
                              },
                              "end": {
                                "row": 29,
                                "column": 19
                              },
                              "text": "outputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 29,
                                "column": 20
                              },
                              "end": {
                                "row": 29,
                                "column": 21
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 29,
                                "column": 22
                              },
                              "end": {
                                "row": 29,
                                "column": 38
                              },
                              "text": "outputs + inputs",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 29
                                  },
                                  "text": "outputs"
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 29,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 31
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 29,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 29,
                                    "column": 38
                                  },
                                  "text": "inputs"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 30,
                "column": 8
              },
              "end": {
                "row": 30,
                "column": 45
              },
              "text": "outputs = self.layer_norm_in(outputs)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 30,
                    "column": 8
                  },
                  "end": {
                    "row": 30,
                    "column": 45
                  },
                  "text": "outputs = self.layer_norm_in(outputs)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 30,
                        "column": 8
                      },
                      "end": {
                        "row": 30,
                        "column": 15
                      },
                      "text": "outputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 30,
                        "column": 16
                      },
                      "end": {
                        "row": 30,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 30,
                        "column": 18
                      },
                      "end": {
                        "row": 30,
                        "column": 45
                      },
                      "text": "self.layer_norm_in(outputs)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 30,
                            "column": 18
                          },
                          "end": {
                            "row": 30,
                            "column": 36
                          },
                          "text": "self.layer_norm_in",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 18
                              },
                              "end": {
                                "row": 30,
                                "column": 22
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 30,
                                "column": 22
                              },
                              "end": {
                                "row": 30,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 23
                              },
                              "end": {
                                "row": 30,
                                "column": 36
                              },
                              "text": "layer_norm_in"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 30,
                            "column": 36
                          },
                          "end": {
                            "row": 30,
                            "column": 45
                          },
                          "text": "(outputs)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 30,
                                "column": 36
                              },
                              "end": {
                                "row": 30,
                                "column": 37
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 30,
                                "column": 37
                              },
                              "end": {
                                "row": 30,
                                "column": 44
                              },
                              "text": "outputs"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 30,
                                "column": 44
                              },
                              "end": {
                                "row": 30,
                                "column": 45
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 31,
                "column": 8
              },
              "end": {
                "row": 31,
                "column": 24
              },
              "text": "inputs = outputs",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 31,
                    "column": 8
                  },
                  "end": {
                    "row": 31,
                    "column": 24
                  },
                  "text": "inputs = outputs",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 31,
                        "column": 8
                      },
                      "end": {
                        "row": 31,
                        "column": 14
                      },
                      "text": "inputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 31,
                        "column": 15
                      },
                      "end": {
                        "row": 31,
                        "column": 16
                      },
                      "text": "="
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 31,
                        "column": 17
                      },
                      "end": {
                        "row": 31,
                        "column": 24
                      },
                      "text": "outputs"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 32,
                "column": 8
              },
              "end": {
                "row": 33,
                "column": 77
              },
              "text": "outputs, attention_inter_outputs = \\\n            self.attention_cell_inter(inputs, mem_value, mem_value, mem_mask)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 32,
                    "column": 8
                  },
                  "end": {
                    "row": 33,
                    "column": 77
                  },
                  "text": "outputs, attention_inter_outputs = \\\n            self.attention_cell_inter(inputs, mem_value, mem_value, mem_mask)",
                  "children": [
                    {
                      "type": "pattern_list",
                      "start": {
                        "row": 32,
                        "column": 8
                      },
                      "end": {
                        "row": 32,
                        "column": 40
                      },
                      "text": "outputs, attention_inter_outputs",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 32,
                            "column": 8
                          },
                          "end": {
                            "row": 32,
                            "column": 15
                          },
                          "text": "outputs"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 32,
                            "column": 15
                          },
                          "end": {
                            "row": 32,
                            "column": 16
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 32,
                            "column": 17
                          },
                          "end": {
                            "row": 32,
                            "column": 40
                          },
                          "text": "attention_inter_outputs"
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 32,
                        "column": 41
                      },
                      "end": {
                        "row": 32,
                        "column": 42
                      },
                      "text": "="
                    },
                    {
                      "type": "line_continuation",
                      "start": {
                        "row": 32,
                        "column": 43
                      },
                      "end": {
                        "row": 33,
                        "column": 0
                      },
                      "text": "\\\n"
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 33,
                        "column": 12
                      },
                      "end": {
                        "row": 33,
                        "column": 77
                      },
                      "text": "self.attention_cell_inter(inputs, mem_value, mem_value, mem_mask)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 33,
                            "column": 12
                          },
                          "end": {
                            "row": 33,
                            "column": 37
                          },
                          "text": "self.attention_cell_inter",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 12
                              },
                              "end": {
                                "row": 33,
                                "column": 16
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 33,
                                "column": 16
                              },
                              "end": {
                                "row": 33,
                                "column": 17
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 17
                              },
                              "end": {
                                "row": 33,
                                "column": 37
                              },
                              "text": "attention_cell_inter"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 33,
                            "column": 37
                          },
                          "end": {
                            "row": 33,
                            "column": 77
                          },
                          "text": "(inputs, mem_value, mem_value, mem_mask)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 33,
                                "column": 37
                              },
                              "end": {
                                "row": 33,
                                "column": 38
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 38
                              },
                              "end": {
                                "row": 33,
                                "column": 44
                              },
                              "text": "inputs"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 33,
                                "column": 44
                              },
                              "end": {
                                "row": 33,
                                "column": 45
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 46
                              },
                              "end": {
                                "row": 33,
                                "column": 55
                              },
                              "text": "mem_value"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 33,
                                "column": 55
                              },
                              "end": {
                                "row": 33,
                                "column": 56
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 57
                              },
                              "end": {
                                "row": 33,
                                "column": 66
                              },
                              "text": "mem_value"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 33,
                                "column": 66
                              },
                              "end": {
                                "row": 33,
                                "column": 67
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 33,
                                "column": 68
                              },
                              "end": {
                                "row": 33,
                                "column": 76
                              },
                              "text": "mem_mask"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 33,
                                "column": 76
                              },
                              "end": {
                                "row": 33,
                                "column": 77
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 34,
                "column": 8
              },
              "end": {
                "row": 34,
                "column": 42
              },
              "text": "outputs = self.proj_inter(outputs)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 34,
                    "column": 8
                  },
                  "end": {
                    "row": 34,
                    "column": 42
                  },
                  "text": "outputs = self.proj_inter(outputs)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 34,
                        "column": 8
                      },
                      "end": {
                        "row": 34,
                        "column": 15
                      },
                      "text": "outputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 34,
                        "column": 16
                      },
                      "end": {
                        "row": 34,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 34,
                        "column": 18
                      },
                      "end": {
                        "row": 34,
                        "column": 42
                      },
                      "text": "self.proj_inter(outputs)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 34,
                            "column": 18
                          },
                          "end": {
                            "row": 34,
                            "column": 33
                          },
                          "text": "self.proj_inter",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 18
                              },
                              "end": {
                                "row": 34,
                                "column": 22
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 34,
                                "column": 22
                              },
                              "end": {
                                "row": 34,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 23
                              },
                              "end": {
                                "row": 34,
                                "column": 33
                              },
                              "text": "proj_inter"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 34,
                            "column": 33
                          },
                          "end": {
                            "row": 34,
                            "column": 42
                          },
                          "text": "(outputs)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 34,
                                "column": 33
                              },
                              "end": {
                                "row": 34,
                                "column": 34
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 34,
                                "column": 34
                              },
                              "end": {
                                "row": 34,
                                "column": 41
                              },
                              "text": "outputs"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 34,
                                "column": 41
                              },
                              "end": {
                                "row": 34,
                                "column": 42
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 35,
                "column": 8
              },
              "end": {
                "row": 36,
                "column": 49
              },
              "text": "if self._dropout:\n            outputs = self.dropout_layer(outputs)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 35,
                    "column": 8
                  },
                  "end": {
                    "row": 35,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 35,
                    "column": 11
                  },
                  "end": {
                    "row": 35,
                    "column": 24
                  },
                  "text": "self._dropout",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 35,
                        "column": 11
                      },
                      "end": {
                        "row": 35,
                        "column": 15
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 35,
                        "column": 15
                      },
                      "end": {
                        "row": 35,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 35,
                        "column": 16
                      },
                      "end": {
                        "row": 35,
                        "column": 24
                      },
                      "text": "_dropout"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 35,
                    "column": 24
                  },
                  "end": {
                    "row": 35,
                    "column": 25
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 36,
                    "column": 12
                  },
                  "end": {
                    "row": 36,
                    "column": 49
                  },
                  "text": "outputs = self.dropout_layer(outputs)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 36,
                        "column": 12
                      },
                      "end": {
                        "row": 36,
                        "column": 49
                      },
                      "text": "outputs = self.dropout_layer(outputs)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 36,
                            "column": 12
                          },
                          "end": {
                            "row": 36,
                            "column": 49
                          },
                          "text": "outputs = self.dropout_layer(outputs)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 12
                              },
                              "end": {
                                "row": 36,
                                "column": 19
                              },
                              "text": "outputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 36,
                                "column": 20
                              },
                              "end": {
                                "row": 36,
                                "column": 21
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 36,
                                "column": 22
                              },
                              "end": {
                                "row": 36,
                                "column": 49
                              },
                              "text": "self.dropout_layer(outputs)",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 36,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 40
                                  },
                                  "text": "self.dropout_layer",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 36,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 26
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 36,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 27
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 36,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 40
                                      },
                                      "text": "dropout_layer"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 36,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 36,
                                    "column": 49
                                  },
                                  "text": "(outputs)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 36,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 41
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 36,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 48
                                      },
                                      "text": "outputs"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 36,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 49
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 37,
                "column": 8
              },
              "end": {
                "row": 38,
                "column": 38
              },
              "text": "if self._use_residual:\n            outputs = outputs + inputs",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 37,
                    "column": 8
                  },
                  "end": {
                    "row": 37,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 37,
                    "column": 11
                  },
                  "end": {
                    "row": 37,
                    "column": 29
                  },
                  "text": "self._use_residual",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 37,
                        "column": 11
                      },
                      "end": {
                        "row": 37,
                        "column": 15
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 37,
                        "column": 15
                      },
                      "end": {
                        "row": 37,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 37,
                        "column": 16
                      },
                      "end": {
                        "row": 37,
                        "column": 29
                      },
                      "text": "_use_residual"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 37,
                    "column": 29
                  },
                  "end": {
                    "row": 37,
                    "column": 30
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 38,
                    "column": 12
                  },
                  "end": {
                    "row": 38,
                    "column": 38
                  },
                  "text": "outputs = outputs + inputs",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 38,
                        "column": 12
                      },
                      "end": {
                        "row": 38,
                        "column": 38
                      },
                      "text": "outputs = outputs + inputs",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 38,
                            "column": 12
                          },
                          "end": {
                            "row": 38,
                            "column": 38
                          },
                          "text": "outputs = outputs + inputs",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 12
                              },
                              "end": {
                                "row": 38,
                                "column": 19
                              },
                              "text": "outputs"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 38,
                                "column": 20
                              },
                              "end": {
                                "row": 38,
                                "column": 21
                              },
                              "text": "="
                            },
                            {
                              "type": "binary_operator",
                              "start": {
                                "row": 38,
                                "column": 22
                              },
                              "end": {
                                "row": 38,
                                "column": 38
                              },
                              "text": "outputs + inputs",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 29
                                  },
                                  "text": "outputs"
                                },
                                {
                                  "type": "+",
                                  "start": {
                                    "row": 38,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 31
                                  },
                                  "text": "+"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 38,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 38,
                                    "column": 38
                                  },
                                  "text": "inputs"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 39,
                "column": 8
              },
              "end": {
                "row": 39,
                "column": 48
              },
              "text": "outputs = self.layer_norm_inter(outputs)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 39,
                    "column": 8
                  },
                  "end": {
                    "row": 39,
                    "column": 48
                  },
                  "text": "outputs = self.layer_norm_inter(outputs)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 39,
                        "column": 8
                      },
                      "end": {
                        "row": 39,
                        "column": 15
                      },
                      "text": "outputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 39,
                        "column": 16
                      },
                      "end": {
                        "row": 39,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 39,
                        "column": 18
                      },
                      "end": {
                        "row": 39,
                        "column": 48
                      },
                      "text": "self.layer_norm_inter(outputs)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 39,
                            "column": 18
                          },
                          "end": {
                            "row": 39,
                            "column": 39
                          },
                          "text": "self.layer_norm_inter",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 18
                              },
                              "end": {
                                "row": 39,
                                "column": 22
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 39,
                                "column": 22
                              },
                              "end": {
                                "row": 39,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 23
                              },
                              "end": {
                                "row": 39,
                                "column": 39
                              },
                              "text": "layer_norm_inter"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 39,
                            "column": 39
                          },
                          "end": {
                            "row": 39,
                            "column": 48
                          },
                          "text": "(outputs)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 39,
                                "column": 39
                              },
                              "end": {
                                "row": 39,
                                "column": 40
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 40
                              },
                              "end": {
                                "row": 39,
                                "column": 47
                              },
                              "text": "outputs"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 39,
                                "column": 47
                              },
                              "end": {
                                "row": 39,
                                "column": 48
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 40,
                "column": 8
              },
              "end": {
                "row": 40,
                "column": 35
              },
              "text": "outputs = self.ffn(outputs)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 40,
                    "column": 8
                  },
                  "end": {
                    "row": 40,
                    "column": 35
                  },
                  "text": "outputs = self.ffn(outputs)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 40,
                        "column": 8
                      },
                      "end": {
                        "row": 40,
                        "column": 15
                      },
                      "text": "outputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 40,
                        "column": 16
                      },
                      "end": {
                        "row": 40,
                        "column": 17
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 40,
                        "column": 18
                      },
                      "end": {
                        "row": 40,
                        "column": 35
                      },
                      "text": "self.ffn(outputs)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 40,
                            "column": 18
                          },
                          "end": {
                            "row": 40,
                            "column": 26
                          },
                          "text": "self.ffn",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 18
                              },
                              "end": {
                                "row": 40,
                                "column": 22
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 40,
                                "column": 22
                              },
                              "end": {
                                "row": 40,
                                "column": 23
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 23
                              },
                              "end": {
                                "row": 40,
                                "column": 26
                              },
                              "text": "ffn"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 40,
                            "column": 26
                          },
                          "end": {
                            "row": 40,
                            "column": 35
                          },
                          "text": "(outputs)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 40,
                                "column": 26
                              },
                              "end": {
                                "row": 40,
                                "column": 27
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 40,
                                "column": 27
                              },
                              "end": {
                                "row": 40,
                                "column": 34
                              },
                              "text": "outputs"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 40,
                                "column": 34
                              },
                              "end": {
                                "row": 40,
                                "column": 35
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 41,
                "column": 8
              },
              "end": {
                "row": 41,
                "column": 31
              },
              "text": "additional_outputs = []",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 41,
                    "column": 8
                  },
                  "end": {
                    "row": 41,
                    "column": 31
                  },
                  "text": "additional_outputs = []",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 41,
                        "column": 8
                      },
                      "end": {
                        "row": 41,
                        "column": 26
                      },
                      "text": "additional_outputs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 41,
                        "column": 27
                      },
                      "end": {
                        "row": 41,
                        "column": 28
                      },
                      "text": "="
                    },
                    {
                      "type": "list",
                      "start": {
                        "row": 41,
                        "column": 29
                      },
                      "end": {
                        "row": 41,
                        "column": 31
                      },
                      "text": "[]",
                      "children": [
                        {
                          "type": "[",
                          "start": {
                            "row": 41,
                            "column": 29
                          },
                          "end": {
                            "row": 41,
                            "column": 30
                          },
                          "text": "["
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 41,
                            "column": 30
                          },
                          "end": {
                            "row": 41,
                            "column": 31
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 42,
                "column": 8
              },
              "end": {
                "row": 44,
                "column": 62
              },
              "text": "if self._output_attention:\n            additional_outputs.append(attention_in_outputs)\n            additional_outputs.append(attention_inter_outputs)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 42,
                    "column": 8
                  },
                  "end": {
                    "row": 42,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 42,
                    "column": 11
                  },
                  "end": {
                    "row": 42,
                    "column": 33
                  },
                  "text": "self._output_attention",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 42,
                        "column": 11
                      },
                      "end": {
                        "row": 42,
                        "column": 15
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 42,
                        "column": 15
                      },
                      "end": {
                        "row": 42,
                        "column": 16
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 42,
                        "column": 16
                      },
                      "end": {
                        "row": 42,
                        "column": 33
                      },
                      "text": "_output_attention"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 42,
                    "column": 33
                  },
                  "end": {
                    "row": 42,
                    "column": 34
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 43,
                    "column": 12
                  },
                  "end": {
                    "row": 44,
                    "column": 62
                  },
                  "text": "additional_outputs.append(attention_in_outputs)\n            additional_outputs.append(attention_inter_outputs)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 43,
                        "column": 12
                      },
                      "end": {
                        "row": 43,
                        "column": 59
                      },
                      "text": "additional_outputs.append(attention_in_outputs)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 43,
                            "column": 12
                          },
                          "end": {
                            "row": 43,
                            "column": 59
                          },
                          "text": "additional_outputs.append(attention_in_outputs)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 43,
                                "column": 12
                              },
                              "end": {
                                "row": 43,
                                "column": 37
                              },
                              "text": "additional_outputs.append",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 43,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 30
                                  },
                                  "text": "additional_outputs"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 43,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 31
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 43,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 37
                                  },
                                  "text": "append"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 43,
                                "column": 37
                              },
                              "end": {
                                "row": 43,
                                "column": 59
                              },
                              "text": "(attention_in_outputs)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 43,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 38
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 43,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 58
                                  },
                                  "text": "attention_in_outputs"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 43,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 43,
                                    "column": 59
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 44,
                        "column": 12
                      },
                      "end": {
                        "row": 44,
                        "column": 62
                      },
                      "text": "additional_outputs.append(attention_inter_outputs)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 44,
                            "column": 12
                          },
                          "end": {
                            "row": 44,
                            "column": 62
                          },
                          "text": "additional_outputs.append(attention_inter_outputs)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 44,
                                "column": 12
                              },
                              "end": {
                                "row": 44,
                                "column": 37
                              },
                              "text": "additional_outputs.append",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 44,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 30
                                  },
                                  "text": "additional_outputs"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 44,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 31
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 44,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 37
                                  },
                                  "text": "append"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 44,
                                "column": 37
                              },
                              "end": {
                                "row": 44,
                                "column": 62
                              },
                              "text": "(attention_inter_outputs)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 44,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 38
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 44,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 61
                                  },
                                  "text": "attention_inter_outputs"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 44,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 44,
                                    "column": 62
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 45,
                "column": 8
              },
              "end": {
                "row": 45,
                "column": 42
              },
              "text": "return outputs, additional_outputs",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 45,
                    "column": 8
                  },
                  "end": {
                    "row": 45,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "expression_list",
                  "start": {
                    "row": 45,
                    "column": 15
                  },
                  "end": {
                    "row": 45,
                    "column": 42
                  },
                  "text": "outputs, additional_outputs",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 45,
                        "column": 15
                      },
                      "end": {
                        "row": 45,
                        "column": 22
                      },
                      "text": "outputs"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 45,
                        "column": 22
                      },
                      "end": {
                        "row": 45,
                        "column": 23
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 45,
                        "column": 24
                      },
                      "end": {
                        "row": 45,
                        "column": 42
                      },
                      "text": "additional_outputs"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}