{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 114,
    "column": 62
  },
  "text": "def merge(cwd,\n          rev=None,\n          opts='',\n          git_opts='',\n          user=None,\n          password=None,\n          identity=None,\n          ignore_retcode=False,\n          output_encoding=None,\n          **kwargs):\n    '''\n    Interface to `git-merge(1)`_\n\n    cwd\n        The path to the git checkout\n\n    rev\n        Revision to merge into the current branch. If not specified, the remote\n        tracking branch will be merged.\n\n        .. versionadded:: 2015.8.0\n\n    opts\n        Any additional options to add to the command line, in a single string\n\n        .. note::\n            On the Salt CLI, if the opts are preceded with a dash, it is\n            necessary to precede them with ``opts=`` (as in the CLI examples\n            below) to avoid causing errors with Salt's own argument parsing.\n\n    git_opts\n        Any additional options to add to git command itself (not the ``merge``\n        subcommand), in a single string. This is useful for passing ``-c`` to\n        run git with temporary changes to the git configuration.\n\n        .. versionadded:: 2017.7.0\n\n        .. note::\n            This is only supported in git 1.7.2 and newer.\n\n    user\n        User under which to run the git command. By default, the command is run\n        by the user under which the minion is running.\n\n    password\n        Windows only. Required when specifying ``user``. This parameter will be\n        ignored on non-Windows platforms.\n\n      .. versionadded:: 2016.3.4\n\n    identity\n        Path to a private key to use for ssh URLs. Salt will not attempt to use\n        passphrase-protected keys unless invoked from the minion using\n        ``salt-call``, to prevent blocking waiting for user input. Key can also\n        be specified as a SaltStack file server URL, eg.\n        ``salt://location/identity_file``.\n\n        .. note::\n            For greater security with passphraseless private keys, see the\n            `sshd(8)`_ manpage for information on securing the keypair from the\n            remote side in the ``authorized_keys`` file.\n\n            .. _`sshd(8)`: http://www.man7.org/linux/man-pages/man8/sshd.8.html#AUTHORIZED_KEYS_FILE_FORMAT\n\n        .. versionadded:: 2018.3.5,2019.2.1,Neon\n\n    ignore_retcode : False\n        If ``True``, do not log an error to the minion log if the git command\n        returns a nonzero exit status.\n\n        .. versionadded:: 2015.8.0\n\n    output_encoding\n        Use this option to specify which encoding to use to decode the output\n        from any git commands which are run. This should not be needed in most\n        cases.\n\n        .. note::\n            This should only be needed if the files in the repository were\n            created with filenames using an encoding other than UTF-8 to handle\n            Unicode characters.\n\n        .. versionadded:: 2018.3.1\n\n    .. _`git-merge(1)`: http://git-scm.com/docs/git-merge\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        # Fetch first...\n        salt myminion git.fetch /path/to/repo\n        # ... then merge the remote tracking branch\n        salt myminion git.merge /path/to/repo\n        # .. or merge another rev\n        salt myminion git.merge /path/to/repo rev=upstream/foo\n    '''\n    kwargs = salt.utils.args.clean_kwargs(**kwargs)\n    if kwargs:\n        salt.utils.args.invalid_kwargs(kwargs)\n\n    cwd = _expand_path(cwd, user)\n    command = ['git'] + _format_git_opts(git_opts)\n    command.append('merge')\n    command.extend(_format_opts(opts))\n    if rev:\n        command.append(rev)\n\n    return _git_run(command,\n                    cwd=cwd,\n                    user=user,\n                    password=password,\n                    identity=identity,\n                    ignore_retcode=ignore_retcode,\n                    output_encoding=output_encoding)['stdout']",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 114,
        "column": 62
      },
      "text": "def merge(cwd,\n          rev=None,\n          opts='',\n          git_opts='',\n          user=None,\n          password=None,\n          identity=None,\n          ignore_retcode=False,\n          output_encoding=None,\n          **kwargs):\n    '''\n    Interface to `git-merge(1)`_\n\n    cwd\n        The path to the git checkout\n\n    rev\n        Revision to merge into the current branch. If not specified, the remote\n        tracking branch will be merged.\n\n        .. versionadded:: 2015.8.0\n\n    opts\n        Any additional options to add to the command line, in a single string\n\n        .. note::\n            On the Salt CLI, if the opts are preceded with a dash, it is\n            necessary to precede them with ``opts=`` (as in the CLI examples\n            below) to avoid causing errors with Salt's own argument parsing.\n\n    git_opts\n        Any additional options to add to git command itself (not the ``merge``\n        subcommand), in a single string. This is useful for passing ``-c`` to\n        run git with temporary changes to the git configuration.\n\n        .. versionadded:: 2017.7.0\n\n        .. note::\n            This is only supported in git 1.7.2 and newer.\n\n    user\n        User under which to run the git command. By default, the command is run\n        by the user under which the minion is running.\n\n    password\n        Windows only. Required when specifying ``user``. This parameter will be\n        ignored on non-Windows platforms.\n\n      .. versionadded:: 2016.3.4\n\n    identity\n        Path to a private key to use for ssh URLs. Salt will not attempt to use\n        passphrase-protected keys unless invoked from the minion using\n        ``salt-call``, to prevent blocking waiting for user input. Key can also\n        be specified as a SaltStack file server URL, eg.\n        ``salt://location/identity_file``.\n\n        .. note::\n            For greater security with passphraseless private keys, see the\n            `sshd(8)`_ manpage for information on securing the keypair from the\n            remote side in the ``authorized_keys`` file.\n\n            .. _`sshd(8)`: http://www.man7.org/linux/man-pages/man8/sshd.8.html#AUTHORIZED_KEYS_FILE_FORMAT\n\n        .. versionadded:: 2018.3.5,2019.2.1,Neon\n\n    ignore_retcode : False\n        If ``True``, do not log an error to the minion log if the git command\n        returns a nonzero exit status.\n\n        .. versionadded:: 2015.8.0\n\n    output_encoding\n        Use this option to specify which encoding to use to decode the output\n        from any git commands which are run. This should not be needed in most\n        cases.\n\n        .. note::\n            This should only be needed if the files in the repository were\n            created with filenames using an encoding other than UTF-8 to handle\n            Unicode characters.\n\n        .. versionadded:: 2018.3.1\n\n    .. _`git-merge(1)`: http://git-scm.com/docs/git-merge\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        # Fetch first...\n        salt myminion git.fetch /path/to/repo\n        # ... then merge the remote tracking branch\n        salt myminion git.merge /path/to/repo\n        # .. or merge another rev\n        salt myminion git.merge /path/to/repo rev=upstream/foo\n    '''\n    kwargs = salt.utils.args.clean_kwargs(**kwargs)\n    if kwargs:\n        salt.utils.args.invalid_kwargs(kwargs)\n\n    cwd = _expand_path(cwd, user)\n    command = ['git'] + _format_git_opts(git_opts)\n    command.append('merge')\n    command.extend(_format_opts(opts))\n    if rev:\n        command.append(rev)\n\n    return _git_run(command,\n                    cwd=cwd,\n                    user=user,\n                    password=password,\n                    identity=identity,\n                    ignore_retcode=ignore_retcode,\n                    output_encoding=output_encoding)['stdout']",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 9
          },
          "text": "merge"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 9
          },
          "end": {
            "row": 9,
            "column": 19
          },
          "text": "(cwd,\n          rev=None,\n          opts='',\n          git_opts='',\n          user=None,\n          password=None,\n          identity=None,\n          ignore_retcode=False,\n          output_encoding=None,\n          **kwargs)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 9
              },
              "end": {
                "row": 0,
                "column": 10
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 10
              },
              "end": {
                "row": 0,
                "column": 13
              },
              "text": "cwd"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 13
              },
              "end": {
                "row": 0,
                "column": 14
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 1,
                "column": 10
              },
              "end": {
                "row": 1,
                "column": 18
              },
              "text": "rev=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 10
                  },
                  "end": {
                    "row": 1,
                    "column": 13
                  },
                  "text": "rev"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 1,
                    "column": 13
                  },
                  "end": {
                    "row": 1,
                    "column": 14
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 1,
                    "column": 14
                  },
                  "end": {
                    "row": 1,
                    "column": 18
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 18
              },
              "end": {
                "row": 1,
                "column": 19
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 10
              },
              "end": {
                "row": 2,
                "column": 17
              },
              "text": "opts=''",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 10
                  },
                  "end": {
                    "row": 2,
                    "column": 14
                  },
                  "text": "opts"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 14
                  },
                  "end": {
                    "row": 2,
                    "column": 15
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 15
                  },
                  "end": {
                    "row": 2,
                    "column": 17
                  },
                  "text": "''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 15
                      },
                      "end": {
                        "row": 2,
                        "column": 16
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 2,
                        "column": 16
                      },
                      "end": {
                        "row": 2,
                        "column": 17
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 17
              },
              "end": {
                "row": 2,
                "column": 18
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 10
              },
              "end": {
                "row": 3,
                "column": 21
              },
              "text": "git_opts=''",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 10
                  },
                  "end": {
                    "row": 3,
                    "column": 18
                  },
                  "text": "git_opts"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 18
                  },
                  "end": {
                    "row": 3,
                    "column": 19
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 3,
                    "column": 19
                  },
                  "end": {
                    "row": 3,
                    "column": 21
                  },
                  "text": "''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 3,
                        "column": 19
                      },
                      "end": {
                        "row": 3,
                        "column": 20
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 3,
                        "column": 20
                      },
                      "end": {
                        "row": 3,
                        "column": 21
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 21
              },
              "end": {
                "row": 3,
                "column": 22
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 4,
                "column": 10
              },
              "end": {
                "row": 4,
                "column": 19
              },
              "text": "user=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 10
                  },
                  "end": {
                    "row": 4,
                    "column": 14
                  },
                  "text": "user"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 14
                  },
                  "end": {
                    "row": 4,
                    "column": 15
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 4,
                    "column": 15
                  },
                  "end": {
                    "row": 4,
                    "column": 19
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 19
              },
              "end": {
                "row": 4,
                "column": 20
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 5,
                "column": 10
              },
              "end": {
                "row": 5,
                "column": 23
              },
              "text": "password=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 10
                  },
                  "end": {
                    "row": 5,
                    "column": 18
                  },
                  "text": "password"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 18
                  },
                  "end": {
                    "row": 5,
                    "column": 19
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 5,
                    "column": 19
                  },
                  "end": {
                    "row": 5,
                    "column": 23
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 5,
                "column": 23
              },
              "end": {
                "row": 5,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 6,
                "column": 10
              },
              "end": {
                "row": 6,
                "column": 23
              },
              "text": "identity=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 6,
                    "column": 10
                  },
                  "end": {
                    "row": 6,
                    "column": 18
                  },
                  "text": "identity"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 6,
                    "column": 18
                  },
                  "end": {
                    "row": 6,
                    "column": 19
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 6,
                    "column": 19
                  },
                  "end": {
                    "row": 6,
                    "column": 23
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 6,
                "column": 23
              },
              "end": {
                "row": 6,
                "column": 24
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 7,
                "column": 10
              },
              "end": {
                "row": 7,
                "column": 30
              },
              "text": "ignore_retcode=False",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 7,
                    "column": 10
                  },
                  "end": {
                    "row": 7,
                    "column": 24
                  },
                  "text": "ignore_retcode"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 7,
                    "column": 24
                  },
                  "end": {
                    "row": 7,
                    "column": 25
                  },
                  "text": "="
                },
                {
                  "type": "false",
                  "start": {
                    "row": 7,
                    "column": 25
                  },
                  "end": {
                    "row": 7,
                    "column": 30
                  },
                  "text": "False"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 7,
                "column": 30
              },
              "end": {
                "row": 7,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 8,
                "column": 10
              },
              "end": {
                "row": 8,
                "column": 30
              },
              "text": "output_encoding=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 8,
                    "column": 10
                  },
                  "end": {
                    "row": 8,
                    "column": 25
                  },
                  "text": "output_encoding"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 8,
                    "column": 25
                  },
                  "end": {
                    "row": 8,
                    "column": 26
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 8,
                    "column": 26
                  },
                  "end": {
                    "row": 8,
                    "column": 30
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 8,
                "column": 30
              },
              "end": {
                "row": 8,
                "column": 31
              },
              "text": ","
            },
            {
              "type": "dictionary_splat_pattern",
              "start": {
                "row": 9,
                "column": 10
              },
              "end": {
                "row": 9,
                "column": 18
              },
              "text": "**kwargs",
              "children": [
                {
                  "type": "**",
                  "start": {
                    "row": 9,
                    "column": 10
                  },
                  "end": {
                    "row": 9,
                    "column": 12
                  },
                  "text": "**"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 9,
                    "column": 12
                  },
                  "end": {
                    "row": 9,
                    "column": 18
                  },
                  "text": "kwargs"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 9,
                "column": 18
              },
              "end": {
                "row": 9,
                "column": 19
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 9,
            "column": 19
          },
          "end": {
            "row": 9,
            "column": 20
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 10,
            "column": 4
          },
          "end": {
            "row": 114,
            "column": 62
          },
          "text": "'''\n    Interface to `git-merge(1)`_\n\n    cwd\n        The path to the git checkout\n\n    rev\n        Revision to merge into the current branch. If not specified, the remote\n        tracking branch will be merged.\n\n        .. versionadded:: 2015.8.0\n\n    opts\n        Any additional options to add to the command line, in a single string\n\n        .. note::\n            On the Salt CLI, if the opts are preceded with a dash, it is\n            necessary to precede them with ``opts=`` (as in the CLI examples\n            below) to avoid causing errors with Salt's own argument parsing.\n\n    git_opts\n        Any additional options to add to git command itself (not the ``merge``\n        subcommand), in a single string. This is useful for passing ``-c`` to\n        run git with temporary changes to the git configuration.\n\n        .. versionadded:: 2017.7.0\n\n        .. note::\n            This is only supported in git 1.7.2 and newer.\n\n    user\n        User under which to run the git command. By default, the command is run\n        by the user under which the minion is running.\n\n    password\n        Windows only. Required when specifying ``user``. This parameter will be\n        ignored on non-Windows platforms.\n\n      .. versionadded:: 2016.3.4\n\n    identity\n        Path to a private key to use for ssh URLs. Salt will not attempt to use\n        passphrase-protected keys unless invoked from the minion using\n        ``salt-call``, to prevent blocking waiting for user input. Key can also\n        be specified as a SaltStack file server URL, eg.\n        ``salt://location/identity_file``.\n\n        .. note::\n            For greater security with passphraseless private keys, see the\n            `sshd(8)`_ manpage for information on securing the keypair from the\n            remote side in the ``authorized_keys`` file.\n\n            .. _`sshd(8)`: http://www.man7.org/linux/man-pages/man8/sshd.8.html#AUTHORIZED_KEYS_FILE_FORMAT\n\n        .. versionadded:: 2018.3.5,2019.2.1,Neon\n\n    ignore_retcode : False\n        If ``True``, do not log an error to the minion log if the git command\n        returns a nonzero exit status.\n\n        .. versionadded:: 2015.8.0\n\n    output_encoding\n        Use this option to specify which encoding to use to decode the output\n        from any git commands which are run. This should not be needed in most\n        cases.\n\n        .. note::\n            This should only be needed if the files in the repository were\n            created with filenames using an encoding other than UTF-8 to handle\n            Unicode characters.\n\n        .. versionadded:: 2018.3.1\n\n    .. _`git-merge(1)`: http://git-scm.com/docs/git-merge\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        # Fetch first...\n        salt myminion git.fetch /path/to/repo\n        # ... then merge the remote tracking branch\n        salt myminion git.merge /path/to/repo\n        # .. or merge another rev\n        salt myminion git.merge /path/to/repo rev=upstream/foo\n    '''\n    kwargs = salt.utils.args.clean_kwargs(**kwargs)\n    if kwargs:\n        salt.utils.args.invalid_kwargs(kwargs)\n\n    cwd = _expand_path(cwd, user)\n    command = ['git'] + _format_git_opts(git_opts)\n    command.append('merge')\n    command.extend(_format_opts(opts))\n    if rev:\n        command.append(rev)\n\n    return _git_run(command,\n                    cwd=cwd,\n                    user=user,\n                    password=password,\n                    identity=identity,\n                    ignore_retcode=ignore_retcode,\n                    output_encoding=output_encoding)['stdout']",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 10,
                "column": 4
              },
              "end": {
                "row": 96,
                "column": 7
              },
              "text": "'''\n    Interface to `git-merge(1)`_\n\n    cwd\n        The path to the git checkout\n\n    rev\n        Revision to merge into the current branch. If not specified, the remote\n        tracking branch will be merged.\n\n        .. versionadded:: 2015.8.0\n\n    opts\n        Any additional options to add to the command line, in a single string\n\n        .. note::\n            On the Salt CLI, if the opts are preceded with a dash, it is\n            necessary to precede them with ``opts=`` (as in the CLI examples\n            below) to avoid causing errors with Salt's own argument parsing.\n\n    git_opts\n        Any additional options to add to git command itself (not the ``merge``\n        subcommand), in a single string. This is useful for passing ``-c`` to\n        run git with temporary changes to the git configuration.\n\n        .. versionadded:: 2017.7.0\n\n        .. note::\n            This is only supported in git 1.7.2 and newer.\n\n    user\n        User under which to run the git command. By default, the command is run\n        by the user under which the minion is running.\n\n    password\n        Windows only. Required when specifying ``user``. This parameter will be\n        ignored on non-Windows platforms.\n\n      .. versionadded:: 2016.3.4\n\n    identity\n        Path to a private key to use for ssh URLs. Salt will not attempt to use\n        passphrase-protected keys unless invoked from the minion using\n        ``salt-call``, to prevent blocking waiting for user input. Key can also\n        be specified as a SaltStack file server URL, eg.\n        ``salt://location/identity_file``.\n\n        .. note::\n            For greater security with passphraseless private keys, see the\n            `sshd(8)`_ manpage for information on securing the keypair from the\n            remote side in the ``authorized_keys`` file.\n\n            .. _`sshd(8)`: http://www.man7.org/linux/man-pages/man8/sshd.8.html#AUTHORIZED_KEYS_FILE_FORMAT\n\n        .. versionadded:: 2018.3.5,2019.2.1,Neon\n\n    ignore_retcode : False\n        If ``True``, do not log an error to the minion log if the git command\n        returns a nonzero exit status.\n\n        .. versionadded:: 2015.8.0\n\n    output_encoding\n        Use this option to specify which encoding to use to decode the output\n        from any git commands which are run. This should not be needed in most\n        cases.\n\n        .. note::\n            This should only be needed if the files in the repository were\n            created with filenames using an encoding other than UTF-8 to handle\n            Unicode characters.\n\n        .. versionadded:: 2018.3.1\n\n    .. _`git-merge(1)`: http://git-scm.com/docs/git-merge\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        # Fetch first...\n        salt myminion git.fetch /path/to/repo\n        # ... then merge the remote tracking branch\n        salt myminion git.merge /path/to/repo\n        # .. or merge another rev\n        salt myminion git.merge /path/to/repo rev=upstream/foo\n    '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 10,
                    "column": 4
                  },
                  "end": {
                    "row": 96,
                    "column": 7
                  },
                  "text": "'''\n    Interface to `git-merge(1)`_\n\n    cwd\n        The path to the git checkout\n\n    rev\n        Revision to merge into the current branch. If not specified, the remote\n        tracking branch will be merged.\n\n        .. versionadded:: 2015.8.0\n\n    opts\n        Any additional options to add to the command line, in a single string\n\n        .. note::\n            On the Salt CLI, if the opts are preceded with a dash, it is\n            necessary to precede them with ``opts=`` (as in the CLI examples\n            below) to avoid causing errors with Salt's own argument parsing.\n\n    git_opts\n        Any additional options to add to git command itself (not the ``merge``\n        subcommand), in a single string. This is useful for passing ``-c`` to\n        run git with temporary changes to the git configuration.\n\n        .. versionadded:: 2017.7.0\n\n        .. note::\n            This is only supported in git 1.7.2 and newer.\n\n    user\n        User under which to run the git command. By default, the command is run\n        by the user under which the minion is running.\n\n    password\n        Windows only. Required when specifying ``user``. This parameter will be\n        ignored on non-Windows platforms.\n\n      .. versionadded:: 2016.3.4\n\n    identity\n        Path to a private key to use for ssh URLs. Salt will not attempt to use\n        passphrase-protected keys unless invoked from the minion using\n        ``salt-call``, to prevent blocking waiting for user input. Key can also\n        be specified as a SaltStack file server URL, eg.\n        ``salt://location/identity_file``.\n\n        .. note::\n            For greater security with passphraseless private keys, see the\n            `sshd(8)`_ manpage for information on securing the keypair from the\n            remote side in the ``authorized_keys`` file.\n\n            .. _`sshd(8)`: http://www.man7.org/linux/man-pages/man8/sshd.8.html#AUTHORIZED_KEYS_FILE_FORMAT\n\n        .. versionadded:: 2018.3.5,2019.2.1,Neon\n\n    ignore_retcode : False\n        If ``True``, do not log an error to the minion log if the git command\n        returns a nonzero exit status.\n\n        .. versionadded:: 2015.8.0\n\n    output_encoding\n        Use this option to specify which encoding to use to decode the output\n        from any git commands which are run. This should not be needed in most\n        cases.\n\n        .. note::\n            This should only be needed if the files in the repository were\n            created with filenames using an encoding other than UTF-8 to handle\n            Unicode characters.\n\n        .. versionadded:: 2018.3.1\n\n    .. _`git-merge(1)`: http://git-scm.com/docs/git-merge\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        # Fetch first...\n        salt myminion git.fetch /path/to/repo\n        # ... then merge the remote tracking branch\n        salt myminion git.merge /path/to/repo\n        # .. or merge another rev\n        salt myminion git.merge /path/to/repo rev=upstream/foo\n    '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 10,
                        "column": 4
                      },
                      "end": {
                        "row": 10,
                        "column": 7
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 10,
                        "column": 7
                      },
                      "end": {
                        "row": 96,
                        "column": 4
                      },
                      "text": "\n    Interface to `git-merge(1)`_\n\n    cwd\n        The path to the git checkout\n\n    rev\n        Revision to merge into the current branch. If not specified, the remote\n        tracking branch will be merged.\n\n        .. versionadded:: 2015.8.0\n\n    opts\n        Any additional options to add to the command line, in a single string\n\n        .. note::\n            On the Salt CLI, if the opts are preceded with a dash, it is\n            necessary to precede them with ``opts=`` (as in the CLI examples\n            below) to avoid causing errors with Salt's own argument parsing.\n\n    git_opts\n        Any additional options to add to git command itself (not the ``merge``\n        subcommand), in a single string. This is useful for passing ``-c`` to\n        run git with temporary changes to the git configuration.\n\n        .. versionadded:: 2017.7.0\n\n        .. note::\n            This is only supported in git 1.7.2 and newer.\n\n    user\n        User under which to run the git command. By default, the command is run\n        by the user under which the minion is running.\n\n    password\n        Windows only. Required when specifying ``user``. This parameter will be\n        ignored on non-Windows platforms.\n\n      .. versionadded:: 2016.3.4\n\n    identity\n        Path to a private key to use for ssh URLs. Salt will not attempt to use\n        passphrase-protected keys unless invoked from the minion using\n        ``salt-call``, to prevent blocking waiting for user input. Key can also\n        be specified as a SaltStack file server URL, eg.\n        ``salt://location/identity_file``.\n\n        .. note::\n            For greater security with passphraseless private keys, see the\n            `sshd(8)`_ manpage for information on securing the keypair from the\n            remote side in the ``authorized_keys`` file.\n\n            .. _`sshd(8)`: http://www.man7.org/linux/man-pages/man8/sshd.8.html#AUTHORIZED_KEYS_FILE_FORMAT\n\n        .. versionadded:: 2018.3.5,2019.2.1,Neon\n\n    ignore_retcode : False\n        If ``True``, do not log an error to the minion log if the git command\n        returns a nonzero exit status.\n\n        .. versionadded:: 2015.8.0\n\n    output_encoding\n        Use this option to specify which encoding to use to decode the output\n        from any git commands which are run. This should not be needed in most\n        cases.\n\n        .. note::\n            This should only be needed if the files in the repository were\n            created with filenames using an encoding other than UTF-8 to handle\n            Unicode characters.\n\n        .. versionadded:: 2018.3.1\n\n    .. _`git-merge(1)`: http://git-scm.com/docs/git-merge\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        # Fetch first...\n        salt myminion git.fetch /path/to/repo\n        # ... then merge the remote tracking branch\n        salt myminion git.merge /path/to/repo\n        # .. or merge another rev\n        salt myminion git.merge /path/to/repo rev=upstream/foo\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 96,
                        "column": 4
                      },
                      "end": {
                        "row": 96,
                        "column": 7
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 97,
                "column": 4
              },
              "end": {
                "row": 97,
                "column": 51
              },
              "text": "kwargs = salt.utils.args.clean_kwargs(**kwargs)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 97,
                    "column": 4
                  },
                  "end": {
                    "row": 97,
                    "column": 51
                  },
                  "text": "kwargs = salt.utils.args.clean_kwargs(**kwargs)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 97,
                        "column": 4
                      },
                      "end": {
                        "row": 97,
                        "column": 10
                      },
                      "text": "kwargs"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 97,
                        "column": 11
                      },
                      "end": {
                        "row": 97,
                        "column": 12
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 97,
                        "column": 13
                      },
                      "end": {
                        "row": 97,
                        "column": 51
                      },
                      "text": "salt.utils.args.clean_kwargs(**kwargs)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 97,
                            "column": 13
                          },
                          "end": {
                            "row": 97,
                            "column": 41
                          },
                          "text": "salt.utils.args.clean_kwargs",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 97,
                                "column": 13
                              },
                              "end": {
                                "row": 97,
                                "column": 28
                              },
                              "text": "salt.utils.args",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 97,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 97,
                                    "column": 23
                                  },
                                  "text": "salt.utils",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 97,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 97,
                                        "column": 17
                                      },
                                      "text": "salt"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 97,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 97,
                                        "column": 18
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 97,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 97,
                                        "column": 23
                                      },
                                      "text": "utils"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 97,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 97,
                                    "column": 24
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 97,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 97,
                                    "column": 28
                                  },
                                  "text": "args"
                                }
                              ]
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 97,
                                "column": 28
                              },
                              "end": {
                                "row": 97,
                                "column": 29
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 97,
                                "column": 29
                              },
                              "end": {
                                "row": 97,
                                "column": 41
                              },
                              "text": "clean_kwargs"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 97,
                            "column": 41
                          },
                          "end": {
                            "row": 97,
                            "column": 51
                          },
                          "text": "(**kwargs)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 97,
                                "column": 41
                              },
                              "end": {
                                "row": 97,
                                "column": 42
                              },
                              "text": "("
                            },
                            {
                              "type": "dictionary_splat",
                              "start": {
                                "row": 97,
                                "column": 42
                              },
                              "end": {
                                "row": 97,
                                "column": 50
                              },
                              "text": "**kwargs",
                              "children": [
                                {
                                  "type": "**",
                                  "start": {
                                    "row": 97,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 97,
                                    "column": 44
                                  },
                                  "text": "**"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 97,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 97,
                                    "column": 50
                                  },
                                  "text": "kwargs"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 97,
                                "column": 50
                              },
                              "end": {
                                "row": 97,
                                "column": 51
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 98,
                "column": 4
              },
              "end": {
                "row": 99,
                "column": 46
              },
              "text": "if kwargs:\n        salt.utils.args.invalid_kwargs(kwargs)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 98,
                    "column": 4
                  },
                  "end": {
                    "row": 98,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 98,
                    "column": 7
                  },
                  "end": {
                    "row": 98,
                    "column": 13
                  },
                  "text": "kwargs"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 98,
                    "column": 13
                  },
                  "end": {
                    "row": 98,
                    "column": 14
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 99,
                    "column": 8
                  },
                  "end": {
                    "row": 99,
                    "column": 46
                  },
                  "text": "salt.utils.args.invalid_kwargs(kwargs)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 99,
                        "column": 8
                      },
                      "end": {
                        "row": 99,
                        "column": 46
                      },
                      "text": "salt.utils.args.invalid_kwargs(kwargs)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 99,
                            "column": 8
                          },
                          "end": {
                            "row": 99,
                            "column": 46
                          },
                          "text": "salt.utils.args.invalid_kwargs(kwargs)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 99,
                                "column": 8
                              },
                              "end": {
                                "row": 99,
                                "column": 38
                              },
                              "text": "salt.utils.args.invalid_kwargs",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 99,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 99,
                                    "column": 23
                                  },
                                  "text": "salt.utils.args",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 99,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 99,
                                        "column": 18
                                      },
                                      "text": "salt.utils",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 99,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 99,
                                            "column": 12
                                          },
                                          "text": "salt"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 99,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 99,
                                            "column": 13
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 99,
                                            "column": 13
                                          },
                                          "end": {
                                            "row": 99,
                                            "column": 18
                                          },
                                          "text": "utils"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 99,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 99,
                                        "column": 19
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 99,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 99,
                                        "column": 23
                                      },
                                      "text": "args"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 99,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 99,
                                    "column": 24
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 99,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 99,
                                    "column": 38
                                  },
                                  "text": "invalid_kwargs"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 99,
                                "column": 38
                              },
                              "end": {
                                "row": 99,
                                "column": 46
                              },
                              "text": "(kwargs)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 99,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 99,
                                    "column": 39
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 99,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 99,
                                    "column": 45
                                  },
                                  "text": "kwargs"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 99,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 99,
                                    "column": 46
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 101,
                "column": 4
              },
              "end": {
                "row": 101,
                "column": 33
              },
              "text": "cwd = _expand_path(cwd, user)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 101,
                    "column": 4
                  },
                  "end": {
                    "row": 101,
                    "column": 33
                  },
                  "text": "cwd = _expand_path(cwd, user)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 101,
                        "column": 4
                      },
                      "end": {
                        "row": 101,
                        "column": 7
                      },
                      "text": "cwd"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 101,
                        "column": 8
                      },
                      "end": {
                        "row": 101,
                        "column": 9
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 101,
                        "column": 10
                      },
                      "end": {
                        "row": 101,
                        "column": 33
                      },
                      "text": "_expand_path(cwd, user)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 101,
                            "column": 10
                          },
                          "end": {
                            "row": 101,
                            "column": 22
                          },
                          "text": "_expand_path"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 101,
                            "column": 22
                          },
                          "end": {
                            "row": 101,
                            "column": 33
                          },
                          "text": "(cwd, user)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 101,
                                "column": 22
                              },
                              "end": {
                                "row": 101,
                                "column": 23
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 101,
                                "column": 23
                              },
                              "end": {
                                "row": 101,
                                "column": 26
                              },
                              "text": "cwd"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 101,
                                "column": 26
                              },
                              "end": {
                                "row": 101,
                                "column": 27
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 101,
                                "column": 28
                              },
                              "end": {
                                "row": 101,
                                "column": 32
                              },
                              "text": "user"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 101,
                                "column": 32
                              },
                              "end": {
                                "row": 101,
                                "column": 33
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 102,
                "column": 4
              },
              "end": {
                "row": 102,
                "column": 50
              },
              "text": "command = ['git'] + _format_git_opts(git_opts)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 102,
                    "column": 4
                  },
                  "end": {
                    "row": 102,
                    "column": 50
                  },
                  "text": "command = ['git'] + _format_git_opts(git_opts)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 102,
                        "column": 4
                      },
                      "end": {
                        "row": 102,
                        "column": 11
                      },
                      "text": "command"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 102,
                        "column": 12
                      },
                      "end": {
                        "row": 102,
                        "column": 13
                      },
                      "text": "="
                    },
                    {
                      "type": "binary_operator",
                      "start": {
                        "row": 102,
                        "column": 14
                      },
                      "end": {
                        "row": 102,
                        "column": 50
                      },
                      "text": "['git'] + _format_git_opts(git_opts)",
                      "children": [
                        {
                          "type": "list",
                          "start": {
                            "row": 102,
                            "column": 14
                          },
                          "end": {
                            "row": 102,
                            "column": 21
                          },
                          "text": "['git']",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 102,
                                "column": 14
                              },
                              "end": {
                                "row": 102,
                                "column": 15
                              },
                              "text": "["
                            },
                            {
                              "type": "string",
                              "start": {
                                "row": 102,
                                "column": 15
                              },
                              "end": {
                                "row": 102,
                                "column": 20
                              },
                              "text": "'git'",
                              "children": [
                                {
                                  "type": "string_start",
                                  "start": {
                                    "row": 102,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 16
                                  },
                                  "text": "'"
                                },
                                {
                                  "type": "string_content",
                                  "start": {
                                    "row": 102,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 19
                                  },
                                  "text": "git"
                                },
                                {
                                  "type": "string_end",
                                  "start": {
                                    "row": 102,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 20
                                  },
                                  "text": "'"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 102,
                                "column": 20
                              },
                              "end": {
                                "row": 102,
                                "column": 21
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start": {
                            "row": 102,
                            "column": 22
                          },
                          "end": {
                            "row": 102,
                            "column": 23
                          },
                          "text": "+"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 102,
                            "column": 24
                          },
                          "end": {
                            "row": 102,
                            "column": 50
                          },
                          "text": "_format_git_opts(git_opts)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 102,
                                "column": 24
                              },
                              "end": {
                                "row": 102,
                                "column": 40
                              },
                              "text": "_format_git_opts"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 102,
                                "column": 40
                              },
                              "end": {
                                "row": 102,
                                "column": 50
                              },
                              "text": "(git_opts)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 102,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 41
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 102,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 49
                                  },
                                  "text": "git_opts"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 102,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 102,
                                    "column": 50
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 103,
                "column": 4
              },
              "end": {
                "row": 103,
                "column": 27
              },
              "text": "command.append('merge')",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 103,
                    "column": 4
                  },
                  "end": {
                    "row": 103,
                    "column": 27
                  },
                  "text": "command.append('merge')",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 103,
                        "column": 4
                      },
                      "end": {
                        "row": 103,
                        "column": 18
                      },
                      "text": "command.append",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 103,
                            "column": 4
                          },
                          "end": {
                            "row": 103,
                            "column": 11
                          },
                          "text": "command"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 103,
                            "column": 11
                          },
                          "end": {
                            "row": 103,
                            "column": 12
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 103,
                            "column": 12
                          },
                          "end": {
                            "row": 103,
                            "column": 18
                          },
                          "text": "append"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 103,
                        "column": 18
                      },
                      "end": {
                        "row": 103,
                        "column": 27
                      },
                      "text": "('merge')",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 103,
                            "column": 18
                          },
                          "end": {
                            "row": 103,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": "string",
                          "start": {
                            "row": 103,
                            "column": 19
                          },
                          "end": {
                            "row": 103,
                            "column": 26
                          },
                          "text": "'merge'",
                          "children": [
                            {
                              "type": "string_start",
                              "start": {
                                "row": 103,
                                "column": 19
                              },
                              "end": {
                                "row": 103,
                                "column": 20
                              },
                              "text": "'"
                            },
                            {
                              "type": "string_content",
                              "start": {
                                "row": 103,
                                "column": 20
                              },
                              "end": {
                                "row": 103,
                                "column": 25
                              },
                              "text": "merge"
                            },
                            {
                              "type": "string_end",
                              "start": {
                                "row": 103,
                                "column": 25
                              },
                              "end": {
                                "row": 103,
                                "column": 26
                              },
                              "text": "'"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 103,
                            "column": 26
                          },
                          "end": {
                            "row": 103,
                            "column": 27
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 104,
                "column": 4
              },
              "end": {
                "row": 104,
                "column": 38
              },
              "text": "command.extend(_format_opts(opts))",
              "children": [
                {
                  "type": "call",
                  "start": {
                    "row": 104,
                    "column": 4
                  },
                  "end": {
                    "row": 104,
                    "column": 38
                  },
                  "text": "command.extend(_format_opts(opts))",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 104,
                        "column": 4
                      },
                      "end": {
                        "row": 104,
                        "column": 18
                      },
                      "text": "command.extend",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 104,
                            "column": 4
                          },
                          "end": {
                            "row": 104,
                            "column": 11
                          },
                          "text": "command"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 104,
                            "column": 11
                          },
                          "end": {
                            "row": 104,
                            "column": 12
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 104,
                            "column": 12
                          },
                          "end": {
                            "row": 104,
                            "column": 18
                          },
                          "text": "extend"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 104,
                        "column": 18
                      },
                      "end": {
                        "row": 104,
                        "column": 38
                      },
                      "text": "(_format_opts(opts))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 104,
                            "column": 18
                          },
                          "end": {
                            "row": 104,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 104,
                            "column": 19
                          },
                          "end": {
                            "row": 104,
                            "column": 37
                          },
                          "text": "_format_opts(opts)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 104,
                                "column": 19
                              },
                              "end": {
                                "row": 104,
                                "column": 31
                              },
                              "text": "_format_opts"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 104,
                                "column": 31
                              },
                              "end": {
                                "row": 104,
                                "column": 37
                              },
                              "text": "(opts)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 104,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 104,
                                    "column": 32
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 104,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 104,
                                    "column": 36
                                  },
                                  "text": "opts"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 104,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 104,
                                    "column": 37
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 104,
                            "column": 37
                          },
                          "end": {
                            "row": 104,
                            "column": 38
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 105,
                "column": 4
              },
              "end": {
                "row": 106,
                "column": 27
              },
              "text": "if rev:\n        command.append(rev)",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 105,
                    "column": 4
                  },
                  "end": {
                    "row": 105,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 105,
                    "column": 7
                  },
                  "end": {
                    "row": 105,
                    "column": 10
                  },
                  "text": "rev"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 105,
                    "column": 10
                  },
                  "end": {
                    "row": 105,
                    "column": 11
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 106,
                    "column": 8
                  },
                  "end": {
                    "row": 106,
                    "column": 27
                  },
                  "text": "command.append(rev)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 106,
                        "column": 8
                      },
                      "end": {
                        "row": 106,
                        "column": 27
                      },
                      "text": "command.append(rev)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 106,
                            "column": 8
                          },
                          "end": {
                            "row": 106,
                            "column": 27
                          },
                          "text": "command.append(rev)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 106,
                                "column": 8
                              },
                              "end": {
                                "row": 106,
                                "column": 22
                              },
                              "text": "command.append",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 106,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 106,
                                    "column": 15
                                  },
                                  "text": "command"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 106,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 106,
                                    "column": 16
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 106,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 106,
                                    "column": 22
                                  },
                                  "text": "append"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 106,
                                "column": 22
                              },
                              "end": {
                                "row": 106,
                                "column": 27
                              },
                              "text": "(rev)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 106,
                                    "column": 22
                                  },
                                  "end": {
                                    "row": 106,
                                    "column": 23
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 106,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 106,
                                    "column": 26
                                  },
                                  "text": "rev"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 106,
                                    "column": 26
                                  },
                                  "end": {
                                    "row": 106,
                                    "column": 27
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 108,
                "column": 4
              },
              "end": {
                "row": 114,
                "column": 62
              },
              "text": "return _git_run(command,\n                    cwd=cwd,\n                    user=user,\n                    password=password,\n                    identity=identity,\n                    ignore_retcode=ignore_retcode,\n                    output_encoding=output_encoding)['stdout']",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 108,
                    "column": 4
                  },
                  "end": {
                    "row": 108,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "subscript",
                  "start": {
                    "row": 108,
                    "column": 11
                  },
                  "end": {
                    "row": 114,
                    "column": 62
                  },
                  "text": "_git_run(command,\n                    cwd=cwd,\n                    user=user,\n                    password=password,\n                    identity=identity,\n                    ignore_retcode=ignore_retcode,\n                    output_encoding=output_encoding)['stdout']",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 108,
                        "column": 11
                      },
                      "end": {
                        "row": 114,
                        "column": 52
                      },
                      "text": "_git_run(command,\n                    cwd=cwd,\n                    user=user,\n                    password=password,\n                    identity=identity,\n                    ignore_retcode=ignore_retcode,\n                    output_encoding=output_encoding)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 108,
                            "column": 11
                          },
                          "end": {
                            "row": 108,
                            "column": 19
                          },
                          "text": "_git_run"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 108,
                            "column": 19
                          },
                          "end": {
                            "row": 114,
                            "column": 52
                          },
                          "text": "(command,\n                    cwd=cwd,\n                    user=user,\n                    password=password,\n                    identity=identity,\n                    ignore_retcode=ignore_retcode,\n                    output_encoding=output_encoding)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 108,
                                "column": 19
                              },
                              "end": {
                                "row": 108,
                                "column": 20
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 108,
                                "column": 20
                              },
                              "end": {
                                "row": 108,
                                "column": 27
                              },
                              "text": "command"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 108,
                                "column": 27
                              },
                              "end": {
                                "row": 108,
                                "column": 28
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 109,
                                "column": 20
                              },
                              "end": {
                                "row": 109,
                                "column": 27
                              },
                              "text": "cwd=cwd",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 109,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 23
                                  },
                                  "text": "cwd"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 109,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 24
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 109,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 109,
                                    "column": 27
                                  },
                                  "text": "cwd"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 109,
                                "column": 27
                              },
                              "end": {
                                "row": 109,
                                "column": 28
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 110,
                                "column": 20
                              },
                              "end": {
                                "row": 110,
                                "column": 29
                              },
                              "text": "user=user",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 110,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 110,
                                    "column": 24
                                  },
                                  "text": "user"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 110,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 110,
                                    "column": 25
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 110,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 110,
                                    "column": 29
                                  },
                                  "text": "user"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 110,
                                "column": 29
                              },
                              "end": {
                                "row": 110,
                                "column": 30
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 111,
                                "column": 20
                              },
                              "end": {
                                "row": 111,
                                "column": 37
                              },
                              "text": "password=password",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 111,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 111,
                                    "column": 28
                                  },
                                  "text": "password"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 111,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 111,
                                    "column": 29
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 111,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 111,
                                    "column": 37
                                  },
                                  "text": "password"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 111,
                                "column": 37
                              },
                              "end": {
                                "row": 111,
                                "column": 38
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 112,
                                "column": 20
                              },
                              "end": {
                                "row": 112,
                                "column": 37
                              },
                              "text": "identity=identity",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 112,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 112,
                                    "column": 28
                                  },
                                  "text": "identity"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 112,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 112,
                                    "column": 29
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 112,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 112,
                                    "column": 37
                                  },
                                  "text": "identity"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 112,
                                "column": 37
                              },
                              "end": {
                                "row": 112,
                                "column": 38
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 113,
                                "column": 20
                              },
                              "end": {
                                "row": 113,
                                "column": 49
                              },
                              "text": "ignore_retcode=ignore_retcode",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 113,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 113,
                                    "column": 34
                                  },
                                  "text": "ignore_retcode"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 113,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 113,
                                    "column": 35
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 113,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 113,
                                    "column": 49
                                  },
                                  "text": "ignore_retcode"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 113,
                                "column": 49
                              },
                              "end": {
                                "row": 113,
                                "column": 50
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 114,
                                "column": 20
                              },
                              "end": {
                                "row": 114,
                                "column": 51
                              },
                              "text": "output_encoding=output_encoding",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 114,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 114,
                                    "column": 35
                                  },
                                  "text": "output_encoding"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 114,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 114,
                                    "column": 36
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 114,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 114,
                                    "column": 51
                                  },
                                  "text": "output_encoding"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 114,
                                "column": 51
                              },
                              "end": {
                                "row": 114,
                                "column": 52
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start": {
                        "row": 114,
                        "column": 52
                      },
                      "end": {
                        "row": 114,
                        "column": 53
                      },
                      "text": "["
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 114,
                        "column": 53
                      },
                      "end": {
                        "row": 114,
                        "column": 61
                      },
                      "text": "'stdout'",
                      "children": [
                        {
                          "type": "string_start",
                          "start": {
                            "row": 114,
                            "column": 53
                          },
                          "end": {
                            "row": 114,
                            "column": 54
                          },
                          "text": "'"
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 114,
                            "column": 54
                          },
                          "end": {
                            "row": 114,
                            "column": 60
                          },
                          "text": "stdout"
                        },
                        {
                          "type": "string_end",
                          "start": {
                            "row": 114,
                            "column": 60
                          },
                          "end": {
                            "row": 114,
                            "column": 61
                          },
                          "text": "'"
                        }
                      ]
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 114,
                        "column": 61
                      },
                      "end": {
                        "row": 114,
                        "column": 62
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}