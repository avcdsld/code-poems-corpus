{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 77,
    "column": 39
  },
  "text": "def histograms_impl(self, tag, run, downsample_to=None):\n    \"\"\"Result of the form `(body, mime_type)`, or `ValueError`.\n\n    At most `downsample_to` events will be returned. If this value is\n    `None`, then no downsampling will be performed.\n    \"\"\"\n    if self._db_connection_provider:\n      # Serve data from the database.\n      db = self._db_connection_provider()\n      cursor = db.cursor()\n      # Prefetch the tag ID matching this run and tag.\n      cursor.execute(\n          '''\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          ''',\n          {'run': run, 'tag': tag, 'plugin': metadata.PLUGIN_NAME})\n      row = cursor.fetchone()\n      if not row:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      (tag_id,) = row\n      # Fetch tensor values, optionally with linear-spaced sampling by step.\n      # For steps ranging from s_min to s_max and sample size k, this query\n      # divides the range into k - 1 equal-sized intervals and returns the\n      # lowest step at or above each of the k interval boundaries (which always\n      # includes s_min and s_max, and may be fewer than k results if there are\n      # intervals where no steps are present). For contiguous steps the results\n      # can be formally expressed as the following:\n      #   [s_min + math.ceil(i / k * (s_max - s_min)) for i in range(0, k + 1)]\n      cursor.execute(\n          '''\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          ''',\n          {'tag_id': tag_id, 'sample_size': downsample_to})\n      events = [(computed_time, step, self._get_values(data, dtype, shape))\n                for step, computed_time, data, dtype, shape in cursor]\n    else:\n      # Serve data from events files.\n      try:\n        tensor_events = self._multiplexer.Tensors(run, tag)\n      except KeyError:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      if downsample_to is not None and len(tensor_events) > downsample_to:\n        rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)\n        indices = sorted(rand_indices)\n        tensor_events = [tensor_events[i] for i in indices]\n      events = [[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]\n                for e in tensor_events]\n    return (events, 'application/json')",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 77,
        "column": 39
      },
      "text": "def histograms_impl(self, tag, run, downsample_to=None):\n    \"\"\"Result of the form `(body, mime_type)`, or `ValueError`.\n\n    At most `downsample_to` events will be returned. If this value is\n    `None`, then no downsampling will be performed.\n    \"\"\"\n    if self._db_connection_provider:\n      # Serve data from the database.\n      db = self._db_connection_provider()\n      cursor = db.cursor()\n      # Prefetch the tag ID matching this run and tag.\n      cursor.execute(\n          '''\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          ''',\n          {'run': run, 'tag': tag, 'plugin': metadata.PLUGIN_NAME})\n      row = cursor.fetchone()\n      if not row:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      (tag_id,) = row\n      # Fetch tensor values, optionally with linear-spaced sampling by step.\n      # For steps ranging from s_min to s_max and sample size k, this query\n      # divides the range into k - 1 equal-sized intervals and returns the\n      # lowest step at or above each of the k interval boundaries (which always\n      # includes s_min and s_max, and may be fewer than k results if there are\n      # intervals where no steps are present). For contiguous steps the results\n      # can be formally expressed as the following:\n      #   [s_min + math.ceil(i / k * (s_max - s_min)) for i in range(0, k + 1)]\n      cursor.execute(\n          '''\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          ''',\n          {'tag_id': tag_id, 'sample_size': downsample_to})\n      events = [(computed_time, step, self._get_values(data, dtype, shape))\n                for step, computed_time, data, dtype, shape in cursor]\n    else:\n      # Serve data from events files.\n      try:\n        tensor_events = self._multiplexer.Tensors(run, tag)\n      except KeyError:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      if downsample_to is not None and len(tensor_events) > downsample_to:\n        rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)\n        indices = sorted(rand_indices)\n        tensor_events = [tensor_events[i] for i in indices]\n      events = [[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]\n                for e in tensor_events]\n    return (events, 'application/json')",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 19
          },
          "text": "histograms_impl"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 19
          },
          "end": {
            "row": 0,
            "column": 55
          },
          "text": "(self, tag, run, downsample_to=None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 19
              },
              "end": {
                "row": 0,
                "column": 20
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 20
              },
              "end": {
                "row": 0,
                "column": 24
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 25
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 26
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "tag"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 31
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": "run"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 35
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 36
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": "downsample_to=None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 36
                  },
                  "end": {
                    "row": 0,
                    "column": 49
                  },
                  "text": "downsample_to"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 49
                  },
                  "end": {
                    "row": 0,
                    "column": 50
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 50
                  },
                  "end": {
                    "row": 0,
                    "column": 54
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 54
              },
              "end": {
                "row": 0,
                "column": 55
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 55
          },
          "end": {
            "row": 0,
            "column": 56
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 77,
            "column": 39
          },
          "text": "\"\"\"Result of the form `(body, mime_type)`, or `ValueError`.\n\n    At most `downsample_to` events will be returned. If this value is\n    `None`, then no downsampling will be performed.\n    \"\"\"\n    if self._db_connection_provider:\n      # Serve data from the database.\n      db = self._db_connection_provider()\n      cursor = db.cursor()\n      # Prefetch the tag ID matching this run and tag.\n      cursor.execute(\n          '''\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          ''',\n          {'run': run, 'tag': tag, 'plugin': metadata.PLUGIN_NAME})\n      row = cursor.fetchone()\n      if not row:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      (tag_id,) = row\n      # Fetch tensor values, optionally with linear-spaced sampling by step.\n      # For steps ranging from s_min to s_max and sample size k, this query\n      # divides the range into k - 1 equal-sized intervals and returns the\n      # lowest step at or above each of the k interval boundaries (which always\n      # includes s_min and s_max, and may be fewer than k results if there are\n      # intervals where no steps are present). For contiguous steps the results\n      # can be formally expressed as the following:\n      #   [s_min + math.ceil(i / k * (s_max - s_min)) for i in range(0, k + 1)]\n      cursor.execute(\n          '''\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          ''',\n          {'tag_id': tag_id, 'sample_size': downsample_to})\n      events = [(computed_time, step, self._get_values(data, dtype, shape))\n                for step, computed_time, data, dtype, shape in cursor]\n    else:\n      # Serve data from events files.\n      try:\n        tensor_events = self._multiplexer.Tensors(run, tag)\n      except KeyError:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      if downsample_to is not None and len(tensor_events) > downsample_to:\n        rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)\n        indices = sorted(rand_indices)\n        tensor_events = [tensor_events[i] for i in indices]\n      events = [[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]\n                for e in tensor_events]\n    return (events, 'application/json')",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 7
              },
              "text": "\"\"\"Result of the form `(body, mime_type)`, or `ValueError`.\n\n    At most `downsample_to` events will be returned. If this value is\n    `None`, then no downsampling will be performed.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 7
                  },
                  "text": "\"\"\"Result of the form `(body, mime_type)`, or `ValueError`.\n\n    At most `downsample_to` events will be returned. If this value is\n    `None`, then no downsampling will be performed.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 5,
                        "column": 4
                      },
                      "text": "Result of the form `(body, mime_type)`, or `ValueError`.\n\n    At most `downsample_to` events will be returned. If this value is\n    `None`, then no downsampling will be performed.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 76,
                "column": 39
              },
              "text": "if self._db_connection_provider:\n      # Serve data from the database.\n      db = self._db_connection_provider()\n      cursor = db.cursor()\n      # Prefetch the tag ID matching this run and tag.\n      cursor.execute(\n          '''\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          ''',\n          {'run': run, 'tag': tag, 'plugin': metadata.PLUGIN_NAME})\n      row = cursor.fetchone()\n      if not row:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      (tag_id,) = row\n      # Fetch tensor values, optionally with linear-spaced sampling by step.\n      # For steps ranging from s_min to s_max and sample size k, this query\n      # divides the range into k - 1 equal-sized intervals and returns the\n      # lowest step at or above each of the k interval boundaries (which always\n      # includes s_min and s_max, and may be fewer than k results if there are\n      # intervals where no steps are present). For contiguous steps the results\n      # can be formally expressed as the following:\n      #   [s_min + math.ceil(i / k * (s_max - s_min)) for i in range(0, k + 1)]\n      cursor.execute(\n          '''\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          ''',\n          {'tag_id': tag_id, 'sample_size': downsample_to})\n      events = [(computed_time, step, self._get_values(data, dtype, shape))\n                for step, computed_time, data, dtype, shape in cursor]\n    else:\n      # Serve data from events files.\n      try:\n        tensor_events = self._multiplexer.Tensors(run, tag)\n      except KeyError:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      if downsample_to is not None and len(tensor_events) > downsample_to:\n        rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)\n        indices = sorted(rand_indices)\n        tensor_events = [tensor_events[i] for i in indices]\n      events = [[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]\n                for e in tensor_events]",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 6,
                    "column": 6
                  },
                  "text": "if"
                },
                {
                  "type": "attribute",
                  "start": {
                    "row": 6,
                    "column": 7
                  },
                  "end": {
                    "row": 6,
                    "column": 35
                  },
                  "text": "self._db_connection_provider",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 7
                      },
                      "end": {
                        "row": 6,
                        "column": 11
                      },
                      "text": "self"
                    },
                    {
                      "type": ".",
                      "start": {
                        "row": 6,
                        "column": 11
                      },
                      "end": {
                        "row": 6,
                        "column": 12
                      },
                      "text": "."
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 12
                      },
                      "end": {
                        "row": 6,
                        "column": 35
                      },
                      "text": "_db_connection_provider"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 6,
                    "column": 35
                  },
                  "end": {
                    "row": 6,
                    "column": 36
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 7,
                    "column": 6
                  },
                  "end": {
                    "row": 7,
                    "column": 37
                  },
                  "text": "# Serve data from the database."
                },
                {
                  "type": "block",
                  "start": {
                    "row": 8,
                    "column": 6
                  },
                  "end": {
                    "row": 63,
                    "column": 70
                  },
                  "text": "db = self._db_connection_provider()\n      cursor = db.cursor()\n      # Prefetch the tag ID matching this run and tag.\n      cursor.execute(\n          '''\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          ''',\n          {'run': run, 'tag': tag, 'plugin': metadata.PLUGIN_NAME})\n      row = cursor.fetchone()\n      if not row:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      (tag_id,) = row\n      # Fetch tensor values, optionally with linear-spaced sampling by step.\n      # For steps ranging from s_min to s_max and sample size k, this query\n      # divides the range into k - 1 equal-sized intervals and returns the\n      # lowest step at or above each of the k interval boundaries (which always\n      # includes s_min and s_max, and may be fewer than k results if there are\n      # intervals where no steps are present). For contiguous steps the results\n      # can be formally expressed as the following:\n      #   [s_min + math.ceil(i / k * (s_max - s_min)) for i in range(0, k + 1)]\n      cursor.execute(\n          '''\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          ''',\n          {'tag_id': tag_id, 'sample_size': downsample_to})\n      events = [(computed_time, step, self._get_values(data, dtype, shape))\n                for step, computed_time, data, dtype, shape in cursor]",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 8,
                        "column": 6
                      },
                      "end": {
                        "row": 8,
                        "column": 41
                      },
                      "text": "db = self._db_connection_provider()",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 8,
                            "column": 6
                          },
                          "end": {
                            "row": 8,
                            "column": 41
                          },
                          "text": "db = self._db_connection_provider()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 8,
                                "column": 6
                              },
                              "end": {
                                "row": 8,
                                "column": 8
                              },
                              "text": "db"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 8,
                                "column": 9
                              },
                              "end": {
                                "row": 8,
                                "column": 10
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 8,
                                "column": 11
                              },
                              "end": {
                                "row": 8,
                                "column": 41
                              },
                              "text": "self._db_connection_provider()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 8,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 39
                                  },
                                  "text": "self._db_connection_provider",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 8,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 15
                                      },
                                      "text": "self"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 8,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 16
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 8,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 39
                                      },
                                      "text": "_db_connection_provider"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 8,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 41
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 8,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 40
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 8,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 41
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 9,
                        "column": 6
                      },
                      "end": {
                        "row": 9,
                        "column": 26
                      },
                      "text": "cursor = db.cursor()",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 9,
                            "column": 6
                          },
                          "end": {
                            "row": 9,
                            "column": 26
                          },
                          "text": "cursor = db.cursor()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 9,
                                "column": 6
                              },
                              "end": {
                                "row": 9,
                                "column": 12
                              },
                              "text": "cursor"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 9,
                                "column": 13
                              },
                              "end": {
                                "row": 9,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 9,
                                "column": 15
                              },
                              "end": {
                                "row": 9,
                                "column": 26
                              },
                              "text": "db.cursor()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 9,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 24
                                  },
                                  "text": "db.cursor",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 17
                                      },
                                      "text": "db"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 9,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 18
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 9,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 24
                                      },
                                      "text": "cursor"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 9,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 9,
                                    "column": 26
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 9,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 25
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 9,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 9,
                                        "column": 26
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 10,
                        "column": 6
                      },
                      "end": {
                        "row": 10,
                        "column": 54
                      },
                      "text": "# Prefetch the tag ID matching this run and tag."
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 11,
                        "column": 6
                      },
                      "end": {
                        "row": 22,
                        "column": 67
                      },
                      "text": "cursor.execute(\n          '''\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          ''',\n          {'run': run, 'tag': tag, 'plugin': metadata.PLUGIN_NAME})",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 11,
                            "column": 6
                          },
                          "end": {
                            "row": 22,
                            "column": 67
                          },
                          "text": "cursor.execute(\n          '''\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          ''',\n          {'run': run, 'tag': tag, 'plugin': metadata.PLUGIN_NAME})",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 11,
                                "column": 6
                              },
                              "end": {
                                "row": 11,
                                "column": 20
                              },
                              "text": "cursor.execute",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 12
                                  },
                                  "text": "cursor"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 13
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 20
                                  },
                                  "text": "execute"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 11,
                                "column": 20
                              },
                              "end": {
                                "row": 22,
                                "column": 67
                              },
                              "text": "(\n          '''\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          ''',\n          {'run': run, 'tag': tag, 'plugin': metadata.PLUGIN_NAME})",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 12,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 13
                                  },
                                  "text": "'''\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          '''",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 12,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 12,
                                        "column": 13
                                      },
                                      "text": "'''"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 12,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 10
                                      },
                                      "text": "\n          SELECT\n            tag_id\n          FROM Tags\n          JOIN Runs USING (run_id)\n          WHERE\n            Runs.run_name = :run\n            AND Tags.tag_name = :tag\n            AND Tags.plugin_name = :plugin\n          "
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 21,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 21,
                                        "column": 13
                                      },
                                      "text": "'''"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 21,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 21,
                                    "column": 14
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "dictionary",
                                  "start": {
                                    "row": 22,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 66
                                  },
                                  "text": "{'run': run, 'tag': tag, 'plugin': metadata.PLUGIN_NAME}",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 22,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 11
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "pair",
                                      "start": {
                                        "row": 22,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 21
                                      },
                                      "text": "'run': run",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 22,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 16
                                          },
                                          "text": "'run'",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 22,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 12
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 22,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 15
                                              },
                                              "text": "run"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 22,
                                                "column": 15
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 16
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 22,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 17
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 21
                                          },
                                          "text": "run"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 22,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 22
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "pair",
                                      "start": {
                                        "row": 22,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 33
                                      },
                                      "text": "'tag': tag",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 22,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 28
                                          },
                                          "text": "'tag'",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 22,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 24
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 22,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 27
                                              },
                                              "text": "tag"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 22,
                                                "column": 27
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 28
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 22,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 29
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 22,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 33
                                          },
                                          "text": "tag"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 22,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 34
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "pair",
                                      "start": {
                                        "row": 22,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 65
                                      },
                                      "text": "'plugin': metadata.PLUGIN_NAME",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 22,
                                            "column": 35
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 43
                                          },
                                          "text": "'plugin'",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 22,
                                                "column": 35
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 36
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 22,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 42
                                              },
                                              "text": "plugin"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 22,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 43
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 22,
                                            "column": 43
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 44
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 22,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 22,
                                            "column": 65
                                          },
                                          "text": "metadata.PLUGIN_NAME",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 45
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 53
                                              },
                                              "text": "metadata"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 22,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 54
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 22,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 22,
                                                "column": 65
                                              },
                                              "text": "PLUGIN_NAME"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 22,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 22,
                                        "column": 66
                                      },
                                      "text": "}"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 22,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 22,
                                    "column": 67
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 23,
                        "column": 6
                      },
                      "end": {
                        "row": 23,
                        "column": 29
                      },
                      "text": "row = cursor.fetchone()",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 23,
                            "column": 6
                          },
                          "end": {
                            "row": 23,
                            "column": 29
                          },
                          "text": "row = cursor.fetchone()",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 23,
                                "column": 6
                              },
                              "end": {
                                "row": 23,
                                "column": 9
                              },
                              "text": "row"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 23,
                                "column": 10
                              },
                              "end": {
                                "row": 23,
                                "column": 11
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 23,
                                "column": 12
                              },
                              "end": {
                                "row": 23,
                                "column": 29
                              },
                              "text": "cursor.fetchone()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 23,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 27
                                  },
                                  "text": "cursor.fetchone",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 18
                                      },
                                      "text": "cursor"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 23,
                                        "column": 18
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 19
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 23,
                                        "column": 19
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 27
                                      },
                                      "text": "fetchone"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 23,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 23,
                                    "column": 29
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 23,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 28
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 23,
                                        "column": 28
                                      },
                                      "end": {
                                        "row": 23,
                                        "column": 29
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 24,
                        "column": 6
                      },
                      "end": {
                        "row": 25,
                        "column": 71
                      },
                      "text": "if not row:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 24,
                            "column": 6
                          },
                          "end": {
                            "row": 24,
                            "column": 8
                          },
                          "text": "if"
                        },
                        {
                          "type": "not_operator",
                          "start": {
                            "row": 24,
                            "column": 9
                          },
                          "end": {
                            "row": 24,
                            "column": 16
                          },
                          "text": "not row",
                          "children": [
                            {
                              "type": "not",
                              "start": {
                                "row": 24,
                                "column": 9
                              },
                              "end": {
                                "row": 24,
                                "column": 12
                              },
                              "text": "not"
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 24,
                                "column": 13
                              },
                              "end": {
                                "row": 24,
                                "column": 16
                              },
                              "text": "row"
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 24,
                            "column": 16
                          },
                          "end": {
                            "row": 24,
                            "column": 17
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 25,
                            "column": 8
                          },
                          "end": {
                            "row": 25,
                            "column": 71
                          },
                          "text": "raise ValueError('No histogram tag %r for run %r' % (tag, run))",
                          "children": [
                            {
                              "type": "raise_statement",
                              "start": {
                                "row": 25,
                                "column": 8
                              },
                              "end": {
                                "row": 25,
                                "column": 71
                              },
                              "text": "raise ValueError('No histogram tag %r for run %r' % (tag, run))",
                              "children": [
                                {
                                  "type": "raise",
                                  "start": {
                                    "row": 25,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 13
                                  },
                                  "text": "raise"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 25,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 25,
                                    "column": 71
                                  },
                                  "text": "ValueError('No histogram tag %r for run %r' % (tag, run))",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 25,
                                        "column": 14
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 24
                                      },
                                      "text": "ValueError"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 25,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 25,
                                        "column": 71
                                      },
                                      "text": "('No histogram tag %r for run %r' % (tag, run))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 25,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 25
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "binary_operator",
                                          "start": {
                                            "row": 25,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 70
                                          },
                                          "text": "'No histogram tag %r for run %r' % (tag, run)",
                                          "children": [
                                            {
                                              "type": "string",
                                              "start": {
                                                "row": 25,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 57
                                              },
                                              "text": "'No histogram tag %r for run %r'",
                                              "children": [
                                                {
                                                  "type": "string_start",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 26
                                                  },
                                                  "text": "'"
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 56
                                                  },
                                                  "text": "No histogram tag %r for run %r"
                                                },
                                                {
                                                  "type": "string_end",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 56
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 57
                                                  },
                                                  "text": "'"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "%",
                                              "start": {
                                                "row": 25,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 59
                                              },
                                              "text": "%"
                                            },
                                            {
                                              "type": "tuple",
                                              "start": {
                                                "row": 25,
                                                "column": 60
                                              },
                                              "end": {
                                                "row": 25,
                                                "column": 70
                                              },
                                              "text": "(tag, run)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 60
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 61
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 61
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 64
                                                  },
                                                  "text": "tag"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 64
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 65
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 66
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 69
                                                  },
                                                  "text": "run"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 25,
                                                    "column": 69
                                                  },
                                                  "end": {
                                                    "row": 25,
                                                    "column": 70
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 25,
                                            "column": 70
                                          },
                                          "end": {
                                            "row": 25,
                                            "column": 71
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 26,
                        "column": 6
                      },
                      "end": {
                        "row": 26,
                        "column": 21
                      },
                      "text": "(tag_id,) = row",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 26,
                            "column": 6
                          },
                          "end": {
                            "row": 26,
                            "column": 21
                          },
                          "text": "(tag_id,) = row",
                          "children": [
                            {
                              "type": "tuple_pattern",
                              "start": {
                                "row": 26,
                                "column": 6
                              },
                              "end": {
                                "row": 26,
                                "column": 15
                              },
                              "text": "(tag_id,)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 26,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 7
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 26,
                                    "column": 7
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 13
                                  },
                                  "text": "tag_id"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 26,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 14
                                  },
                                  "text": ","
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 26,
                                    "column": 14
                                  },
                                  "end": {
                                    "row": 26,
                                    "column": 15
                                  },
                                  "text": ")"
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 26,
                                "column": 16
                              },
                              "end": {
                                "row": 26,
                                "column": 17
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 26,
                                "column": 18
                              },
                              "end": {
                                "row": 26,
                                "column": 21
                              },
                              "text": "row"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 27,
                        "column": 6
                      },
                      "end": {
                        "row": 27,
                        "column": 76
                      },
                      "text": "# Fetch tensor values, optionally with linear-spaced sampling by step."
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 28,
                        "column": 6
                      },
                      "end": {
                        "row": 28,
                        "column": 75
                      },
                      "text": "# For steps ranging from s_min to s_max and sample size k, this query"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 29,
                        "column": 6
                      },
                      "end": {
                        "row": 29,
                        "column": 74
                      },
                      "text": "# divides the range into k - 1 equal-sized intervals and returns the"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 30,
                        "column": 6
                      },
                      "end": {
                        "row": 30,
                        "column": 79
                      },
                      "text": "# lowest step at or above each of the k interval boundaries (which always"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 31,
                        "column": 6
                      },
                      "end": {
                        "row": 31,
                        "column": 78
                      },
                      "text": "# includes s_min and s_max, and may be fewer than k results if there are"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 32,
                        "column": 6
                      },
                      "end": {
                        "row": 32,
                        "column": 79
                      },
                      "text": "# intervals where no steps are present). For contiguous steps the results"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 33,
                        "column": 6
                      },
                      "end": {
                        "row": 33,
                        "column": 51
                      },
                      "text": "# can be formally expressed as the following:"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 34,
                        "column": 6
                      },
                      "end": {
                        "row": 34,
                        "column": 79
                      },
                      "text": "#   [s_min + math.ceil(i / k * (s_max - s_min)) for i in range(0, k + 1)]"
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 35,
                        "column": 6
                      },
                      "end": {
                        "row": 61,
                        "column": 59
                      },
                      "text": "cursor.execute(\n          '''\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          ''',\n          {'tag_id': tag_id, 'sample_size': downsample_to})",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 35,
                            "column": 6
                          },
                          "end": {
                            "row": 61,
                            "column": 59
                          },
                          "text": "cursor.execute(\n          '''\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          ''',\n          {'tag_id': tag_id, 'sample_size': downsample_to})",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 35,
                                "column": 6
                              },
                              "end": {
                                "row": 35,
                                "column": 20
                              },
                              "text": "cursor.execute",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 12
                                  },
                                  "text": "cursor"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 35,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 13
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 35,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 20
                                  },
                                  "text": "execute"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 35,
                                "column": 20
                              },
                              "end": {
                                "row": 61,
                                "column": 59
                              },
                              "text": "(\n          '''\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          ''',\n          {'tag_id': tag_id, 'sample_size': downsample_to})",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 35,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 35,
                                    "column": 21
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 36,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 60,
                                    "column": 13
                                  },
                                  "text": "'''\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          '''",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 36,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 36,
                                        "column": 13
                                      },
                                      "text": "'''"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 36,
                                        "column": 13
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 10
                                      },
                                      "text": "\n          SELECT\n            MIN(step) AS step,\n            computed_time,\n            data,\n            dtype,\n            shape\n          FROM Tensors\n          INNER JOIN (\n            SELECT\n              MIN(step) AS min_step,\n              MAX(step) AS max_step\n            FROM Tensors\n            /* Filter out NULL so we can use TensorSeriesStepIndex. */\n            WHERE series = :tag_id AND step IS NOT NULL\n          )\n          /* Ensure we omit reserved rows, which have NULL step values. */\n          WHERE series = :tag_id AND step IS NOT NULL\n          /* Bucket rows into sample_size linearly spaced buckets, or do\n             no sampling if sample_size is NULL. */\n          GROUP BY\n            IFNULL(:sample_size - 1, max_step - min_step)\n            * (step - min_step) / (max_step - min_step)\n          ORDER BY step\n          "
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 60,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 60,
                                        "column": 13
                                      },
                                      "text": "'''"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 60,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 60,
                                    "column": 14
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "dictionary",
                                  "start": {
                                    "row": 61,
                                    "column": 10
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 58
                                  },
                                  "text": "{'tag_id': tag_id, 'sample_size': downsample_to}",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start": {
                                        "row": 61,
                                        "column": 10
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 11
                                      },
                                      "text": "{"
                                    },
                                    {
                                      "type": "pair",
                                      "start": {
                                        "row": 61,
                                        "column": 11
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 27
                                      },
                                      "text": "'tag_id': tag_id",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 61,
                                            "column": 11
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 19
                                          },
                                          "text": "'tag_id'",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 61,
                                                "column": 11
                                              },
                                              "end": {
                                                "row": 61,
                                                "column": 12
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 61,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 61,
                                                "column": 18
                                              },
                                              "text": "tag_id"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 61,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 61,
                                                "column": 19
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 61,
                                            "column": 19
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 20
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 61,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 27
                                          },
                                          "text": "tag_id"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 61,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 28
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "pair",
                                      "start": {
                                        "row": 61,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 57
                                      },
                                      "text": "'sample_size': downsample_to",
                                      "children": [
                                        {
                                          "type": "string",
                                          "start": {
                                            "row": 61,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 42
                                          },
                                          "text": "'sample_size'",
                                          "children": [
                                            {
                                              "type": "string_start",
                                              "start": {
                                                "row": 61,
                                                "column": 29
                                              },
                                              "end": {
                                                "row": 61,
                                                "column": 30
                                              },
                                              "text": "'"
                                            },
                                            {
                                              "type": "string_content",
                                              "start": {
                                                "row": 61,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 61,
                                                "column": 41
                                              },
                                              "text": "sample_size"
                                            },
                                            {
                                              "type": "string_end",
                                              "start": {
                                                "row": 61,
                                                "column": 41
                                              },
                                              "end": {
                                                "row": 61,
                                                "column": 42
                                              },
                                              "text": "'"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ":",
                                          "start": {
                                            "row": 61,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 43
                                          },
                                          "text": ":"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 61,
                                            "column": 44
                                          },
                                          "end": {
                                            "row": 61,
                                            "column": 57
                                          },
                                          "text": "downsample_to"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start": {
                                        "row": 61,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 61,
                                        "column": 58
                                      },
                                      "text": "}"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 61,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 61,
                                    "column": 59
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 62,
                        "column": 6
                      },
                      "end": {
                        "row": 63,
                        "column": 70
                      },
                      "text": "events = [(computed_time, step, self._get_values(data, dtype, shape))\n                for step, computed_time, data, dtype, shape in cursor]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 62,
                            "column": 6
                          },
                          "end": {
                            "row": 63,
                            "column": 70
                          },
                          "text": "events = [(computed_time, step, self._get_values(data, dtype, shape))\n                for step, computed_time, data, dtype, shape in cursor]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 62,
                                "column": 6
                              },
                              "end": {
                                "row": 62,
                                "column": 12
                              },
                              "text": "events"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 62,
                                "column": 13
                              },
                              "end": {
                                "row": 62,
                                "column": 14
                              },
                              "text": "="
                            },
                            {
                              "type": "list_comprehension",
                              "start": {
                                "row": 62,
                                "column": 15
                              },
                              "end": {
                                "row": 63,
                                "column": 70
                              },
                              "text": "[(computed_time, step, self._get_values(data, dtype, shape))\n                for step, computed_time, data, dtype, shape in cursor]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 62,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 16
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "tuple",
                                  "start": {
                                    "row": 62,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 75
                                  },
                                  "text": "(computed_time, step, self._get_values(data, dtype, shape))",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 62,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 17
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 62,
                                        "column": 17
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 30
                                      },
                                      "text": "computed_time"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 62,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 31
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 62,
                                        "column": 32
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 36
                                      },
                                      "text": "step"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 62,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 37
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 62,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 74
                                      },
                                      "text": "self._get_values(data, dtype, shape)",
                                      "children": [
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 62,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 54
                                          },
                                          "text": "self._get_values",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 42
                                              },
                                              "text": "self"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 62,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 43
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 54
                                              },
                                              "text": "_get_values"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 62,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 62,
                                            "column": 74
                                          },
                                          "text": "(data, dtype, shape)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 62,
                                                "column": 54
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 55
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 55
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 59
                                              },
                                              "text": "data"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 62,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 60
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 61
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 66
                                              },
                                              "text": "dtype"
                                            },
                                            {
                                              "type": ",",
                                              "start": {
                                                "row": 62,
                                                "column": 66
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 67
                                              },
                                              "text": ","
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 62,
                                                "column": 68
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 73
                                              },
                                              "text": "shape"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 62,
                                                "column": 73
                                              },
                                              "end": {
                                                "row": 62,
                                                "column": 74
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 62,
                                        "column": 74
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 75
                                      },
                                      "text": ")"
                                    }
                                  ]
                                },
                                {
                                  "type": "for_in_clause",
                                  "start": {
                                    "row": 63,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 69
                                  },
                                  "text": "for step, computed_time, data, dtype, shape in cursor",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start": {
                                        "row": 63,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 19
                                      },
                                      "text": "for"
                                    },
                                    {
                                      "type": "pattern_list",
                                      "start": {
                                        "row": 63,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 59
                                      },
                                      "text": "step, computed_time, data, dtype, shape",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 24
                                          },
                                          "text": "step"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 63,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 25
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 39
                                          },
                                          "text": "computed_time"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 63,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 40
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 41
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 45
                                          },
                                          "text": "data"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 63,
                                            "column": 45
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 46
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 47
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 52
                                          },
                                          "text": "dtype"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 63,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 53
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 63,
                                            "column": 54
                                          },
                                          "end": {
                                            "row": 63,
                                            "column": 59
                                          },
                                          "text": "shape"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "in",
                                      "start": {
                                        "row": 63,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 62
                                      },
                                      "text": "in"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 63,
                                        "column": 63
                                      },
                                      "end": {
                                        "row": 63,
                                        "column": 69
                                      },
                                      "text": "cursor"
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 63,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 70
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start": {
                    "row": 64,
                    "column": 4
                  },
                  "end": {
                    "row": 76,
                    "column": 39
                  },
                  "text": "else:\n      # Serve data from events files.\n      try:\n        tensor_events = self._multiplexer.Tensors(run, tag)\n      except KeyError:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      if downsample_to is not None and len(tensor_events) > downsample_to:\n        rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)\n        indices = sorted(rand_indices)\n        tensor_events = [tensor_events[i] for i in indices]\n      events = [[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]\n                for e in tensor_events]",
                  "children": [
                    {
                      "type": "else",
                      "start": {
                        "row": 64,
                        "column": 4
                      },
                      "end": {
                        "row": 64,
                        "column": 8
                      },
                      "text": "else"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 64,
                        "column": 8
                      },
                      "end": {
                        "row": 64,
                        "column": 9
                      },
                      "text": ":"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 65,
                        "column": 6
                      },
                      "end": {
                        "row": 65,
                        "column": 37
                      },
                      "text": "# Serve data from events files."
                    },
                    {
                      "type": "block",
                      "start": {
                        "row": 66,
                        "column": 6
                      },
                      "end": {
                        "row": 76,
                        "column": 39
                      },
                      "text": "try:\n        tensor_events = self._multiplexer.Tensors(run, tag)\n      except KeyError:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))\n      if downsample_to is not None and len(tensor_events) > downsample_to:\n        rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)\n        indices = sorted(rand_indices)\n        tensor_events = [tensor_events[i] for i in indices]\n      events = [[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]\n                for e in tensor_events]",
                      "children": [
                        {
                          "type": "try_statement",
                          "start": {
                            "row": 66,
                            "column": 6
                          },
                          "end": {
                            "row": 69,
                            "column": 71
                          },
                          "text": "try:\n        tensor_events = self._multiplexer.Tensors(run, tag)\n      except KeyError:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))",
                          "children": [
                            {
                              "type": "try",
                              "start": {
                                "row": 66,
                                "column": 6
                              },
                              "end": {
                                "row": 66,
                                "column": 9
                              },
                              "text": "try"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 66,
                                "column": 9
                              },
                              "end": {
                                "row": 66,
                                "column": 10
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 67,
                                "column": 8
                              },
                              "end": {
                                "row": 67,
                                "column": 59
                              },
                              "text": "tensor_events = self._multiplexer.Tensors(run, tag)",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 67,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 59
                                  },
                                  "text": "tensor_events = self._multiplexer.Tensors(run, tag)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 67,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 59
                                      },
                                      "text": "tensor_events = self._multiplexer.Tensors(run, tag)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 67,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 21
                                          },
                                          "text": "tensor_events"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 67,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 23
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 67,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 59
                                          },
                                          "text": "self._multiplexer.Tensors(run, tag)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 67,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 49
                                              },
                                              "text": "self._multiplexer.Tensors",
                                              "children": [
                                                {
                                                  "type": "attribute",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 41
                                                  },
                                                  "text": "self._multiplexer",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 67,
                                                        "column": 24
                                                      },
                                                      "end": {
                                                        "row": 67,
                                                        "column": 28
                                                      },
                                                      "text": "self"
                                                    },
                                                    {
                                                      "type": ".",
                                                      "start": {
                                                        "row": 67,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 67,
                                                        "column": 29
                                                      },
                                                      "text": "."
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 67,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 67,
                                                        "column": 41
                                                      },
                                                      "text": "_multiplexer"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 42
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 49
                                                  },
                                                  "text": "Tensors"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 67,
                                                "column": 49
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 59
                                              },
                                              "text": "(run, tag)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 49
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 50
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 53
                                                  },
                                                  "text": "run"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 53
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 54
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 58
                                                  },
                                                  "text": "tag"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 59
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "except_clause",
                              "start": {
                                "row": 68,
                                "column": 6
                              },
                              "end": {
                                "row": 69,
                                "column": 71
                              },
                              "text": "except KeyError:\n        raise ValueError('No histogram tag %r for run %r' % (tag, run))",
                              "children": [
                                {
                                  "type": "except",
                                  "start": {
                                    "row": 68,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 12
                                  },
                                  "text": "except"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 68,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 21
                                  },
                                  "text": "KeyError"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 68,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 68,
                                    "column": 22
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 69,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 71
                                  },
                                  "text": "raise ValueError('No histogram tag %r for run %r' % (tag, run))",
                                  "children": [
                                    {
                                      "type": "raise_statement",
                                      "start": {
                                        "row": 69,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 71
                                      },
                                      "text": "raise ValueError('No histogram tag %r for run %r' % (tag, run))",
                                      "children": [
                                        {
                                          "type": "raise",
                                          "start": {
                                            "row": 69,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 13
                                          },
                                          "text": "raise"
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 69,
                                            "column": 14
                                          },
                                          "end": {
                                            "row": 69,
                                            "column": 71
                                          },
                                          "text": "ValueError('No histogram tag %r for run %r' % (tag, run))",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 69,
                                                "column": 14
                                              },
                                              "end": {
                                                "row": 69,
                                                "column": 24
                                              },
                                              "text": "ValueError"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 69,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 69,
                                                "column": 71
                                              },
                                              "text": "('No histogram tag %r for run %r' % (tag, run))",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 69,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 69,
                                                    "column": 25
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "binary_operator",
                                                  "start": {
                                                    "row": 69,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 69,
                                                    "column": 70
                                                  },
                                                  "text": "'No histogram tag %r for run %r' % (tag, run)",
                                                  "children": [
                                                    {
                                                      "type": "string",
                                                      "start": {
                                                        "row": 69,
                                                        "column": 25
                                                      },
                                                      "end": {
                                                        "row": 69,
                                                        "column": 57
                                                      },
                                                      "text": "'No histogram tag %r for run %r'",
                                                      "children": [
                                                        {
                                                          "type": "string_start",
                                                          "start": {
                                                            "row": 69,
                                                            "column": 25
                                                          },
                                                          "end": {
                                                            "row": 69,
                                                            "column": 26
                                                          },
                                                          "text": "'"
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start": {
                                                            "row": 69,
                                                            "column": 26
                                                          },
                                                          "end": {
                                                            "row": 69,
                                                            "column": 56
                                                          },
                                                          "text": "No histogram tag %r for run %r"
                                                        },
                                                        {
                                                          "type": "string_end",
                                                          "start": {
                                                            "row": 69,
                                                            "column": 56
                                                          },
                                                          "end": {
                                                            "row": 69,
                                                            "column": 57
                                                          },
                                                          "text": "'"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start": {
                                                        "row": 69,
                                                        "column": 58
                                                      },
                                                      "end": {
                                                        "row": 69,
                                                        "column": 59
                                                      },
                                                      "text": "%"
                                                    },
                                                    {
                                                      "type": "tuple",
                                                      "start": {
                                                        "row": 69,
                                                        "column": 60
                                                      },
                                                      "end": {
                                                        "row": 69,
                                                        "column": 70
                                                      },
                                                      "text": "(tag, run)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 69,
                                                            "column": 60
                                                          },
                                                          "end": {
                                                            "row": 69,
                                                            "column": 61
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 69,
                                                            "column": 61
                                                          },
                                                          "end": {
                                                            "row": 69,
                                                            "column": 64
                                                          },
                                                          "text": "tag"
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 69,
                                                            "column": 64
                                                          },
                                                          "end": {
                                                            "row": 69,
                                                            "column": 65
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 69,
                                                            "column": 66
                                                          },
                                                          "end": {
                                                            "row": 69,
                                                            "column": 69
                                                          },
                                                          "text": "run"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 69,
                                                            "column": 69
                                                          },
                                                          "end": {
                                                            "row": 69,
                                                            "column": 70
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 69,
                                                    "column": 70
                                                  },
                                                  "end": {
                                                    "row": 69,
                                                    "column": 71
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "if_statement",
                          "start": {
                            "row": 70,
                            "column": 6
                          },
                          "end": {
                            "row": 74,
                            "column": 59
                          },
                          "text": "if downsample_to is not None and len(tensor_events) > downsample_to:\n        rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)\n        indices = sorted(rand_indices)\n        tensor_events = [tensor_events[i] for i in indices]",
                          "children": [
                            {
                              "type": "if",
                              "start": {
                                "row": 70,
                                "column": 6
                              },
                              "end": {
                                "row": 70,
                                "column": 8
                              },
                              "text": "if"
                            },
                            {
                              "type": "boolean_operator",
                              "start": {
                                "row": 70,
                                "column": 9
                              },
                              "end": {
                                "row": 70,
                                "column": 73
                              },
                              "text": "downsample_to is not None and len(tensor_events) > downsample_to",
                              "children": [
                                {
                                  "type": "comparison_operator",
                                  "start": {
                                    "row": 70,
                                    "column": 9
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 34
                                  },
                                  "text": "downsample_to is not None",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 70,
                                        "column": 9
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 22
                                      },
                                      "text": "downsample_to"
                                    },
                                    {
                                      "type": "is not",
                                      "start": {
                                        "row": 70,
                                        "column": 23
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 25
                                      },
                                      "text": "is"
                                    },
                                    {
                                      "type": "is not",
                                      "start": {
                                        "row": 70,
                                        "column": 26
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 29
                                      },
                                      "text": "not"
                                    },
                                    {
                                      "type": "none",
                                      "start": {
                                        "row": 70,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 34
                                      },
                                      "text": "None"
                                    }
                                  ]
                                },
                                {
                                  "type": "and",
                                  "start": {
                                    "row": 70,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 38
                                  },
                                  "text": "and"
                                },
                                {
                                  "type": "comparison_operator",
                                  "start": {
                                    "row": 70,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 73
                                  },
                                  "text": "len(tensor_events) > downsample_to",
                                  "children": [
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 70,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 57
                                      },
                                      "text": "len(tensor_events)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 70,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 42
                                          },
                                          "text": "len"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 70,
                                            "column": 42
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 57
                                          },
                                          "text": "(tensor_events)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 70,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 43
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 70,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 56
                                              },
                                              "text": "tensor_events"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 70,
                                                "column": 56
                                              },
                                              "end": {
                                                "row": 70,
                                                "column": 57
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ">",
                                      "start": {
                                        "row": 70,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 59
                                      },
                                      "text": ">"
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 70,
                                        "column": 60
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 73
                                      },
                                      "text": "downsample_to"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 70,
                                "column": 73
                              },
                              "end": {
                                "row": 70,
                                "column": 74
                              },
                              "text": ":"
                            },
                            {
                              "type": "block",
                              "start": {
                                "row": 71,
                                "column": 8
                              },
                              "end": {
                                "row": 74,
                                "column": 59
                              },
                              "text": "rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)\n        indices = sorted(rand_indices)\n        tensor_events = [tensor_events[i] for i in indices]",
                              "children": [
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 71,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 72,
                                    "column": 64
                                  },
                                  "text": "rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 71,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 72,
                                        "column": 64
                                      },
                                      "text": "rand_indices = random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 71,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 71,
                                            "column": 20
                                          },
                                          "text": "rand_indices"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 71,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 71,
                                            "column": 22
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 71,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 72,
                                            "column": 64
                                          },
                                          "text": "random.Random(0).sample(\n            six.moves.xrange(len(tensor_events)), downsample_to)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 71,
                                                "column": 23
                                              },
                                              "end": {
                                                "row": 71,
                                                "column": 46
                                              },
                                              "text": "random.Random(0).sample",
                                              "children": [
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 71,
                                                    "column": 23
                                                  },
                                                  "end": {
                                                    "row": 71,
                                                    "column": 39
                                                  },
                                                  "text": "random.Random(0)",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 23
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 36
                                                      },
                                                      "text": "random.Random",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 71,
                                                            "column": 23
                                                          },
                                                          "end": {
                                                            "row": 71,
                                                            "column": 29
                                                          },
                                                          "text": "random"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 71,
                                                            "column": 29
                                                          },
                                                          "end": {
                                                            "row": 71,
                                                            "column": 30
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 71,
                                                            "column": 30
                                                          },
                                                          "end": {
                                                            "row": 71,
                                                            "column": 36
                                                          },
                                                          "text": "Random"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 71,
                                                        "column": 36
                                                      },
                                                      "end": {
                                                        "row": 71,
                                                        "column": 39
                                                      },
                                                      "text": "(0)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 71,
                                                            "column": 36
                                                          },
                                                          "end": {
                                                            "row": 71,
                                                            "column": 37
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "integer",
                                                          "start": {
                                                            "row": 71,
                                                            "column": 37
                                                          },
                                                          "end": {
                                                            "row": 71,
                                                            "column": 38
                                                          },
                                                          "text": "0"
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 71,
                                                            "column": 38
                                                          },
                                                          "end": {
                                                            "row": 71,
                                                            "column": 39
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 71,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 71,
                                                    "column": 40
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 71,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 71,
                                                    "column": 46
                                                  },
                                                  "text": "sample"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 71,
                                                "column": 46
                                              },
                                              "end": {
                                                "row": 72,
                                                "column": 64
                                              },
                                              "text": "(\n            six.moves.xrange(len(tensor_events)), downsample_to)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 71,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 71,
                                                    "column": 47
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 12
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 48
                                                  },
                                                  "text": "six.moves.xrange(len(tensor_events))",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 12
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 28
                                                      },
                                                      "text": "six.moves.xrange",
                                                      "children": [
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 12
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 21
                                                          },
                                                          "text": "six.moves",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 72,
                                                                "column": 12
                                                              },
                                                              "end": {
                                                                "row": 72,
                                                                "column": 15
                                                              },
                                                              "text": "six"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 72,
                                                                "column": 15
                                                              },
                                                              "end": {
                                                                "row": 72,
                                                                "column": 16
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 72,
                                                                "column": 16
                                                              },
                                                              "end": {
                                                                "row": 72,
                                                                "column": 21
                                                              },
                                                              "text": "moves"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 21
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 22
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 22
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 28
                                                          },
                                                          "text": "xrange"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 72,
                                                        "column": 28
                                                      },
                                                      "end": {
                                                        "row": 72,
                                                        "column": 48
                                                      },
                                                      "text": "(len(tensor_events))",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 28
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 29
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "call",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 29
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 47
                                                          },
                                                          "text": "len(tensor_events)",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 72,
                                                                "column": 29
                                                              },
                                                              "end": {
                                                                "row": 72,
                                                                "column": 32
                                                              },
                                                              "text": "len"
                                                            },
                                                            {
                                                              "type": "argument_list",
                                                              "start": {
                                                                "row": 72,
                                                                "column": 32
                                                              },
                                                              "end": {
                                                                "row": 72,
                                                                "column": 47
                                                              },
                                                              "text": "(tensor_events)",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start": {
                                                                    "row": 72,
                                                                    "column": 32
                                                                  },
                                                                  "end": {
                                                                    "row": 72,
                                                                    "column": 33
                                                                  },
                                                                  "text": "("
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start": {
                                                                    "row": 72,
                                                                    "column": 33
                                                                  },
                                                                  "end": {
                                                                    "row": 72,
                                                                    "column": 46
                                                                  },
                                                                  "text": "tensor_events"
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start": {
                                                                    "row": 72,
                                                                    "column": 46
                                                                  },
                                                                  "end": {
                                                                    "row": 72,
                                                                    "column": 47
                                                                  },
                                                                  "text": ")"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 72,
                                                            "column": 47
                                                          },
                                                          "end": {
                                                            "row": 72,
                                                            "column": 48
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 49
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 63
                                                  },
                                                  "text": "downsample_to"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 72,
                                                    "column": 63
                                                  },
                                                  "end": {
                                                    "row": 72,
                                                    "column": 64
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 73,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 38
                                  },
                                  "text": "indices = sorted(rand_indices)",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 73,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 73,
                                        "column": 38
                                      },
                                      "text": "indices = sorted(rand_indices)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 73,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 73,
                                            "column": 15
                                          },
                                          "text": "indices"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 73,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 73,
                                            "column": 17
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 73,
                                            "column": 18
                                          },
                                          "end": {
                                            "row": 73,
                                            "column": 38
                                          },
                                          "text": "sorted(rand_indices)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 73,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 24
                                              },
                                              "text": "sorted"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 73,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 73,
                                                "column": 38
                                              },
                                              "text": "(rand_indices)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 73,
                                                    "column": 24
                                                  },
                                                  "end": {
                                                    "row": 73,
                                                    "column": 25
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 73,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 73,
                                                    "column": 37
                                                  },
                                                  "text": "rand_indices"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 73,
                                                    "column": 37
                                                  },
                                                  "end": {
                                                    "row": 73,
                                                    "column": 38
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start": {
                                    "row": 74,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 59
                                  },
                                  "text": "tensor_events = [tensor_events[i] for i in indices]",
                                  "children": [
                                    {
                                      "type": "assignment",
                                      "start": {
                                        "row": 74,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 59
                                      },
                                      "text": "tensor_events = [tensor_events[i] for i in indices]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 74,
                                            "column": 8
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 21
                                          },
                                          "text": "tensor_events"
                                        },
                                        {
                                          "type": "=",
                                          "start": {
                                            "row": 74,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 23
                                          },
                                          "text": "="
                                        },
                                        {
                                          "type": "list_comprehension",
                                          "start": {
                                            "row": 74,
                                            "column": 24
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 59
                                          },
                                          "text": "[tensor_events[i] for i in indices]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 74,
                                                "column": 24
                                              },
                                              "end": {
                                                "row": 74,
                                                "column": 25
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "subscript",
                                              "start": {
                                                "row": 74,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 74,
                                                "column": 41
                                              },
                                              "text": "tensor_events[i]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 25
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 38
                                                  },
                                                  "text": "tensor_events"
                                                },
                                                {
                                                  "type": "[",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 39
                                                  },
                                                  "text": "["
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 40
                                                  },
                                                  "text": "i"
                                                },
                                                {
                                                  "type": "]",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 41
                                                  },
                                                  "text": "]"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "for_in_clause",
                                              "start": {
                                                "row": 74,
                                                "column": 42
                                              },
                                              "end": {
                                                "row": 74,
                                                "column": 58
                                              },
                                              "text": "for i in indices",
                                              "children": [
                                                {
                                                  "type": "for",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 42
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 45
                                                  },
                                                  "text": "for"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 46
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 47
                                                  },
                                                  "text": "i"
                                                },
                                                {
                                                  "type": "in",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 50
                                                  },
                                                  "text": "in"
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 74,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "row": 74,
                                                    "column": 58
                                                  },
                                                  "text": "indices"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 74,
                                                "column": 58
                                              },
                                              "end": {
                                                "row": 74,
                                                "column": 59
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start": {
                            "row": 75,
                            "column": 6
                          },
                          "end": {
                            "row": 76,
                            "column": 39
                          },
                          "text": "events = [[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]\n                for e in tensor_events]",
                          "children": [
                            {
                              "type": "assignment",
                              "start": {
                                "row": 75,
                                "column": 6
                              },
                              "end": {
                                "row": 76,
                                "column": 39
                              },
                              "text": "events = [[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]\n                for e in tensor_events]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 75,
                                    "column": 6
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 12
                                  },
                                  "text": "events"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 75,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 14
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "list_comprehension",
                                  "start": {
                                    "row": 75,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 76,
                                    "column": 39
                                  },
                                  "text": "[[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]\n                for e in tensor_events]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 75,
                                        "column": 15
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 16
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "list",
                                      "start": {
                                        "row": 75,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 88
                                      },
                                      "text": "[e.wall_time, e.step, tensor_util.make_ndarray(e.tensor_proto).tolist()]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 75,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 17
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 75,
                                            "column": 17
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 28
                                          },
                                          "text": "e.wall_time",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 75,
                                                "column": 17
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 18
                                              },
                                              "text": "e"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 75,
                                                "column": 18
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 19
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 75,
                                                "column": 19
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 28
                                              },
                                              "text": "wall_time"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 75,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 29
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "attribute",
                                          "start": {
                                            "row": 75,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 36
                                          },
                                          "text": "e.step",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 75,
                                                "column": 30
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 31
                                              },
                                              "text": "e"
                                            },
                                            {
                                              "type": ".",
                                              "start": {
                                                "row": 75,
                                                "column": 31
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 32
                                              },
                                              "text": "."
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 75,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 36
                                              },
                                              "text": "step"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 75,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 37
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 75,
                                            "column": 38
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 87
                                          },
                                          "text": "tensor_util.make_ndarray(e.tensor_proto).tolist()",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 75,
                                                "column": 38
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 85
                                              },
                                              "text": "tensor_util.make_ndarray(e.tensor_proto).tolist",
                                              "children": [
                                                {
                                                  "type": "call",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 38
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 78
                                                  },
                                                  "text": "tensor_util.make_ndarray(e.tensor_proto)",
                                                  "children": [
                                                    {
                                                      "type": "attribute",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 62
                                                      },
                                                      "text": "tensor_util.make_ndarray",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 38
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 49
                                                          },
                                                          "text": "tensor_util"
                                                        },
                                                        {
                                                          "type": ".",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 49
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 50
                                                          },
                                                          "text": "."
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 50
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 62
                                                          },
                                                          "text": "make_ndarray"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start": {
                                                        "row": 75,
                                                        "column": 62
                                                      },
                                                      "end": {
                                                        "row": 75,
                                                        "column": 78
                                                      },
                                                      "text": "(e.tensor_proto)",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 62
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 63
                                                          },
                                                          "text": "("
                                                        },
                                                        {
                                                          "type": "attribute",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 63
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 77
                                                          },
                                                          "text": "e.tensor_proto",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 63
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 64
                                                              },
                                                              "text": "e"
                                                            },
                                                            {
                                                              "type": ".",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 64
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 65
                                                              },
                                                              "text": "."
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 75,
                                                                "column": 65
                                                              },
                                                              "end": {
                                                                "row": 75,
                                                                "column": 77
                                                              },
                                                              "text": "tensor_proto"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start": {
                                                            "row": 75,
                                                            "column": 77
                                                          },
                                                          "end": {
                                                            "row": 75,
                                                            "column": 78
                                                          },
                                                          "text": ")"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 78
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 79
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 79
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 85
                                                  },
                                                  "text": "tolist"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 75,
                                                "column": 85
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 87
                                              },
                                              "text": "()",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 85
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 86
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 86
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 87
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 75,
                                            "column": 87
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 88
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "for_in_clause",
                                      "start": {
                                        "row": 76,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 38
                                      },
                                      "text": "for e in tensor_events",
                                      "children": [
                                        {
                                          "type": "for",
                                          "start": {
                                            "row": 76,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 76,
                                            "column": 19
                                          },
                                          "text": "for"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 76,
                                            "column": 20
                                          },
                                          "end": {
                                            "row": 76,
                                            "column": 21
                                          },
                                          "text": "e"
                                        },
                                        {
                                          "type": "in",
                                          "start": {
                                            "row": 76,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 76,
                                            "column": 24
                                          },
                                          "text": "in"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 76,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 76,
                                            "column": 38
                                          },
                                          "text": "tensor_events"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 76,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 39
                                      },
                                      "text": "]"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 77,
                "column": 4
              },
              "end": {
                "row": 77,
                "column": 39
              },
              "text": "return (events, 'application/json')",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 77,
                    "column": 4
                  },
                  "end": {
                    "row": 77,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "tuple",
                  "start": {
                    "row": 77,
                    "column": 11
                  },
                  "end": {
                    "row": 77,
                    "column": 39
                  },
                  "text": "(events, 'application/json')",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 77,
                        "column": 11
                      },
                      "end": {
                        "row": 77,
                        "column": 12
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 77,
                        "column": 12
                      },
                      "end": {
                        "row": 77,
                        "column": 18
                      },
                      "text": "events"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 77,
                        "column": 18
                      },
                      "end": {
                        "row": 77,
                        "column": 19
                      },
                      "text": ","
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 77,
                        "column": 20
                      },
                      "end": {
                        "row": 77,
                        "column": 38
                      },
                      "text": "'application/json'",
                      "children": [
                        {
                          "type": "string_start",
                          "start": {
                            "row": 77,
                            "column": 20
                          },
                          "end": {
                            "row": 77,
                            "column": 21
                          },
                          "text": "'"
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 77,
                            "column": 21
                          },
                          "end": {
                            "row": 77,
                            "column": 37
                          },
                          "text": "application/json"
                        },
                        {
                          "type": "string_end",
                          "start": {
                            "row": 77,
                            "column": 37
                          },
                          "end": {
                            "row": 77,
                            "column": 38
                          },
                          "text": "'"
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 77,
                        "column": 38
                      },
                      "end": {
                        "row": 77,
                        "column": 39
                      },
                      "text": ")"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}