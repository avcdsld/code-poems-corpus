{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 92,
    "column": 31
  },
  "text": "def get_valid_actions(name_mapping: Dict[str, str],\n                      type_signatures: Dict[str, Type],\n                      basic_types: Set[Type],\n                      multi_match_mapping: Dict[Type, List[Type]] = None,\n                      valid_starting_types: Set[Type] = None,\n                      num_nested_lambdas: int = 0) -> Dict[str, List[str]]:\n    \"\"\"\n    Generates all the valid actions starting from each non-terminal. For terminals of a specific\n    type, we simply add a production from the type to the terminal. For all terminal `functions`,\n    we additionally add a rule that allows their return type to be generated from an application of\n    the function.  For example, the function ``<e,<r,<d,r>>>``, which takes three arguments and\n    returns an ``r`` would generate a the production rule ``r -> [<e,<r,<d,r>>>, e, r, d]``.\n\n    For functions that do not contain ANY_TYPE or placeholder types, this is straight-forward.\n    When there are ANY_TYPES or placeholders, we substitute the ANY_TYPE with all possible basic\n    types, and then produce a similar rule.  For example, the identity function, with type\n    ``<#1,#1>`` and basic types ``e`` and ``r``,  would produce the rules ``e -> [<#1,#1>, e]`` and\n    ``r -> [<#1,#1>, r]``.\n\n    We additionally add a valid action from the start symbol to all ``valid_starting_types``.\n\n    Parameters\n    ----------\n    name_mapping : ``Dict[str, str]``\n        The mapping of names that appear in your logical form languages to their aliases for NLTK.\n        If you are getting all valid actions for a type declaration, this can be the\n        ``COMMON_NAME_MAPPING``.\n    type_signatures : ``Dict[str, Type]``\n        The mapping from name aliases to their types. If you are getting all valid actions for a\n        type declaration, this can be the ``COMMON_TYPE_SIGNATURE``.\n    basic_types : ``Set[Type]``\n        Set of all basic types in the type declaration.\n    multi_match_mapping : ``Dict[Type, List[Type]]`` (optional)\n        A mapping from `MultiMatchNamedBasicTypes` to the types they can match. This may be\n        different from the type's ``types_to_match`` field based on the context. While building action\n        sequences that lead to complex types with ``MultiMatchNamedBasicTypes``, if a type does not\n        occur in this mapping, the default set of ``types_to_match`` for that type will be used.\n    valid_starting_types : ``Set[Type]``, optional\n        These are the valid starting types for your grammar; e.g., what types are we allowed to\n        parse expressions into?  We will add a \"START -> TYPE\" rule for each of these types.  If\n        this is ``None``, we default to using ``basic_types``.\n    num_nested_lambdas : ``int`` (optional)\n        Does the language used permit lambda expressions?  And if so, how many nested lambdas do we\n        need to worry about?  We'll add rules like \"<r,d> -> ['lambda x', d]\" for all complex\n        types, where the variable is determined by the number of nestings.  We currently only\n        permit up to three levels of nesting, just for ease of implementation.\n    \"\"\"\n    valid_actions: Dict[str, Set[str]] = defaultdict(set)\n\n    valid_starting_types = valid_starting_types or basic_types\n    for type_ in valid_starting_types:\n        valid_actions[str(START_TYPE)].add(_make_production_string(START_TYPE, type_))\n\n    complex_types = set()\n    for name, alias in name_mapping.items():\n        # Lambda functions and variables associated with them get produced in specific contexts. So\n        # we do not add them to ``valid_actions`` here, and let ``GrammarState`` deal with it.\n        # ``var`` is a special function that some languages (like LambdaDCS) use within lambda\n        # functions to indicate the use of a variable (eg.: ``(lambda x (fb:row.row.year (var x)))``)\n        # We do not have to produce this function outside the scope of lambda. Even within lambdas,\n        # it is a lot easier to not do it, and let the action sequence to logical form transformation\n        # logic add it to the output logical forms instead.\n        if name in [\"lambda\", \"var\", \"x\", \"y\", \"z\"]:\n            continue\n        name_type = type_signatures[alias]\n        # Type to terminal productions.\n        for substituted_type in substitute_any_type(name_type, basic_types):\n            valid_actions[str(substituted_type)].add(_make_production_string(substituted_type, name))\n        # Keeping track of complex types.\n        if isinstance(name_type, ComplexType) and name_type != ANY_TYPE:\n            complex_types.add(name_type)\n\n    for complex_type in complex_types:\n        for substituted_type in substitute_any_type(complex_type, basic_types):\n            for head, production in _get_complex_type_production(substituted_type,\n                                                                 multi_match_mapping or {}):\n                valid_actions[str(head)].add(production)\n\n    # We can produce complex types with a lambda expression, though we'll leave out\n    # placeholder types for now.\n    for i in range(num_nested_lambdas):\n        lambda_var = chr(ord('x') + i)\n        # We'll only allow lambdas to be functions that take and return basic types as their\n        # arguments, for now.  Also, we're doing this for all possible complex types where\n        # the first and second types are basic types. So we may be overgenerating a bit.\n        for first_type in basic_types:\n            for second_type in basic_types:\n                key = ComplexType(first_type, second_type)\n                production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])\n                valid_actions[str(key)].add(production_string)\n\n    valid_action_strings = {key: sorted(value) for key, value in valid_actions.items()}\n    return valid_action_strings",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 92,
        "column": 31
      },
      "text": "def get_valid_actions(name_mapping: Dict[str, str],\n                      type_signatures: Dict[str, Type],\n                      basic_types: Set[Type],\n                      multi_match_mapping: Dict[Type, List[Type]] = None,\n                      valid_starting_types: Set[Type] = None,\n                      num_nested_lambdas: int = 0) -> Dict[str, List[str]]:\n    \"\"\"\n    Generates all the valid actions starting from each non-terminal. For terminals of a specific\n    type, we simply add a production from the type to the terminal. For all terminal `functions`,\n    we additionally add a rule that allows their return type to be generated from an application of\n    the function.  For example, the function ``<e,<r,<d,r>>>``, which takes three arguments and\n    returns an ``r`` would generate a the production rule ``r -> [<e,<r,<d,r>>>, e, r, d]``.\n\n    For functions that do not contain ANY_TYPE or placeholder types, this is straight-forward.\n    When there are ANY_TYPES or placeholders, we substitute the ANY_TYPE with all possible basic\n    types, and then produce a similar rule.  For example, the identity function, with type\n    ``<#1,#1>`` and basic types ``e`` and ``r``,  would produce the rules ``e -> [<#1,#1>, e]`` and\n    ``r -> [<#1,#1>, r]``.\n\n    We additionally add a valid action from the start symbol to all ``valid_starting_types``.\n\n    Parameters\n    ----------\n    name_mapping : ``Dict[str, str]``\n        The mapping of names that appear in your logical form languages to their aliases for NLTK.\n        If you are getting all valid actions for a type declaration, this can be the\n        ``COMMON_NAME_MAPPING``.\n    type_signatures : ``Dict[str, Type]``\n        The mapping from name aliases to their types. If you are getting all valid actions for a\n        type declaration, this can be the ``COMMON_TYPE_SIGNATURE``.\n    basic_types : ``Set[Type]``\n        Set of all basic types in the type declaration.\n    multi_match_mapping : ``Dict[Type, List[Type]]`` (optional)\n        A mapping from `MultiMatchNamedBasicTypes` to the types they can match. This may be\n        different from the type's ``types_to_match`` field based on the context. While building action\n        sequences that lead to complex types with ``MultiMatchNamedBasicTypes``, if a type does not\n        occur in this mapping, the default set of ``types_to_match`` for that type will be used.\n    valid_starting_types : ``Set[Type]``, optional\n        These are the valid starting types for your grammar; e.g., what types are we allowed to\n        parse expressions into?  We will add a \"START -> TYPE\" rule for each of these types.  If\n        this is ``None``, we default to using ``basic_types``.\n    num_nested_lambdas : ``int`` (optional)\n        Does the language used permit lambda expressions?  And if so, how many nested lambdas do we\n        need to worry about?  We'll add rules like \"<r,d> -> ['lambda x', d]\" for all complex\n        types, where the variable is determined by the number of nestings.  We currently only\n        permit up to three levels of nesting, just for ease of implementation.\n    \"\"\"\n    valid_actions: Dict[str, Set[str]] = defaultdict(set)\n\n    valid_starting_types = valid_starting_types or basic_types\n    for type_ in valid_starting_types:\n        valid_actions[str(START_TYPE)].add(_make_production_string(START_TYPE, type_))\n\n    complex_types = set()\n    for name, alias in name_mapping.items():\n        # Lambda functions and variables associated with them get produced in specific contexts. So\n        # we do not add them to ``valid_actions`` here, and let ``GrammarState`` deal with it.\n        # ``var`` is a special function that some languages (like LambdaDCS) use within lambda\n        # functions to indicate the use of a variable (eg.: ``(lambda x (fb:row.row.year (var x)))``)\n        # We do not have to produce this function outside the scope of lambda. Even within lambdas,\n        # it is a lot easier to not do it, and let the action sequence to logical form transformation\n        # logic add it to the output logical forms instead.\n        if name in [\"lambda\", \"var\", \"x\", \"y\", \"z\"]:\n            continue\n        name_type = type_signatures[alias]\n        # Type to terminal productions.\n        for substituted_type in substitute_any_type(name_type, basic_types):\n            valid_actions[str(substituted_type)].add(_make_production_string(substituted_type, name))\n        # Keeping track of complex types.\n        if isinstance(name_type, ComplexType) and name_type != ANY_TYPE:\n            complex_types.add(name_type)\n\n    for complex_type in complex_types:\n        for substituted_type in substitute_any_type(complex_type, basic_types):\n            for head, production in _get_complex_type_production(substituted_type,\n                                                                 multi_match_mapping or {}):\n                valid_actions[str(head)].add(production)\n\n    # We can produce complex types with a lambda expression, though we'll leave out\n    # placeholder types for now.\n    for i in range(num_nested_lambdas):\n        lambda_var = chr(ord('x') + i)\n        # We'll only allow lambdas to be functions that take and return basic types as their\n        # arguments, for now.  Also, we're doing this for all possible complex types where\n        # the first and second types are basic types. So we may be overgenerating a bit.\n        for first_type in basic_types:\n            for second_type in basic_types:\n                key = ComplexType(first_type, second_type)\n                production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])\n                valid_actions[str(key)].add(production_string)\n\n    valid_action_strings = {key: sorted(value) for key, value in valid_actions.items()}\n    return valid_action_strings",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 21
          },
          "text": "get_valid_actions"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 21
          },
          "end": {
            "row": 5,
            "column": 50
          },
          "text": "(name_mapping: Dict[str, str],\n                      type_signatures: Dict[str, Type],\n                      basic_types: Set[Type],\n                      multi_match_mapping: Dict[Type, List[Type]] = None,\n                      valid_starting_types: Set[Type] = None,\n                      num_nested_lambdas: int = 0)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 21
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "("
            },
            {
              "type": "typed_parameter",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 50
              },
              "text": "name_mapping: Dict[str, str]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 22
                  },
                  "end": {
                    "row": 0,
                    "column": 34
                  },
                  "text": "name_mapping"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 0,
                    "column": 34
                  },
                  "end": {
                    "row": 0,
                    "column": 35
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 0,
                    "column": 36
                  },
                  "end": {
                    "row": 0,
                    "column": 50
                  },
                  "text": "Dict[str, str]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 0,
                        "column": 36
                      },
                      "end": {
                        "row": 0,
                        "column": 50
                      },
                      "text": "Dict[str, str]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 0,
                            "column": 36
                          },
                          "end": {
                            "row": 0,
                            "column": 40
                          },
                          "text": "Dict"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 0,
                            "column": 40
                          },
                          "end": {
                            "row": 0,
                            "column": 50
                          },
                          "text": "[str, str]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 0,
                                "column": 40
                              },
                              "end": {
                                "row": 0,
                                "column": 41
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 0,
                                "column": 41
                              },
                              "end": {
                                "row": 0,
                                "column": 44
                              },
                              "text": "str",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 0,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 0,
                                    "column": 44
                                  },
                                  "text": "str"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 0,
                                "column": 44
                              },
                              "end": {
                                "row": 0,
                                "column": 45
                              },
                              "text": ","
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 0,
                                "column": 46
                              },
                              "end": {
                                "row": 0,
                                "column": 49
                              },
                              "text": "str",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 0,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 0,
                                    "column": 49
                                  },
                                  "text": "str"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 0,
                                "column": 49
                              },
                              "end": {
                                "row": 0,
                                "column": 50
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 50
              },
              "end": {
                "row": 0,
                "column": 51
              },
              "text": ","
            },
            {
              "type": "typed_parameter",
              "start": {
                "row": 1,
                "column": 22
              },
              "end": {
                "row": 1,
                "column": 54
              },
              "text": "type_signatures: Dict[str, Type]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 1,
                    "column": 22
                  },
                  "end": {
                    "row": 1,
                    "column": 37
                  },
                  "text": "type_signatures"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 1,
                    "column": 37
                  },
                  "end": {
                    "row": 1,
                    "column": 38
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 1,
                    "column": 39
                  },
                  "end": {
                    "row": 1,
                    "column": 54
                  },
                  "text": "Dict[str, Type]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 1,
                        "column": 39
                      },
                      "end": {
                        "row": 1,
                        "column": 54
                      },
                      "text": "Dict[str, Type]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 1,
                            "column": 39
                          },
                          "end": {
                            "row": 1,
                            "column": 43
                          },
                          "text": "Dict"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 1,
                            "column": 43
                          },
                          "end": {
                            "row": 1,
                            "column": 54
                          },
                          "text": "[str, Type]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 1,
                                "column": 43
                              },
                              "end": {
                                "row": 1,
                                "column": 44
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 1,
                                "column": 44
                              },
                              "end": {
                                "row": 1,
                                "column": 47
                              },
                              "text": "str",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 1,
                                    "column": 44
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 47
                                  },
                                  "text": "str"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 1,
                                "column": 47
                              },
                              "end": {
                                "row": 1,
                                "column": 48
                              },
                              "text": ","
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 1,
                                "column": 49
                              },
                              "end": {
                                "row": 1,
                                "column": 53
                              },
                              "text": "Type",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 1,
                                    "column": 49
                                  },
                                  "end": {
                                    "row": 1,
                                    "column": 53
                                  },
                                  "text": "Type"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 1,
                                "column": 53
                              },
                              "end": {
                                "row": 1,
                                "column": 54
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 54
              },
              "end": {
                "row": 1,
                "column": 55
              },
              "text": ","
            },
            {
              "type": "typed_parameter",
              "start": {
                "row": 2,
                "column": 22
              },
              "end": {
                "row": 2,
                "column": 44
              },
              "text": "basic_types: Set[Type]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 22
                  },
                  "end": {
                    "row": 2,
                    "column": 33
                  },
                  "text": "basic_types"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 2,
                    "column": 33
                  },
                  "end": {
                    "row": 2,
                    "column": 34
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 2,
                    "column": 35
                  },
                  "end": {
                    "row": 2,
                    "column": 44
                  },
                  "text": "Set[Type]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 2,
                        "column": 35
                      },
                      "end": {
                        "row": 2,
                        "column": 44
                      },
                      "text": "Set[Type]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 2,
                            "column": 35
                          },
                          "end": {
                            "row": 2,
                            "column": 38
                          },
                          "text": "Set"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 2,
                            "column": 38
                          },
                          "end": {
                            "row": 2,
                            "column": 44
                          },
                          "text": "[Type]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 2,
                                "column": 38
                              },
                              "end": {
                                "row": 2,
                                "column": 39
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 2,
                                "column": 39
                              },
                              "end": {
                                "row": 2,
                                "column": 43
                              },
                              "text": "Type",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 2,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 2,
                                    "column": 43
                                  },
                                  "text": "Type"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 2,
                                "column": 43
                              },
                              "end": {
                                "row": 2,
                                "column": 44
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 44
              },
              "end": {
                "row": 2,
                "column": 45
              },
              "text": ","
            },
            {
              "type": "typed_default_parameter",
              "start": {
                "row": 3,
                "column": 22
              },
              "end": {
                "row": 3,
                "column": 72
              },
              "text": "multi_match_mapping: Dict[Type, List[Type]] = None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 22
                  },
                  "end": {
                    "row": 3,
                    "column": 41
                  },
                  "text": "multi_match_mapping"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 3,
                    "column": 41
                  },
                  "end": {
                    "row": 3,
                    "column": 42
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 3,
                    "column": 43
                  },
                  "end": {
                    "row": 3,
                    "column": 65
                  },
                  "text": "Dict[Type, List[Type]]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 3,
                        "column": 43
                      },
                      "end": {
                        "row": 3,
                        "column": 65
                      },
                      "text": "Dict[Type, List[Type]]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 3,
                            "column": 43
                          },
                          "end": {
                            "row": 3,
                            "column": 47
                          },
                          "text": "Dict"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 3,
                            "column": 47
                          },
                          "end": {
                            "row": 3,
                            "column": 65
                          },
                          "text": "[Type, List[Type]]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 3,
                                "column": 47
                              },
                              "end": {
                                "row": 3,
                                "column": 48
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 3,
                                "column": 48
                              },
                              "end": {
                                "row": 3,
                                "column": 52
                              },
                              "text": "Type",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 3,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 52
                                  },
                                  "text": "Type"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 3,
                                "column": 52
                              },
                              "end": {
                                "row": 3,
                                "column": 53
                              },
                              "text": ","
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 3,
                                "column": 54
                              },
                              "end": {
                                "row": 3,
                                "column": 64
                              },
                              "text": "List[Type]",
                              "children": [
                                {
                                  "type": "generic_type",
                                  "start": {
                                    "row": 3,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 3,
                                    "column": 64
                                  },
                                  "text": "List[Type]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 3,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 58
                                      },
                                      "text": "List"
                                    },
                                    {
                                      "type": "type_parameter",
                                      "start": {
                                        "row": 3,
                                        "column": 58
                                      },
                                      "end": {
                                        "row": 3,
                                        "column": 64
                                      },
                                      "text": "[Type]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 3,
                                            "column": 58
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 59
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "type",
                                          "start": {
                                            "row": 3,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 63
                                          },
                                          "text": "Type",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 3,
                                                "column": 59
                                              },
                                              "end": {
                                                "row": 3,
                                                "column": 63
                                              },
                                              "text": "Type"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 3,
                                            "column": 63
                                          },
                                          "end": {
                                            "row": 3,
                                            "column": 64
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 3,
                                "column": 64
                              },
                              "end": {
                                "row": 3,
                                "column": 65
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 66
                  },
                  "end": {
                    "row": 3,
                    "column": 67
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 3,
                    "column": 68
                  },
                  "end": {
                    "row": 3,
                    "column": 72
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 3,
                "column": 72
              },
              "end": {
                "row": 3,
                "column": 73
              },
              "text": ","
            },
            {
              "type": "typed_default_parameter",
              "start": {
                "row": 4,
                "column": 22
              },
              "end": {
                "row": 4,
                "column": 60
              },
              "text": "valid_starting_types: Set[Type] = None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 4,
                    "column": 22
                  },
                  "end": {
                    "row": 4,
                    "column": 42
                  },
                  "text": "valid_starting_types"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 4,
                    "column": 42
                  },
                  "end": {
                    "row": 4,
                    "column": 43
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 4,
                    "column": 44
                  },
                  "end": {
                    "row": 4,
                    "column": 53
                  },
                  "text": "Set[Type]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 4,
                        "column": 44
                      },
                      "end": {
                        "row": 4,
                        "column": 53
                      },
                      "text": "Set[Type]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 4,
                            "column": 44
                          },
                          "end": {
                            "row": 4,
                            "column": 47
                          },
                          "text": "Set"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 4,
                            "column": 47
                          },
                          "end": {
                            "row": 4,
                            "column": 53
                          },
                          "text": "[Type]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 4,
                                "column": 47
                              },
                              "end": {
                                "row": 4,
                                "column": 48
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 4,
                                "column": 48
                              },
                              "end": {
                                "row": 4,
                                "column": 52
                              },
                              "text": "Type",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 4,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 4,
                                    "column": 52
                                  },
                                  "text": "Type"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 4,
                                "column": 52
                              },
                              "end": {
                                "row": 4,
                                "column": 53
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 4,
                    "column": 54
                  },
                  "end": {
                    "row": 4,
                    "column": 55
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 4,
                    "column": 56
                  },
                  "end": {
                    "row": 4,
                    "column": 60
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 4,
                "column": 60
              },
              "end": {
                "row": 4,
                "column": 61
              },
              "text": ","
            },
            {
              "type": "typed_default_parameter",
              "start": {
                "row": 5,
                "column": 22
              },
              "end": {
                "row": 5,
                "column": 49
              },
              "text": "num_nested_lambdas: int = 0",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 22
                  },
                  "end": {
                    "row": 5,
                    "column": 40
                  },
                  "text": "num_nested_lambdas"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 5,
                    "column": 40
                  },
                  "end": {
                    "row": 5,
                    "column": 41
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 5,
                    "column": 42
                  },
                  "end": {
                    "row": 5,
                    "column": 45
                  },
                  "text": "int",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 42
                      },
                      "end": {
                        "row": 5,
                        "column": 45
                      },
                      "text": "int"
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 5,
                    "column": 46
                  },
                  "end": {
                    "row": 5,
                    "column": 47
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 5,
                    "column": 48
                  },
                  "end": {
                    "row": 5,
                    "column": 49
                  },
                  "text": "0"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 5,
                "column": 49
              },
              "end": {
                "row": 5,
                "column": 50
              },
              "text": ")"
            }
          ]
        },
        {
          "type": "->",
          "start": {
            "row": 5,
            "column": 51
          },
          "end": {
            "row": 5,
            "column": 53
          },
          "text": "->"
        },
        {
          "type": "type",
          "start": {
            "row": 5,
            "column": 54
          },
          "end": {
            "row": 5,
            "column": 74
          },
          "text": "Dict[str, List[str]]",
          "children": [
            {
              "type": "generic_type",
              "start": {
                "row": 5,
                "column": 54
              },
              "end": {
                "row": 5,
                "column": 74
              },
              "text": "Dict[str, List[str]]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 5,
                    "column": 54
                  },
                  "end": {
                    "row": 5,
                    "column": 58
                  },
                  "text": "Dict"
                },
                {
                  "type": "type_parameter",
                  "start": {
                    "row": 5,
                    "column": 58
                  },
                  "end": {
                    "row": 5,
                    "column": 74
                  },
                  "text": "[str, List[str]]",
                  "children": [
                    {
                      "type": "[",
                      "start": {
                        "row": 5,
                        "column": 58
                      },
                      "end": {
                        "row": 5,
                        "column": 59
                      },
                      "text": "["
                    },
                    {
                      "type": "type",
                      "start": {
                        "row": 5,
                        "column": 59
                      },
                      "end": {
                        "row": 5,
                        "column": 62
                      },
                      "text": "str",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 5,
                            "column": 59
                          },
                          "end": {
                            "row": 5,
                            "column": 62
                          },
                          "text": "str"
                        }
                      ]
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 5,
                        "column": 62
                      },
                      "end": {
                        "row": 5,
                        "column": 63
                      },
                      "text": ","
                    },
                    {
                      "type": "type",
                      "start": {
                        "row": 5,
                        "column": 64
                      },
                      "end": {
                        "row": 5,
                        "column": 73
                      },
                      "text": "List[str]",
                      "children": [
                        {
                          "type": "generic_type",
                          "start": {
                            "row": 5,
                            "column": 64
                          },
                          "end": {
                            "row": 5,
                            "column": 73
                          },
                          "text": "List[str]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 64
                              },
                              "end": {
                                "row": 5,
                                "column": 68
                              },
                              "text": "List"
                            },
                            {
                              "type": "type_parameter",
                              "start": {
                                "row": 5,
                                "column": 68
                              },
                              "end": {
                                "row": 5,
                                "column": 73
                              },
                              "text": "[str]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 5,
                                    "column": 68
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 69
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "type",
                                  "start": {
                                    "row": 5,
                                    "column": 69
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 72
                                  },
                                  "text": "str",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 5,
                                        "column": 69
                                      },
                                      "end": {
                                        "row": 5,
                                        "column": 72
                                      },
                                      "text": "str"
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 5,
                                    "column": 72
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 73
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 5,
                        "column": 73
                      },
                      "end": {
                        "row": 5,
                        "column": 74
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 5,
            "column": 74
          },
          "end": {
            "row": 5,
            "column": 75
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 6,
            "column": 4
          },
          "end": {
            "row": 92,
            "column": 31
          },
          "text": "\"\"\"\n    Generates all the valid actions starting from each non-terminal. For terminals of a specific\n    type, we simply add a production from the type to the terminal. For all terminal `functions`,\n    we additionally add a rule that allows their return type to be generated from an application of\n    the function.  For example, the function ``<e,<r,<d,r>>>``, which takes three arguments and\n    returns an ``r`` would generate a the production rule ``r -> [<e,<r,<d,r>>>, e, r, d]``.\n\n    For functions that do not contain ANY_TYPE or placeholder types, this is straight-forward.\n    When there are ANY_TYPES or placeholders, we substitute the ANY_TYPE with all possible basic\n    types, and then produce a similar rule.  For example, the identity function, with type\n    ``<#1,#1>`` and basic types ``e`` and ``r``,  would produce the rules ``e -> [<#1,#1>, e]`` and\n    ``r -> [<#1,#1>, r]``.\n\n    We additionally add a valid action from the start symbol to all ``valid_starting_types``.\n\n    Parameters\n    ----------\n    name_mapping : ``Dict[str, str]``\n        The mapping of names that appear in your logical form languages to their aliases for NLTK.\n        If you are getting all valid actions for a type declaration, this can be the\n        ``COMMON_NAME_MAPPING``.\n    type_signatures : ``Dict[str, Type]``\n        The mapping from name aliases to their types. If you are getting all valid actions for a\n        type declaration, this can be the ``COMMON_TYPE_SIGNATURE``.\n    basic_types : ``Set[Type]``\n        Set of all basic types in the type declaration.\n    multi_match_mapping : ``Dict[Type, List[Type]]`` (optional)\n        A mapping from `MultiMatchNamedBasicTypes` to the types they can match. This may be\n        different from the type's ``types_to_match`` field based on the context. While building action\n        sequences that lead to complex types with ``MultiMatchNamedBasicTypes``, if a type does not\n        occur in this mapping, the default set of ``types_to_match`` for that type will be used.\n    valid_starting_types : ``Set[Type]``, optional\n        These are the valid starting types for your grammar; e.g., what types are we allowed to\n        parse expressions into?  We will add a \"START -> TYPE\" rule for each of these types.  If\n        this is ``None``, we default to using ``basic_types``.\n    num_nested_lambdas : ``int`` (optional)\n        Does the language used permit lambda expressions?  And if so, how many nested lambdas do we\n        need to worry about?  We'll add rules like \"<r,d> -> ['lambda x', d]\" for all complex\n        types, where the variable is determined by the number of nestings.  We currently only\n        permit up to three levels of nesting, just for ease of implementation.\n    \"\"\"\n    valid_actions: Dict[str, Set[str]] = defaultdict(set)\n\n    valid_starting_types = valid_starting_types or basic_types\n    for type_ in valid_starting_types:\n        valid_actions[str(START_TYPE)].add(_make_production_string(START_TYPE, type_))\n\n    complex_types = set()\n    for name, alias in name_mapping.items():\n        # Lambda functions and variables associated with them get produced in specific contexts. So\n        # we do not add them to ``valid_actions`` here, and let ``GrammarState`` deal with it.\n        # ``var`` is a special function that some languages (like LambdaDCS) use within lambda\n        # functions to indicate the use of a variable (eg.: ``(lambda x (fb:row.row.year (var x)))``)\n        # We do not have to produce this function outside the scope of lambda. Even within lambdas,\n        # it is a lot easier to not do it, and let the action sequence to logical form transformation\n        # logic add it to the output logical forms instead.\n        if name in [\"lambda\", \"var\", \"x\", \"y\", \"z\"]:\n            continue\n        name_type = type_signatures[alias]\n        # Type to terminal productions.\n        for substituted_type in substitute_any_type(name_type, basic_types):\n            valid_actions[str(substituted_type)].add(_make_production_string(substituted_type, name))\n        # Keeping track of complex types.\n        if isinstance(name_type, ComplexType) and name_type != ANY_TYPE:\n            complex_types.add(name_type)\n\n    for complex_type in complex_types:\n        for substituted_type in substitute_any_type(complex_type, basic_types):\n            for head, production in _get_complex_type_production(substituted_type,\n                                                                 multi_match_mapping or {}):\n                valid_actions[str(head)].add(production)\n\n    # We can produce complex types with a lambda expression, though we'll leave out\n    # placeholder types for now.\n    for i in range(num_nested_lambdas):\n        lambda_var = chr(ord('x') + i)\n        # We'll only allow lambdas to be functions that take and return basic types as their\n        # arguments, for now.  Also, we're doing this for all possible complex types where\n        # the first and second types are basic types. So we may be overgenerating a bit.\n        for first_type in basic_types:\n            for second_type in basic_types:\n                key = ComplexType(first_type, second_type)\n                production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])\n                valid_actions[str(key)].add(production_string)\n\n    valid_action_strings = {key: sorted(value) for key, value in valid_actions.items()}\n    return valid_action_strings",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 46,
                "column": 7
              },
              "text": "\"\"\"\n    Generates all the valid actions starting from each non-terminal. For terminals of a specific\n    type, we simply add a production from the type to the terminal. For all terminal `functions`,\n    we additionally add a rule that allows their return type to be generated from an application of\n    the function.  For example, the function ``<e,<r,<d,r>>>``, which takes three arguments and\n    returns an ``r`` would generate a the production rule ``r -> [<e,<r,<d,r>>>, e, r, d]``.\n\n    For functions that do not contain ANY_TYPE or placeholder types, this is straight-forward.\n    When there are ANY_TYPES or placeholders, we substitute the ANY_TYPE with all possible basic\n    types, and then produce a similar rule.  For example, the identity function, with type\n    ``<#1,#1>`` and basic types ``e`` and ``r``,  would produce the rules ``e -> [<#1,#1>, e]`` and\n    ``r -> [<#1,#1>, r]``.\n\n    We additionally add a valid action from the start symbol to all ``valid_starting_types``.\n\n    Parameters\n    ----------\n    name_mapping : ``Dict[str, str]``\n        The mapping of names that appear in your logical form languages to their aliases for NLTK.\n        If you are getting all valid actions for a type declaration, this can be the\n        ``COMMON_NAME_MAPPING``.\n    type_signatures : ``Dict[str, Type]``\n        The mapping from name aliases to their types. If you are getting all valid actions for a\n        type declaration, this can be the ``COMMON_TYPE_SIGNATURE``.\n    basic_types : ``Set[Type]``\n        Set of all basic types in the type declaration.\n    multi_match_mapping : ``Dict[Type, List[Type]]`` (optional)\n        A mapping from `MultiMatchNamedBasicTypes` to the types they can match. This may be\n        different from the type's ``types_to_match`` field based on the context. While building action\n        sequences that lead to complex types with ``MultiMatchNamedBasicTypes``, if a type does not\n        occur in this mapping, the default set of ``types_to_match`` for that type will be used.\n    valid_starting_types : ``Set[Type]``, optional\n        These are the valid starting types for your grammar; e.g., what types are we allowed to\n        parse expressions into?  We will add a \"START -> TYPE\" rule for each of these types.  If\n        this is ``None``, we default to using ``basic_types``.\n    num_nested_lambdas : ``int`` (optional)\n        Does the language used permit lambda expressions?  And if so, how many nested lambdas do we\n        need to worry about?  We'll add rules like \"<r,d> -> ['lambda x', d]\" for all complex\n        types, where the variable is determined by the number of nestings.  We currently only\n        permit up to three levels of nesting, just for ease of implementation.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 46,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Generates all the valid actions starting from each non-terminal. For terminals of a specific\n    type, we simply add a production from the type to the terminal. For all terminal `functions`,\n    we additionally add a rule that allows their return type to be generated from an application of\n    the function.  For example, the function ``<e,<r,<d,r>>>``, which takes three arguments and\n    returns an ``r`` would generate a the production rule ``r -> [<e,<r,<d,r>>>, e, r, d]``.\n\n    For functions that do not contain ANY_TYPE or placeholder types, this is straight-forward.\n    When there are ANY_TYPES or placeholders, we substitute the ANY_TYPE with all possible basic\n    types, and then produce a similar rule.  For example, the identity function, with type\n    ``<#1,#1>`` and basic types ``e`` and ``r``,  would produce the rules ``e -> [<#1,#1>, e]`` and\n    ``r -> [<#1,#1>, r]``.\n\n    We additionally add a valid action from the start symbol to all ``valid_starting_types``.\n\n    Parameters\n    ----------\n    name_mapping : ``Dict[str, str]``\n        The mapping of names that appear in your logical form languages to their aliases for NLTK.\n        If you are getting all valid actions for a type declaration, this can be the\n        ``COMMON_NAME_MAPPING``.\n    type_signatures : ``Dict[str, Type]``\n        The mapping from name aliases to their types. If you are getting all valid actions for a\n        type declaration, this can be the ``COMMON_TYPE_SIGNATURE``.\n    basic_types : ``Set[Type]``\n        Set of all basic types in the type declaration.\n    multi_match_mapping : ``Dict[Type, List[Type]]`` (optional)\n        A mapping from `MultiMatchNamedBasicTypes` to the types they can match. This may be\n        different from the type's ``types_to_match`` field based on the context. While building action\n        sequences that lead to complex types with ``MultiMatchNamedBasicTypes``, if a type does not\n        occur in this mapping, the default set of ``types_to_match`` for that type will be used.\n    valid_starting_types : ``Set[Type]``, optional\n        These are the valid starting types for your grammar; e.g., what types are we allowed to\n        parse expressions into?  We will add a \"START -> TYPE\" rule for each of these types.  If\n        this is ``None``, we default to using ``basic_types``.\n    num_nested_lambdas : ``int`` (optional)\n        Does the language used permit lambda expressions?  And if so, how many nested lambdas do we\n        need to worry about?  We'll add rules like \"<r,d> -> ['lambda x', d]\" for all complex\n        types, where the variable is determined by the number of nestings.  We currently only\n        permit up to three levels of nesting, just for ease of implementation.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 6,
                        "column": 4
                      },
                      "end": {
                        "row": 6,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 6,
                        "column": 7
                      },
                      "end": {
                        "row": 46,
                        "column": 4
                      },
                      "text": "\n    Generates all the valid actions starting from each non-terminal. For terminals of a specific\n    type, we simply add a production from the type to the terminal. For all terminal `functions`,\n    we additionally add a rule that allows their return type to be generated from an application of\n    the function.  For example, the function ``<e,<r,<d,r>>>``, which takes three arguments and\n    returns an ``r`` would generate a the production rule ``r -> [<e,<r,<d,r>>>, e, r, d]``.\n\n    For functions that do not contain ANY_TYPE or placeholder types, this is straight-forward.\n    When there are ANY_TYPES or placeholders, we substitute the ANY_TYPE with all possible basic\n    types, and then produce a similar rule.  For example, the identity function, with type\n    ``<#1,#1>`` and basic types ``e`` and ``r``,  would produce the rules ``e -> [<#1,#1>, e]`` and\n    ``r -> [<#1,#1>, r]``.\n\n    We additionally add a valid action from the start symbol to all ``valid_starting_types``.\n\n    Parameters\n    ----------\n    name_mapping : ``Dict[str, str]``\n        The mapping of names that appear in your logical form languages to their aliases for NLTK.\n        If you are getting all valid actions for a type declaration, this can be the\n        ``COMMON_NAME_MAPPING``.\n    type_signatures : ``Dict[str, Type]``\n        The mapping from name aliases to their types. If you are getting all valid actions for a\n        type declaration, this can be the ``COMMON_TYPE_SIGNATURE``.\n    basic_types : ``Set[Type]``\n        Set of all basic types in the type declaration.\n    multi_match_mapping : ``Dict[Type, List[Type]]`` (optional)\n        A mapping from `MultiMatchNamedBasicTypes` to the types they can match. This may be\n        different from the type's ``types_to_match`` field based on the context. While building action\n        sequences that lead to complex types with ``MultiMatchNamedBasicTypes``, if a type does not\n        occur in this mapping, the default set of ``types_to_match`` for that type will be used.\n    valid_starting_types : ``Set[Type]``, optional\n        These are the valid starting types for your grammar; e.g., what types are we allowed to\n        parse expressions into?  We will add a \"START -> TYPE\" rule for each of these types.  If\n        this is ``None``, we default to using ``basic_types``.\n    num_nested_lambdas : ``int`` (optional)\n        Does the language used permit lambda expressions?  And if so, how many nested lambdas do we\n        need to worry about?  We'll add rules like \"<r,d> -> ['lambda x', d]\" for all complex\n        types, where the variable is determined by the number of nestings.  We currently only\n        permit up to three levels of nesting, just for ease of implementation.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 46,
                        "column": 4
                      },
                      "end": {
                        "row": 46,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 47,
                "column": 4
              },
              "end": {
                "row": 47,
                "column": 57
              },
              "text": "valid_actions: Dict[str, Set[str]] = defaultdict(set)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 47,
                    "column": 4
                  },
                  "end": {
                    "row": 47,
                    "column": 57
                  },
                  "text": "valid_actions: Dict[str, Set[str]] = defaultdict(set)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 47,
                        "column": 4
                      },
                      "end": {
                        "row": 47,
                        "column": 17
                      },
                      "text": "valid_actions"
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 47,
                        "column": 17
                      },
                      "end": {
                        "row": 47,
                        "column": 18
                      },
                      "text": ":"
                    },
                    {
                      "type": "type",
                      "start": {
                        "row": 47,
                        "column": 19
                      },
                      "end": {
                        "row": 47,
                        "column": 38
                      },
                      "text": "Dict[str, Set[str]]",
                      "children": [
                        {
                          "type": "generic_type",
                          "start": {
                            "row": 47,
                            "column": 19
                          },
                          "end": {
                            "row": 47,
                            "column": 38
                          },
                          "text": "Dict[str, Set[str]]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 47,
                                "column": 19
                              },
                              "end": {
                                "row": 47,
                                "column": 23
                              },
                              "text": "Dict"
                            },
                            {
                              "type": "type_parameter",
                              "start": {
                                "row": 47,
                                "column": 23
                              },
                              "end": {
                                "row": 47,
                                "column": 38
                              },
                              "text": "[str, Set[str]]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 47,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 24
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "type",
                                  "start": {
                                    "row": 47,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 27
                                  },
                                  "text": "str",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 47,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 27
                                      },
                                      "text": "str"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 47,
                                    "column": 27
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 28
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "type",
                                  "start": {
                                    "row": 47,
                                    "column": 29
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 37
                                  },
                                  "text": "Set[str]",
                                  "children": [
                                    {
                                      "type": "generic_type",
                                      "start": {
                                        "row": 47,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 47,
                                        "column": 37
                                      },
                                      "text": "Set[str]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 47,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 32
                                          },
                                          "text": "Set"
                                        },
                                        {
                                          "type": "type_parameter",
                                          "start": {
                                            "row": 47,
                                            "column": 32
                                          },
                                          "end": {
                                            "row": 47,
                                            "column": 37
                                          },
                                          "text": "[str]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 47,
                                                "column": 32
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 33
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "type",
                                              "start": {
                                                "row": 47,
                                                "column": 33
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 36
                                              },
                                              "text": "str",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 47,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 47,
                                                    "column": 36
                                                  },
                                                  "text": "str"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 47,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 47,
                                                "column": 37
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 47,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 47,
                                    "column": 38
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 47,
                        "column": 39
                      },
                      "end": {
                        "row": 47,
                        "column": 40
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 47,
                        "column": 41
                      },
                      "end": {
                        "row": 47,
                        "column": 57
                      },
                      "text": "defaultdict(set)",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 47,
                            "column": 41
                          },
                          "end": {
                            "row": 47,
                            "column": 52
                          },
                          "text": "defaultdict"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 47,
                            "column": 52
                          },
                          "end": {
                            "row": 47,
                            "column": 57
                          },
                          "text": "(set)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 47,
                                "column": 52
                              },
                              "end": {
                                "row": 47,
                                "column": 53
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 47,
                                "column": 53
                              },
                              "end": {
                                "row": 47,
                                "column": 56
                              },
                              "text": "set"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 47,
                                "column": 56
                              },
                              "end": {
                                "row": 47,
                                "column": 57
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 49,
                "column": 4
              },
              "end": {
                "row": 49,
                "column": 62
              },
              "text": "valid_starting_types = valid_starting_types or basic_types",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 49,
                    "column": 4
                  },
                  "end": {
                    "row": 49,
                    "column": 62
                  },
                  "text": "valid_starting_types = valid_starting_types or basic_types",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 49,
                        "column": 4
                      },
                      "end": {
                        "row": 49,
                        "column": 24
                      },
                      "text": "valid_starting_types"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 49,
                        "column": 25
                      },
                      "end": {
                        "row": 49,
                        "column": 26
                      },
                      "text": "="
                    },
                    {
                      "type": "boolean_operator",
                      "start": {
                        "row": 49,
                        "column": 27
                      },
                      "end": {
                        "row": 49,
                        "column": 62
                      },
                      "text": "valid_starting_types or basic_types",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 49,
                            "column": 27
                          },
                          "end": {
                            "row": 49,
                            "column": 47
                          },
                          "text": "valid_starting_types"
                        },
                        {
                          "type": "or",
                          "start": {
                            "row": 49,
                            "column": 48
                          },
                          "end": {
                            "row": 49,
                            "column": 50
                          },
                          "text": "or"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 49,
                            "column": 51
                          },
                          "end": {
                            "row": 49,
                            "column": 62
                          },
                          "text": "basic_types"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 50,
                "column": 4
              },
              "end": {
                "row": 51,
                "column": 86
              },
              "text": "for type_ in valid_starting_types:\n        valid_actions[str(START_TYPE)].add(_make_production_string(START_TYPE, type_))",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 50,
                    "column": 4
                  },
                  "end": {
                    "row": 50,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 50,
                    "column": 8
                  },
                  "end": {
                    "row": 50,
                    "column": 13
                  },
                  "text": "type_"
                },
                {
                  "type": "in",
                  "start": {
                    "row": 50,
                    "column": 14
                  },
                  "end": {
                    "row": 50,
                    "column": 16
                  },
                  "text": "in"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 50,
                    "column": 17
                  },
                  "end": {
                    "row": 50,
                    "column": 37
                  },
                  "text": "valid_starting_types"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 50,
                    "column": 37
                  },
                  "end": {
                    "row": 50,
                    "column": 38
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 51,
                    "column": 8
                  },
                  "end": {
                    "row": 51,
                    "column": 86
                  },
                  "text": "valid_actions[str(START_TYPE)].add(_make_production_string(START_TYPE, type_))",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 51,
                        "column": 8
                      },
                      "end": {
                        "row": 51,
                        "column": 86
                      },
                      "text": "valid_actions[str(START_TYPE)].add(_make_production_string(START_TYPE, type_))",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 51,
                            "column": 8
                          },
                          "end": {
                            "row": 51,
                            "column": 86
                          },
                          "text": "valid_actions[str(START_TYPE)].add(_make_production_string(START_TYPE, type_))",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 51,
                                "column": 8
                              },
                              "end": {
                                "row": 51,
                                "column": 42
                              },
                              "text": "valid_actions[str(START_TYPE)].add",
                              "children": [
                                {
                                  "type": "subscript",
                                  "start": {
                                    "row": 51,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 38
                                  },
                                  "text": "valid_actions[str(START_TYPE)]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 51,
                                        "column": 8
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 21
                                      },
                                      "text": "valid_actions"
                                    },
                                    {
                                      "type": "[",
                                      "start": {
                                        "row": 51,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 22
                                      },
                                      "text": "["
                                    },
                                    {
                                      "type": "call",
                                      "start": {
                                        "row": 51,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 37
                                      },
                                      "text": "str(START_TYPE)",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 51,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 25
                                          },
                                          "text": "str"
                                        },
                                        {
                                          "type": "argument_list",
                                          "start": {
                                            "row": 51,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 37
                                          },
                                          "text": "(START_TYPE)",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start": {
                                                "row": 51,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 26
                                              },
                                              "text": "("
                                            },
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 51,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 36
                                              },
                                              "text": "START_TYPE"
                                            },
                                            {
                                              "type": ")",
                                              "start": {
                                                "row": 51,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 51,
                                                "column": 37
                                              },
                                              "text": ")"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start": {
                                        "row": 51,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 38
                                      },
                                      "text": "]"
                                    }
                                  ]
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 51,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 39
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 51,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 42
                                  },
                                  "text": "add"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 51,
                                "column": 42
                              },
                              "end": {
                                "row": 51,
                                "column": 86
                              },
                              "text": "(_make_production_string(START_TYPE, type_))",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 51,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 43
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 51,
                                    "column": 43
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 85
                                  },
                                  "text": "_make_production_string(START_TYPE, type_)",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 51,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 66
                                      },
                                      "text": "_make_production_string"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 51,
                                        "column": 66
                                      },
                                      "end": {
                                        "row": 51,
                                        "column": 85
                                      },
                                      "text": "(START_TYPE, type_)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 51,
                                            "column": 66
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 67
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 51,
                                            "column": 67
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 77
                                          },
                                          "text": "START_TYPE"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 51,
                                            "column": 77
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 78
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 51,
                                            "column": 79
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 84
                                          },
                                          "text": "type_"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 51,
                                            "column": 84
                                          },
                                          "end": {
                                            "row": 51,
                                            "column": 85
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 51,
                                    "column": 85
                                  },
                                  "end": {
                                    "row": 51,
                                    "column": 86
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 53,
                "column": 4
              },
              "end": {
                "row": 53,
                "column": 25
              },
              "text": "complex_types = set()",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 53,
                    "column": 4
                  },
                  "end": {
                    "row": 53,
                    "column": 25
                  },
                  "text": "complex_types = set()",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 53,
                        "column": 4
                      },
                      "end": {
                        "row": 53,
                        "column": 17
                      },
                      "text": "complex_types"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 53,
                        "column": 18
                      },
                      "end": {
                        "row": 53,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 53,
                        "column": 20
                      },
                      "end": {
                        "row": 53,
                        "column": 25
                      },
                      "text": "set()",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 53,
                            "column": 20
                          },
                          "end": {
                            "row": 53,
                            "column": 23
                          },
                          "text": "set"
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 53,
                            "column": 23
                          },
                          "end": {
                            "row": 53,
                            "column": 25
                          },
                          "text": "()",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 53,
                                "column": 23
                              },
                              "end": {
                                "row": 53,
                                "column": 24
                              },
                              "text": "("
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 53,
                                "column": 24
                              },
                              "end": {
                                "row": 53,
                                "column": 25
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 54,
                "column": 4
              },
              "end": {
                "row": 70,
                "column": 40
              },
              "text": "for name, alias in name_mapping.items():\n        # Lambda functions and variables associated with them get produced in specific contexts. So\n        # we do not add them to ``valid_actions`` here, and let ``GrammarState`` deal with it.\n        # ``var`` is a special function that some languages (like LambdaDCS) use within lambda\n        # functions to indicate the use of a variable (eg.: ``(lambda x (fb:row.row.year (var x)))``)\n        # We do not have to produce this function outside the scope of lambda. Even within lambdas,\n        # it is a lot easier to not do it, and let the action sequence to logical form transformation\n        # logic add it to the output logical forms instead.\n        if name in [\"lambda\", \"var\", \"x\", \"y\", \"z\"]:\n            continue\n        name_type = type_signatures[alias]\n        # Type to terminal productions.\n        for substituted_type in substitute_any_type(name_type, basic_types):\n            valid_actions[str(substituted_type)].add(_make_production_string(substituted_type, name))\n        # Keeping track of complex types.\n        if isinstance(name_type, ComplexType) and name_type != ANY_TYPE:\n            complex_types.add(name_type)",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 54,
                    "column": 4
                  },
                  "end": {
                    "row": 54,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "pattern_list",
                  "start": {
                    "row": 54,
                    "column": 8
                  },
                  "end": {
                    "row": 54,
                    "column": 19
                  },
                  "text": "name, alias",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 54,
                        "column": 8
                      },
                      "end": {
                        "row": 54,
                        "column": 12
                      },
                      "text": "name"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 54,
                        "column": 12
                      },
                      "end": {
                        "row": 54,
                        "column": 13
                      },
                      "text": ","
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 54,
                        "column": 14
                      },
                      "end": {
                        "row": 54,
                        "column": 19
                      },
                      "text": "alias"
                    }
                  ]
                },
                {
                  "type": "in",
                  "start": {
                    "row": 54,
                    "column": 20
                  },
                  "end": {
                    "row": 54,
                    "column": 22
                  },
                  "text": "in"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 54,
                    "column": 23
                  },
                  "end": {
                    "row": 54,
                    "column": 43
                  },
                  "text": "name_mapping.items()",
                  "children": [
                    {
                      "type": "attribute",
                      "start": {
                        "row": 54,
                        "column": 23
                      },
                      "end": {
                        "row": 54,
                        "column": 41
                      },
                      "text": "name_mapping.items",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 54,
                            "column": 23
                          },
                          "end": {
                            "row": 54,
                            "column": 35
                          },
                          "text": "name_mapping"
                        },
                        {
                          "type": ".",
                          "start": {
                            "row": 54,
                            "column": 35
                          },
                          "end": {
                            "row": 54,
                            "column": 36
                          },
                          "text": "."
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 54,
                            "column": 36
                          },
                          "end": {
                            "row": 54,
                            "column": 41
                          },
                          "text": "items"
                        }
                      ]
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 54,
                        "column": 41
                      },
                      "end": {
                        "row": 54,
                        "column": 43
                      },
                      "text": "()",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 54,
                            "column": 41
                          },
                          "end": {
                            "row": 54,
                            "column": 42
                          },
                          "text": "("
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 54,
                            "column": 42
                          },
                          "end": {
                            "row": 54,
                            "column": 43
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 54,
                    "column": 43
                  },
                  "end": {
                    "row": 54,
                    "column": 44
                  },
                  "text": ":"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 55,
                    "column": 8
                  },
                  "end": {
                    "row": 55,
                    "column": 99
                  },
                  "text": "# Lambda functions and variables associated with them get produced in specific contexts. So"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 56,
                    "column": 8
                  },
                  "end": {
                    "row": 56,
                    "column": 94
                  },
                  "text": "# we do not add them to ``valid_actions`` here, and let ``GrammarState`` deal with it."
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 57,
                    "column": 8
                  },
                  "end": {
                    "row": 57,
                    "column": 94
                  },
                  "text": "# ``var`` is a special function that some languages (like LambdaDCS) use within lambda"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 58,
                    "column": 8
                  },
                  "end": {
                    "row": 58,
                    "column": 101
                  },
                  "text": "# functions to indicate the use of a variable (eg.: ``(lambda x (fb:row.row.year (var x)))``)"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 59,
                    "column": 8
                  },
                  "end": {
                    "row": 59,
                    "column": 99
                  },
                  "text": "# We do not have to produce this function outside the scope of lambda. Even within lambdas,"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 60,
                    "column": 8
                  },
                  "end": {
                    "row": 60,
                    "column": 101
                  },
                  "text": "# it is a lot easier to not do it, and let the action sequence to logical form transformation"
                },
                {
                  "type": "comment",
                  "start": {
                    "row": 61,
                    "column": 8
                  },
                  "end": {
                    "row": 61,
                    "column": 59
                  },
                  "text": "# logic add it to the output logical forms instead."
                },
                {
                  "type": "block",
                  "start": {
                    "row": 62,
                    "column": 8
                  },
                  "end": {
                    "row": 70,
                    "column": 40
                  },
                  "text": "if name in [\"lambda\", \"var\", \"x\", \"y\", \"z\"]:\n            continue\n        name_type = type_signatures[alias]\n        # Type to terminal productions.\n        for substituted_type in substitute_any_type(name_type, basic_types):\n            valid_actions[str(substituted_type)].add(_make_production_string(substituted_type, name))\n        # Keeping track of complex types.\n        if isinstance(name_type, ComplexType) and name_type != ANY_TYPE:\n            complex_types.add(name_type)",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 62,
                        "column": 8
                      },
                      "end": {
                        "row": 63,
                        "column": 20
                      },
                      "text": "if name in [\"lambda\", \"var\", \"x\", \"y\", \"z\"]:\n            continue",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 62,
                            "column": 8
                          },
                          "end": {
                            "row": 62,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 62,
                            "column": 11
                          },
                          "end": {
                            "row": 62,
                            "column": 51
                          },
                          "text": "name in [\"lambda\", \"var\", \"x\", \"y\", \"z\"]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 62,
                                "column": 11
                              },
                              "end": {
                                "row": 62,
                                "column": 15
                              },
                              "text": "name"
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 62,
                                "column": 16
                              },
                              "end": {
                                "row": 62,
                                "column": 18
                              },
                              "text": "in"
                            },
                            {
                              "type": "list",
                              "start": {
                                "row": 62,
                                "column": 19
                              },
                              "end": {
                                "row": 62,
                                "column": 51
                              },
                              "text": "[\"lambda\", \"var\", \"x\", \"y\", \"z\"]",
                              "children": [
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 62,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 20
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 62,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 28
                                  },
                                  "text": "\"lambda\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 62,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 21
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 62,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 27
                                      },
                                      "text": "lambda"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 62,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 28
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 62,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 29
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 62,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 35
                                  },
                                  "text": "\"var\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 62,
                                        "column": 30
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 31
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 62,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 34
                                      },
                                      "text": "var"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 62,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 35
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 62,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 36
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 62,
                                    "column": 37
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 40
                                  },
                                  "text": "\"x\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 62,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 38
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 62,
                                        "column": 38
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 39
                                      },
                                      "text": "x"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 62,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 40
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 62,
                                    "column": 40
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 41
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 62,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 45
                                  },
                                  "text": "\"y\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 62,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 43
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 62,
                                        "column": 43
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 44
                                      },
                                      "text": "y"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 62,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 45
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 62,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 46
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 62,
                                    "column": 47
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 50
                                  },
                                  "text": "\"z\"",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 62,
                                        "column": 47
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 48
                                      },
                                      "text": "\""
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 62,
                                        "column": 48
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 49
                                      },
                                      "text": "z"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 62,
                                        "column": 49
                                      },
                                      "end": {
                                        "row": 62,
                                        "column": 50
                                      },
                                      "text": "\""
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 62,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 62,
                                    "column": 51
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 62,
                            "column": 51
                          },
                          "end": {
                            "row": 62,
                            "column": 52
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 63,
                            "column": 12
                          },
                          "end": {
                            "row": 63,
                            "column": 20
                          },
                          "text": "continue",
                          "children": [
                            {
                              "type": "continue_statement",
                              "start": {
                                "row": 63,
                                "column": 12
                              },
                              "end": {
                                "row": 63,
                                "column": 20
                              },
                              "text": "continue",
                              "children": [
                                {
                                  "type": "continue",
                                  "start": {
                                    "row": 63,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 63,
                                    "column": 20
                                  },
                                  "text": "continue"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 64,
                        "column": 8
                      },
                      "end": {
                        "row": 64,
                        "column": 42
                      },
                      "text": "name_type = type_signatures[alias]",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 64,
                            "column": 8
                          },
                          "end": {
                            "row": 64,
                            "column": 42
                          },
                          "text": "name_type = type_signatures[alias]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 64,
                                "column": 8
                              },
                              "end": {
                                "row": 64,
                                "column": 17
                              },
                              "text": "name_type"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 64,
                                "column": 18
                              },
                              "end": {
                                "row": 64,
                                "column": 19
                              },
                              "text": "="
                            },
                            {
                              "type": "subscript",
                              "start": {
                                "row": 64,
                                "column": 20
                              },
                              "end": {
                                "row": 64,
                                "column": 42
                              },
                              "text": "type_signatures[alias]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 64,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 35
                                  },
                                  "text": "type_signatures"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 64,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 36
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 64,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 41
                                  },
                                  "text": "alias"
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 64,
                                    "column": 41
                                  },
                                  "end": {
                                    "row": 64,
                                    "column": 42
                                  },
                                  "text": "]"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 65,
                        "column": 8
                      },
                      "end": {
                        "row": 65,
                        "column": 39
                      },
                      "text": "# Type to terminal productions."
                    },
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 66,
                        "column": 8
                      },
                      "end": {
                        "row": 67,
                        "column": 101
                      },
                      "text": "for substituted_type in substitute_any_type(name_type, basic_types):\n            valid_actions[str(substituted_type)].add(_make_production_string(substituted_type, name))",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 66,
                            "column": 8
                          },
                          "end": {
                            "row": 66,
                            "column": 11
                          },
                          "text": "for"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 66,
                            "column": 12
                          },
                          "end": {
                            "row": 66,
                            "column": 28
                          },
                          "text": "substituted_type"
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 66,
                            "column": 29
                          },
                          "end": {
                            "row": 66,
                            "column": 31
                          },
                          "text": "in"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 66,
                            "column": 32
                          },
                          "end": {
                            "row": 66,
                            "column": 75
                          },
                          "text": "substitute_any_type(name_type, basic_types)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 66,
                                "column": 32
                              },
                              "end": {
                                "row": 66,
                                "column": 51
                              },
                              "text": "substitute_any_type"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 66,
                                "column": 51
                              },
                              "end": {
                                "row": 66,
                                "column": 75
                              },
                              "text": "(name_type, basic_types)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 66,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 66,
                                    "column": 52
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 66,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 66,
                                    "column": 61
                                  },
                                  "text": "name_type"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 66,
                                    "column": 61
                                  },
                                  "end": {
                                    "row": 66,
                                    "column": 62
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 66,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 66,
                                    "column": 74
                                  },
                                  "text": "basic_types"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 66,
                                    "column": 74
                                  },
                                  "end": {
                                    "row": 66,
                                    "column": 75
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 66,
                            "column": 75
                          },
                          "end": {
                            "row": 66,
                            "column": 76
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 67,
                            "column": 12
                          },
                          "end": {
                            "row": 67,
                            "column": 101
                          },
                          "text": "valid_actions[str(substituted_type)].add(_make_production_string(substituted_type, name))",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 67,
                                "column": 12
                              },
                              "end": {
                                "row": 67,
                                "column": 101
                              },
                              "text": "valid_actions[str(substituted_type)].add(_make_production_string(substituted_type, name))",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 67,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 67,
                                    "column": 101
                                  },
                                  "text": "valid_actions[str(substituted_type)].add(_make_production_string(substituted_type, name))",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 67,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 52
                                      },
                                      "text": "valid_actions[str(substituted_type)].add",
                                      "children": [
                                        {
                                          "type": "subscript",
                                          "start": {
                                            "row": 67,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 48
                                          },
                                          "text": "valid_actions[str(substituted_type)]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 67,
                                                "column": 12
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 25
                                              },
                                              "text": "valid_actions"
                                            },
                                            {
                                              "type": "[",
                                              "start": {
                                                "row": 67,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 26
                                              },
                                              "text": "["
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 67,
                                                "column": 26
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 47
                                              },
                                              "text": "str(substituted_type)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 26
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 29
                                                  },
                                                  "text": "str"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 47
                                                  },
                                                  "text": "(substituted_type)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 67,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 67,
                                                        "column": 30
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 67,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 67,
                                                        "column": 46
                                                      },
                                                      "text": "substituted_type"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 67,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 67,
                                                        "column": 47
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start": {
                                                "row": 67,
                                                "column": 47
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 48
                                              },
                                              "text": "]"
                                            }
                                          ]
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 67,
                                            "column": 48
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 49
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 67,
                                            "column": 49
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 52
                                          },
                                          "text": "add"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 67,
                                        "column": 52
                                      },
                                      "end": {
                                        "row": 67,
                                        "column": 101
                                      },
                                      "text": "(_make_production_string(substituted_type, name))",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 67,
                                            "column": 52
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 53
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 67,
                                            "column": 53
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 100
                                          },
                                          "text": "_make_production_string(substituted_type, name)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 67,
                                                "column": 53
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 76
                                              },
                                              "text": "_make_production_string"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 67,
                                                "column": 76
                                              },
                                              "end": {
                                                "row": 67,
                                                "column": 100
                                              },
                                              "text": "(substituted_type, name)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 76
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 77
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 77
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 93
                                                  },
                                                  "text": "substituted_type"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 93
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 94
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 95
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 99
                                                  },
                                                  "text": "name"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 67,
                                                    "column": 99
                                                  },
                                                  "end": {
                                                    "row": 67,
                                                    "column": 100
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 67,
                                            "column": 100
                                          },
                                          "end": {
                                            "row": 67,
                                            "column": 101
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 68,
                        "column": 8
                      },
                      "end": {
                        "row": 68,
                        "column": 41
                      },
                      "text": "# Keeping track of complex types."
                    },
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 69,
                        "column": 8
                      },
                      "end": {
                        "row": 70,
                        "column": 40
                      },
                      "text": "if isinstance(name_type, ComplexType) and name_type != ANY_TYPE:\n            complex_types.add(name_type)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 69,
                            "column": 8
                          },
                          "end": {
                            "row": 69,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "boolean_operator",
                          "start": {
                            "row": 69,
                            "column": 11
                          },
                          "end": {
                            "row": 69,
                            "column": 71
                          },
                          "text": "isinstance(name_type, ComplexType) and name_type != ANY_TYPE",
                          "children": [
                            {
                              "type": "call",
                              "start": {
                                "row": 69,
                                "column": 11
                              },
                              "end": {
                                "row": 69,
                                "column": 45
                              },
                              "text": "isinstance(name_type, ComplexType)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 69,
                                    "column": 11
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 21
                                  },
                                  "text": "isinstance"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 69,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 45
                                  },
                                  "text": "(name_type, ComplexType)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 69,
                                        "column": 21
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 22
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 69,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 31
                                      },
                                      "text": "name_type"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 69,
                                        "column": 31
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 32
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 69,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 44
                                      },
                                      "text": "ComplexType"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 69,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 69,
                                        "column": 45
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "start": {
                                "row": 69,
                                "column": 46
                              },
                              "end": {
                                "row": 69,
                                "column": 49
                              },
                              "text": "and"
                            },
                            {
                              "type": "comparison_operator",
                              "start": {
                                "row": 69,
                                "column": 50
                              },
                              "end": {
                                "row": 69,
                                "column": 71
                              },
                              "text": "name_type != ANY_TYPE",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 69,
                                    "column": 50
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 59
                                  },
                                  "text": "name_type"
                                },
                                {
                                  "type": "!=",
                                  "start": {
                                    "row": 69,
                                    "column": 60
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 62
                                  },
                                  "text": "!="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 69,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 69,
                                    "column": 71
                                  },
                                  "text": "ANY_TYPE"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 69,
                            "column": 71
                          },
                          "end": {
                            "row": 69,
                            "column": 72
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 70,
                            "column": 12
                          },
                          "end": {
                            "row": 70,
                            "column": 40
                          },
                          "text": "complex_types.add(name_type)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 70,
                                "column": 12
                              },
                              "end": {
                                "row": 70,
                                "column": 40
                              },
                              "text": "complex_types.add(name_type)",
                              "children": [
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 70,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 70,
                                    "column": 40
                                  },
                                  "text": "complex_types.add(name_type)",
                                  "children": [
                                    {
                                      "type": "attribute",
                                      "start": {
                                        "row": 70,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 29
                                      },
                                      "text": "complex_types.add",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 70,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 25
                                          },
                                          "text": "complex_types"
                                        },
                                        {
                                          "type": ".",
                                          "start": {
                                            "row": 70,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 26
                                          },
                                          "text": "."
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 70,
                                            "column": 26
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 29
                                          },
                                          "text": "add"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 70,
                                        "column": 29
                                      },
                                      "end": {
                                        "row": 70,
                                        "column": 40
                                      },
                                      "text": "(name_type)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 70,
                                            "column": 29
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 30
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 70,
                                            "column": 30
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 39
                                          },
                                          "text": "name_type"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 70,
                                            "column": 39
                                          },
                                          "end": {
                                            "row": 70,
                                            "column": 40
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 72,
                "column": 4
              },
              "end": {
                "row": 76,
                "column": 56
              },
              "text": "for complex_type in complex_types:\n        for substituted_type in substitute_any_type(complex_type, basic_types):\n            for head, production in _get_complex_type_production(substituted_type,\n                                                                 multi_match_mapping or {}):\n                valid_actions[str(head)].add(production)",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 72,
                    "column": 4
                  },
                  "end": {
                    "row": 72,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 72,
                    "column": 8
                  },
                  "end": {
                    "row": 72,
                    "column": 20
                  },
                  "text": "complex_type"
                },
                {
                  "type": "in",
                  "start": {
                    "row": 72,
                    "column": 21
                  },
                  "end": {
                    "row": 72,
                    "column": 23
                  },
                  "text": "in"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 72,
                    "column": 24
                  },
                  "end": {
                    "row": 72,
                    "column": 37
                  },
                  "text": "complex_types"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 72,
                    "column": 37
                  },
                  "end": {
                    "row": 72,
                    "column": 38
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 73,
                    "column": 8
                  },
                  "end": {
                    "row": 76,
                    "column": 56
                  },
                  "text": "for substituted_type in substitute_any_type(complex_type, basic_types):\n            for head, production in _get_complex_type_production(substituted_type,\n                                                                 multi_match_mapping or {}):\n                valid_actions[str(head)].add(production)",
                  "children": [
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 73,
                        "column": 8
                      },
                      "end": {
                        "row": 76,
                        "column": 56
                      },
                      "text": "for substituted_type in substitute_any_type(complex_type, basic_types):\n            for head, production in _get_complex_type_production(substituted_type,\n                                                                 multi_match_mapping or {}):\n                valid_actions[str(head)].add(production)",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 73,
                            "column": 8
                          },
                          "end": {
                            "row": 73,
                            "column": 11
                          },
                          "text": "for"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 73,
                            "column": 12
                          },
                          "end": {
                            "row": 73,
                            "column": 28
                          },
                          "text": "substituted_type"
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 73,
                            "column": 29
                          },
                          "end": {
                            "row": 73,
                            "column": 31
                          },
                          "text": "in"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 73,
                            "column": 32
                          },
                          "end": {
                            "row": 73,
                            "column": 78
                          },
                          "text": "substitute_any_type(complex_type, basic_types)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 73,
                                "column": 32
                              },
                              "end": {
                                "row": 73,
                                "column": 51
                              },
                              "text": "substitute_any_type"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 73,
                                "column": 51
                              },
                              "end": {
                                "row": 73,
                                "column": 78
                              },
                              "text": "(complex_type, basic_types)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 73,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 52
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 73,
                                    "column": 52
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 64
                                  },
                                  "text": "complex_type"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 73,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 65
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 73,
                                    "column": 66
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 77
                                  },
                                  "text": "basic_types"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 73,
                                    "column": 77
                                  },
                                  "end": {
                                    "row": 73,
                                    "column": 78
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 73,
                            "column": 78
                          },
                          "end": {
                            "row": 73,
                            "column": 79
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 74,
                            "column": 12
                          },
                          "end": {
                            "row": 76,
                            "column": 56
                          },
                          "text": "for head, production in _get_complex_type_production(substituted_type,\n                                                                 multi_match_mapping or {}):\n                valid_actions[str(head)].add(production)",
                          "children": [
                            {
                              "type": "for_statement",
                              "start": {
                                "row": 74,
                                "column": 12
                              },
                              "end": {
                                "row": 76,
                                "column": 56
                              },
                              "text": "for head, production in _get_complex_type_production(substituted_type,\n                                                                 multi_match_mapping or {}):\n                valid_actions[str(head)].add(production)",
                              "children": [
                                {
                                  "type": "for",
                                  "start": {
                                    "row": 74,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 15
                                  },
                                  "text": "for"
                                },
                                {
                                  "type": "pattern_list",
                                  "start": {
                                    "row": 74,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 32
                                  },
                                  "text": "head, production",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 74,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 20
                                      },
                                      "text": "head"
                                    },
                                    {
                                      "type": ",",
                                      "start": {
                                        "row": 74,
                                        "column": 20
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 21
                                      },
                                      "text": ","
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 74,
                                        "column": 22
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 32
                                      },
                                      "text": "production"
                                    }
                                  ]
                                },
                                {
                                  "type": "in",
                                  "start": {
                                    "row": 74,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 74,
                                    "column": 35
                                  },
                                  "text": "in"
                                },
                                {
                                  "type": "call",
                                  "start": {
                                    "row": 74,
                                    "column": 36
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 91
                                  },
                                  "text": "_get_complex_type_production(substituted_type,\n                                                                 multi_match_mapping or {})",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 74,
                                        "column": 36
                                      },
                                      "end": {
                                        "row": 74,
                                        "column": 64
                                      },
                                      "text": "_get_complex_type_production"
                                    },
                                    {
                                      "type": "argument_list",
                                      "start": {
                                        "row": 74,
                                        "column": 64
                                      },
                                      "end": {
                                        "row": 75,
                                        "column": 91
                                      },
                                      "text": "(substituted_type,\n                                                                 multi_match_mapping or {})",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 74,
                                            "column": 64
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 65
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 74,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 81
                                          },
                                          "text": "substituted_type"
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 74,
                                            "column": 81
                                          },
                                          "end": {
                                            "row": 74,
                                            "column": 82
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "boolean_operator",
                                          "start": {
                                            "row": 75,
                                            "column": 65
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 90
                                          },
                                          "text": "multi_match_mapping or {}",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 75,
                                                "column": 65
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 84
                                              },
                                              "text": "multi_match_mapping"
                                            },
                                            {
                                              "type": "or",
                                              "start": {
                                                "row": 75,
                                                "column": 85
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 87
                                              },
                                              "text": "or"
                                            },
                                            {
                                              "type": "dictionary",
                                              "start": {
                                                "row": 75,
                                                "column": 88
                                              },
                                              "end": {
                                                "row": 75,
                                                "column": 90
                                              },
                                              "text": "{}",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 88
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 89
                                                  },
                                                  "text": "{"
                                                },
                                                {
                                                  "type": "}",
                                                  "start": {
                                                    "row": 75,
                                                    "column": 89
                                                  },
                                                  "end": {
                                                    "row": 75,
                                                    "column": 90
                                                  },
                                                  "text": "}"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 75,
                                            "column": 90
                                          },
                                          "end": {
                                            "row": 75,
                                            "column": 91
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 75,
                                    "column": 91
                                  },
                                  "end": {
                                    "row": 75,
                                    "column": 92
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 76,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 76,
                                    "column": 56
                                  },
                                  "text": "valid_actions[str(head)].add(production)",
                                  "children": [
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 76,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 76,
                                        "column": 56
                                      },
                                      "text": "valid_actions[str(head)].add(production)",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 76,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 76,
                                            "column": 56
                                          },
                                          "text": "valid_actions[str(head)].add(production)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 76,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 76,
                                                "column": 44
                                              },
                                              "text": "valid_actions[str(head)].add",
                                              "children": [
                                                {
                                                  "type": "subscript",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 40
                                                  },
                                                  "text": "valid_actions[str(head)]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 76,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 76,
                                                        "column": 29
                                                      },
                                                      "text": "valid_actions"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 76,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 76,
                                                        "column": 30
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 76,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 76,
                                                        "column": 39
                                                      },
                                                      "text": "str(head)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 76,
                                                            "column": 30
                                                          },
                                                          "end": {
                                                            "row": 76,
                                                            "column": 33
                                                          },
                                                          "text": "str"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 76,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 76,
                                                            "column": 39
                                                          },
                                                          "text": "(head)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 76,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 76,
                                                                "column": 34
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 76,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 76,
                                                                "column": 38
                                                              },
                                                              "text": "head"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 76,
                                                                "column": 38
                                                              },
                                                              "end": {
                                                                "row": 76,
                                                                "column": 39
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 76,
                                                        "column": 39
                                                      },
                                                      "end": {
                                                        "row": 76,
                                                        "column": 40
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 41
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 41
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 44
                                                  },
                                                  "text": "add"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 76,
                                                "column": 44
                                              },
                                              "end": {
                                                "row": 76,
                                                "column": 56
                                              },
                                              "text": "(production)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 45
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 45
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 55
                                                  },
                                                  "text": "production"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 76,
                                                    "column": 55
                                                  },
                                                  "end": {
                                                    "row": 76,
                                                    "column": 56
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 78,
                "column": 4
              },
              "end": {
                "row": 78,
                "column": 83
              },
              "text": "# We can produce complex types with a lambda expression, though we'll leave out"
            },
            {
              "type": "comment",
              "start": {
                "row": 79,
                "column": 4
              },
              "end": {
                "row": 79,
                "column": 32
              },
              "text": "# placeholder types for now."
            },
            {
              "type": "for_statement",
              "start": {
                "row": 80,
                "column": 4
              },
              "end": {
                "row": 89,
                "column": 62
              },
              "text": "for i in range(num_nested_lambdas):\n        lambda_var = chr(ord('x') + i)\n        # We'll only allow lambdas to be functions that take and return basic types as their\n        # arguments, for now.  Also, we're doing this for all possible complex types where\n        # the first and second types are basic types. So we may be overgenerating a bit.\n        for first_type in basic_types:\n            for second_type in basic_types:\n                key = ComplexType(first_type, second_type)\n                production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])\n                valid_actions[str(key)].add(production_string)",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 80,
                    "column": 4
                  },
                  "end": {
                    "row": 80,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 80,
                    "column": 8
                  },
                  "end": {
                    "row": 80,
                    "column": 9
                  },
                  "text": "i"
                },
                {
                  "type": "in",
                  "start": {
                    "row": 80,
                    "column": 10
                  },
                  "end": {
                    "row": 80,
                    "column": 12
                  },
                  "text": "in"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 80,
                    "column": 13
                  },
                  "end": {
                    "row": 80,
                    "column": 38
                  },
                  "text": "range(num_nested_lambdas)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 80,
                        "column": 13
                      },
                      "end": {
                        "row": 80,
                        "column": 18
                      },
                      "text": "range"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 80,
                        "column": 18
                      },
                      "end": {
                        "row": 80,
                        "column": 38
                      },
                      "text": "(num_nested_lambdas)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 80,
                            "column": 18
                          },
                          "end": {
                            "row": 80,
                            "column": 19
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 80,
                            "column": 19
                          },
                          "end": {
                            "row": 80,
                            "column": 37
                          },
                          "text": "num_nested_lambdas"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 80,
                            "column": 37
                          },
                          "end": {
                            "row": 80,
                            "column": 38
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 80,
                    "column": 38
                  },
                  "end": {
                    "row": 80,
                    "column": 39
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 81,
                    "column": 8
                  },
                  "end": {
                    "row": 89,
                    "column": 62
                  },
                  "text": "lambda_var = chr(ord('x') + i)\n        # We'll only allow lambdas to be functions that take and return basic types as their\n        # arguments, for now.  Also, we're doing this for all possible complex types where\n        # the first and second types are basic types. So we may be overgenerating a bit.\n        for first_type in basic_types:\n            for second_type in basic_types:\n                key = ComplexType(first_type, second_type)\n                production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])\n                valid_actions[str(key)].add(production_string)",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 81,
                        "column": 8
                      },
                      "end": {
                        "row": 81,
                        "column": 38
                      },
                      "text": "lambda_var = chr(ord('x') + i)",
                      "children": [
                        {
                          "type": "assignment",
                          "start": {
                            "row": 81,
                            "column": 8
                          },
                          "end": {
                            "row": 81,
                            "column": 38
                          },
                          "text": "lambda_var = chr(ord('x') + i)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 81,
                                "column": 8
                              },
                              "end": {
                                "row": 81,
                                "column": 18
                              },
                              "text": "lambda_var"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 81,
                                "column": 19
                              },
                              "end": {
                                "row": 81,
                                "column": 20
                              },
                              "text": "="
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 81,
                                "column": 21
                              },
                              "end": {
                                "row": 81,
                                "column": 38
                              },
                              "text": "chr(ord('x') + i)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 81,
                                    "column": 21
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 24
                                  },
                                  "text": "chr"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 81,
                                    "column": 24
                                  },
                                  "end": {
                                    "row": 81,
                                    "column": 38
                                  },
                                  "text": "(ord('x') + i)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 81,
                                        "column": 24
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 25
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "binary_operator",
                                      "start": {
                                        "row": 81,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 37
                                      },
                                      "text": "ord('x') + i",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 81,
                                            "column": 25
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 33
                                          },
                                          "text": "ord('x')",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 81,
                                                "column": 25
                                              },
                                              "end": {
                                                "row": 81,
                                                "column": 28
                                              },
                                              "text": "ord"
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 81,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 81,
                                                "column": 33
                                              },
                                              "text": "('x')",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 81,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 81,
                                                    "column": 29
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "string",
                                                  "start": {
                                                    "row": 81,
                                                    "column": 29
                                                  },
                                                  "end": {
                                                    "row": 81,
                                                    "column": 32
                                                  },
                                                  "text": "'x'",
                                                  "children": [
                                                    {
                                                      "type": "string_start",
                                                      "start": {
                                                        "row": 81,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 81,
                                                        "column": 30
                                                      },
                                                      "text": "'"
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start": {
                                                        "row": 81,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 81,
                                                        "column": 31
                                                      },
                                                      "text": "x"
                                                    },
                                                    {
                                                      "type": "string_end",
                                                      "start": {
                                                        "row": 81,
                                                        "column": 31
                                                      },
                                                      "end": {
                                                        "row": 81,
                                                        "column": 32
                                                      },
                                                      "text": "'"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 81,
                                                    "column": 32
                                                  },
                                                  "end": {
                                                    "row": 81,
                                                    "column": 33
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start": {
                                            "row": 81,
                                            "column": 34
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 35
                                          },
                                          "text": "+"
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 81,
                                            "column": 36
                                          },
                                          "end": {
                                            "row": 81,
                                            "column": 37
                                          },
                                          "text": "i"
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 81,
                                        "column": 37
                                      },
                                      "end": {
                                        "row": 81,
                                        "column": 38
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 82,
                        "column": 8
                      },
                      "end": {
                        "row": 82,
                        "column": 92
                      },
                      "text": "# We'll only allow lambdas to be functions that take and return basic types as their"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 83,
                        "column": 8
                      },
                      "end": {
                        "row": 83,
                        "column": 90
                      },
                      "text": "# arguments, for now.  Also, we're doing this for all possible complex types where"
                    },
                    {
                      "type": "comment",
                      "start": {
                        "row": 84,
                        "column": 8
                      },
                      "end": {
                        "row": 84,
                        "column": 88
                      },
                      "text": "# the first and second types are basic types. So we may be overgenerating a bit."
                    },
                    {
                      "type": "for_statement",
                      "start": {
                        "row": 85,
                        "column": 8
                      },
                      "end": {
                        "row": 89,
                        "column": 62
                      },
                      "text": "for first_type in basic_types:\n            for second_type in basic_types:\n                key = ComplexType(first_type, second_type)\n                production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])\n                valid_actions[str(key)].add(production_string)",
                      "children": [
                        {
                          "type": "for",
                          "start": {
                            "row": 85,
                            "column": 8
                          },
                          "end": {
                            "row": 85,
                            "column": 11
                          },
                          "text": "for"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 85,
                            "column": 12
                          },
                          "end": {
                            "row": 85,
                            "column": 22
                          },
                          "text": "first_type"
                        },
                        {
                          "type": "in",
                          "start": {
                            "row": 85,
                            "column": 23
                          },
                          "end": {
                            "row": 85,
                            "column": 25
                          },
                          "text": "in"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 85,
                            "column": 26
                          },
                          "end": {
                            "row": 85,
                            "column": 37
                          },
                          "text": "basic_types"
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 85,
                            "column": 37
                          },
                          "end": {
                            "row": 85,
                            "column": 38
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 86,
                            "column": 12
                          },
                          "end": {
                            "row": 89,
                            "column": 62
                          },
                          "text": "for second_type in basic_types:\n                key = ComplexType(first_type, second_type)\n                production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])\n                valid_actions[str(key)].add(production_string)",
                          "children": [
                            {
                              "type": "for_statement",
                              "start": {
                                "row": 86,
                                "column": 12
                              },
                              "end": {
                                "row": 89,
                                "column": 62
                              },
                              "text": "for second_type in basic_types:\n                key = ComplexType(first_type, second_type)\n                production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])\n                valid_actions[str(key)].add(production_string)",
                              "children": [
                                {
                                  "type": "for",
                                  "start": {
                                    "row": 86,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 15
                                  },
                                  "text": "for"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 86,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 27
                                  },
                                  "text": "second_type"
                                },
                                {
                                  "type": "in",
                                  "start": {
                                    "row": 86,
                                    "column": 28
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 30
                                  },
                                  "text": "in"
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 86,
                                    "column": 31
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 42
                                  },
                                  "text": "basic_types"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 86,
                                    "column": 42
                                  },
                                  "end": {
                                    "row": 86,
                                    "column": 43
                                  },
                                  "text": ":"
                                },
                                {
                                  "type": "block",
                                  "start": {
                                    "row": 87,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 89,
                                    "column": 62
                                  },
                                  "text": "key = ComplexType(first_type, second_type)\n                production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])\n                valid_actions[str(key)].add(production_string)",
                                  "children": [
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 87,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 87,
                                        "column": 58
                                      },
                                      "text": "key = ComplexType(first_type, second_type)",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 87,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 87,
                                            "column": 58
                                          },
                                          "text": "key = ComplexType(first_type, second_type)",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 87,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 19
                                              },
                                              "text": "key"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 87,
                                                "column": 20
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 21
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 87,
                                                "column": 22
                                              },
                                              "end": {
                                                "row": 87,
                                                "column": 58
                                              },
                                              "text": "ComplexType(first_type, second_type)",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 87,
                                                    "column": 22
                                                  },
                                                  "end": {
                                                    "row": 87,
                                                    "column": 33
                                                  },
                                                  "text": "ComplexType"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 87,
                                                    "column": 33
                                                  },
                                                  "end": {
                                                    "row": 87,
                                                    "column": 58
                                                  },
                                                  "text": "(first_type, second_type)",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 87,
                                                        "column": 33
                                                      },
                                                      "end": {
                                                        "row": 87,
                                                        "column": 34
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 87,
                                                        "column": 34
                                                      },
                                                      "end": {
                                                        "row": 87,
                                                        "column": 44
                                                      },
                                                      "text": "first_type"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 87,
                                                        "column": 44
                                                      },
                                                      "end": {
                                                        "row": 87,
                                                        "column": 45
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 87,
                                                        "column": 46
                                                      },
                                                      "end": {
                                                        "row": 87,
                                                        "column": 57
                                                      },
                                                      "text": "second_type"
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 87,
                                                        "column": 57
                                                      },
                                                      "end": {
                                                        "row": 87,
                                                        "column": 58
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 88,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 88,
                                        "column": 103
                                      },
                                      "text": "production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])",
                                      "children": [
                                        {
                                          "type": "assignment",
                                          "start": {
                                            "row": 88,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 88,
                                            "column": 103
                                          },
                                          "text": "production_string = _make_production_string(key, ['lambda ' + lambda_var, second_type])",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start": {
                                                "row": 88,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 88,
                                                "column": 33
                                              },
                                              "text": "production_string"
                                            },
                                            {
                                              "type": "=",
                                              "start": {
                                                "row": 88,
                                                "column": 34
                                              },
                                              "end": {
                                                "row": 88,
                                                "column": 35
                                              },
                                              "text": "="
                                            },
                                            {
                                              "type": "call",
                                              "start": {
                                                "row": 88,
                                                "column": 36
                                              },
                                              "end": {
                                                "row": 88,
                                                "column": 103
                                              },
                                              "text": "_make_production_string(key, ['lambda ' + lambda_var, second_type])",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 88,
                                                    "column": 36
                                                  },
                                                  "end": {
                                                    "row": 88,
                                                    "column": 59
                                                  },
                                                  "text": "_make_production_string"
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start": {
                                                    "row": 88,
                                                    "column": 59
                                                  },
                                                  "end": {
                                                    "row": 88,
                                                    "column": 103
                                                  },
                                                  "text": "(key, ['lambda ' + lambda_var, second_type])",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start": {
                                                        "row": 88,
                                                        "column": 59
                                                      },
                                                      "end": {
                                                        "row": 88,
                                                        "column": 60
                                                      },
                                                      "text": "("
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 88,
                                                        "column": 60
                                                      },
                                                      "end": {
                                                        "row": 88,
                                                        "column": 63
                                                      },
                                                      "text": "key"
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start": {
                                                        "row": 88,
                                                        "column": 63
                                                      },
                                                      "end": {
                                                        "row": 88,
                                                        "column": 64
                                                      },
                                                      "text": ","
                                                    },
                                                    {
                                                      "type": "list",
                                                      "start": {
                                                        "row": 88,
                                                        "column": 65
                                                      },
                                                      "end": {
                                                        "row": 88,
                                                        "column": 102
                                                      },
                                                      "text": "['lambda ' + lambda_var, second_type]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start": {
                                                            "row": 88,
                                                            "column": 65
                                                          },
                                                          "end": {
                                                            "row": 88,
                                                            "column": 66
                                                          },
                                                          "text": "["
                                                        },
                                                        {
                                                          "type": "binary_operator",
                                                          "start": {
                                                            "row": 88,
                                                            "column": 66
                                                          },
                                                          "end": {
                                                            "row": 88,
                                                            "column": 88
                                                          },
                                                          "text": "'lambda ' + lambda_var",
                                                          "children": [
                                                            {
                                                              "type": "string",
                                                              "start": {
                                                                "row": 88,
                                                                "column": 66
                                                              },
                                                              "end": {
                                                                "row": 88,
                                                                "column": 75
                                                              },
                                                              "text": "'lambda '",
                                                              "children": [
                                                                {
                                                                  "type": "string_start",
                                                                  "start": {
                                                                    "row": 88,
                                                                    "column": 66
                                                                  },
                                                                  "end": {
                                                                    "row": 88,
                                                                    "column": 67
                                                                  },
                                                                  "text": "'"
                                                                },
                                                                {
                                                                  "type": "string_content",
                                                                  "start": {
                                                                    "row": 88,
                                                                    "column": 67
                                                                  },
                                                                  "end": {
                                                                    "row": 88,
                                                                    "column": 74
                                                                  },
                                                                  "text": "lambda "
                                                                },
                                                                {
                                                                  "type": "string_end",
                                                                  "start": {
                                                                    "row": 88,
                                                                    "column": 74
                                                                  },
                                                                  "end": {
                                                                    "row": 88,
                                                                    "column": 75
                                                                  },
                                                                  "text": "'"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start": {
                                                                "row": 88,
                                                                "column": 76
                                                              },
                                                              "end": {
                                                                "row": 88,
                                                                "column": 77
                                                              },
                                                              "text": "+"
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 88,
                                                                "column": 78
                                                              },
                                                              "end": {
                                                                "row": 88,
                                                                "column": 88
                                                              },
                                                              "text": "lambda_var"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start": {
                                                            "row": 88,
                                                            "column": 88
                                                          },
                                                          "end": {
                                                            "row": 88,
                                                            "column": 89
                                                          },
                                                          "text": ","
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 88,
                                                            "column": 90
                                                          },
                                                          "end": {
                                                            "row": 88,
                                                            "column": 101
                                                          },
                                                          "text": "second_type"
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start": {
                                                            "row": 88,
                                                            "column": 101
                                                          },
                                                          "end": {
                                                            "row": 88,
                                                            "column": 102
                                                          },
                                                          "text": "]"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start": {
                                                        "row": 88,
                                                        "column": 102
                                                      },
                                                      "end": {
                                                        "row": 88,
                                                        "column": 103
                                                      },
                                                      "text": ")"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start": {
                                        "row": 89,
                                        "column": 16
                                      },
                                      "end": {
                                        "row": 89,
                                        "column": 62
                                      },
                                      "text": "valid_actions[str(key)].add(production_string)",
                                      "children": [
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 89,
                                            "column": 16
                                          },
                                          "end": {
                                            "row": 89,
                                            "column": 62
                                          },
                                          "text": "valid_actions[str(key)].add(production_string)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 89,
                                                "column": 16
                                              },
                                              "end": {
                                                "row": 89,
                                                "column": 43
                                              },
                                              "text": "valid_actions[str(key)].add",
                                              "children": [
                                                {
                                                  "type": "subscript",
                                                  "start": {
                                                    "row": 89,
                                                    "column": 16
                                                  },
                                                  "end": {
                                                    "row": 89,
                                                    "column": 39
                                                  },
                                                  "text": "valid_actions[str(key)]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start": {
                                                        "row": 89,
                                                        "column": 16
                                                      },
                                                      "end": {
                                                        "row": 89,
                                                        "column": 29
                                                      },
                                                      "text": "valid_actions"
                                                    },
                                                    {
                                                      "type": "[",
                                                      "start": {
                                                        "row": 89,
                                                        "column": 29
                                                      },
                                                      "end": {
                                                        "row": 89,
                                                        "column": 30
                                                      },
                                                      "text": "["
                                                    },
                                                    {
                                                      "type": "call",
                                                      "start": {
                                                        "row": 89,
                                                        "column": 30
                                                      },
                                                      "end": {
                                                        "row": 89,
                                                        "column": 38
                                                      },
                                                      "text": "str(key)",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start": {
                                                            "row": 89,
                                                            "column": 30
                                                          },
                                                          "end": {
                                                            "row": 89,
                                                            "column": 33
                                                          },
                                                          "text": "str"
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start": {
                                                            "row": 89,
                                                            "column": 33
                                                          },
                                                          "end": {
                                                            "row": 89,
                                                            "column": 38
                                                          },
                                                          "text": "(key)",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start": {
                                                                "row": 89,
                                                                "column": 33
                                                              },
                                                              "end": {
                                                                "row": 89,
                                                                "column": 34
                                                              },
                                                              "text": "("
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start": {
                                                                "row": 89,
                                                                "column": 34
                                                              },
                                                              "end": {
                                                                "row": 89,
                                                                "column": 37
                                                              },
                                                              "text": "key"
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start": {
                                                                "row": 89,
                                                                "column": 37
                                                              },
                                                              "end": {
                                                                "row": 89,
                                                                "column": 38
                                                              },
                                                              "text": ")"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start": {
                                                        "row": 89,
                                                        "column": 38
                                                      },
                                                      "end": {
                                                        "row": 89,
                                                        "column": 39
                                                      },
                                                      "text": "]"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 89,
                                                    "column": 39
                                                  },
                                                  "end": {
                                                    "row": 89,
                                                    "column": 40
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 89,
                                                    "column": 40
                                                  },
                                                  "end": {
                                                    "row": 89,
                                                    "column": 43
                                                  },
                                                  "text": "add"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 89,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 89,
                                                "column": 62
                                              },
                                              "text": "(production_string)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 89,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 89,
                                                    "column": 44
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 89,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 89,
                                                    "column": 61
                                                  },
                                                  "text": "production_string"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 89,
                                                    "column": 61
                                                  },
                                                  "end": {
                                                    "row": 89,
                                                    "column": 62
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 91,
                "column": 4
              },
              "end": {
                "row": 91,
                "column": 87
              },
              "text": "valid_action_strings = {key: sorted(value) for key, value in valid_actions.items()}",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 91,
                    "column": 4
                  },
                  "end": {
                    "row": 91,
                    "column": 87
                  },
                  "text": "valid_action_strings = {key: sorted(value) for key, value in valid_actions.items()}",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 91,
                        "column": 4
                      },
                      "end": {
                        "row": 91,
                        "column": 24
                      },
                      "text": "valid_action_strings"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 91,
                        "column": 25
                      },
                      "end": {
                        "row": 91,
                        "column": 26
                      },
                      "text": "="
                    },
                    {
                      "type": "dictionary_comprehension",
                      "start": {
                        "row": 91,
                        "column": 27
                      },
                      "end": {
                        "row": 91,
                        "column": 87
                      },
                      "text": "{key: sorted(value) for key, value in valid_actions.items()}",
                      "children": [
                        {
                          "type": "{",
                          "start": {
                            "row": 91,
                            "column": 27
                          },
                          "end": {
                            "row": 91,
                            "column": 28
                          },
                          "text": "{"
                        },
                        {
                          "type": "pair",
                          "start": {
                            "row": 91,
                            "column": 28
                          },
                          "end": {
                            "row": 91,
                            "column": 46
                          },
                          "text": "key: sorted(value)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 91,
                                "column": 28
                              },
                              "end": {
                                "row": 91,
                                "column": 31
                              },
                              "text": "key"
                            },
                            {
                              "type": ":",
                              "start": {
                                "row": 91,
                                "column": 31
                              },
                              "end": {
                                "row": 91,
                                "column": 32
                              },
                              "text": ":"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 91,
                                "column": 33
                              },
                              "end": {
                                "row": 91,
                                "column": 46
                              },
                              "text": "sorted(value)",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 91,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 39
                                  },
                                  "text": "sorted"
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 91,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 46
                                  },
                                  "text": "(value)",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 91,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 91,
                                        "column": 40
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 91,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 91,
                                        "column": 45
                                      },
                                      "text": "value"
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 91,
                                        "column": 45
                                      },
                                      "end": {
                                        "row": 91,
                                        "column": 46
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "for_in_clause",
                          "start": {
                            "row": 91,
                            "column": 47
                          },
                          "end": {
                            "row": 91,
                            "column": 86
                          },
                          "text": "for key, value in valid_actions.items()",
                          "children": [
                            {
                              "type": "for",
                              "start": {
                                "row": 91,
                                "column": 47
                              },
                              "end": {
                                "row": 91,
                                "column": 50
                              },
                              "text": "for"
                            },
                            {
                              "type": "pattern_list",
                              "start": {
                                "row": 91,
                                "column": 51
                              },
                              "end": {
                                "row": 91,
                                "column": 61
                              },
                              "text": "key, value",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 91,
                                    "column": 51
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 54
                                  },
                                  "text": "key"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 91,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 55
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 91,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 61
                                  },
                                  "text": "value"
                                }
                              ]
                            },
                            {
                              "type": "in",
                              "start": {
                                "row": 91,
                                "column": 62
                              },
                              "end": {
                                "row": 91,
                                "column": 64
                              },
                              "text": "in"
                            },
                            {
                              "type": "call",
                              "start": {
                                "row": 91,
                                "column": 65
                              },
                              "end": {
                                "row": 91,
                                "column": 86
                              },
                              "text": "valid_actions.items()",
                              "children": [
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 91,
                                    "column": 65
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 84
                                  },
                                  "text": "valid_actions.items",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 91,
                                        "column": 65
                                      },
                                      "end": {
                                        "row": 91,
                                        "column": 78
                                      },
                                      "text": "valid_actions"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 91,
                                        "column": 78
                                      },
                                      "end": {
                                        "row": 91,
                                        "column": 79
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 91,
                                        "column": 79
                                      },
                                      "end": {
                                        "row": 91,
                                        "column": 84
                                      },
                                      "text": "items"
                                    }
                                  ]
                                },
                                {
                                  "type": "argument_list",
                                  "start": {
                                    "row": 91,
                                    "column": 84
                                  },
                                  "end": {
                                    "row": 91,
                                    "column": 86
                                  },
                                  "text": "()",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start": {
                                        "row": 91,
                                        "column": 84
                                      },
                                      "end": {
                                        "row": 91,
                                        "column": 85
                                      },
                                      "text": "("
                                    },
                                    {
                                      "type": ")",
                                      "start": {
                                        "row": 91,
                                        "column": 85
                                      },
                                      "end": {
                                        "row": 91,
                                        "column": 86
                                      },
                                      "text": ")"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start": {
                            "row": 91,
                            "column": 86
                          },
                          "end": {
                            "row": 91,
                            "column": 87
                          },
                          "text": "}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 92,
                "column": 4
              },
              "end": {
                "row": 92,
                "column": 31
              },
              "text": "return valid_action_strings",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 92,
                    "column": 4
                  },
                  "end": {
                    "row": 92,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 92,
                    "column": 11
                  },
                  "end": {
                    "row": 92,
                    "column": 31
                  },
                  "text": "valid_action_strings"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}