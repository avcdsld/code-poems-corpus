{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 39,
    "column": 38
  },
  "text": "def comment(path,\n            regex,\n            char='#',\n            backup='.bak'):\n    '''\n    .. deprecated:: 0.17.0\n       Use :py:func:`~salt.modules.file.replace` instead.\n\n    Comment out specified lines in a file\n\n    path\n        The full path to the file to be edited\n    regex\n        A regular expression used to find the lines that are to be commented;\n        this pattern will be wrapped in parenthesis and will move any\n        preceding/trailing ``^`` or ``$`` characters outside the parenthesis\n        (e.g., the pattern ``^foo$`` will be rewritten as ``^(foo)$``)\n    char : ``#``\n        The character to be inserted at the beginning of a line in order to\n        comment it out\n    backup : ``.bak``\n        The file will be backed up before edit with this file extension\n\n        .. warning::\n\n            This backup will be overwritten each time ``sed`` / ``comment`` /\n            ``uncomment`` is called. Meaning the backup will only be useful\n            after the first invocation.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' file.comment /etc/modules pcspkr\n    '''\n    return comment_line(path=path,\n                        regex=regex,\n                        char=char,\n                        cmnt=True,\n                        backup=backup)",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 39,
        "column": 38
      },
      "text": "def comment(path,\n            regex,\n            char='#',\n            backup='.bak'):\n    '''\n    .. deprecated:: 0.17.0\n       Use :py:func:`~salt.modules.file.replace` instead.\n\n    Comment out specified lines in a file\n\n    path\n        The full path to the file to be edited\n    regex\n        A regular expression used to find the lines that are to be commented;\n        this pattern will be wrapped in parenthesis and will move any\n        preceding/trailing ``^`` or ``$`` characters outside the parenthesis\n        (e.g., the pattern ``^foo$`` will be rewritten as ``^(foo)$``)\n    char : ``#``\n        The character to be inserted at the beginning of a line in order to\n        comment it out\n    backup : ``.bak``\n        The file will be backed up before edit with this file extension\n\n        .. warning::\n\n            This backup will be overwritten each time ``sed`` / ``comment`` /\n            ``uncomment`` is called. Meaning the backup will only be useful\n            after the first invocation.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' file.comment /etc/modules pcspkr\n    '''\n    return comment_line(path=path,\n                        regex=regex,\n                        char=char,\n                        cmnt=True,\n                        backup=backup)",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 11
          },
          "text": "comment"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 11
          },
          "end": {
            "row": 3,
            "column": 26
          },
          "text": "(path,\n            regex,\n            char='#',\n            backup='.bak')",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 11
              },
              "end": {
                "row": 0,
                "column": 12
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 12
              },
              "end": {
                "row": 0,
                "column": 16
              },
              "text": "path"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 16
              },
              "end": {
                "row": 0,
                "column": 17
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 1,
                "column": 12
              },
              "end": {
                "row": 1,
                "column": 17
              },
              "text": "regex"
            },
            {
              "type": ",",
              "start": {
                "row": 1,
                "column": 17
              },
              "end": {
                "row": 1,
                "column": 18
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 2,
                "column": 12
              },
              "end": {
                "row": 2,
                "column": 20
              },
              "text": "char='#'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 2,
                    "column": 12
                  },
                  "end": {
                    "row": 2,
                    "column": 16
                  },
                  "text": "char"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 2,
                    "column": 16
                  },
                  "end": {
                    "row": 2,
                    "column": 17
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 2,
                    "column": 17
                  },
                  "end": {
                    "row": 2,
                    "column": 20
                  },
                  "text": "'#'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 2,
                        "column": 17
                      },
                      "end": {
                        "row": 2,
                        "column": 18
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 2,
                        "column": 18
                      },
                      "end": {
                        "row": 2,
                        "column": 19
                      },
                      "text": "#"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 2,
                        "column": 19
                      },
                      "end": {
                        "row": 2,
                        "column": 20
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 2,
                "column": 20
              },
              "end": {
                "row": 2,
                "column": 21
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 3,
                "column": 12
              },
              "end": {
                "row": 3,
                "column": 25
              },
              "text": "backup='.bak'",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 3,
                    "column": 12
                  },
                  "end": {
                    "row": 3,
                    "column": 18
                  },
                  "text": "backup"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 3,
                    "column": 18
                  },
                  "end": {
                    "row": 3,
                    "column": 19
                  },
                  "text": "="
                },
                {
                  "type": "string",
                  "start": {
                    "row": 3,
                    "column": 19
                  },
                  "end": {
                    "row": 3,
                    "column": 25
                  },
                  "text": "'.bak'",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 3,
                        "column": 19
                      },
                      "end": {
                        "row": 3,
                        "column": 20
                      },
                      "text": "'"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 3,
                        "column": 20
                      },
                      "end": {
                        "row": 3,
                        "column": 24
                      },
                      "text": ".bak"
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 3,
                        "column": 24
                      },
                      "end": {
                        "row": 3,
                        "column": 25
                      },
                      "text": "'"
                    }
                  ]
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 3,
                "column": 25
              },
              "end": {
                "row": 3,
                "column": 26
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 3,
            "column": 26
          },
          "end": {
            "row": 3,
            "column": 27
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 4,
            "column": 4
          },
          "end": {
            "row": 39,
            "column": 38
          },
          "text": "'''\n    .. deprecated:: 0.17.0\n       Use :py:func:`~salt.modules.file.replace` instead.\n\n    Comment out specified lines in a file\n\n    path\n        The full path to the file to be edited\n    regex\n        A regular expression used to find the lines that are to be commented;\n        this pattern will be wrapped in parenthesis and will move any\n        preceding/trailing ``^`` or ``$`` characters outside the parenthesis\n        (e.g., the pattern ``^foo$`` will be rewritten as ``^(foo)$``)\n    char : ``#``\n        The character to be inserted at the beginning of a line in order to\n        comment it out\n    backup : ``.bak``\n        The file will be backed up before edit with this file extension\n\n        .. warning::\n\n            This backup will be overwritten each time ``sed`` / ``comment`` /\n            ``uncomment`` is called. Meaning the backup will only be useful\n            after the first invocation.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' file.comment /etc/modules pcspkr\n    '''\n    return comment_line(path=path,\n                        regex=regex,\n                        char=char,\n                        cmnt=True,\n                        backup=backup)",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 4,
                "column": 4
              },
              "end": {
                "row": 34,
                "column": 7
              },
              "text": "'''\n    .. deprecated:: 0.17.0\n       Use :py:func:`~salt.modules.file.replace` instead.\n\n    Comment out specified lines in a file\n\n    path\n        The full path to the file to be edited\n    regex\n        A regular expression used to find the lines that are to be commented;\n        this pattern will be wrapped in parenthesis and will move any\n        preceding/trailing ``^`` or ``$`` characters outside the parenthesis\n        (e.g., the pattern ``^foo$`` will be rewritten as ``^(foo)$``)\n    char : ``#``\n        The character to be inserted at the beginning of a line in order to\n        comment it out\n    backup : ``.bak``\n        The file will be backed up before edit with this file extension\n\n        .. warning::\n\n            This backup will be overwritten each time ``sed`` / ``comment`` /\n            ``uncomment`` is called. Meaning the backup will only be useful\n            after the first invocation.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' file.comment /etc/modules pcspkr\n    '''",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 4,
                    "column": 4
                  },
                  "end": {
                    "row": 34,
                    "column": 7
                  },
                  "text": "'''\n    .. deprecated:: 0.17.0\n       Use :py:func:`~salt.modules.file.replace` instead.\n\n    Comment out specified lines in a file\n\n    path\n        The full path to the file to be edited\n    regex\n        A regular expression used to find the lines that are to be commented;\n        this pattern will be wrapped in parenthesis and will move any\n        preceding/trailing ``^`` or ``$`` characters outside the parenthesis\n        (e.g., the pattern ``^foo$`` will be rewritten as ``^(foo)$``)\n    char : ``#``\n        The character to be inserted at the beginning of a line in order to\n        comment it out\n    backup : ``.bak``\n        The file will be backed up before edit with this file extension\n\n        .. warning::\n\n            This backup will be overwritten each time ``sed`` / ``comment`` /\n            ``uncomment`` is called. Meaning the backup will only be useful\n            after the first invocation.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' file.comment /etc/modules pcspkr\n    '''",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 4,
                        "column": 4
                      },
                      "end": {
                        "row": 4,
                        "column": 7
                      },
                      "text": "'''"
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 4,
                        "column": 7
                      },
                      "end": {
                        "row": 34,
                        "column": 4
                      },
                      "text": "\n    .. deprecated:: 0.17.0\n       Use :py:func:`~salt.modules.file.replace` instead.\n\n    Comment out specified lines in a file\n\n    path\n        The full path to the file to be edited\n    regex\n        A regular expression used to find the lines that are to be commented;\n        this pattern will be wrapped in parenthesis and will move any\n        preceding/trailing ``^`` or ``$`` characters outside the parenthesis\n        (e.g., the pattern ``^foo$`` will be rewritten as ``^(foo)$``)\n    char : ``#``\n        The character to be inserted at the beginning of a line in order to\n        comment it out\n    backup : ``.bak``\n        The file will be backed up before edit with this file extension\n\n        .. warning::\n\n            This backup will be overwritten each time ``sed`` / ``comment`` /\n            ``uncomment`` is called. Meaning the backup will only be useful\n            after the first invocation.\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt '*' file.comment /etc/modules pcspkr\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 34,
                        "column": 4
                      },
                      "end": {
                        "row": 34,
                        "column": 7
                      },
                      "text": "'''"
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 35,
                "column": 4
              },
              "end": {
                "row": 39,
                "column": 38
              },
              "text": "return comment_line(path=path,\n                        regex=regex,\n                        char=char,\n                        cmnt=True,\n                        backup=backup)",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 35,
                    "column": 4
                  },
                  "end": {
                    "row": 35,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 35,
                    "column": 11
                  },
                  "end": {
                    "row": 39,
                    "column": 38
                  },
                  "text": "comment_line(path=path,\n                        regex=regex,\n                        char=char,\n                        cmnt=True,\n                        backup=backup)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 35,
                        "column": 11
                      },
                      "end": {
                        "row": 35,
                        "column": 23
                      },
                      "text": "comment_line"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 35,
                        "column": 23
                      },
                      "end": {
                        "row": 39,
                        "column": 38
                      },
                      "text": "(path=path,\n                        regex=regex,\n                        char=char,\n                        cmnt=True,\n                        backup=backup)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 35,
                            "column": 23
                          },
                          "end": {
                            "row": 35,
                            "column": 24
                          },
                          "text": "("
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 35,
                            "column": 24
                          },
                          "end": {
                            "row": 35,
                            "column": 33
                          },
                          "text": "path=path",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 35,
                                "column": 24
                              },
                              "end": {
                                "row": 35,
                                "column": 28
                              },
                              "text": "path"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 35,
                                "column": 28
                              },
                              "end": {
                                "row": 35,
                                "column": 29
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 35,
                                "column": 29
                              },
                              "end": {
                                "row": 35,
                                "column": 33
                              },
                              "text": "path"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 35,
                            "column": 33
                          },
                          "end": {
                            "row": 35,
                            "column": 34
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 36,
                            "column": 24
                          },
                          "end": {
                            "row": 36,
                            "column": 35
                          },
                          "text": "regex=regex",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 24
                              },
                              "end": {
                                "row": 36,
                                "column": 29
                              },
                              "text": "regex"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 36,
                                "column": 29
                              },
                              "end": {
                                "row": 36,
                                "column": 30
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 36,
                                "column": 30
                              },
                              "end": {
                                "row": 36,
                                "column": 35
                              },
                              "text": "regex"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 36,
                            "column": 35
                          },
                          "end": {
                            "row": 36,
                            "column": 36
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 37,
                            "column": 24
                          },
                          "end": {
                            "row": 37,
                            "column": 33
                          },
                          "text": "char=char",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 37,
                                "column": 24
                              },
                              "end": {
                                "row": 37,
                                "column": 28
                              },
                              "text": "char"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 37,
                                "column": 28
                              },
                              "end": {
                                "row": 37,
                                "column": 29
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 37,
                                "column": 29
                              },
                              "end": {
                                "row": 37,
                                "column": 33
                              },
                              "text": "char"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 37,
                            "column": 33
                          },
                          "end": {
                            "row": 37,
                            "column": 34
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 38,
                            "column": 24
                          },
                          "end": {
                            "row": 38,
                            "column": 33
                          },
                          "text": "cmnt=True",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 38,
                                "column": 24
                              },
                              "end": {
                                "row": 38,
                                "column": 28
                              },
                              "text": "cmnt"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 38,
                                "column": 28
                              },
                              "end": {
                                "row": 38,
                                "column": 29
                              },
                              "text": "="
                            },
                            {
                              "type": "true",
                              "start": {
                                "row": 38,
                                "column": 29
                              },
                              "end": {
                                "row": 38,
                                "column": 33
                              },
                              "text": "True"
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 38,
                            "column": 33
                          },
                          "end": {
                            "row": 38,
                            "column": 34
                          },
                          "text": ","
                        },
                        {
                          "type": "keyword_argument",
                          "start": {
                            "row": 39,
                            "column": 24
                          },
                          "end": {
                            "row": 39,
                            "column": 37
                          },
                          "text": "backup=backup",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 24
                              },
                              "end": {
                                "row": 39,
                                "column": 30
                              },
                              "text": "backup"
                            },
                            {
                              "type": "=",
                              "start": {
                                "row": 39,
                                "column": 30
                              },
                              "end": {
                                "row": 39,
                                "column": 31
                              },
                              "text": "="
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 39,
                                "column": 31
                              },
                              "end": {
                                "row": 39,
                                "column": 37
                              },
                              "text": "backup"
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 39,
                            "column": 37
                          },
                          "end": {
                            "row": 39,
                            "column": 38
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}