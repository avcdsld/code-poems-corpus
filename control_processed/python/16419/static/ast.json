{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 11,
    "column": 74
  },
  "text": "def _GenerateNonImplementedMethod(self, method):\n    \"\"\"Generates and returns a method that can be set for a service methods.\n\n    Args:\n      method: Descriptor of the service method for which a method is to be\n        generated.\n\n    Returns:\n      A method that can be added to the service class.\n    \"\"\"\n    return lambda inst, rpc_controller, request, callback: (\n        self._NonImplementedMethod(method.name, rpc_controller, callback))",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 11,
        "column": 74
      },
      "text": "def _GenerateNonImplementedMethod(self, method):\n    \"\"\"Generates and returns a method that can be set for a service methods.\n\n    Args:\n      method: Descriptor of the service method for which a method is to be\n        generated.\n\n    Returns:\n      A method that can be added to the service class.\n    \"\"\"\n    return lambda inst, rpc_controller, request, callback: (\n        self._NonImplementedMethod(method.name, rpc_controller, callback))",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 33
          },
          "text": "_GenerateNonImplementedMethod"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 33
          },
          "end": {
            "row": 0,
            "column": 47
          },
          "text": "(self, method)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 33
              },
              "end": {
                "row": 0,
                "column": 34
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 38
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 38
              },
              "end": {
                "row": 0,
                "column": 39
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 40
              },
              "end": {
                "row": 0,
                "column": 46
              },
              "text": "method"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 46
              },
              "end": {
                "row": 0,
                "column": 47
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 47
          },
          "end": {
            "row": 0,
            "column": 48
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 11,
            "column": 74
          },
          "text": "\"\"\"Generates and returns a method that can be set for a service methods.\n\n    Args:\n      method: Descriptor of the service method for which a method is to be\n        generated.\n\n    Returns:\n      A method that can be added to the service class.\n    \"\"\"\n    return lambda inst, rpc_controller, request, callback: (\n        self._NonImplementedMethod(method.name, rpc_controller, callback))",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 9,
                "column": 7
              },
              "text": "\"\"\"Generates and returns a method that can be set for a service methods.\n\n    Args:\n      method: Descriptor of the service method for which a method is to be\n        generated.\n\n    Returns:\n      A method that can be added to the service class.\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 9,
                    "column": 7
                  },
                  "text": "\"\"\"Generates and returns a method that can be set for a service methods.\n\n    Args:\n      method: Descriptor of the service method for which a method is to be\n        generated.\n\n    Returns:\n      A method that can be added to the service class.\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 9,
                        "column": 4
                      },
                      "text": "Generates and returns a method that can be set for a service methods.\n\n    Args:\n      method: Descriptor of the service method for which a method is to be\n        generated.\n\n    Returns:\n      A method that can be added to the service class.\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 9,
                        "column": 4
                      },
                      "end": {
                        "row": 9,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 10,
                "column": 4
              },
              "end": {
                "row": 11,
                "column": 74
              },
              "text": "return lambda inst, rpc_controller, request, callback: (\n        self._NonImplementedMethod(method.name, rpc_controller, callback))",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 10,
                    "column": 4
                  },
                  "end": {
                    "row": 10,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "lambda",
                  "start": {
                    "row": 10,
                    "column": 11
                  },
                  "end": {
                    "row": 11,
                    "column": 74
                  },
                  "text": "lambda inst, rpc_controller, request, callback: (\n        self._NonImplementedMethod(method.name, rpc_controller, callback))",
                  "children": [
                    {
                      "type": "lambda",
                      "start": {
                        "row": 10,
                        "column": 11
                      },
                      "end": {
                        "row": 10,
                        "column": 17
                      },
                      "text": "lambda"
                    },
                    {
                      "type": "lambda_parameters",
                      "start": {
                        "row": 10,
                        "column": 18
                      },
                      "end": {
                        "row": 10,
                        "column": 57
                      },
                      "text": "inst, rpc_controller, request, callback",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 18
                          },
                          "end": {
                            "row": 10,
                            "column": 22
                          },
                          "text": "inst"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 10,
                            "column": 22
                          },
                          "end": {
                            "row": 10,
                            "column": 23
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 24
                          },
                          "end": {
                            "row": 10,
                            "column": 38
                          },
                          "text": "rpc_controller"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 10,
                            "column": 38
                          },
                          "end": {
                            "row": 10,
                            "column": 39
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 40
                          },
                          "end": {
                            "row": 10,
                            "column": 47
                          },
                          "text": "request"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 10,
                            "column": 47
                          },
                          "end": {
                            "row": 10,
                            "column": 48
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 10,
                            "column": 49
                          },
                          "end": {
                            "row": 10,
                            "column": 57
                          },
                          "text": "callback"
                        }
                      ]
                    },
                    {
                      "type": ":",
                      "start": {
                        "row": 10,
                        "column": 57
                      },
                      "end": {
                        "row": 10,
                        "column": 58
                      },
                      "text": ":"
                    },
                    {
                      "type": "parenthesized_expression",
                      "start": {
                        "row": 10,
                        "column": 59
                      },
                      "end": {
                        "row": 11,
                        "column": 74
                      },
                      "text": "(\n        self._NonImplementedMethod(method.name, rpc_controller, callback))",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 10,
                            "column": 59
                          },
                          "end": {
                            "row": 10,
                            "column": 60
                          },
                          "text": "("
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 11,
                            "column": 8
                          },
                          "end": {
                            "row": 11,
                            "column": 73
                          },
                          "text": "self._NonImplementedMethod(method.name, rpc_controller, callback)",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 11,
                                "column": 8
                              },
                              "end": {
                                "row": 11,
                                "column": 34
                              },
                              "text": "self._NonImplementedMethod",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 8
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 12
                                  },
                                  "text": "self"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 11,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 13
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 13
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 34
                                  },
                                  "text": "_NonImplementedMethod"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 11,
                                "column": 34
                              },
                              "end": {
                                "row": 11,
                                "column": 73
                              },
                              "text": "(method.name, rpc_controller, callback)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 11,
                                    "column": 34
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 35
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "attribute",
                                  "start": {
                                    "row": 11,
                                    "column": 35
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 46
                                  },
                                  "text": "method.name",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 35
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 41
                                      },
                                      "text": "method"
                                    },
                                    {
                                      "type": ".",
                                      "start": {
                                        "row": 11,
                                        "column": 41
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 42
                                      },
                                      "text": "."
                                    },
                                    {
                                      "type": "identifier",
                                      "start": {
                                        "row": 11,
                                        "column": 42
                                      },
                                      "end": {
                                        "row": 11,
                                        "column": 46
                                      },
                                      "text": "name"
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 11,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 47
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 48
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 62
                                  },
                                  "text": "rpc_controller"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 11,
                                    "column": 62
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 63
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 11,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 72
                                  },
                                  "text": "callback"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 11,
                                    "column": 72
                                  },
                                  "end": {
                                    "row": 11,
                                    "column": 73
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 11,
                            "column": 73
                          },
                          "end": {
                            "row": 11,
                            "column": 74
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}