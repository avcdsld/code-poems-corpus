{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 18,
    "column": 82
  },
  "text": "def execute_action_sequence(self, action_sequence: List[str], side_arguments: List[Dict] = None):\n        \"\"\"\n        Executes the program defined by an action sequence directly, without needing the overhead\n        of translating to a logical form first.  For any given program, :func:`execute` and this\n        function are equivalent, they just take different representations of the program, so you\n        can use whichever is more efficient.\n\n        Also, if you have state or side arguments associated with particular production rules\n        (e.g., the decoder's attention on an input utterance when a predicate was predicted), you\n        `must` use this function to execute the logical form, instead of :func:`execute`, so that\n        we can match the side arguments with the right functions.\n        \"\"\"\n        # We'll strip off the first action, because it doesn't matter for execution.\n        first_action = action_sequence[0]\n        left_side = first_action.split(' -> ')[0]\n        if left_side != '@start@':\n            raise ExecutionError('invalid action sequence')\n        remaining_side_args = side_arguments[1:] if side_arguments else None\n        return self._execute_sequence(action_sequence[1:], remaining_side_args)[0]",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 18,
        "column": 82
      },
      "text": "def execute_action_sequence(self, action_sequence: List[str], side_arguments: List[Dict] = None):\n        \"\"\"\n        Executes the program defined by an action sequence directly, without needing the overhead\n        of translating to a logical form first.  For any given program, :func:`execute` and this\n        function are equivalent, they just take different representations of the program, so you\n        can use whichever is more efficient.\n\n        Also, if you have state or side arguments associated with particular production rules\n        (e.g., the decoder's attention on an input utterance when a predicate was predicted), you\n        `must` use this function to execute the logical form, instead of :func:`execute`, so that\n        we can match the side arguments with the right functions.\n        \"\"\"\n        # We'll strip off the first action, because it doesn't matter for execution.\n        first_action = action_sequence[0]\n        left_side = first_action.split(' -> ')[0]\n        if left_side != '@start@':\n            raise ExecutionError('invalid action sequence')\n        remaining_side_args = side_arguments[1:] if side_arguments else None\n        return self._execute_sequence(action_sequence[1:], remaining_side_args)[0]",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 27
          },
          "text": "execute_action_sequence"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 27
          },
          "end": {
            "row": 0,
            "column": 96
          },
          "text": "(self, action_sequence: List[str], side_arguments: List[Dict] = None)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 27
              },
              "end": {
                "row": 0,
                "column": 28
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 28
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "self"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": ","
            },
            {
              "type": "typed_parameter",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 60
              },
              "text": "action_sequence: List[str]",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 34
                  },
                  "end": {
                    "row": 0,
                    "column": 49
                  },
                  "text": "action_sequence"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 0,
                    "column": 49
                  },
                  "end": {
                    "row": 0,
                    "column": 50
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 0,
                    "column": 51
                  },
                  "end": {
                    "row": 0,
                    "column": 60
                  },
                  "text": "List[str]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 0,
                        "column": 51
                      },
                      "end": {
                        "row": 0,
                        "column": 60
                      },
                      "text": "List[str]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 0,
                            "column": 51
                          },
                          "end": {
                            "row": 0,
                            "column": 55
                          },
                          "text": "List"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 0,
                            "column": 55
                          },
                          "end": {
                            "row": 0,
                            "column": 60
                          },
                          "text": "[str]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 0,
                                "column": 55
                              },
                              "end": {
                                "row": 0,
                                "column": 56
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 0,
                                "column": 56
                              },
                              "end": {
                                "row": 0,
                                "column": 59
                              },
                              "text": "str",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 0,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 0,
                                    "column": 59
                                  },
                                  "text": "str"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 0,
                                "column": 59
                              },
                              "end": {
                                "row": 0,
                                "column": 60
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 60
              },
              "end": {
                "row": 0,
                "column": 61
              },
              "text": ","
            },
            {
              "type": "typed_default_parameter",
              "start": {
                "row": 0,
                "column": 62
              },
              "end": {
                "row": 0,
                "column": 95
              },
              "text": "side_arguments: List[Dict] = None",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 62
                  },
                  "end": {
                    "row": 0,
                    "column": 76
                  },
                  "text": "side_arguments"
                },
                {
                  "type": ":",
                  "start": {
                    "row": 0,
                    "column": 76
                  },
                  "end": {
                    "row": 0,
                    "column": 77
                  },
                  "text": ":"
                },
                {
                  "type": "type",
                  "start": {
                    "row": 0,
                    "column": 78
                  },
                  "end": {
                    "row": 0,
                    "column": 88
                  },
                  "text": "List[Dict]",
                  "children": [
                    {
                      "type": "generic_type",
                      "start": {
                        "row": 0,
                        "column": 78
                      },
                      "end": {
                        "row": 0,
                        "column": 88
                      },
                      "text": "List[Dict]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 0,
                            "column": 78
                          },
                          "end": {
                            "row": 0,
                            "column": 82
                          },
                          "text": "List"
                        },
                        {
                          "type": "type_parameter",
                          "start": {
                            "row": 0,
                            "column": 82
                          },
                          "end": {
                            "row": 0,
                            "column": 88
                          },
                          "text": "[Dict]",
                          "children": [
                            {
                              "type": "[",
                              "start": {
                                "row": 0,
                                "column": 82
                              },
                              "end": {
                                "row": 0,
                                "column": 83
                              },
                              "text": "["
                            },
                            {
                              "type": "type",
                              "start": {
                                "row": 0,
                                "column": 83
                              },
                              "end": {
                                "row": 0,
                                "column": 87
                              },
                              "text": "Dict",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 0,
                                    "column": 83
                                  },
                                  "end": {
                                    "row": 0,
                                    "column": 87
                                  },
                                  "text": "Dict"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 0,
                                "column": 87
                              },
                              "end": {
                                "row": 0,
                                "column": 88
                              },
                              "text": "]"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 89
                  },
                  "end": {
                    "row": 0,
                    "column": 90
                  },
                  "text": "="
                },
                {
                  "type": "none",
                  "start": {
                    "row": 0,
                    "column": 91
                  },
                  "end": {
                    "row": 0,
                    "column": 95
                  },
                  "text": "None"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 95
              },
              "end": {
                "row": 0,
                "column": 96
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 96
          },
          "end": {
            "row": 0,
            "column": 97
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 8
          },
          "end": {
            "row": 18,
            "column": 82
          },
          "text": "\"\"\"\n        Executes the program defined by an action sequence directly, without needing the overhead\n        of translating to a logical form first.  For any given program, :func:`execute` and this\n        function are equivalent, they just take different representations of the program, so you\n        can use whichever is more efficient.\n\n        Also, if you have state or side arguments associated with particular production rules\n        (e.g., the decoder's attention on an input utterance when a predicate was predicted), you\n        `must` use this function to execute the logical form, instead of :func:`execute`, so that\n        we can match the side arguments with the right functions.\n        \"\"\"\n        # We'll strip off the first action, because it doesn't matter for execution.\n        first_action = action_sequence[0]\n        left_side = first_action.split(' -> ')[0]\n        if left_side != '@start@':\n            raise ExecutionError('invalid action sequence')\n        remaining_side_args = side_arguments[1:] if side_arguments else None\n        return self._execute_sequence(action_sequence[1:], remaining_side_args)[0]",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 8
              },
              "end": {
                "row": 11,
                "column": 11
              },
              "text": "\"\"\"\n        Executes the program defined by an action sequence directly, without needing the overhead\n        of translating to a logical form first.  For any given program, :func:`execute` and this\n        function are equivalent, they just take different representations of the program, so you\n        can use whichever is more efficient.\n\n        Also, if you have state or side arguments associated with particular production rules\n        (e.g., the decoder's attention on an input utterance when a predicate was predicted), you\n        `must` use this function to execute the logical form, instead of :func:`execute`, so that\n        we can match the side arguments with the right functions.\n        \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 8
                  },
                  "end": {
                    "row": 11,
                    "column": 11
                  },
                  "text": "\"\"\"\n        Executes the program defined by an action sequence directly, without needing the overhead\n        of translating to a logical form first.  For any given program, :func:`execute` and this\n        function are equivalent, they just take different representations of the program, so you\n        can use whichever is more efficient.\n\n        Also, if you have state or side arguments associated with particular production rules\n        (e.g., the decoder's attention on an input utterance when a predicate was predicted), you\n        `must` use this function to execute the logical form, instead of :func:`execute`, so that\n        we can match the side arguments with the right functions.\n        \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 8
                      },
                      "end": {
                        "row": 1,
                        "column": 11
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 11
                      },
                      "end": {
                        "row": 11,
                        "column": 8
                      },
                      "text": "\n        Executes the program defined by an action sequence directly, without needing the overhead\n        of translating to a logical form first.  For any given program, :func:`execute` and this\n        function are equivalent, they just take different representations of the program, so you\n        can use whichever is more efficient.\n\n        Also, if you have state or side arguments associated with particular production rules\n        (e.g., the decoder's attention on an input utterance when a predicate was predicted), you\n        `must` use this function to execute the logical form, instead of :func:`execute`, so that\n        we can match the side arguments with the right functions.\n        "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 11,
                        "column": 8
                      },
                      "end": {
                        "row": 11,
                        "column": 11
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "comment",
              "start": {
                "row": 12,
                "column": 8
              },
              "end": {
                "row": 12,
                "column": 84
              },
              "text": "# We'll strip off the first action, because it doesn't matter for execution."
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 13,
                "column": 8
              },
              "end": {
                "row": 13,
                "column": 41
              },
              "text": "first_action = action_sequence[0]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 13,
                    "column": 8
                  },
                  "end": {
                    "row": 13,
                    "column": 41
                  },
                  "text": "first_action = action_sequence[0]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 13,
                        "column": 8
                      },
                      "end": {
                        "row": 13,
                        "column": 20
                      },
                      "text": "first_action"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 13,
                        "column": 21
                      },
                      "end": {
                        "row": 13,
                        "column": 22
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 13,
                        "column": 23
                      },
                      "end": {
                        "row": 13,
                        "column": 41
                      },
                      "text": "action_sequence[0]",
                      "children": [
                        {
                          "type": "identifier",
                          "start": {
                            "row": 13,
                            "column": 23
                          },
                          "end": {
                            "row": 13,
                            "column": 38
                          },
                          "text": "action_sequence"
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 13,
                            "column": 38
                          },
                          "end": {
                            "row": 13,
                            "column": 39
                          },
                          "text": "["
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 13,
                            "column": 39
                          },
                          "end": {
                            "row": 13,
                            "column": 40
                          },
                          "text": "0"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 13,
                            "column": 40
                          },
                          "end": {
                            "row": 13,
                            "column": 41
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 14,
                "column": 8
              },
              "end": {
                "row": 14,
                "column": 49
              },
              "text": "left_side = first_action.split(' -> ')[0]",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 14,
                    "column": 8
                  },
                  "end": {
                    "row": 14,
                    "column": 49
                  },
                  "text": "left_side = first_action.split(' -> ')[0]",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 14,
                        "column": 8
                      },
                      "end": {
                        "row": 14,
                        "column": 17
                      },
                      "text": "left_side"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 14,
                        "column": 18
                      },
                      "end": {
                        "row": 14,
                        "column": 19
                      },
                      "text": "="
                    },
                    {
                      "type": "subscript",
                      "start": {
                        "row": 14,
                        "column": 20
                      },
                      "end": {
                        "row": 14,
                        "column": 49
                      },
                      "text": "first_action.split(' -> ')[0]",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 14,
                            "column": 20
                          },
                          "end": {
                            "row": 14,
                            "column": 46
                          },
                          "text": "first_action.split(' -> ')",
                          "children": [
                            {
                              "type": "attribute",
                              "start": {
                                "row": 14,
                                "column": 20
                              },
                              "end": {
                                "row": 14,
                                "column": 38
                              },
                              "text": "first_action.split",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 20
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 32
                                  },
                                  "text": "first_action"
                                },
                                {
                                  "type": ".",
                                  "start": {
                                    "row": 14,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 33
                                  },
                                  "text": "."
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 14,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 38
                                  },
                                  "text": "split"
                                }
                              ]
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 14,
                                "column": 38
                              },
                              "end": {
                                "row": 14,
                                "column": 46
                              },
                              "text": "(' -> ')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 14,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 39
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 14,
                                    "column": 39
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 45
                                  },
                                  "text": "' -> '",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 14,
                                        "column": 39
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 40
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 14,
                                        "column": 40
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 44
                                      },
                                      "text": " -> "
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 14,
                                        "column": 44
                                      },
                                      "end": {
                                        "row": 14,
                                        "column": 45
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 14,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 14,
                                    "column": 46
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start": {
                            "row": 14,
                            "column": 46
                          },
                          "end": {
                            "row": 14,
                            "column": 47
                          },
                          "text": "["
                        },
                        {
                          "type": "integer",
                          "start": {
                            "row": 14,
                            "column": 47
                          },
                          "end": {
                            "row": 14,
                            "column": 48
                          },
                          "text": "0"
                        },
                        {
                          "type": "]",
                          "start": {
                            "row": 14,
                            "column": 48
                          },
                          "end": {
                            "row": 14,
                            "column": 49
                          },
                          "text": "]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start": {
                "row": 15,
                "column": 8
              },
              "end": {
                "row": 16,
                "column": 59
              },
              "text": "if left_side != '@start@':\n            raise ExecutionError('invalid action sequence')",
              "children": [
                {
                  "type": "if",
                  "start": {
                    "row": 15,
                    "column": 8
                  },
                  "end": {
                    "row": 15,
                    "column": 10
                  },
                  "text": "if"
                },
                {
                  "type": "comparison_operator",
                  "start": {
                    "row": 15,
                    "column": 11
                  },
                  "end": {
                    "row": 15,
                    "column": 33
                  },
                  "text": "left_side != '@start@'",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 15,
                        "column": 11
                      },
                      "end": {
                        "row": 15,
                        "column": 20
                      },
                      "text": "left_side"
                    },
                    {
                      "type": "!=",
                      "start": {
                        "row": 15,
                        "column": 21
                      },
                      "end": {
                        "row": 15,
                        "column": 23
                      },
                      "text": "!="
                    },
                    {
                      "type": "string",
                      "start": {
                        "row": 15,
                        "column": 24
                      },
                      "end": {
                        "row": 15,
                        "column": 33
                      },
                      "text": "'@start@'",
                      "children": [
                        {
                          "type": "string_start",
                          "start": {
                            "row": 15,
                            "column": 24
                          },
                          "end": {
                            "row": 15,
                            "column": 25
                          },
                          "text": "'"
                        },
                        {
                          "type": "string_content",
                          "start": {
                            "row": 15,
                            "column": 25
                          },
                          "end": {
                            "row": 15,
                            "column": 32
                          },
                          "text": "@start@"
                        },
                        {
                          "type": "string_end",
                          "start": {
                            "row": 15,
                            "column": 32
                          },
                          "end": {
                            "row": 15,
                            "column": 33
                          },
                          "text": "'"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 15,
                    "column": 33
                  },
                  "end": {
                    "row": 15,
                    "column": 34
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 16,
                    "column": 12
                  },
                  "end": {
                    "row": 16,
                    "column": 59
                  },
                  "text": "raise ExecutionError('invalid action sequence')",
                  "children": [
                    {
                      "type": "raise_statement",
                      "start": {
                        "row": 16,
                        "column": 12
                      },
                      "end": {
                        "row": 16,
                        "column": 59
                      },
                      "text": "raise ExecutionError('invalid action sequence')",
                      "children": [
                        {
                          "type": "raise",
                          "start": {
                            "row": 16,
                            "column": 12
                          },
                          "end": {
                            "row": 16,
                            "column": 17
                          },
                          "text": "raise"
                        },
                        {
                          "type": "call",
                          "start": {
                            "row": 16,
                            "column": 18
                          },
                          "end": {
                            "row": 16,
                            "column": 59
                          },
                          "text": "ExecutionError('invalid action sequence')",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 16,
                                "column": 18
                              },
                              "end": {
                                "row": 16,
                                "column": 32
                              },
                              "text": "ExecutionError"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 16,
                                "column": 32
                              },
                              "end": {
                                "row": 16,
                                "column": 59
                              },
                              "text": "('invalid action sequence')",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 16,
                                    "column": 32
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 33
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "string",
                                  "start": {
                                    "row": 16,
                                    "column": 33
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 58
                                  },
                                  "text": "'invalid action sequence'",
                                  "children": [
                                    {
                                      "type": "string_start",
                                      "start": {
                                        "row": 16,
                                        "column": 33
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 34
                                      },
                                      "text": "'"
                                    },
                                    {
                                      "type": "string_content",
                                      "start": {
                                        "row": 16,
                                        "column": 34
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 57
                                      },
                                      "text": "invalid action sequence"
                                    },
                                    {
                                      "type": "string_end",
                                      "start": {
                                        "row": 16,
                                        "column": 57
                                      },
                                      "end": {
                                        "row": 16,
                                        "column": 58
                                      },
                                      "text": "'"
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 16,
                                    "column": 58
                                  },
                                  "end": {
                                    "row": 16,
                                    "column": 59
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 17,
                "column": 8
              },
              "end": {
                "row": 17,
                "column": 76
              },
              "text": "remaining_side_args = side_arguments[1:] if side_arguments else None",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 17,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 76
                  },
                  "text": "remaining_side_args = side_arguments[1:] if side_arguments else None",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 8
                      },
                      "end": {
                        "row": 17,
                        "column": 27
                      },
                      "text": "remaining_side_args"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 17,
                        "column": 28
                      },
                      "end": {
                        "row": 17,
                        "column": 29
                      },
                      "text": "="
                    },
                    {
                      "type": "conditional_expression",
                      "start": {
                        "row": 17,
                        "column": 30
                      },
                      "end": {
                        "row": 17,
                        "column": 76
                      },
                      "text": "side_arguments[1:] if side_arguments else None",
                      "children": [
                        {
                          "type": "subscript",
                          "start": {
                            "row": 17,
                            "column": 30
                          },
                          "end": {
                            "row": 17,
                            "column": 48
                          },
                          "text": "side_arguments[1:]",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 17,
                                "column": 30
                              },
                              "end": {
                                "row": 17,
                                "column": 44
                              },
                              "text": "side_arguments"
                            },
                            {
                              "type": "[",
                              "start": {
                                "row": 17,
                                "column": 44
                              },
                              "end": {
                                "row": 17,
                                "column": 45
                              },
                              "text": "["
                            },
                            {
                              "type": "slice",
                              "start": {
                                "row": 17,
                                "column": 45
                              },
                              "end": {
                                "row": 17,
                                "column": 47
                              },
                              "text": "1:",
                              "children": [
                                {
                                  "type": "integer",
                                  "start": {
                                    "row": 17,
                                    "column": 45
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 46
                                  },
                                  "text": "1"
                                },
                                {
                                  "type": ":",
                                  "start": {
                                    "row": 17,
                                    "column": 46
                                  },
                                  "end": {
                                    "row": 17,
                                    "column": 47
                                  },
                                  "text": ":"
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start": {
                                "row": 17,
                                "column": 47
                              },
                              "end": {
                                "row": 17,
                                "column": 48
                              },
                              "text": "]"
                            }
                          ]
                        },
                        {
                          "type": "if",
                          "start": {
                            "row": 17,
                            "column": 49
                          },
                          "end": {
                            "row": 17,
                            "column": 51
                          },
                          "text": "if"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 17,
                            "column": 52
                          },
                          "end": {
                            "row": 17,
                            "column": 66
                          },
                          "text": "side_arguments"
                        },
                        {
                          "type": "else",
                          "start": {
                            "row": 17,
                            "column": 67
                          },
                          "end": {
                            "row": 17,
                            "column": 71
                          },
                          "text": "else"
                        },
                        {
                          "type": "none",
                          "start": {
                            "row": 17,
                            "column": 72
                          },
                          "end": {
                            "row": 17,
                            "column": 76
                          },
                          "text": "None"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 18,
                "column": 8
              },
              "end": {
                "row": 18,
                "column": 82
              },
              "text": "return self._execute_sequence(action_sequence[1:], remaining_side_args)[0]",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 18,
                    "column": 14
                  },
                  "text": "return"
                },
                {
                  "type": "subscript",
                  "start": {
                    "row": 18,
                    "column": 15
                  },
                  "end": {
                    "row": 18,
                    "column": 82
                  },
                  "text": "self._execute_sequence(action_sequence[1:], remaining_side_args)[0]",
                  "children": [
                    {
                      "type": "call",
                      "start": {
                        "row": 18,
                        "column": 15
                      },
                      "end": {
                        "row": 18,
                        "column": 79
                      },
                      "text": "self._execute_sequence(action_sequence[1:], remaining_side_args)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 18,
                            "column": 15
                          },
                          "end": {
                            "row": 18,
                            "column": 37
                          },
                          "text": "self._execute_sequence",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 15
                              },
                              "end": {
                                "row": 18,
                                "column": 19
                              },
                              "text": "self"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 18,
                                "column": 19
                              },
                              "end": {
                                "row": 18,
                                "column": 20
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 20
                              },
                              "end": {
                                "row": 18,
                                "column": 37
                              },
                              "text": "_execute_sequence"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 18,
                            "column": 37
                          },
                          "end": {
                            "row": 18,
                            "column": 79
                          },
                          "text": "(action_sequence[1:], remaining_side_args)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 18,
                                "column": 37
                              },
                              "end": {
                                "row": 18,
                                "column": 38
                              },
                              "text": "("
                            },
                            {
                              "type": "subscript",
                              "start": {
                                "row": 18,
                                "column": 38
                              },
                              "end": {
                                "row": 18,
                                "column": 57
                              },
                              "text": "action_sequence[1:]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 38
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 53
                                  },
                                  "text": "action_sequence"
                                },
                                {
                                  "type": "[",
                                  "start": {
                                    "row": 18,
                                    "column": 53
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 54
                                  },
                                  "text": "["
                                },
                                {
                                  "type": "slice",
                                  "start": {
                                    "row": 18,
                                    "column": 54
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 56
                                  },
                                  "text": "1:",
                                  "children": [
                                    {
                                      "type": "integer",
                                      "start": {
                                        "row": 18,
                                        "column": 54
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 55
                                      },
                                      "text": "1"
                                    },
                                    {
                                      "type": ":",
                                      "start": {
                                        "row": 18,
                                        "column": 55
                                      },
                                      "end": {
                                        "row": 18,
                                        "column": 56
                                      },
                                      "text": ":"
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start": {
                                    "row": 18,
                                    "column": 56
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 57
                                  },
                                  "text": "]"
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 18,
                                "column": 57
                              },
                              "end": {
                                "row": 18,
                                "column": 58
                              },
                              "text": ","
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 59
                              },
                              "end": {
                                "row": 18,
                                "column": 78
                              },
                              "text": "remaining_side_args"
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 18,
                                "column": 78
                              },
                              "end": {
                                "row": 18,
                                "column": 79
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start": {
                        "row": 18,
                        "column": 79
                      },
                      "end": {
                        "row": 18,
                        "column": 80
                      },
                      "text": "["
                    },
                    {
                      "type": "integer",
                      "start": {
                        "row": 18,
                        "column": 80
                      },
                      "end": {
                        "row": 18,
                        "column": 81
                      },
                      "text": "0"
                    },
                    {
                      "type": "]",
                      "start": {
                        "row": 18,
                        "column": 81
                      },
                      "end": {
                        "row": 18,
                        "column": 82
                      },
                      "text": "]"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}