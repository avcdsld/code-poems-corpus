{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 20,
    "column": 20
  },
  "text": "def set_attribute(name, value):\n    \"\"\"\n    Decorator factory for setting attributes on a function.\n\n    Doesn't change the behavior of the wrapped function.\n\n    Examples\n    --------\n    >>> @set_attribute('__name__', 'foo')\n    ... def bar():\n    ...     return 3\n    ...\n    >>> bar()\n    3\n    >>> bar.__name__\n    'foo'\n    \"\"\"\n    def decorator(f):\n        setattr(f, name, value)\n        return f\n    return decorator",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 20,
        "column": 20
      },
      "text": "def set_attribute(name, value):\n    \"\"\"\n    Decorator factory for setting attributes on a function.\n\n    Doesn't change the behavior of the wrapped function.\n\n    Examples\n    --------\n    >>> @set_attribute('__name__', 'foo')\n    ... def bar():\n    ...     return 3\n    ...\n    >>> bar()\n    3\n    >>> bar.__name__\n    'foo'\n    \"\"\"\n    def decorator(f):\n        setattr(f, name, value)\n        return f\n    return decorator",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 17
          },
          "text": "set_attribute"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 17
          },
          "end": {
            "row": 0,
            "column": 30
          },
          "text": "(name, value)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 17
              },
              "end": {
                "row": 0,
                "column": 18
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 18
              },
              "end": {
                "row": 0,
                "column": 22
              },
              "text": "name"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 24
              },
              "end": {
                "row": 0,
                "column": 29
              },
              "text": "value"
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 29
              },
              "end": {
                "row": 0,
                "column": 30
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 30
          },
          "end": {
            "row": 0,
            "column": 31
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 20,
            "column": 20
          },
          "text": "\"\"\"\n    Decorator factory for setting attributes on a function.\n\n    Doesn't change the behavior of the wrapped function.\n\n    Examples\n    --------\n    >>> @set_attribute('__name__', 'foo')\n    ... def bar():\n    ...     return 3\n    ...\n    >>> bar()\n    3\n    >>> bar.__name__\n    'foo'\n    \"\"\"\n    def decorator(f):\n        setattr(f, name, value)\n        return f\n    return decorator",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 16,
                "column": 7
              },
              "text": "\"\"\"\n    Decorator factory for setting attributes on a function.\n\n    Doesn't change the behavior of the wrapped function.\n\n    Examples\n    --------\n    >>> @set_attribute('__name__', 'foo')\n    ... def bar():\n    ...     return 3\n    ...\n    >>> bar()\n    3\n    >>> bar.__name__\n    'foo'\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 16,
                    "column": 7
                  },
                  "text": "\"\"\"\n    Decorator factory for setting attributes on a function.\n\n    Doesn't change the behavior of the wrapped function.\n\n    Examples\n    --------\n    >>> @set_attribute('__name__', 'foo')\n    ... def bar():\n    ...     return 3\n    ...\n    >>> bar()\n    3\n    >>> bar.__name__\n    'foo'\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 16,
                        "column": 4
                      },
                      "text": "\n    Decorator factory for setting attributes on a function.\n\n    Doesn't change the behavior of the wrapped function.\n\n    Examples\n    --------\n    >>> @set_attribute('__name__', 'foo')\n    ... def bar():\n    ...     return 3\n    ...\n    >>> bar()\n    3\n    >>> bar.__name__\n    'foo'\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 16,
                        "column": 4
                      },
                      "end": {
                        "row": 16,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "function_definition",
              "start": {
                "row": 17,
                "column": 4
              },
              "end": {
                "row": 19,
                "column": 16
              },
              "text": "def decorator(f):\n        setattr(f, name, value)\n        return f",
              "children": [
                {
                  "type": "def",
                  "start": {
                    "row": 17,
                    "column": 4
                  },
                  "end": {
                    "row": 17,
                    "column": 7
                  },
                  "text": "def"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 17,
                    "column": 8
                  },
                  "end": {
                    "row": 17,
                    "column": 17
                  },
                  "text": "decorator"
                },
                {
                  "type": "parameters",
                  "start": {
                    "row": 17,
                    "column": 17
                  },
                  "end": {
                    "row": 17,
                    "column": 20
                  },
                  "text": "(f)",
                  "children": [
                    {
                      "type": "(",
                      "start": {
                        "row": 17,
                        "column": 17
                      },
                      "end": {
                        "row": 17,
                        "column": 18
                      },
                      "text": "("
                    },
                    {
                      "type": "identifier",
                      "start": {
                        "row": 17,
                        "column": 18
                      },
                      "end": {
                        "row": 17,
                        "column": 19
                      },
                      "text": "f"
                    },
                    {
                      "type": ")",
                      "start": {
                        "row": 17,
                        "column": 19
                      },
                      "end": {
                        "row": 17,
                        "column": 20
                      },
                      "text": ")"
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 17,
                    "column": 20
                  },
                  "end": {
                    "row": 17,
                    "column": 21
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 18,
                    "column": 8
                  },
                  "end": {
                    "row": 19,
                    "column": 16
                  },
                  "text": "setattr(f, name, value)\n        return f",
                  "children": [
                    {
                      "type": "expression_statement",
                      "start": {
                        "row": 18,
                        "column": 8
                      },
                      "end": {
                        "row": 18,
                        "column": 31
                      },
                      "text": "setattr(f, name, value)",
                      "children": [
                        {
                          "type": "call",
                          "start": {
                            "row": 18,
                            "column": 8
                          },
                          "end": {
                            "row": 18,
                            "column": 31
                          },
                          "text": "setattr(f, name, value)",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 18,
                                "column": 8
                              },
                              "end": {
                                "row": 18,
                                "column": 15
                              },
                              "text": "setattr"
                            },
                            {
                              "type": "argument_list",
                              "start": {
                                "row": 18,
                                "column": 15
                              },
                              "end": {
                                "row": 18,
                                "column": 31
                              },
                              "text": "(f, name, value)",
                              "children": [
                                {
                                  "type": "(",
                                  "start": {
                                    "row": 18,
                                    "column": 15
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 16
                                  },
                                  "text": "("
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 16
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 17
                                  },
                                  "text": "f"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 18,
                                    "column": 17
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 18
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 19
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 23
                                  },
                                  "text": "name"
                                },
                                {
                                  "type": ",",
                                  "start": {
                                    "row": 18,
                                    "column": 23
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 24
                                  },
                                  "text": ","
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 18,
                                    "column": 25
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 30
                                  },
                                  "text": "value"
                                },
                                {
                                  "type": ")",
                                  "start": {
                                    "row": 18,
                                    "column": 30
                                  },
                                  "end": {
                                    "row": 18,
                                    "column": 31
                                  },
                                  "text": ")"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start": {
                        "row": 19,
                        "column": 8
                      },
                      "end": {
                        "row": 19,
                        "column": 16
                      },
                      "text": "return f",
                      "children": [
                        {
                          "type": "return",
                          "start": {
                            "row": 19,
                            "column": 8
                          },
                          "end": {
                            "row": 19,
                            "column": 14
                          },
                          "text": "return"
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 19,
                            "column": 15
                          },
                          "end": {
                            "row": 19,
                            "column": 16
                          },
                          "text": "f"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 20,
                "column": 4
              },
              "end": {
                "row": 20,
                "column": 20
              },
              "text": "return decorator",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 20,
                    "column": 4
                  },
                  "end": {
                    "row": 20,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 20,
                    "column": 11
                  },
                  "end": {
                    "row": 20,
                    "column": 20
                  },
                  "text": "decorator"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}