{
  "type": "module",
  "start": {
    "row": 0,
    "column": 0
  },
  "end": {
    "row": 9,
    "column": 20
  },
  "text": "def _minimize_and_clip(optimizer, objective, var_list, clip_val=10):\n    \"\"\"Minimized `objective` using `optimizer` w.r.t. variables in\n    `var_list` while ensure the norm of the gradients for each\n    variable is clipped to `clip_val`\n    \"\"\"\n    gradients = optimizer.compute_gradients(objective, var_list=var_list)\n    for i, (grad, var) in enumerate(gradients):\n        if grad is not None:\n            gradients[i] = (tf.clip_by_norm(grad, clip_val), var)\n    return gradients",
  "children": [
    {
      "type": "function_definition",
      "start": {
        "row": 0,
        "column": 0
      },
      "end": {
        "row": 9,
        "column": 20
      },
      "text": "def _minimize_and_clip(optimizer, objective, var_list, clip_val=10):\n    \"\"\"Minimized `objective` using `optimizer` w.r.t. variables in\n    `var_list` while ensure the norm of the gradients for each\n    variable is clipped to `clip_val`\n    \"\"\"\n    gradients = optimizer.compute_gradients(objective, var_list=var_list)\n    for i, (grad, var) in enumerate(gradients):\n        if grad is not None:\n            gradients[i] = (tf.clip_by_norm(grad, clip_val), var)\n    return gradients",
      "children": [
        {
          "type": "def",
          "start": {
            "row": 0,
            "column": 0
          },
          "end": {
            "row": 0,
            "column": 3
          },
          "text": "def"
        },
        {
          "type": "identifier",
          "start": {
            "row": 0,
            "column": 4
          },
          "end": {
            "row": 0,
            "column": 22
          },
          "text": "_minimize_and_clip"
        },
        {
          "type": "parameters",
          "start": {
            "row": 0,
            "column": 22
          },
          "end": {
            "row": 0,
            "column": 67
          },
          "text": "(optimizer, objective, var_list, clip_val=10)",
          "children": [
            {
              "type": "(",
              "start": {
                "row": 0,
                "column": 22
              },
              "end": {
                "row": 0,
                "column": 23
              },
              "text": "("
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 23
              },
              "end": {
                "row": 0,
                "column": 32
              },
              "text": "optimizer"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 32
              },
              "end": {
                "row": 0,
                "column": 33
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 34
              },
              "end": {
                "row": 0,
                "column": 43
              },
              "text": "objective"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 43
              },
              "end": {
                "row": 0,
                "column": 44
              },
              "text": ","
            },
            {
              "type": "identifier",
              "start": {
                "row": 0,
                "column": 45
              },
              "end": {
                "row": 0,
                "column": 53
              },
              "text": "var_list"
            },
            {
              "type": ",",
              "start": {
                "row": 0,
                "column": 53
              },
              "end": {
                "row": 0,
                "column": 54
              },
              "text": ","
            },
            {
              "type": "default_parameter",
              "start": {
                "row": 0,
                "column": 55
              },
              "end": {
                "row": 0,
                "column": 66
              },
              "text": "clip_val=10",
              "children": [
                {
                  "type": "identifier",
                  "start": {
                    "row": 0,
                    "column": 55
                  },
                  "end": {
                    "row": 0,
                    "column": 63
                  },
                  "text": "clip_val"
                },
                {
                  "type": "=",
                  "start": {
                    "row": 0,
                    "column": 63
                  },
                  "end": {
                    "row": 0,
                    "column": 64
                  },
                  "text": "="
                },
                {
                  "type": "integer",
                  "start": {
                    "row": 0,
                    "column": 64
                  },
                  "end": {
                    "row": 0,
                    "column": 66
                  },
                  "text": "10"
                }
              ]
            },
            {
              "type": ")",
              "start": {
                "row": 0,
                "column": 66
              },
              "end": {
                "row": 0,
                "column": 67
              },
              "text": ")"
            }
          ]
        },
        {
          "type": ":",
          "start": {
            "row": 0,
            "column": 67
          },
          "end": {
            "row": 0,
            "column": 68
          },
          "text": ":"
        },
        {
          "type": "block",
          "start": {
            "row": 1,
            "column": 4
          },
          "end": {
            "row": 9,
            "column": 20
          },
          "text": "\"\"\"Minimized `objective` using `optimizer` w.r.t. variables in\n    `var_list` while ensure the norm of the gradients for each\n    variable is clipped to `clip_val`\n    \"\"\"\n    gradients = optimizer.compute_gradients(objective, var_list=var_list)\n    for i, (grad, var) in enumerate(gradients):\n        if grad is not None:\n            gradients[i] = (tf.clip_by_norm(grad, clip_val), var)\n    return gradients",
          "children": [
            {
              "type": "expression_statement",
              "start": {
                "row": 1,
                "column": 4
              },
              "end": {
                "row": 4,
                "column": 7
              },
              "text": "\"\"\"Minimized `objective` using `optimizer` w.r.t. variables in\n    `var_list` while ensure the norm of the gradients for each\n    variable is clipped to `clip_val`\n    \"\"\"",
              "children": [
                {
                  "type": "string",
                  "start": {
                    "row": 1,
                    "column": 4
                  },
                  "end": {
                    "row": 4,
                    "column": 7
                  },
                  "text": "\"\"\"Minimized `objective` using `optimizer` w.r.t. variables in\n    `var_list` while ensure the norm of the gradients for each\n    variable is clipped to `clip_val`\n    \"\"\"",
                  "children": [
                    {
                      "type": "string_start",
                      "start": {
                        "row": 1,
                        "column": 4
                      },
                      "end": {
                        "row": 1,
                        "column": 7
                      },
                      "text": "\"\"\""
                    },
                    {
                      "type": "string_content",
                      "start": {
                        "row": 1,
                        "column": 7
                      },
                      "end": {
                        "row": 4,
                        "column": 4
                      },
                      "text": "Minimized `objective` using `optimizer` w.r.t. variables in\n    `var_list` while ensure the norm of the gradients for each\n    variable is clipped to `clip_val`\n    "
                    },
                    {
                      "type": "string_end",
                      "start": {
                        "row": 4,
                        "column": 4
                      },
                      "end": {
                        "row": 4,
                        "column": 7
                      },
                      "text": "\"\"\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start": {
                "row": 5,
                "column": 4
              },
              "end": {
                "row": 5,
                "column": 73
              },
              "text": "gradients = optimizer.compute_gradients(objective, var_list=var_list)",
              "children": [
                {
                  "type": "assignment",
                  "start": {
                    "row": 5,
                    "column": 4
                  },
                  "end": {
                    "row": 5,
                    "column": 73
                  },
                  "text": "gradients = optimizer.compute_gradients(objective, var_list=var_list)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 5,
                        "column": 4
                      },
                      "end": {
                        "row": 5,
                        "column": 13
                      },
                      "text": "gradients"
                    },
                    {
                      "type": "=",
                      "start": {
                        "row": 5,
                        "column": 14
                      },
                      "end": {
                        "row": 5,
                        "column": 15
                      },
                      "text": "="
                    },
                    {
                      "type": "call",
                      "start": {
                        "row": 5,
                        "column": 16
                      },
                      "end": {
                        "row": 5,
                        "column": 73
                      },
                      "text": "optimizer.compute_gradients(objective, var_list=var_list)",
                      "children": [
                        {
                          "type": "attribute",
                          "start": {
                            "row": 5,
                            "column": 16
                          },
                          "end": {
                            "row": 5,
                            "column": 43
                          },
                          "text": "optimizer.compute_gradients",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 16
                              },
                              "end": {
                                "row": 5,
                                "column": 25
                              },
                              "text": "optimizer"
                            },
                            {
                              "type": ".",
                              "start": {
                                "row": 5,
                                "column": 25
                              },
                              "end": {
                                "row": 5,
                                "column": 26
                              },
                              "text": "."
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 26
                              },
                              "end": {
                                "row": 5,
                                "column": 43
                              },
                              "text": "compute_gradients"
                            }
                          ]
                        },
                        {
                          "type": "argument_list",
                          "start": {
                            "row": 5,
                            "column": 43
                          },
                          "end": {
                            "row": 5,
                            "column": 73
                          },
                          "text": "(objective, var_list=var_list)",
                          "children": [
                            {
                              "type": "(",
                              "start": {
                                "row": 5,
                                "column": 43
                              },
                              "end": {
                                "row": 5,
                                "column": 44
                              },
                              "text": "("
                            },
                            {
                              "type": "identifier",
                              "start": {
                                "row": 5,
                                "column": 44
                              },
                              "end": {
                                "row": 5,
                                "column": 53
                              },
                              "text": "objective"
                            },
                            {
                              "type": ",",
                              "start": {
                                "row": 5,
                                "column": 53
                              },
                              "end": {
                                "row": 5,
                                "column": 54
                              },
                              "text": ","
                            },
                            {
                              "type": "keyword_argument",
                              "start": {
                                "row": 5,
                                "column": 55
                              },
                              "end": {
                                "row": 5,
                                "column": 72
                              },
                              "text": "var_list=var_list",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 55
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 63
                                  },
                                  "text": "var_list"
                                },
                                {
                                  "type": "=",
                                  "start": {
                                    "row": 5,
                                    "column": 63
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 64
                                  },
                                  "text": "="
                                },
                                {
                                  "type": "identifier",
                                  "start": {
                                    "row": 5,
                                    "column": 64
                                  },
                                  "end": {
                                    "row": 5,
                                    "column": 72
                                  },
                                  "text": "var_list"
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start": {
                                "row": 5,
                                "column": 72
                              },
                              "end": {
                                "row": 5,
                                "column": 73
                              },
                              "text": ")"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start": {
                "row": 6,
                "column": 4
              },
              "end": {
                "row": 8,
                "column": 65
              },
              "text": "for i, (grad, var) in enumerate(gradients):\n        if grad is not None:\n            gradients[i] = (tf.clip_by_norm(grad, clip_val), var)",
              "children": [
                {
                  "type": "for",
                  "start": {
                    "row": 6,
                    "column": 4
                  },
                  "end": {
                    "row": 6,
                    "column": 7
                  },
                  "text": "for"
                },
                {
                  "type": "pattern_list",
                  "start": {
                    "row": 6,
                    "column": 8
                  },
                  "end": {
                    "row": 6,
                    "column": 22
                  },
                  "text": "i, (grad, var)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 8
                      },
                      "end": {
                        "row": 6,
                        "column": 9
                      },
                      "text": "i"
                    },
                    {
                      "type": ",",
                      "start": {
                        "row": 6,
                        "column": 9
                      },
                      "end": {
                        "row": 6,
                        "column": 10
                      },
                      "text": ","
                    },
                    {
                      "type": "tuple_pattern",
                      "start": {
                        "row": 6,
                        "column": 11
                      },
                      "end": {
                        "row": 6,
                        "column": 22
                      },
                      "text": "(grad, var)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 6,
                            "column": 11
                          },
                          "end": {
                            "row": 6,
                            "column": 12
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 12
                          },
                          "end": {
                            "row": 6,
                            "column": 16
                          },
                          "text": "grad"
                        },
                        {
                          "type": ",",
                          "start": {
                            "row": 6,
                            "column": 16
                          },
                          "end": {
                            "row": 6,
                            "column": 17
                          },
                          "text": ","
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 18
                          },
                          "end": {
                            "row": 6,
                            "column": 21
                          },
                          "text": "var"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 6,
                            "column": 21
                          },
                          "end": {
                            "row": 6,
                            "column": 22
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "in",
                  "start": {
                    "row": 6,
                    "column": 23
                  },
                  "end": {
                    "row": 6,
                    "column": 25
                  },
                  "text": "in"
                },
                {
                  "type": "call",
                  "start": {
                    "row": 6,
                    "column": 26
                  },
                  "end": {
                    "row": 6,
                    "column": 46
                  },
                  "text": "enumerate(gradients)",
                  "children": [
                    {
                      "type": "identifier",
                      "start": {
                        "row": 6,
                        "column": 26
                      },
                      "end": {
                        "row": 6,
                        "column": 35
                      },
                      "text": "enumerate"
                    },
                    {
                      "type": "argument_list",
                      "start": {
                        "row": 6,
                        "column": 35
                      },
                      "end": {
                        "row": 6,
                        "column": 46
                      },
                      "text": "(gradients)",
                      "children": [
                        {
                          "type": "(",
                          "start": {
                            "row": 6,
                            "column": 35
                          },
                          "end": {
                            "row": 6,
                            "column": 36
                          },
                          "text": "("
                        },
                        {
                          "type": "identifier",
                          "start": {
                            "row": 6,
                            "column": 36
                          },
                          "end": {
                            "row": 6,
                            "column": 45
                          },
                          "text": "gradients"
                        },
                        {
                          "type": ")",
                          "start": {
                            "row": 6,
                            "column": 45
                          },
                          "end": {
                            "row": 6,
                            "column": 46
                          },
                          "text": ")"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ":",
                  "start": {
                    "row": 6,
                    "column": 46
                  },
                  "end": {
                    "row": 6,
                    "column": 47
                  },
                  "text": ":"
                },
                {
                  "type": "block",
                  "start": {
                    "row": 7,
                    "column": 8
                  },
                  "end": {
                    "row": 8,
                    "column": 65
                  },
                  "text": "if grad is not None:\n            gradients[i] = (tf.clip_by_norm(grad, clip_val), var)",
                  "children": [
                    {
                      "type": "if_statement",
                      "start": {
                        "row": 7,
                        "column": 8
                      },
                      "end": {
                        "row": 8,
                        "column": 65
                      },
                      "text": "if grad is not None:\n            gradients[i] = (tf.clip_by_norm(grad, clip_val), var)",
                      "children": [
                        {
                          "type": "if",
                          "start": {
                            "row": 7,
                            "column": 8
                          },
                          "end": {
                            "row": 7,
                            "column": 10
                          },
                          "text": "if"
                        },
                        {
                          "type": "comparison_operator",
                          "start": {
                            "row": 7,
                            "column": 11
                          },
                          "end": {
                            "row": 7,
                            "column": 27
                          },
                          "text": "grad is not None",
                          "children": [
                            {
                              "type": "identifier",
                              "start": {
                                "row": 7,
                                "column": 11
                              },
                              "end": {
                                "row": 7,
                                "column": 15
                              },
                              "text": "grad"
                            },
                            {
                              "type": "is not",
                              "start": {
                                "row": 7,
                                "column": 16
                              },
                              "end": {
                                "row": 7,
                                "column": 18
                              },
                              "text": "is"
                            },
                            {
                              "type": "is not",
                              "start": {
                                "row": 7,
                                "column": 19
                              },
                              "end": {
                                "row": 7,
                                "column": 22
                              },
                              "text": "not"
                            },
                            {
                              "type": "none",
                              "start": {
                                "row": 7,
                                "column": 23
                              },
                              "end": {
                                "row": 7,
                                "column": 27
                              },
                              "text": "None"
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "start": {
                            "row": 7,
                            "column": 27
                          },
                          "end": {
                            "row": 7,
                            "column": 28
                          },
                          "text": ":"
                        },
                        {
                          "type": "block",
                          "start": {
                            "row": 8,
                            "column": 12
                          },
                          "end": {
                            "row": 8,
                            "column": 65
                          },
                          "text": "gradients[i] = (tf.clip_by_norm(grad, clip_val), var)",
                          "children": [
                            {
                              "type": "expression_statement",
                              "start": {
                                "row": 8,
                                "column": 12
                              },
                              "end": {
                                "row": 8,
                                "column": 65
                              },
                              "text": "gradients[i] = (tf.clip_by_norm(grad, clip_val), var)",
                              "children": [
                                {
                                  "type": "assignment",
                                  "start": {
                                    "row": 8,
                                    "column": 12
                                  },
                                  "end": {
                                    "row": 8,
                                    "column": 65
                                  },
                                  "text": "gradients[i] = (tf.clip_by_norm(grad, clip_val), var)",
                                  "children": [
                                    {
                                      "type": "subscript",
                                      "start": {
                                        "row": 8,
                                        "column": 12
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 24
                                      },
                                      "text": "gradients[i]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 8,
                                            "column": 12
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 21
                                          },
                                          "text": "gradients"
                                        },
                                        {
                                          "type": "[",
                                          "start": {
                                            "row": 8,
                                            "column": 21
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 22
                                          },
                                          "text": "["
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 8,
                                            "column": 22
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 23
                                          },
                                          "text": "i"
                                        },
                                        {
                                          "type": "]",
                                          "start": {
                                            "row": 8,
                                            "column": 23
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 24
                                          },
                                          "text": "]"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start": {
                                        "row": 8,
                                        "column": 25
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 26
                                      },
                                      "text": "="
                                    },
                                    {
                                      "type": "tuple",
                                      "start": {
                                        "row": 8,
                                        "column": 27
                                      },
                                      "end": {
                                        "row": 8,
                                        "column": 65
                                      },
                                      "text": "(tf.clip_by_norm(grad, clip_val), var)",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start": {
                                            "row": 8,
                                            "column": 27
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 28
                                          },
                                          "text": "("
                                        },
                                        {
                                          "type": "call",
                                          "start": {
                                            "row": 8,
                                            "column": 28
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 59
                                          },
                                          "text": "tf.clip_by_norm(grad, clip_val)",
                                          "children": [
                                            {
                                              "type": "attribute",
                                              "start": {
                                                "row": 8,
                                                "column": 28
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 43
                                              },
                                              "text": "tf.clip_by_norm",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 28
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 30
                                                  },
                                                  "text": "tf"
                                                },
                                                {
                                                  "type": ".",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 30
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 31
                                                  },
                                                  "text": "."
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 31
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 43
                                                  },
                                                  "text": "clip_by_norm"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "argument_list",
                                              "start": {
                                                "row": 8,
                                                "column": 43
                                              },
                                              "end": {
                                                "row": 8,
                                                "column": 59
                                              },
                                              "text": "(grad, clip_val)",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 44
                                                  },
                                                  "text": "("
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 44
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 48
                                                  },
                                                  "text": "grad"
                                                },
                                                {
                                                  "type": ",",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 48
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 49
                                                  },
                                                  "text": ","
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 50
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 58
                                                  },
                                                  "text": "clip_val"
                                                },
                                                {
                                                  "type": ")",
                                                  "start": {
                                                    "row": 8,
                                                    "column": 58
                                                  },
                                                  "end": {
                                                    "row": 8,
                                                    "column": 59
                                                  },
                                                  "text": ")"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start": {
                                            "row": 8,
                                            "column": 59
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 60
                                          },
                                          "text": ","
                                        },
                                        {
                                          "type": "identifier",
                                          "start": {
                                            "row": 8,
                                            "column": 61
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 64
                                          },
                                          "text": "var"
                                        },
                                        {
                                          "type": ")",
                                          "start": {
                                            "row": 8,
                                            "column": 64
                                          },
                                          "end": {
                                            "row": 8,
                                            "column": 65
                                          },
                                          "text": ")"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start": {
                "row": 9,
                "column": 4
              },
              "end": {
                "row": 9,
                "column": 20
              },
              "text": "return gradients",
              "children": [
                {
                  "type": "return",
                  "start": {
                    "row": 9,
                    "column": 4
                  },
                  "end": {
                    "row": 9,
                    "column": 10
                  },
                  "text": "return"
                },
                {
                  "type": "identifier",
                  "start": {
                    "row": 9,
                    "column": 11
                  },
                  "end": {
                    "row": 9,
                    "column": 20
                  },
                  "text": "gradients"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}